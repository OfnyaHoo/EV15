

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Aug 13 23:57:10 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    59  0000                     _TMR1	set	4046
    60  0000                     _ANSELA	set	3896
    61  0000                     _ANSELB	set	3897
    62  0000                     _ANSELC	set	3898
    63  0000                     _ANSELD	set	3899
    64  0000                     _ANSELE	set	3900
    65  0000                     _BAUD1CON	set	4024
    66  0000                     _CCP1CON	set	4029
    67  0000                     _CCP2CON	set	3942
    68  0000                     _CCPR1H	set	4031
    69  0000                     _CCPR1L	set	4030
    70  0000                     _CCPR2H	set	3944
    71  0000                     _CCPR2L	set	3943
    72  0000                     _CCPTMRS0bits	set	3913
    73  0000                     _INTCON2bits	set	4081
    74  0000                     _INTCONbits	set	4082
    75  0000                     _IPR1bits	set	3999
    76  0000                     _IPR2bits	set	4002
    77  0000                     _LATA	set	3977
    78  0000                     _LATB	set	3978
    79  0000                     _LATC	set	3979
    80  0000                     _LATCbits	set	3979
    81  0000                     _LATD	set	3980
    82  0000                     _LATE	set	3981
    83  0000                     _OSCCON	set	4051
    84  0000                     _OSCCON2	set	4050
    85  0000                     _OSCTUNE	set	3995
    86  0000                     _PIE1bits	set	3997
    87  0000                     _PIE2bits	set	4000
    88  0000                     _PIR1bits	set	3998
    89  0000                     _PIR2bits	set	4001
    90  0000                     _PR2	set	4027
    91  0000                     _RC1STA	set	4011
    92  0000                     _RC1STAbits	set	4011
    93  0000                     _RCONbits	set	4048
    94  0000                     _RCREG1	set	4014
    95  0000                     _SPBRG1	set	4015
    96  0000                     _SPBRGH1	set	4016
    97  0000                     _SSP1ADD	set	4040
    98  0000                     _SSP1BUF	set	4041
    99  0000                     _SSP1CON1	set	4038
   100  0000                     _SSP1CON1bits	set	4038
   101  0000                     _SSP1CON2bits	set	4037
   102  0000                     _SSP1CON3	set	4043
   103  0000                     _SSP1STAT	set	4039
   104  0000                     _T1CON	set	4045
   105  0000                     _T1CONbits	set	4045
   106  0000                     _T1GCON	set	4044
   107  0000                     _T1GCONbits	set	4044
   108  0000                     _T2CON	set	4026
   109  0000                     _T2CONbits	set	4026
   110  0000                     _TMR1H	set	4047
   111  0000                     _TMR1L	set	4046
   112  0000                     _TMR2	set	4028
   113  0000                     _TRISA	set	3986
   114  0000                     _TRISB	set	3987
   115  0000                     _TRISC	set	3988
   116  0000                     _TRISD	set	3989
   117  0000                     _TRISE	set	3990
   118  0000                     _TX1STA	set	4012
   119  0000                     _TXREG1	set	4013
   120  0000                     _WPUB	set	3937
   121                           
   122                           	psect	nvCOMRAM
   123  0000'                    __pnvCOMRAM:
   124                           	opt stack 0
   125  0000'                    _i2c1_object:
   126                           	opt stack 0
   127  0000'                    	ds	7
   128  0007'                    _timer1ReloadVal:
   129                           	opt stack 0
   130  0007'                    	ds	2
   131  0009'                    _eusart1TxBufferRemaining:
   132                           	opt stack 0
   133  0009'                    	ds	1
   134                           
   135                           ; #config settings
   136  0000                     
   137                           	psect	cinit
   138  0000'                    __pcinit:
   139                           	opt stack 0
   140  0000'                    start_initialization:
   141                           	opt stack 0
   142  0000'                    __initialization:
   143                           	opt stack 0
   144                           
   145                           ; Clear objects allocated to BANK2 (200 bytes)
   146  0000' EE00' F000'        	lfsr	0,__pbssBANK2
   147  0004' 0EC8               	movlw	200
   148  0006'                    clear_0:
   149  0006' 6AEE               	clrf	postinc0,c
   150  0008' 06E8               	decf	wreg,f,c
   151  000A' E1FD               	bnz	clear_0
   152                           
   153                           ; Clear objects allocated to BANK1 (206 bytes)
   154  000C' EE00' F000'        	lfsr	0,__pbssBANK1
   155  0010' 0ECE               	movlw	206
   156  0012'                    clear_1:
   157  0012' 6AEE               	clrf	postinc0,c
   158  0014' 06E8               	decf	wreg,f,c
   159  0016' E1FD               	bnz	clear_1
   160                           
   161                           ; Clear objects allocated to BANK0 (115 bytes)
   162  0018' EE00' F000'        	lfsr	0,__pbssBANK0
   163  001C' 0E73               	movlw	115
   164  001E'                    clear_2:
   165  001E' 6AEE               	clrf	postinc0,c
   166  0020' 06E8               	decf	wreg,f,c
   167  0022' E1FD               	bnz	clear_2
   168                           
   169                           ; Clear objects allocated to COMRAM (29 bytes)
   170  0024' EE00' F000'        	lfsr	0,__pbssCOMRAM
   171  0028' 0E1D               	movlw	29
   172  002A'                    clear_3:
   173  002A' 6AEE               	clrf	postinc0,c
   174  002C' 06E8               	decf	wreg,f,c
   175  002E' E1FD               	bnz	clear_3
   176  0030'                    end_of_initialization:
   177                           	opt stack 0
   178  0030'                    __end_of__initialization:
   179                           	opt stack 0
   180  0030' 0E00'              	movlw	low (__Lmediumconst shr (0+16))
   181  0032' 6EF8               	movwf	tblptru,c
   182  0034' 0100               	movlb	0
   183  0036' EF00' F000'        	goto	_main	;jump to C main() function
   184                           tblptru	equ	0xFF8
   185                           postinc0	equ	0xFEE
   186                           wreg	equ	0xFE8
   187                           
   188                           	psect	bssCOMRAM
   189  0000'                    __pbssCOMRAM:
   190                           	opt stack 0
   191  0000'                    I2C1_ISR@pi2c_buf_ptr:
   192                           	opt stack 0
   193  0000'                    	ds	2
   194  0002'                    _p_i2c1_current:
   195                           	opt stack 0
   196  0002'                    	ds	2
   197  0004'                    _p_i2c1_trb_current:
   198                           	opt stack 0
   199  0004'                    	ds	2
   200  0006'                    _receiveArrayAddress:
   201                           	opt stack 0
   202  0006'                    	ds	2
   203  0008'                    I2C1_ISR@i2c_10bit_address_restart:
   204                           	opt stack 0
   205  0008'                    	ds	1
   206  0009'                    I2C1_ISR@i2c_bytes_left:
   207                           	opt stack 0
   208  0009'                    	ds	1
   209  000A'                    _AKNAKsend:
   210                           	opt stack 0
   211  000A'                    	ds	1
   212  000B'                    _calc_CS:
   213                           	opt stack 0
   214  000B'                    	ds	1
   215  000C'                    _eusart1RxCount:
   216                           	opt stack 0
   217  000C'                    	ds	1
   218  000D'                    _eusart1RxHead:
   219                           	opt stack 0
   220  000D'                    	ds	1
   221  000E'                    _eusart1RxTail:
   222                           	opt stack 0
   223  000E'                    	ds	1
   224  000F'                    _eusart1TxHead:
   225                           	opt stack 0
   226  000F'                    	ds	1
   227  0010'                    _eusart1TxTail:
   228                           	opt stack 0
   229  0010'                    	ds	1
   230  0011'                    _i2c1_state:
   231                           	opt stack 0
   232  0011'                    	ds	1
   233  0012'                    _i2c1_trb_count:
   234                           	opt stack 0
   235  0012'                    	ds	1
   236  0013'                    _maxDataAddress:
   237                           	opt stack 0
   238  0013'                    	ds	1
   239  0014'                    _moduleAddress:
   240                           	opt stack 0
   241  0014'                    	ds	1
   242  0015'                    _returnAddress:
   243                           	opt stack 0
   244  0015'                    	ds	1
   245  0016'                    _rx_address:
   246                           	opt stack 0
   247  0016'                    	ds	1
   248  0017'                    _rx_array_inx:
   249                           	opt stack 0
   250  0017'                    	ds	1
   251  0018'                    _rx_len:
   252                           	opt stack 0
   253  0018'                    	ds	1
   254  0019'                    I2C1_ISR@i2c_address:
   255                           	opt stack 0
   256  0019'                    	ds	2
   257  001B'                    _group:
   258                           	opt stack 0
   259  001B'                    	ds	2
   260                           tblptru	equ	0xFF8
   261                           postinc0	equ	0xFEE
   262                           wreg	equ	0xFE8
   263                           
   264                           	psect	bssBANK0
   265  0000'                    __pbssBANK0:
   266                           	opt stack 0
   267  0000'                    _receiveArray:
   268                           	opt stack 0
   269  0000'                    	ds	40
   270  0028'                    _eusart1RxBuffer:
   271                           	opt stack 0
   272  0028'                    	ds	8
   273  0030'                    _eusart1TxBuffer:
   274                           	opt stack 0
   275  0030'                    	ds	8
   276  0038'                    _addressErrorCounter:
   277                           	opt stack 0
   278  0038'                    	ds	2
   279  003A'                    _alignErrorCounter:
   280                           	opt stack 0
   281  003A'                    	ds	2
   282  003C'                    _brake:
   283                           	opt stack 0
   284  003C'                    	ds	2
   285  003E'                    _crcErrorCounter:
   286                           	opt stack 0
   287  003E'                    	ds	2
   288  0040'                    _dataAdressErrorCounter:
   289                           	opt stack 0
   290  0040'                    	ds	2
   291  0042'                    _sendStructAddress:
   292                           	opt stack 0
   293  0042'                    	ds	2
   294  0044'                    _serial_available:
   295                           	opt stack 0
   296  0044'                    	ds	2
   297  0046'                    _serial_peek:
   298                           	opt stack 0
   299  0046'                    	ds	2
   300  0048'                    _serial_read:
   301                           	opt stack 0
   302  0048'                    	ds	2
   303  004A'                    _serial_write:
   304                           	opt stack 0
   305  004A'                    	ds	2
   306  004C'                    _throttle:
   307                           	opt stack 0
   308  004C'                    	ds	2
   309  004E'                    handleIndicators@oldIndicators:
   310                           	opt stack 0
   311  004E'                    	ds	2
   312  0050'                    _crc_buffer:
   313                           	opt stack 0
   314  0050'                    	ds	17
   315  0061'                    I2C1_MasterRead@trBlock:
   316                           	opt stack 0
   317  0061'                    	ds	6
   318  0067'                    I2C1_MasterWrite@trBlock:
   319                           	opt stack 0
   320  0067'                    	ds	6
   321  006D'                    _i2c1_tr_queue:
   322                           	opt stack 0
   323  006D'                    	ds	6
   324                           tblptru	equ	0xFF8
   325                           postinc0	equ	0xFEE
   326                           wreg	equ	0xFE8
   327                           
   328                           	psect	bssBANK1
   329  0000'                    __pbssBANK1:
   330                           	opt stack 0
   331  0000'                    _ring_buffer:
   332                           	opt stack 0
   333  0000'                    	ds	206
   334                           tblptru	equ	0xFF8
   335                           postinc0	equ	0xFEE
   336                           wreg	equ	0xFE8
   337                           
   338                           	psect	bssBANK2
   339  0000'                    __pbssBANK2:
   340                           	opt stack 0
   341  0000'                    _rx_buffer:
   342                           	opt stack 0
   343  0000'                    	ds	200
   344                           tblptru	equ	0xFF8
   345                           postinc0	equ	0xFEE
   346                           wreg	equ	0xFE8
   347                           
   348                           	psect	cstackBANK0
   349  0000'                    __pcstackBANK0:
   350                           	opt stack 0
   351  0000'                    sendData@whereToSend:
   352                           	opt stack 0
   353  0000'                    CRCcheck@SentCRC:
   354                           	opt stack 0
   355                           
   356                           ; 1 bytes @ 0x0
   357  0000'                    	ds	1
   358  0001'                    sendData@CS:
   359                           	opt stack 0
   360  0001'                    CRCcheck@calculatedCRC:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x1
   364  0001'                    	ds	1
   365  0002'                    sendData@i:
   366                           	opt stack 0
   367  0002'                    CRCcheck@arrayHolder:
   368                           	opt stack 0
   369                           
   370                           ; 3 bytes @ 0x2
   371  0002'                    	ds	3
   372  0005'                    CRCcheck@rt:
   373                           	opt stack 0
   374                           
   375                           ; 2 bytes @ 0x5
   376  0005'                    	ds	2
   377  0007'                    receiveData@crcHolder:
   378                           	opt stack 0
   379                           
   380                           ; 1 bytes @ 0x7
   381  0007'                    	ds	1
   382  0008'                    receiveData@crcHolder_1777:
   383                           	opt stack 0
   384                           
   385                           ; 1 bytes @ 0x8
   386  0008'                    	ds	1
   387  0009'                    receiveData@holder:
   388                           	opt stack 0
   389                           
   390                           ; 3 bytes @ 0x9
   391  0009'                    	ds	3
   392  000C'                    receiveData@holder_1776:
   393                           	opt stack 0
   394                           
   395                           ; 3 bytes @ 0xC
   396  000C'                    	ds	3
   397  000F'                    receiveData@u:
   398                           	opt stack 0
   399                           
   400                           ; 2 bytes @ 0xF
   401  000F'                    	ds	2
   402  0011'                    receiveData@r:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0x11
   406  0011'                    	ds	2
   407                           tblptru	equ	0xFF8
   408                           postinc0	equ	0xFEE
   409                           wreg	equ	0xFE8
   410                           
   411                           	psect	cstackCOMRAM
   412  0000'                    __pcstackCOMRAM:
   413                           	opt stack 0
   414  0000'                    ??_I2C1_Stop:
   415  0000'                    ECCP2_CallBack@capturedValue:
   416                           	opt stack 0
   417  0000'                    ECCP1_CallBack@capturedValue:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x0
   421  0000'                    	ds	2
   422  0002'                    I2C1_Stop@completion_code:
   423                           	opt stack 0
   424  0002'                    ECCP2_CaptureISR@module:
   425                           	opt stack 0
   426  0002'                    ECCP1_CaptureISR@module:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x2
   430  0002'                    	ds	1
   431  0003'                    ??_I2C1_ISR:
   432                           
   433                           ; 0 bytes @ 0x3
   434  0003'                    	ds	3
   435  0006'                    ??_INTERRUPT_InterruptManager:
   436                           
   437                           ; 0 bytes @ 0x6
   438  0006'                    	ds	14
   439  0014'                    ?_FastTransfer_buffer_modulo_inc:
   440                           	opt stack 0
   441  0014'                    _SetLEDOut$0:
   442                           	opt stack 0
   443  0014'                    _GetButtonState$0:
   444                           	opt stack 0
   445  0014'                    TBbarGraphs@t:
   446                           	opt stack 0
   447  0014'                    CRC8@data:
   448                           	opt stack 0
   449  0014'                    FastTransfer_buffer_modulo_inc@value:
   450                           	opt stack 0
   451  0014'                    crcBufS_put@_this:
   452                           	opt stack 0
   453  0014'                    crcBufS_status_put@_this:
   454                           	opt stack 0
   455  0014'                    crcBufS_get@_this:
   456                           	opt stack 0
   457  0014'                    Delay@wait:
   458                           	opt stack 0
   459  0014'                    memset@p1:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x14
   463  0014'                    	ds	2
   464  0016'                    ??_Delay:
   465  0016'                    ?_buttonsCollector:
   466                           	opt stack 0
   467  0016'                    _SetLEDOut$1:
   468                           	opt stack 0
   469  0016'                    CRC8@len:
   470                           	opt stack 0
   471  0016'                    crcBufS_put@address:
   472                           	opt stack 0
   473  0016'                    crcBufS_status_put@time:
   474                           	opt stack 0
   475  0016'                    crcBufS_get@time:
   476                           	opt stack 0
   477  0016'                    TBbarGraphs@b:
   478                           	opt stack 0
   479  0016'                    FastTransfer_buffer_modulo_inc@modulus:
   480                           	opt stack 0
   481  0016'                    memset@c:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0x16
   485  0016'                    	ds	1
   486  0017'                    CRC8@sum:
   487                           	opt stack 0
   488  0017'                    crcBufS_put@oldCRC:
   489                           	opt stack 0
   490  0017'                    crcBufS_status_put@status:
   491                           	opt stack 0
   492  0017'                    crcBufS_get@space:
   493                           	opt stack 0
   494  0017'                    handleIndicators@receivedIndicators:
   495                           	opt stack 0
   496  0017'                    Delay@x:
   497                           	opt stack 0
   498                           
   499                           ; 2 bytes @ 0x17
   500  0017'                    	ds	1
   501  0018'                    ??_buttonsCollector:
   502  0018'                    ??_crcBufS_get:
   503  0018'                    ??_crcBufS_status_put:
   504  0018'                    CRC8@extract:
   505                           	opt stack 0
   506  0018'                    crcBufS_put@status:
   507                           	opt stack 0
   508  0018'                    FastTransfer_buffer_modulo_inc@my_value:
   509                           	opt stack 0
   510  0018'                    memset@n:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x18
   514  0018'                    	ds	1
   515  0019'                    ??_handleIndicators:
   516  0019'                    ??_crcBufS_put:
   517  0019'                    CRC8@tempI:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x19
   521  0019'                    	ds	1
   522  001A'                    CRC8@crc:
   523                           	opt stack 0
   524  001A'                    FastTransfer_buffer_put@_this:
   525                           	opt stack 0
   526  001A'                    memset@p:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x1A
   530  001A'                    	ds	1
   531  001B'                    buttonsCollector@sendVal:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x1B
   535  001B'                    	ds	1
   536  001C'                    FastTransfer_buffer_put@towhere:
   537                           	opt stack 0
   538  001C'                    handleIndicators@i:
   539                           	opt stack 0
   540  001C'                    FastTransfer_buffer_flush@_this:
   541                           	opt stack 0
   542  001C'                    crcBufS_status_put@wantedTime:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0x1C
   546  001C'                    	ds	1
   547  001D'                    buttonsCollector@i:
   548                           	opt stack 0
   549  001D'                    FastTransfer_buffer_put@towhat:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0x1D
   553  001D'                    	ds	1
   554  001E'                    FastTransfer_buffer_flush@clearBuffer:
   555                           	opt stack 0
   556  001E'                    crcBufS_get@wantedTime:
   557                           	opt stack 0
   558                           
   559                           ; 2 bytes @ 0x1E
   560  001E'                    	ds	1
   561  001F'                    ??_FastTransfer_buffer_put:
   562                           
   563                           ; 0 bytes @ 0x1F
   564  001F'                    	ds	1
   565  0020'                    ??_receiveData:
   566  0020'                    ??_sendData:
   567  0020'                    
   568                           ; 0 bytes @ 0x20
   569  0020'                    	ds	1
   570  0021'                    ToSend@what:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x21
   574  0021'                    	ds	2
   575  0023'                    ToSend@where:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x23
   579  0023'                    	ds	1
   580  0024'                    tblptru	equ	0xFF8
   581                           postinc0	equ	0xFEE
   582                           wreg	equ	0xFE8
   583                           
   584                           ; 0 bytes @ 0x24
   585 ;;
   586 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   587 ;;
   588 ;; *************** function _main *****************
   589 ;; Defined at:
   590 ;;		line 30 in file "main.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;		None
   593 ;; Auto vars:     Size  Location     Type
   594 ;;		None
   595 ;; Return value:  Size  Location     Type
   596 ;;		None               void
   597 ;; Registers used:
   598 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   604 ;;      Params:         0       0       0       0       0       0       0
   605 ;;      Locals:         0       0       0       0       0       0       0
   606 ;;      Temps:          0       0       0       0       0       0       0
   607 ;;      Totals:         0       0       0       0       0       0       0
   608 ;;Total ram usage:        0 bytes
   609 ;; Hardware stack levels required when called:    8
   610 ;; This function calls:
   611 ;;		_SYSTEM_Initialize
   612 ;;		_updateComms
   613 ;; This function is called by:
   614 ;;		Startup code after reset
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           	psect	text0
   619  0000'                    __ptext0:
   620                           	opt stack 0
   621  0000'                    _main:
   622                           	opt stack 23
   623                           
   624                           ;main.c: 32: SYSTEM_Initialize();
   625                           
   626                           ;incstack = 0
   627  0000' EC00' F000'        	call	_SYSTEM_Initialize	;wreg free
   628                           
   629                           ;main.c: 51: (INTCONbits.GIE = 1);
   630  0004' 8EF2               	bsf	intcon,7,c	;volatile
   631                           
   632                           ;main.c: 54: (INTCONbits.PEIE = 1);
   633  0006' 8CF2               	bsf	intcon,6,c	;volatile
   634                           
   635                           ;main.c: 62: LATCbits.LATC5 = 0;
   636  0008' 9A8B               	bcf	3979,5,c	;volatile
   637  000A'                    l3234:
   638                           
   639                           ;main.c: 64: updateComms();
   640  000A' EC00' F000'        	call	_updateComms	;wreg free
   641  000E' D7FD               	goto	l3234
   642  0010'                    __end_of_main:
   643                           	opt stack 0
   644                           tblptru	equ	0xFF8
   645                           intcon	equ	0xFF2
   646                           postinc0	equ	0xFEE
   647                           wreg	equ	0xFE8
   648                           
   649 ;; *************** function _updateComms *****************
   650 ;; Defined at:
   651 ;;		line 7 in file "Communications.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;		None
   656 ;; Return value:  Size  Location     Type
   657 ;;		None               void
   658 ;; Registers used:
   659 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   665 ;;      Params:         0       0       0       0       0       0       0
   666 ;;      Locals:         0       0       0       0       0       0       0
   667 ;;      Temps:          0       0       0       0       0       0       0
   668 ;;      Totals:         0       0       0       0       0       0       0
   669 ;;Total ram usage:        0 bytes
   670 ;; Hardware stack levels used:    1
   671 ;; Hardware stack levels required when called:    7
   672 ;; This function calls:
   673 ;;		_TBbarGraphs
   674 ;;		_handleIndicators
   675 ;;		_receiveData
   676 ;;		_respondECU
   677 ;; This function is called by:
   678 ;;		_main
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           	psect	text1
   683  0000'                    __ptext1:
   684                           	opt stack 0
   685  0000'                    _updateComms:
   686                           	opt stack 23
   687                           
   688                           ;Communications.c: 8: if (receiveData()) {
   689                           
   690                           ;incstack = 0
   691  0000' EC00' F000'        	call	_receiveData	;wreg free
   692  0004' 0900               	iorlw	0
   693  0006' B4D8               	btfsc	status,2,c
   694  0008' 0012               	return	
   695                           
   696                           ;Communications.c: 10: respondECU();
   697  000A' EC00' F000'        	call	_respondECU	;wreg free
   698                           
   699                           ;Communications.c: 12: handleIndicators(receiveArray[2]);
   700  000E' C004' F017'        	movff	_receiveArray+4,handleIndicators@receivedIndicators	;volatile
   701  0012' C005' F018'        	movff	_receiveArray+5,handleIndicators@receivedIndicators+1	;volatile
   702  0016' EC00' F000'        	call	_handleIndicators	;wreg free
   703                           
   704                           ;Communications.c: 13: TBbarGraphs(receiveArray[3], receiveArray[4]);
   705  001A' C006' F014'        	movff	_receiveArray+6,TBbarGraphs@t	;volatile
   706  001E' C007' F015'        	movff	_receiveArray+7,TBbarGraphs@t+1	;volatile
   707  0022' C008' F016'        	movff	_receiveArray+8,TBbarGraphs@b	;volatile
   708  0026' C009' F017'        	movff	_receiveArray+9,TBbarGraphs@b+1	;volatile
   709  002A' EC00' F000'        	call	_TBbarGraphs	;wreg free
   710                           
   711                           ;Communications.c: 14: receiveArray[0] = 0;
   712  002E' 0E00               	movlw	0
   713  0030' 0100               	movlb	0	; () banked
   714  0032' 6F00'              	movwf	(_receiveArray+1)& (0+255),b	;volatile
   715  0034' 0E00               	movlw	0
   716  0036' 0100               	movlb	0	; () banked
   717  0038' 6F00'              	movwf	_receiveArray& (0+255),b	;volatile
   718  003A' 0012               	return	
   719  003C'                    __end_of_updateComms:
   720                           	opt stack 0
   721                           tblptru	equ	0xFF8
   722                           intcon	equ	0xFF2
   723                           postinc0	equ	0xFEE
   724                           wreg	equ	0xFE8
   725                           status	equ	0xFD8
   726                           
   727 ;; *************** function _respondECU *****************
   728 ;; Defined at:
   729 ;;		line 18 in file "Communications.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;		None               void
   736 ;; Registers used:
   737 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   743 ;;      Params:         0       0       0       0       0       0       0
   744 ;;      Locals:         0       0       0       0       0       0       0
   745 ;;      Temps:          0       0       0       0       0       0       0
   746 ;;      Totals:         0       0       0       0       0       0       0
   747 ;;Total ram usage:        0 bytes
   748 ;; Hardware stack levels used:    1
   749 ;; Hardware stack levels required when called:    6
   750 ;; This function calls:
   751 ;;		_Delay
   752 ;;		_ToSend
   753 ;;		_buttonsCollector
   754 ;;		_sendData
   755 ;; This function is called by:
   756 ;;		_updateComms
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           	psect	text2
   761  0000'                    __ptext2:
   762                           	opt stack 0
   763  0000'                    _respondECU:
   764                           	opt stack 23
   765                           
   766                           ;Communications.c: 19: LATCbits.LATC5 = 1;
   767                           
   768                           ;incstack = 0
   769  0000' 8A8B               	bsf	3979,5,c	;volatile
   770                           
   771                           ;Communications.c: 20: ToSend(0, 3);
   772  0002' 0E00               	movlw	0
   773  0004' 6E22'              	movwf	ToSend@what+1,c
   774  0006' 0E03               	movlw	3
   775  0008' 6E21'              	movwf	ToSend@what,c
   776  000A' 0E00               	movlw	0
   777  000C' EC00' F000'        	call	_ToSend
   778                           
   779                           ;Communications.c: 21: ToSend(8, buttonsCollector());
   780  0010' EC00' F000'        	call	_buttonsCollector	;wreg free
   781  0014' C016' F021'        	movff	?_buttonsCollector,ToSend@what
   782  0018' C017' F022'        	movff	?_buttonsCollector+1,ToSend@what+1
   783  001C' 0E08               	movlw	8
   784  001E' EC00' F000'        	call	_ToSend
   785                           
   786                           ;Communications.c: 22: Delay(9);
   787  0022' 0E00               	movlw	0
   788  0024' 6E15'              	movwf	Delay@wait+1,c
   789  0026' 0E09               	movlw	9
   790  0028' 6E14'              	movwf	Delay@wait,c
   791  002A' EC00' F000'        	call	_Delay	;wreg free
   792                           
   793                           ;Communications.c: 23: sendData(1);
   794  002E' 0E01               	movlw	1
   795  0030' EC00' F000'        	call	_sendData
   796                           
   797                           ;Communications.c: 24: Delay(3);
   798  0034' 0E00               	movlw	0
   799  0036' 6E15'              	movwf	Delay@wait+1,c
   800  0038' 0E03               	movlw	3
   801  003A' 6E14'              	movwf	Delay@wait,c
   802  003C' EC00' F000'        	call	_Delay	;wreg free
   803                           
   804                           ;Communications.c: 25: LATCbits.LATC5 = 0;
   805  0040' 9A8B               	bcf	3979,5,c	;volatile
   806  0042' 0012               	return	
   807  0044'                    __end_of_respondECU:
   808                           	opt stack 0
   809                           tblptru	equ	0xFF8
   810                           intcon	equ	0xFF2
   811                           postinc0	equ	0xFEE
   812                           wreg	equ	0xFE8
   813                           status	equ	0xFD8
   814                           
   815 ;; *************** function _sendData *****************
   816 ;; Defined at:
   817 ;;		line 53 in file "FastTransfer.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;  whereToSend     1    wreg     unsigned char 
   820 ;; Auto vars:     Size  Location     Type
   821 ;;  whereToSend     1    0[BANK0 ] unsigned char 
   822 ;;  i               2    2[BANK0 ] int 
   823 ;;  CS              1    1[BANK0 ] unsigned char 
   824 ;; Return value:  Size  Location     Type
   825 ;;		None               void
   826 ;; Registers used:
   827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   833 ;;      Params:         0       0       0       0       0       0       0
   834 ;;      Locals:         0       4       0       0       0       0       0
   835 ;;      Temps:          1       0       0       0       0       0       0
   836 ;;      Totals:         1       4       0       0       0       0       0
   837 ;;Total ram usage:        5 bytes
   838 ;; Hardware stack levels used:    1
   839 ;; Hardware stack levels required when called:    5
   840 ;; This function calls:
   841 ;;		_CRC8
   842 ;;		_FastTransfer_buffer_flush
   843 ;;		_crcBufS_put
   844 ;; This function is called by:
   845 ;;		_respondECU
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           	psect	text3
   850  0000'                    __ptext3:
   851                           	opt stack 0
   852  0000'                    _sendData:
   853                           	opt stack 23
   854                           
   855                           ;incstack = 0
   856                           ;sendData@whereToSend stored from wreg
   857  0000' 0100               	movlb	0	; () banked
   858  0002' 6F00'              	movwf	sendData@whereToSend& (0+255),b
   859                           
   860                           ; BSR set to: 0
   861                           ;FastTransfer.c: 62: serial_write(ring_buffer.count);
   862  0004' 0100               	movlb	0	; () banked
   863  0006' C043' F015'        	movff	_sendStructAddress+1,CRC8@data+1
   864  000A' 0100               	movlb	0	; () banked
   865  000C' C042' F014'        	movff	_sendStructAddress,CRC8@data
   866  0010' C0CC' F016'        	movff	_ring_buffer+204,CRC8@len
   867  0014' EC00' F000'        	call	_CRC8	;wreg free
   868  0018' 0100               	movlb	0	; () banked
   869  001A' 6F00'              	movwf	sendData@CS& (0+255),b
   870                           
   871                           ; BSR set to: 0
   872                           ;FastTransfer.c: 66: int i;
   873                           ;FastTransfer.c: 67: for (i = 0; i < ring_buffer.count; i++) {
   874  001C' 0E00               	movlw	0
   875  001E' 0100               	movlb	0	; () banked
   876  0020' 6F00'              	movwf	(sendData@i+1)& (0+255),b
   877  0022' 0E00               	movlw	0
   878  0024' 0100               	movlb	0	; () banked
   879  0026' 6F00'              	movwf	sendData@i& (0+255),b
   880  0028' D003               	goto	l3036
   881  002A'                    l3034:
   882  002A' 0100               	movlb	0	; () banked
   883  002C' 4B00'              	infsnz	sendData@i& (0+255),f,b
   884  002E' 2B00'              	incf	(sendData@i+1)& (0+255),f,b
   885  0030'                    l3036:
   886                           
   887                           ; BSR set to: 0
   888  0030' 0100               	movlb	0	; () banked
   889  0032' 5100'              	movf	(sendData@i+1)& (0+255),w,b
   890  0034' 0A80               	xorlw	128
   891  0036' 6E00'              	movwf	??_sendData& (0+255),c
   892  0038' 0101               	movlb	1	; () banked
   893  003A' 5100'              	movf	(_ring_buffer+204)& (0+255),w,b
   894  003C' 0100               	movlb	0	; () banked
   895  003E' 5D00'              	subwf	sendData@i& (0+255),w,b
   896  0040' 0101               	movlb	1	; () banked
   897  0042' 5100'              	movf	(_ring_buffer+205)& (0+255),w,b
   898  0044' 0A80               	xorlw	128
   899  0046' 5800'              	subwfb	??_sendData& (0+255),w,c
   900  0048' A0D8               	btfss	status,0,c
   901  004A' D7EF               	goto	l3034
   902                           
   903                           ; BSR set to: 1
   904                           ;FastTransfer.c: 75: crcBufS_put(&crc_buffer, whereToSend, CS, 0);
   905                           
   906                           ; BSR set to: 1
   907                           
   908                           ;FastTransfer.c: 69: }
   909                           ;FastTransfer.c: 72: serial_write(CS);
   910  004C' 0100               	movlb	0	; () banked
   911  004E' 0E00'              	movlw	high _crc_buffer
   912  0050' 6E15'              	movwf	crcBufS_put@_this+1,c
   913  0052' 0100               	movlb	0	; () banked
   914  0054' 0E00'              	movlw	low _crc_buffer
   915  0056' 6E14'              	movwf	crcBufS_put@_this,c
   916  0058' C000' F016'        	movff	sendData@whereToSend,crcBufS_put@address
   917  005C' C001' F017'        	movff	sendData@CS,crcBufS_put@oldCRC
   918  0060' 0E00               	movlw	0
   919  0062' 6E18'              	movwf	crcBufS_put@status,c
   920  0064' EC00' F000'        	call	_crcBufS_put	;wreg free
   921                           
   922                           ;FastTransfer.c: 78: FastTransfer_buffer_flush(&ring_buffer, 1);
   923  0068' 0101               	movlb	1	; () banked
   924  006A' 0E00'              	movlw	high _ring_buffer
   925  006C' 6E1D'              	movwf	FastTransfer_buffer_flush@_this+1,c
   926  006E' 0101               	movlb	1	; () banked
   927  0070' 0E00'              	movlw	low _ring_buffer
   928  0072' 6E1C'              	movwf	FastTransfer_buffer_flush@_this,c
   929  0074' 0E00               	movlw	0
   930  0076' 6E1F'              	movwf	FastTransfer_buffer_flush@clearBuffer+1,c
   931  0078' 0E01               	movlw	1
   932  007A' 6E1E'              	movwf	FastTransfer_buffer_flush@clearBuffer,c
   933  007C' EC00' F000'        	call	_FastTransfer_buffer_flush	;wreg free
   934  0080' 0012               	return	
   935  0082'                    __end_of_sendData:
   936                           	opt stack 0
   937                           tblptru	equ	0xFF8
   938                           intcon	equ	0xFF2
   939                           postinc0	equ	0xFEE
   940                           wreg	equ	0xFE8
   941                           status	equ	0xFD8
   942                           
   943 ;; *************** function _crcBufS_put *****************
   944 ;; Defined at:
   945 ;;		line 321 in file "FastTransfer.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  _this           2   20[COMRAM] PTR struct crcBufS
   948 ;;		 -> crc_buffer(17), 
   949 ;;  address         1   22[COMRAM] unsigned char 
   950 ;;  oldCRC          1   23[COMRAM] unsigned char 
   951 ;;  status          1   24[COMRAM] unsigned char 
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;		None               void
   956 ;; Registers used:
   957 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   963 ;;      Params:         5       0       0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0       0       0
   965 ;;      Temps:          2       0       0       0       0       0       0
   966 ;;      Totals:         7       0       0       0       0       0       0
   967 ;;Total ram usage:        7 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; Hardware stack levels required when called:    3
   970 ;; This function calls:
   971 ;;		Nothing
   972 ;; This function is called by:
   973 ;;		_sendData
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           	psect	text4
   978  0000'                    __ptext4:
   979                           	opt stack 0
   980  0000'                    _crcBufS_put:
   981                           	opt stack 24
   982                           
   983                           ;FastTransfer.c: 322: _this->buf[_this->head] = address;
   984                           
   985                           ;incstack = 0
   986  0000' EE20 F00F          	lfsr	2,15
   987  0004' 5014'              	movf	crcBufS_put@_this,w,c
   988  0006' 26D9               	addwf	fsr2l,f,c
   989  0008' 5015'              	movf	crcBufS_put@_this+1,w,c
   990  000A' 22DA               	addwfc	fsr2h,f,c
   991  000C' CFDE F019'         	movff	postinc2,??_crcBufS_put
   992  0010' CFDD F01A'         	movff	postdec2,??_crcBufS_put+1
   993  0014' 5019'              	movf	??_crcBufS_put,w,c
   994  0016' 2414'              	addwf	crcBufS_put@_this,w,c
   995  0018' 6ED9               	movwf	fsr2l,c
   996  001A' 501A'              	movf	??_crcBufS_put+1,w,c
   997  001C' 2015'              	addwfc	crcBufS_put@_this+1,w,c
   998  001E' 6EDA               	movwf	fsr2h,c
   999  0020' C016' FFDF         	movff	crcBufS_put@address,indf2
  1000                           
  1001                           ;FastTransfer.c: 323: _this->head++;
  1002  0024' EE20 F00F          	lfsr	2,15
  1003  0028' 5014'              	movf	crcBufS_put@_this,w,c
  1004  002A' 26D9               	addwf	fsr2l,f,c
  1005  002C' 5015'              	movf	crcBufS_put@_this+1,w,c
  1006  002E' 22DA               	addwfc	fsr2h,f,c
  1007  0030' 2ADE               	incf	postinc2,f,c
  1008  0032' 0E00               	movlw	0
  1009  0034' 22DD               	addwfc	postdec2,f,c
  1010                           
  1011                           ;FastTransfer.c: 324: _this->buf[_this->head] = oldCRC;
  1012  0036' EE20 F00F          	lfsr	2,15
  1013  003A' 5014'              	movf	crcBufS_put@_this,w,c
  1014  003C' 26D9               	addwf	fsr2l,f,c
  1015  003E' 5015'              	movf	crcBufS_put@_this+1,w,c
  1016  0040' 22DA               	addwfc	fsr2h,f,c
  1017  0042' CFDE F019'         	movff	postinc2,??_crcBufS_put
  1018  0046' CFDD F01A'         	movff	postdec2,??_crcBufS_put+1
  1019  004A' 5019'              	movf	??_crcBufS_put,w,c
  1020  004C' 2414'              	addwf	crcBufS_put@_this,w,c
  1021  004E' 6ED9               	movwf	fsr2l,c
  1022  0050' 501A'              	movf	??_crcBufS_put+1,w,c
  1023  0052' 2015'              	addwfc	crcBufS_put@_this+1,w,c
  1024  0054' 6EDA               	movwf	fsr2h,c
  1025  0056' C017' FFDF         	movff	crcBufS_put@oldCRC,indf2
  1026                           
  1027                           ;FastTransfer.c: 325: _this->head++;
  1028  005A' EE20 F00F          	lfsr	2,15
  1029  005E' 5014'              	movf	crcBufS_put@_this,w,c
  1030  0060' 26D9               	addwf	fsr2l,f,c
  1031  0062' 5015'              	movf	crcBufS_put@_this+1,w,c
  1032  0064' 22DA               	addwfc	fsr2h,f,c
  1033  0066' 2ADE               	incf	postinc2,f,c
  1034  0068' 0E00               	movlw	0
  1035  006A' 22DD               	addwfc	postdec2,f,c
  1036                           
  1037                           ;FastTransfer.c: 326: _this->buf[_this->head] = status;
  1038  006C' EE20 F00F          	lfsr	2,15
  1039  0070' 5014'              	movf	crcBufS_put@_this,w,c
  1040  0072' 26D9               	addwf	fsr2l,f,c
  1041  0074' 5015'              	movf	crcBufS_put@_this+1,w,c
  1042  0076' 22DA               	addwfc	fsr2h,f,c
  1043  0078' CFDE F019'         	movff	postinc2,??_crcBufS_put
  1044  007C' CFDD F01A'         	movff	postdec2,??_crcBufS_put+1
  1045  0080' 5019'              	movf	??_crcBufS_put,w,c
  1046  0082' 2414'              	addwf	crcBufS_put@_this,w,c
  1047  0084' 6ED9               	movwf	fsr2l,c
  1048  0086' 501A'              	movf	??_crcBufS_put+1,w,c
  1049  0088' 2015'              	addwfc	crcBufS_put@_this+1,w,c
  1050  008A' 6EDA               	movwf	fsr2h,c
  1051  008C' C018' FFDF         	movff	crcBufS_put@status,indf2
  1052                           
  1053                           ;FastTransfer.c: 327: _this->head++;
  1054  0090' EE20 F00F          	lfsr	2,15
  1055  0094' 5014'              	movf	crcBufS_put@_this,w,c
  1056  0096' 26D9               	addwf	fsr2l,f,c
  1057  0098' 5015'              	movf	crcBufS_put@_this+1,w,c
  1058  009A' 22DA               	addwfc	fsr2h,f,c
  1059  009C' 2ADE               	incf	postinc2,f,c
  1060  009E' 0E00               	movlw	0
  1061  00A0' 22DD               	addwfc	postdec2,f,c
  1062                           
  1063                           ;FastTransfer.c: 328: if (_this->head >= (5 * 3)) {
  1064  00A2' EE20 F00F          	lfsr	2,15
  1065  00A6' 5014'              	movf	crcBufS_put@_this,w,c
  1066  00A8' 26D9               	addwf	fsr2l,f,c
  1067  00AA' 5015'              	movf	crcBufS_put@_this+1,w,c
  1068  00AC' 22DA               	addwfc	fsr2h,f,c
  1069  00AE' 52DE               	movf	postinc2,f,c
  1070  00B0' 50DD               	movf	postdec2,w,c
  1071  00B2' 0A80               	xorlw	128
  1072  00B4' 0F80               	addlw	128
  1073  00B6' 0E0F               	movlw	15
  1074  00B8' B4D8               	btfsc	status,2,c
  1075  00BA' 5CDF               	subwf	indf2,w,c
  1076  00BC' A0D8               	btfss	status,0,c
  1077  00BE' 0012               	return	
  1078                           
  1079                           ;FastTransfer.c: 329: _this->head = 0;
  1080  00C0' EE20 F00F          	lfsr	2,15
  1081  00C4' 5014'              	movf	crcBufS_put@_this,w,c
  1082  00C6' 26D9               	addwf	fsr2l,f,c
  1083  00C8' 5015'              	movf	crcBufS_put@_this+1,w,c
  1084  00CA' 22DA               	addwfc	fsr2h,f,c
  1085  00CC' 0E00               	movlw	0
  1086  00CE' 6EDE               	movwf	postinc2,c
  1087  00D0' 0E00               	movlw	0
  1088  00D2' 6EDD               	movwf	postdec2,c
  1089  00D4' 0012               	return	
  1090  00D6'                    __end_of_crcBufS_put:
  1091                           	opt stack 0
  1092                           tblptru	equ	0xFF8
  1093                           intcon	equ	0xFF2
  1094                           postinc0	equ	0xFEE
  1095                           wreg	equ	0xFE8
  1096                           indf2	equ	0xFDF
  1097                           postinc2	equ	0xFDE
  1098                           postdec2	equ	0xFDD
  1099                           fsr2h	equ	0xFDA
  1100                           fsr2l	equ	0xFD9
  1101                           status	equ	0xFD8
  1102                           
  1103 ;; *************** function _FastTransfer_buffer_flush *****************
  1104 ;; Defined at:
  1105 ;;		line 261 in file "FastTransfer.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;  _this           2   28[COMRAM] PTR struct ringBufS
  1108 ;;		 -> ring_buffer(206), 
  1109 ;;  clearBuffer     2   30[COMRAM] const int 
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;		None
  1112 ;; Return value:  Size  Location     Type
  1113 ;;		None               void
  1114 ;; Registers used:
  1115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1121 ;;      Params:         4       0       0       0       0       0       0
  1122 ;;      Locals:         0       0       0       0       0       0       0
  1123 ;;      Temps:          0       0       0       0       0       0       0
  1124 ;;      Totals:         4       0       0       0       0       0       0
  1125 ;;Total ram usage:        4 bytes
  1126 ;; Hardware stack levels used:    1
  1127 ;; Hardware stack levels required when called:    4
  1128 ;; This function calls:
  1129 ;;		_memset
  1130 ;; This function is called by:
  1131 ;;		_sendData
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	text5
  1136  0000'                    __ptext5:
  1137                           	opt stack 0
  1138  0000'                    _FastTransfer_buffer_flush:
  1139                           	opt stack 23
  1140                           
  1141                           ;FastTransfer.c: 262: _this->count = 0;
  1142                           
  1143                           ;incstack = 0
  1144  0000' EE20 F0CC          	lfsr	2,204
  1145  0004' 501C'              	movf	FastTransfer_buffer_flush@_this,w,c
  1146  0006' 26D9               	addwf	fsr2l,f,c
  1147  0008' 501D'              	movf	FastTransfer_buffer_flush@_this+1,w,c
  1148  000A' 22DA               	addwfc	fsr2h,f,c
  1149  000C' 0E00               	movlw	0
  1150  000E' 6EDE               	movwf	postinc2,c
  1151  0010' 0E00               	movlw	0
  1152  0012' 6EDD               	movwf	postdec2,c
  1153                           
  1154                           ;FastTransfer.c: 263: _this->head = 0;
  1155  0014' EE20 F0C8          	lfsr	2,200
  1156  0018' 501C'              	movf	FastTransfer_buffer_flush@_this,w,c
  1157  001A' 26D9               	addwf	fsr2l,f,c
  1158  001C' 501D'              	movf	FastTransfer_buffer_flush@_this+1,w,c
  1159  001E' 22DA               	addwfc	fsr2h,f,c
  1160  0020' 0E00               	movlw	0
  1161  0022' 6EDE               	movwf	postinc2,c
  1162  0024' 0E00               	movlw	0
  1163  0026' 6EDD               	movwf	postdec2,c
  1164                           
  1165                           ;FastTransfer.c: 264: _this->tail = 0;
  1166  0028' EE20 F0CA          	lfsr	2,202
  1167  002C' 501C'              	movf	FastTransfer_buffer_flush@_this,w,c
  1168  002E' 26D9               	addwf	fsr2l,f,c
  1169  0030' 501D'              	movf	FastTransfer_buffer_flush@_this+1,w,c
  1170  0032' 22DA               	addwfc	fsr2h,f,c
  1171  0034' 0E00               	movlw	0
  1172  0036' 6EDE               	movwf	postinc2,c
  1173  0038' 0E00               	movlw	0
  1174  003A' 6EDD               	movwf	postdec2,c
  1175                           
  1176                           ;FastTransfer.c: 265: if (clearBuffer) {
  1177  003C' 501F'              	movf	FastTransfer_buffer_flush@clearBuffer+1,w,c
  1178  003E' 101E'              	iorwf	FastTransfer_buffer_flush@clearBuffer,w,c
  1179  0040' B4D8               	btfsc	status,2,c
  1180  0042' 0012               	return	
  1181                           
  1182                           ;FastTransfer.c: 266: memset(_this->buf, 0, sizeof (_this->buf));
  1183  0044' C01D' F015'        	movff	FastTransfer_buffer_flush@_this+1,memset@p1+1
  1184  0048' C01C' F014'        	movff	FastTransfer_buffer_flush@_this,memset@p1
  1185  004C' 0E00               	movlw	0
  1186  004E' 6E17'              	movwf	memset@c+1,c
  1187  0050' 0E00               	movlw	0
  1188  0052' 6E16'              	movwf	memset@c,c
  1189  0054' 0E00               	movlw	0
  1190  0056' 6E19'              	movwf	memset@n+1,c
  1191  0058' 0EC8               	movlw	200
  1192  005A' 6E18'              	movwf	memset@n,c
  1193  005C' EC00' F000'        	call	_memset	;wreg free
  1194  0060' 0012               	return	
  1195  0062'                    __end_of_FastTransfer_buffer_flush:
  1196                           	opt stack 0
  1197                           tblptru	equ	0xFF8
  1198                           intcon	equ	0xFF2
  1199                           postinc0	equ	0xFEE
  1200                           wreg	equ	0xFE8
  1201                           indf2	equ	0xFDF
  1202                           postinc2	equ	0xFDE
  1203                           postdec2	equ	0xFDD
  1204                           fsr2h	equ	0xFDA
  1205                           fsr2l	equ	0xFD9
  1206                           status	equ	0xFD8
  1207                           
  1208 ;; *************** function _memset *****************
  1209 ;; Defined at:
  1210 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memset.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;  p1              2   20[COMRAM] PTR void 
  1213 ;;		 -> ring_buffer(206), 
  1214 ;;  c               2   22[COMRAM] int 
  1215 ;;  n               2   24[COMRAM] unsigned int 
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;  p               2   26[COMRAM] PTR unsigned char 
  1218 ;;		 -> ring_buffer(206), 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  2   20[COMRAM] PTR void 
  1221 ;; Registers used:
  1222 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1228 ;;      Params:         6       0       0       0       0       0       0
  1229 ;;      Locals:         2       0       0       0       0       0       0
  1230 ;;      Temps:          0       0       0       0       0       0       0
  1231 ;;      Totals:         8       0       0       0       0       0       0
  1232 ;;Total ram usage:        8 bytes
  1233 ;; Hardware stack levels used:    1
  1234 ;; Hardware stack levels required when called:    3
  1235 ;; This function calls:
  1236 ;;		Nothing
  1237 ;; This function is called by:
  1238 ;;		_FastTransfer_buffer_flush
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           	psect	text6
  1243  0000'                    __ptext6:
  1244                           	opt stack 0
  1245  0000'                    _memset:
  1246                           	opt stack 23
  1247                           
  1248                           ;incstack = 0
  1249  0000' C015' F01B'        	movff	memset@p1+1,memset@p+1
  1250  0004' C014' F01A'        	movff	memset@p1,memset@p
  1251  0008' D008               	goto	l2956
  1252  000A'                    l2952:
  1253  000A' C01A' FFD9         	movff	memset@p,fsr2l
  1254  000E' C01B' FFDA         	movff	memset@p+1,fsr2h
  1255  0012' C016' FFDF         	movff	memset@c,indf2
  1256  0016' 4A1A'              	infsnz	memset@p,f,c
  1257  0018' 2A1B'              	incf	memset@p+1,f,c
  1258  001A'                    l2956:
  1259  001A' 0618'              	decf	memset@n,f,c
  1260  001C' A0D8               	btfss	status,0,c
  1261  001E' 0619'              	decf	memset@n+1,f,c
  1262  0020' 2800'              	incf	memset@n& (0+255),w,c
  1263  0022' B4D8               	btfsc	status,2,c
  1264  0024' 2800'              	incf	(memset@n+1)& (0+255),w,c
  1265  0026' B4D8               	btfsc	status,2,c
  1266                           
  1267                           ;	Return value of _memset is never used
  1268  0028' 0012               	return	
  1269  002A' D7EF               	goto	l2952
  1270  002C'                    __end_of_memset:
  1271                           	opt stack 0
  1272                           tblptru	equ	0xFF8
  1273                           intcon	equ	0xFF2
  1274                           postinc0	equ	0xFEE
  1275                           wreg	equ	0xFE8
  1276                           indf2	equ	0xFDF
  1277                           postinc2	equ	0xFDE
  1278                           postdec2	equ	0xFDD
  1279                           fsr2h	equ	0xFDA
  1280                           fsr2l	equ	0xFD9
  1281                           status	equ	0xFD8
  1282                           
  1283 ;; *************** function _buttonsCollector *****************
  1284 ;; Defined at:
  1285 ;;		line 52 in file "Communications.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;  i               2   29[COMRAM] int 
  1290 ;;  sendVal         2   27[COMRAM] unsigned int 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  2   22[COMRAM] unsigned int 
  1293 ;; Registers used:
  1294 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1300 ;;      Params:         2       0       0       0       0       0       0
  1301 ;;      Locals:         4       0       0       0       0       0       0
  1302 ;;      Temps:          3       0       0       0       0       0       0
  1303 ;;      Totals:         9       0       0       0       0       0       0
  1304 ;;Total ram usage:        9 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    4
  1307 ;; This function calls:
  1308 ;;		_GetButtonState
  1309 ;; This function is called by:
  1310 ;;		_respondECU
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text7
  1315  0000'                    __ptext7:
  1316                           	opt stack 0
  1317  0000'                    _buttonsCollector:
  1318                           	opt stack 24
  1319                           
  1320                           ;Communications.c: 53: unsigned int sendVal = 0;
  1321                           
  1322                           ;incstack = 0
  1323  0000' 0E00               	movlw	0
  1324  0002' 6E1C'              	movwf	buttonsCollector@sendVal+1,c
  1325  0004' 0E00               	movlw	0
  1326  0006' 6E1B'              	movwf	buttonsCollector@sendVal,c
  1327                           
  1328                           ;Communications.c: 54: int i = 0;
  1329  0008' 0E00               	movlw	0
  1330  000A' 6E1E'              	movwf	buttonsCollector@i+1,c
  1331  000C' 0E00               	movlw	0
  1332  000E' 6E1D'              	movwf	buttonsCollector@i,c
  1333                           
  1334                           ;Communications.c: 55: for (i = 0; i < 8; i++) {
  1335  0010' 0E00               	movlw	0
  1336  0012' 6E1E'              	movwf	buttonsCollector@i+1,c
  1337  0014' 0E00               	movlw	0
  1338  0016' 6E1D'              	movwf	buttonsCollector@i,c
  1339  0018' 501E'              	movf	buttonsCollector@i+1,w,c
  1340  001A' 0A80               	xorlw	128
  1341  001C' 0F80               	addlw	-128
  1342  001E' 0E08               	movlw	8
  1343  0020' B4D8               	btfsc	status,2,c
  1344  0022' 5C1D'              	subwf	buttonsCollector@i,w,c
  1345  0024' B0D8               	btfsc	status,0,c
  1346  0026' D01B               	goto	l561
  1347                           
  1348                           ;Communications.c: 56: sendVal = sendVal | ((GetButtonState(i)&0x01) << i);
  1349  0028' C01D' F018'        	movff	buttonsCollector@i,??_buttonsCollector
  1350  002C' C01D' F014'        	movff	buttonsCollector@i,_GetButtonState$0
  1351  0030' C01E' F015'        	movff	buttonsCollector@i+1,_GetButtonState$0+1
  1352  0034' EC00' F000'        	call	_GetButtonState	;wreg free
  1353  0038' 0B01               	andlw	1
  1354  003A' 6E00'              	movwf	(??_buttonsCollector+1)& (0+255),c
  1355  003C' 6A00'              	clrf	(??_buttonsCollector+2)& (0+255),c
  1356  003E' 2A18'              	incf	??_buttonsCollector,f,c
  1357  0040' D003               	goto	u1074
  1358  0042'                    u1075:
  1359  0042' 90D8               	bcf	status,0,c
  1360  0044' 3619'              	rlcf	??_buttonsCollector+1,f,c
  1361  0046' 361A'              	rlcf	??_buttonsCollector+2,f,c
  1362  0048'                    u1074:
  1363  0048' 2E18'              	decfsz	??_buttonsCollector,f,c
  1364  004A' D7FB               	goto	u1075
  1365  004C' 501B'              	movf	buttonsCollector@sendVal,w,c
  1366  004E' 1019'              	iorwf	??_buttonsCollector+1,w,c
  1367  0050' 6E1B'              	movwf	buttonsCollector@sendVal,c
  1368  0052' 501C'              	movf	buttonsCollector@sendVal+1,w,c
  1369  0054' 101A'              	iorwf	??_buttonsCollector+2,w,c
  1370  0056' 6E1C'              	movwf	buttonsCollector@sendVal+1,c
  1371  0058' 4A1D'              	infsnz	buttonsCollector@i,f,c
  1372  005A' 2A1E'              	incf	buttonsCollector@i+1,f,c
  1373  005C' D7DD               	goto	L1
  1374  005E'                    l561:
  1375                           
  1376                           ;Communications.c: 57: }
  1377                           ;Communications.c: 58: return sendVal;
  1378  005E' C01B' F016'        	movff	buttonsCollector@sendVal,?_buttonsCollector
  1379  0062' C01C' F017'        	movff	buttonsCollector@sendVal+1,?_buttonsCollector+1
  1380  0066' 0012               	return	
  1381  0068'                    __end_of_buttonsCollector:
  1382                           	opt stack 0
  1383                           tblptru	equ	0xFF8
  1384                           intcon	equ	0xFF2
  1385                           postinc0	equ	0xFEE
  1386                           wreg	equ	0xFE8
  1387                           indf2	equ	0xFDF
  1388                           postinc2	equ	0xFDE
  1389                           postdec2	equ	0xFDD
  1390                           fsr2h	equ	0xFDA
  1391                           fsr2l	equ	0xFD9
  1392                           status	equ	0xFD8
  1393                           
  1394 ;; *************** function _ToSend *****************
  1395 ;; Defined at:
  1396 ;;		line 216 in file "FastTransfer.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;  where           1    wreg     unsigned char 
  1399 ;;  what            2   33[COMRAM] unsigned int 
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  where           1   35[COMRAM] unsigned char 
  1402 ;; Return value:  Size  Location     Type
  1403 ;;		None               void
  1404 ;; Registers used:
  1405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1411 ;;      Params:         2       0       0       0       0       0       0
  1412 ;;      Locals:         1       0       0       0       0       0       0
  1413 ;;      Temps:          0       0       0       0       0       0       0
  1414 ;;      Totals:         3       0       0       0       0       0       0
  1415 ;;Total ram usage:        3 bytes
  1416 ;; Hardware stack levels used:    1
  1417 ;; Hardware stack levels required when called:    5
  1418 ;; This function calls:
  1419 ;;		_FastTransfer_buffer_put
  1420 ;; This function is called by:
  1421 ;;		_respondECU
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text8
  1426  0000'                    __ptext8:
  1427                           	opt stack 0
  1428  0000'                    _ToSend:
  1429                           	opt stack 23
  1430                           
  1431                           ;incstack = 0
  1432                           ;ToSend@where stored from wreg
  1433  0000' 6E23'              	movwf	ToSend@where,c
  1434                           
  1435                           ;FastTransfer.c: 217: FastTransfer_buffer_put(&ring_buffer, where, what);
  1436  0002' 0101               	movlb	1	; () banked
  1437  0004' 0E00'              	movlw	high _ring_buffer
  1438  0006' 6E1B'              	movwf	FastTransfer_buffer_put@_this+1,c
  1439  0008' 0101               	movlb	1	; () banked
  1440  000A' 0E00'              	movlw	low _ring_buffer
  1441  000C' 6E1A'              	movwf	FastTransfer_buffer_put@_this,c
  1442  000E' C023' F01C'        	movff	ToSend@where,FastTransfer_buffer_put@towhere
  1443  0012' C021' F01D'        	movff	ToSend@what,FastTransfer_buffer_put@towhat
  1444  0016' C022' F01E'        	movff	ToSend@what+1,FastTransfer_buffer_put@towhat+1
  1445  001A' EC00' F000'        	call	_FastTransfer_buffer_put	;wreg free
  1446  001E' 0012               	return	
  1447  0020'                    __end_of_ToSend:
  1448                           	opt stack 0
  1449                           tblptru	equ	0xFF8
  1450                           intcon	equ	0xFF2
  1451                           postinc0	equ	0xFEE
  1452                           wreg	equ	0xFE8
  1453                           indf2	equ	0xFDF
  1454                           postinc2	equ	0xFDE
  1455                           postdec2	equ	0xFDD
  1456                           fsr2h	equ	0xFDA
  1457                           fsr2l	equ	0xFD9
  1458                           status	equ	0xFD8
  1459                           
  1460 ;; *************** function _FastTransfer_buffer_put *****************
  1461 ;; Defined at:
  1462 ;;		line 223 in file "FastTransfer.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  _this           2   26[COMRAM] PTR struct ringBufS
  1465 ;;		 -> ring_buffer(206), 
  1466 ;;  towhere         1   28[COMRAM] unsigned char 
  1467 ;;  towhat          2   29[COMRAM] unsigned int 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;		None
  1470 ;; Return value:  Size  Location     Type
  1471 ;;		None               void
  1472 ;; Registers used:
  1473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1479 ;;      Params:         5       0       0       0       0       0       0
  1480 ;;      Locals:         0       0       0       0       0       0       0
  1481 ;;      Temps:          2       0       0       0       0       0       0
  1482 ;;      Totals:         7       0       0       0       0       0       0
  1483 ;;Total ram usage:        7 bytes
  1484 ;; Hardware stack levels used:    1
  1485 ;; Hardware stack levels required when called:    4
  1486 ;; This function calls:
  1487 ;;		_FastTransfer_buffer_modulo_inc
  1488 ;; This function is called by:
  1489 ;;		_ToSend
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           	psect	text9
  1494  0000'                    __ptext9:
  1495                           	opt stack 0
  1496  0000'                    _FastTransfer_buffer_put:
  1497                           	opt stack 23
  1498                           
  1499                           ;FastTransfer.c: 225: group.integer = towhat;
  1500                           
  1501                           ;incstack = 0
  1502  0000' C01D' F01B'        	movff	FastTransfer_buffer_put@towhat,_group
  1503  0004' C01E' F01C'        	movff	FastTransfer_buffer_put@towhat+1,_group+1
  1504                           
  1505                           ;FastTransfer.c: 227: if (_this->count < (200 - 3)) {
  1506  0008' EE20 F0CC          	lfsr	2,204
  1507  000C' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1508  000E' 26D9               	addwf	fsr2l,f,c
  1509  0010' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1510  0012' 22DA               	addwfc	fsr2h,f,c
  1511  0014' CFDE F01F'         	movff	postinc2,??_FastTransfer_buffer_put
  1512  0018' CFDD F020'         	movff	postdec2,??_FastTransfer_buffer_put+1
  1513  001C' 5020'              	movf	??_FastTransfer_buffer_put+1,w,c
  1514  001E' 0A80               	xorlw	128
  1515  0020' 6EF3               	movwf	prodl,c
  1516  0022' 0E80               	movlw	128
  1517  0024' 5CF3               	subwf	prodl,w,c
  1518  0026' 0EC5               	movlw	197
  1519  0028' B4D8               	btfsc	status,2,c
  1520  002A' 5C1F'              	subwf	??_FastTransfer_buffer_put,w,c
  1521  002C' B0D8               	btfsc	status,0,c
  1522  002E' 0012               	return	
  1523                           
  1524                           ;FastTransfer.c: 228: _this->buf[_this->head] = towhere;
  1525  0030' EE20 F0C8          	lfsr	2,200
  1526  0034' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1527  0036' 26D9               	addwf	fsr2l,f,c
  1528  0038' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1529  003A' 22DA               	addwfc	fsr2h,f,c
  1530  003C' CFDE F01F'         	movff	postinc2,??_FastTransfer_buffer_put
  1531  0040' CFDD F020'         	movff	postdec2,??_FastTransfer_buffer_put+1
  1532  0044' 501F'              	movf	??_FastTransfer_buffer_put,w,c
  1533  0046' 241A'              	addwf	FastTransfer_buffer_put@_this,w,c
  1534  0048' 6ED9               	movwf	fsr2l,c
  1535  004A' 5020'              	movf	??_FastTransfer_buffer_put+1,w,c
  1536  004C' 201B'              	addwfc	FastTransfer_buffer_put@_this+1,w,c
  1537  004E' 6EDA               	movwf	fsr2h,c
  1538  0050' C01C' FFDF         	movff	FastTransfer_buffer_put@towhere,indf2
  1539                           
  1540                           ;FastTransfer.c: 229: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  1541  0054' EE20 F0C8          	lfsr	2,200
  1542  0058' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1543  005A' 26D9               	addwf	fsr2l,f,c
  1544  005C' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1545  005E' 22DA               	addwfc	fsr2h,f,c
  1546  0060' CFDE F014'         	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  1547  0064' CFDD F015'         	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  1548  0068' 0E00               	movlw	0
  1549  006A' 6E17'              	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  1550  006C' 0EC8               	movlw	200
  1551  006E' 6E16'              	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  1552  0070' EC00' F000'        	call	_FastTransfer_buffer_modulo_inc	;wreg free
  1553  0074' EE20 F0C8          	lfsr	2,200
  1554  0078' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1555  007A' 26D9               	addwf	fsr2l,f,c
  1556  007C' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1557  007E' 22DA               	addwfc	fsr2h,f,c
  1558  0080' C014' FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  1559  0084' C015' FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  1560                           
  1561                           ;FastTransfer.c: 230: ++_this->count;
  1562  0088' EE20 F0CC          	lfsr	2,204
  1563  008C' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1564  008E' 26D9               	addwf	fsr2l,f,c
  1565  0090' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1566  0092' 22DA               	addwfc	fsr2h,f,c
  1567  0094' 2ADE               	incf	postinc2,f,c
  1568  0096' 0E00               	movlw	0
  1569  0098' 22DD               	addwfc	postdec2,f,c
  1570                           
  1571                           ;FastTransfer.c: 231: _this->buf[_this->head] = group.parts[0];
  1572  009A' EE20 F0C8          	lfsr	2,200
  1573  009E' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1574  00A0' 26D9               	addwf	fsr2l,f,c
  1575  00A2' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1576  00A4' 22DA               	addwfc	fsr2h,f,c
  1577  00A6' CFDE F01F'         	movff	postinc2,??_FastTransfer_buffer_put
  1578  00AA' CFDD F020'         	movff	postdec2,??_FastTransfer_buffer_put+1
  1579  00AE' 501F'              	movf	??_FastTransfer_buffer_put,w,c
  1580  00B0' 241A'              	addwf	FastTransfer_buffer_put@_this,w,c
  1581  00B2' 6ED9               	movwf	fsr2l,c
  1582  00B4' 5020'              	movf	??_FastTransfer_buffer_put+1,w,c
  1583  00B6' 201B'              	addwfc	FastTransfer_buffer_put@_this+1,w,c
  1584  00B8' 6EDA               	movwf	fsr2h,c
  1585  00BA' C01B' FFDF         	movff	_group,indf2
  1586                           
  1587                           ;FastTransfer.c: 232: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  1588  00BE' EE20 F0C8          	lfsr	2,200
  1589  00C2' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1590  00C4' 26D9               	addwf	fsr2l,f,c
  1591  00C6' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1592  00C8' 22DA               	addwfc	fsr2h,f,c
  1593  00CA' CFDE F014'         	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  1594  00CE' CFDD F015'         	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  1595  00D2' 0E00               	movlw	0
  1596  00D4' 6E17'              	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  1597  00D6' 0EC8               	movlw	200
  1598  00D8' 6E16'              	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  1599  00DA' EC00' F000'        	call	_FastTransfer_buffer_modulo_inc	;wreg free
  1600  00DE' EE20 F0C8          	lfsr	2,200
  1601  00E2' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1602  00E4' 26D9               	addwf	fsr2l,f,c
  1603  00E6' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1604  00E8' 22DA               	addwfc	fsr2h,f,c
  1605  00EA' C014' FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  1606  00EE' C015' FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  1607                           
  1608                           ;FastTransfer.c: 233: ++_this->count;
  1609  00F2' EE20 F0CC          	lfsr	2,204
  1610  00F6' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1611  00F8' 26D9               	addwf	fsr2l,f,c
  1612  00FA' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1613  00FC' 22DA               	addwfc	fsr2h,f,c
  1614  00FE' 2ADE               	incf	postinc2,f,c
  1615  0100' 0E00               	movlw	0
  1616  0102' 22DD               	addwfc	postdec2,f,c
  1617                           
  1618                           ;FastTransfer.c: 234: _this->buf[_this->head] = group.parts[1];
  1619  0104' EE20 F0C8          	lfsr	2,200
  1620  0108' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1621  010A' 26D9               	addwf	fsr2l,f,c
  1622  010C' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1623  010E' 22DA               	addwfc	fsr2h,f,c
  1624  0110' CFDE F01F'         	movff	postinc2,??_FastTransfer_buffer_put
  1625  0114' CFDD F020'         	movff	postdec2,??_FastTransfer_buffer_put+1
  1626  0118' 501F'              	movf	??_FastTransfer_buffer_put,w,c
  1627  011A' 241A'              	addwf	FastTransfer_buffer_put@_this,w,c
  1628  011C' 6ED9               	movwf	fsr2l,c
  1629  011E' 5020'              	movf	??_FastTransfer_buffer_put+1,w,c
  1630  0120' 201B'              	addwfc	FastTransfer_buffer_put@_this+1,w,c
  1631  0122' 6EDA               	movwf	fsr2h,c
  1632  0124' C01C' FFDF         	movff	_group+1,indf2
  1633                           
  1634                           ;FastTransfer.c: 235: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  1635  0128' EE20 F0C8          	lfsr	2,200
  1636  012C' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1637  012E' 26D9               	addwf	fsr2l,f,c
  1638  0130' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1639  0132' 22DA               	addwfc	fsr2h,f,c
  1640  0134' CFDE F014'         	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  1641  0138' CFDD F015'         	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  1642  013C' 0E00               	movlw	0
  1643  013E' 6E17'              	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  1644  0140' 0EC8               	movlw	200
  1645  0142' 6E16'              	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  1646  0144' EC00' F000'        	call	_FastTransfer_buffer_modulo_inc	;wreg free
  1647  0148' EE20 F0C8          	lfsr	2,200
  1648  014C' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1649  014E' 26D9               	addwf	fsr2l,f,c
  1650  0150' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1651  0152' 22DA               	addwfc	fsr2h,f,c
  1652  0154' C014' FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  1653  0158' C015' FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  1654                           
  1655                           ;FastTransfer.c: 236: ++_this->count;
  1656  015C' EE20 F0CC          	lfsr	2,204
  1657  0160' 501A'              	movf	FastTransfer_buffer_put@_this,w,c
  1658  0162' 26D9               	addwf	fsr2l,f,c
  1659  0164' 501B'              	movf	FastTransfer_buffer_put@_this+1,w,c
  1660  0166' 22DA               	addwfc	fsr2h,f,c
  1661  0168' 2ADE               	incf	postinc2,f,c
  1662  016A' 0E00               	movlw	0
  1663  016C' 22DD               	addwfc	postdec2,f,c
  1664  016E' 0012               	return	
  1665  0170'                    __end_of_FastTransfer_buffer_put:
  1666                           	opt stack 0
  1667                           tblptru	equ	0xFF8
  1668                           prodl	equ	0xFF3
  1669                           intcon	equ	0xFF2
  1670                           postinc0	equ	0xFEE
  1671                           wreg	equ	0xFE8
  1672                           indf2	equ	0xFDF
  1673                           postinc2	equ	0xFDE
  1674                           postdec2	equ	0xFDD
  1675                           fsr2h	equ	0xFDA
  1676                           fsr2l	equ	0xFD9
  1677                           status	equ	0xFD8
  1678                           
  1679 ;; *************** function _FastTransfer_buffer_modulo_inc *****************
  1680 ;; Defined at:
  1681 ;;		line 273 in file "FastTransfer.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  value           2   20[COMRAM] const unsigned int 
  1684 ;;  modulus         2   22[COMRAM] const unsigned int 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  my_value        2   24[COMRAM] unsigned int 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  2   20[COMRAM] unsigned int 
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, status,0
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1696 ;;      Params:         4       0       0       0       0       0       0
  1697 ;;      Locals:         2       0       0       0       0       0       0
  1698 ;;      Temps:          0       0       0       0       0       0       0
  1699 ;;      Totals:         6       0       0       0       0       0       0
  1700 ;;Total ram usage:        6 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:    3
  1703 ;; This function calls:
  1704 ;;		Nothing
  1705 ;; This function is called by:
  1706 ;;		_FastTransfer_buffer_put
  1707 ;;		_FastTransfer_buffer_get
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	text10
  1712  0000'                    __ptext10:
  1713                           	opt stack 0
  1714  0000'                    _FastTransfer_buffer_modulo_inc:
  1715                           	opt stack 23
  1716                           
  1717                           ;FastTransfer.c: 274: unsigned int my_value = value + 1;
  1718                           
  1719                           ;incstack = 0
  1720  0000' 0E01               	movlw	1
  1721  0002' 2414'              	addwf	FastTransfer_buffer_modulo_inc@value,w,c
  1722  0004' 6E18'              	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  1723  0006' 0E00               	movlw	0
  1724  0008' 2015'              	addwfc	FastTransfer_buffer_modulo_inc@value+1,w,c
  1725  000A' 6E19'              	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  1726                           
  1727                           ;FastTransfer.c: 275: if (my_value >= modulus) {
  1728  000C' 5016'              	movf	FastTransfer_buffer_modulo_inc@modulus,w,c
  1729  000E' 5C18'              	subwf	FastTransfer_buffer_modulo_inc@my_value,w,c
  1730  0010' 5017'              	movf	FastTransfer_buffer_modulo_inc@modulus+1,w,c
  1731  0012' 5819'              	subwfb	FastTransfer_buffer_modulo_inc@my_value+1,w,c
  1732  0014' A0D8               	btfss	status,0,c
  1733  0016' D004               	goto	l2206
  1734                           
  1735                           ;FastTransfer.c: 276: my_value = 0;
  1736  0018' 0E00               	movlw	0
  1737  001A' 6E19'              	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  1738  001C' 0E00               	movlw	0
  1739  001E' 6E18'              	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  1740  0020'                    l2206:
  1741                           
  1742                           ;FastTransfer.c: 277: }
  1743                           ;FastTransfer.c: 278: return (my_value);
  1744  0020' C018' F014'        	movff	FastTransfer_buffer_modulo_inc@my_value,?_FastTransfer_buffer_modulo_inc
  1745  0024' C019' F015'        	movff	FastTransfer_buffer_modulo_inc@my_value+1,?_FastTransfer_buffer_modulo_inc+1
  1746  0028' 0012               	return	
  1747  002A'                    __end_of_FastTransfer_buffer_modulo_inc:
  1748                           	opt stack 0
  1749                           tblptru	equ	0xFF8
  1750                           prodl	equ	0xFF3
  1751                           intcon	equ	0xFF2
  1752                           postinc0	equ	0xFEE
  1753                           wreg	equ	0xFE8
  1754                           indf2	equ	0xFDF
  1755                           postinc2	equ	0xFDE
  1756                           postdec2	equ	0xFDD
  1757                           fsr2h	equ	0xFDA
  1758                           fsr2l	equ	0xFD9
  1759                           status	equ	0xFD8
  1760                           
  1761 ;; *************** function _Delay *****************
  1762 ;; Defined at:
  1763 ;;		line 69 in file "main.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  wait            2   20[COMRAM] int 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;  x               2   23[COMRAM] int 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;		None               void
  1770 ;; Registers used:
  1771 ;;		wreg, status,2, status,0
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1777 ;;      Params:         2       0       0       0       0       0       0
  1778 ;;      Locals:         2       0       0       0       0       0       0
  1779 ;;      Temps:          1       0       0       0       0       0       0
  1780 ;;      Totals:         5       0       0       0       0       0       0
  1781 ;;Total ram usage:        5 bytes
  1782 ;; Hardware stack levels used:    1
  1783 ;; Hardware stack levels required when called:    3
  1784 ;; This function calls:
  1785 ;;		Nothing
  1786 ;; This function is called by:
  1787 ;;		_respondECU
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text11
  1792  0000'                    __ptext11:
  1793                           	opt stack 0
  1794  0000'                    _Delay:
  1795                           	opt stack 25
  1796                           
  1797                           ;main.c: 70: int x;
  1798                           ;main.c: 71: for (x = 0; x < wait; x++) {
  1799                           
  1800                           ;incstack = 0
  1801  0000' 0E00               	movlw	0
  1802  0002' 6E18'              	movwf	Delay@x+1,c
  1803  0004' 0E00               	movlw	0
  1804  0006' 6E17'              	movwf	Delay@x,c
  1805  0008' D00A               	goto	l769
  1806  000A'                    l2324:
  1807                           
  1808                           ;main.c: 72: _delay((unsigned long)((1)*(16000000/4000.0)));
  1809  000A' 0E06               	movlw	6
  1810  000C' 6E00'              	movwf	??_Delay& (0+255),c
  1811  000E' 0E30               	movlw	48
  1812  0010'                    u2247:
  1813  0010' 2EE8               	decfsz	wreg,f,c
  1814  0012' D7FE               	goto	u2247
  1815  0014' 2E00'              	decfsz	??_Delay& (0+255),f,c
  1816  0016' D7FC               	goto	u2247
  1817  0018' D000               	nop2	
  1818  001A' 4A17'              	infsnz	Delay@x,f,c
  1819  001C' 2A18'              	incf	Delay@x+1,f,c
  1820  001E'                    l769:
  1821  001E' 5018'              	movf	Delay@x+1,w,c
  1822  0020' 0A80               	xorlw	128
  1823  0022' 6E00'              	movwf	??_Delay& (0+255),c
  1824  0024' 5014'              	movf	Delay@wait,w,c
  1825  0026' 5C17'              	subwf	Delay@x,w,c
  1826  0028' 5015'              	movf	Delay@wait+1,w,c
  1827  002A' 0A80               	xorlw	128
  1828  002C' 5800'              	subwfb	??_Delay& (0+255),w,c
  1829  002E' B0D8               	btfsc	status,0,c
  1830  0030' 0012               	return	
  1831  0032' D7EB               	goto	l2324
  1832  0034'                    __end_of_Delay:
  1833                           	opt stack 0
  1834                           tblptru	equ	0xFF8
  1835                           prodl	equ	0xFF3
  1836                           intcon	equ	0xFF2
  1837                           postinc0	equ	0xFEE
  1838                           wreg	equ	0xFE8
  1839                           indf2	equ	0xFDF
  1840                           postinc2	equ	0xFDE
  1841                           postdec2	equ	0xFDD
  1842                           fsr2h	equ	0xFDA
  1843                           fsr2l	equ	0xFD9
  1844                           status	equ	0xFD8
  1845                           
  1846 ;; *************** function _receiveData *****************
  1847 ;; Defined at:
  1848 ;;		line 82 in file "FastTransfer.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;		None
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;  holder          3   12[BANK0 ] unsigned char [3]
  1853 ;;  crcHolder       1    8[BANK0 ] unsigned char 
  1854 ;;  holder          3    9[BANK0 ] unsigned char [3]
  1855 ;;  crcHolder       1    7[BANK0 ] unsigned char 
  1856 ;;  u               2   15[BANK0 ] int 
  1857 ;;  r               2   17[BANK0 ] int 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      unsigned char 
  1860 ;; Registers used:
  1861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1867 ;;      Params:         0       0       0       0       0       0       0
  1868 ;;      Locals:         0      12       0       0       0       0       0
  1869 ;;      Temps:          4       0       0       0       0       0       0
  1870 ;;      Totals:         4      12       0       0       0       0       0
  1871 ;;Total ram usage:       16 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:    5
  1874 ;; This function calls:
  1875 ;;		_CRC8
  1876 ;;		_CRCcheck
  1877 ;; This function is called by:
  1878 ;;		_updateComms
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text12
  1883  0000'                    __ptext12:
  1884                           	opt stack 0
  1885  0000'                    _receiveData:
  1886                           	opt stack 24
  1887                           
  1888                           ;incstack = 0
  1889  0000' D01A               	goto	l3102
  1890  0002'                    l3092:
  1891                           
  1892                           ; BSR set to: 0
  1893  0002' 0100               	movlb	0	; () banked
  1894  0004' 4B00'              	infsnz	receiveData@u& (0+255),f,b
  1895  0006' 2B00'              	incf	(receiveData@u+1)& (0+255),f,b
  1896                           
  1897                           ; BSR set to: 0
  1898                           
  1899                           ; BSR set to: 0
  1900  0008' 5018'              	movf	_rx_len,w,c
  1901  000A' 6E00'              	movwf	??_receiveData& (0+255),c
  1902  000C' 6A00'              	clrf	(??_receiveData+1)& (0+255),c
  1903  000E' 0E01               	movlw	1
  1904  0010' 2620'              	addwf	??_receiveData,f,c
  1905  0012' 0E00               	movlw	0
  1906  0014' 2221'              	addwfc	??_receiveData+1,f,c
  1907  0016' 5021'              	movf	??_receiveData+1,w,c
  1908  0018' 0A80               	xorlw	128
  1909  001A' 6E00'              	movwf	(??_receiveData+2)& (0+255),c
  1910  001C' 0100               	movlb	0	; () banked
  1911  001E' 5100'              	movf	receiveData@u& (0+255),w,b
  1912  0020' 5C20'              	subwf	??_receiveData,w,c
  1913  0022' 0100               	movlb	0	; () banked
  1914  0024' 5100'              	movf	(receiveData@u+1)& (0+255),w,b
  1915  0026' 0A80               	xorlw	128
  1916  0028' 5800'              	subwfb	(??_receiveData+2)& (0+255),w,c
  1917  002A' B0D8               	btfsc	status,0,c
  1918  002C' D7EA               	goto	l3092
  1919                           
  1920                           ; BSR set to: 0
  1921                           ;FastTransfer.c: 109: }
  1922                           ;FastTransfer.c: 110: rx_len = 0;
  1923                           
  1924                           ; BSR set to: 0
  1925  002E' 0E00               	movlw	0
  1926  0030' 6E18'              	movwf	_rx_len,c
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;FastTransfer.c: 111: return 0;
  1930  0032' 0E00               	movlw	0
  1931  0034' 0012               	return	
  1932  0036'                    l3102:
  1933                           
  1934                           ;FastTransfer.c: 112: }
  1935                           ;FastTransfer.c: 114: }
  1936                           ;FastTransfer.c: 115: }
  1937                           ;FastTransfer.c: 116: }
  1938                           ;FastTransfer.c: 119: if (rx_len != 0) {
  1939  0036' 5018'              	movf	_rx_len,w,c
  1940  0038' B4D8               	btfsc	status,2,c
  1941  003A' D107               	goto	l3184
  1942                           
  1943                           ;FastTransfer.c: 122: if (rx_array_inx == 0) {
  1944  003C' 6617'              	tstfsz	_rx_array_inx,c
  1945  003E' D001               	goto	l3124
  1946  0040'                    l658:
  1947  0040' D7FF               	goto	l658
  1948  0042'                    l3124:
  1949                           
  1950                           ;FastTransfer.c: 135: }
  1951                           ;FastTransfer.c: 137: if (rx_len == (rx_array_inx - 1)) {
  1952  0042' 0EFF               	movlw	255
  1953  0044' 6E00'              	movwf	??_receiveData& (0+255),c
  1954  0046' 0EFF               	movlw	255
  1955  0048' 6E00'              	movwf	(??_receiveData+1)& (0+255),c
  1956  004A' 5017'              	movf	_rx_array_inx,w,c
  1957  004C' 6E00'              	movwf	(??_receiveData+2)& (0+255),c
  1958  004E' 6A00'              	clrf	(??_receiveData+3)& (0+255),c
  1959  0050' 5020'              	movf	??_receiveData,w,c
  1960  0052' 2622'              	addwf	??_receiveData+2,f,c
  1961  0054' 5021'              	movf	??_receiveData+1,w,c
  1962  0056' 2223'              	addwfc	??_receiveData+3,f,c
  1963  0058' 5018'              	movf	_rx_len,w,c
  1964  005A' 1822'              	xorwf	??_receiveData+2,w,c
  1965  005C' 1023'              	iorwf	??_receiveData+3,w,c
  1966  005E' A4D8               	btfss	status,2,c
  1967  0060' D0F4               	goto	l3184
  1968                           
  1969                           ;FastTransfer.c: 140: calc_CS = CRC8(rx_buffer, rx_len);
  1970  0062' 0102               	movlb	2	; () banked
  1971  0064' 0E00'              	movlw	high _rx_buffer
  1972  0066' 6E15'              	movwf	CRC8@data+1,c
  1973  0068' 0102               	movlb	2	; () banked
  1974  006A' 0E00'              	movlw	low _rx_buffer
  1975  006C' 6E14'              	movwf	CRC8@data,c
  1976  006E' C018' F016'        	movff	_rx_len,CRC8@len
  1977  0072' EC00' F000'        	call	_CRC8	;wreg free
  1978  0076' 6E0B'              	movwf	_calc_CS,c
  1979                           
  1980                           ;FastTransfer.c: 144: if (calc_CS == rx_buffer[rx_array_inx - 1]) {
  1981  0078' 0EFF               	movlw	255
  1982  007A' 6E00'              	movwf	??_receiveData& (0+255),c
  1983  007C' 0EFF               	movlw	255
  1984  007E' 6E00'              	movwf	(??_receiveData+1)& (0+255),c
  1985  0080' 5017'              	movf	_rx_array_inx,w,c
  1986  0082' 6E00'              	movwf	(??_receiveData+2)& (0+255),c
  1987  0084' 6A00'              	clrf	(??_receiveData+3)& (0+255),c
  1988  0086' 5020'              	movf	??_receiveData,w,c
  1989  0088' 2622'              	addwf	??_receiveData+2,f,c
  1990  008A' 5021'              	movf	??_receiveData+1,w,c
  1991  008C' 2223'              	addwfc	??_receiveData+3,f,c
  1992  008E' 0102               	movlb	2	; () banked
  1993  0090' 0E00'              	movlw	low _rx_buffer
  1994  0092' 2422'              	addwf	??_receiveData+2,w,c
  1995  0094' 6ED9               	movwf	fsr2l,c
  1996  0096' 0102               	movlb	2	; () banked
  1997  0098' 0E00'              	movlw	high _rx_buffer
  1998  009A' 2023'              	addwfc	??_receiveData+3,w,c
  1999  009C' 6EDA               	movwf	fsr2h,c
  2000  009E' 500B'              	movf	_calc_CS,w,c
  2001  00A0' 62DF               	cpfseq	indf2,c
  2002  00A2' D0A0               	goto	l3164
  2003                           
  2004                           ; BSR set to: 2
  2005                           ;FastTransfer.c: 147: int r;
  2006                           ;FastTransfer.c: 148: for (r = 0; r < rx_len; r = r + 3) {
  2007  00A4' 0E00               	movlw	0
  2008  00A6' 0100               	movlb	0	; () banked
  2009  00A8' 6F00'              	movwf	(receiveData@r+1)& (0+255),b
  2010  00AA' 0E00               	movlw	0
  2011  00AC' 0100               	movlb	0	; () banked
  2012  00AE' 6F00'              	movwf	receiveData@r& (0+255),b
  2013  00B0' D05A               	goto	l3142
  2014  00B2'                    l3132:
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;FastTransfer.c: 149: if (rx_buffer[r] < maxDataAddress) {
  2018  00B2' 0102               	movlb	2	; () banked
  2019  00B4' 0E00'              	movlw	low _rx_buffer
  2020  00B6' 0100               	movlb	0	; () banked
  2021  00B8' 2500'              	addwf	receiveData@r& (0+255),w,b
  2022  00BA' 6ED9               	movwf	fsr2l,c
  2023  00BC' 0102               	movlb	2	; () banked
  2024  00BE' 0E00'              	movlw	high _rx_buffer
  2025  00C0' 0100               	movlb	0	; () banked
  2026  00C2' 2100'              	addwfc	(receiveData@r+1)& (0+255),w,b
  2027  00C4' 6EDA               	movwf	fsr2h,c
  2028  00C6' 50DF               	movf	indf2,w,c
  2029  00C8' 6E00'              	movwf	??_receiveData& (0+255),c
  2030  00CA' 5013'              	movf	_maxDataAddress,w,c
  2031  00CC' 5C20'              	subwf	??_receiveData,w,c
  2032  00CE' B0D8               	btfsc	status,0,c
  2033  00D0' D03D               	goto	l3138
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;FastTransfer.c: 150: group.parts[0] = rx_buffer[r + 1];
  2037  00D2' 0E01               	movlw	1
  2038  00D4' 0100               	movlb	0	; () banked
  2039  00D6' 2500'              	addwf	receiveData@r& (0+255),w,b
  2040  00D8' 6E00'              	movwf	??_receiveData& (0+255),c
  2041  00DA' 0E00               	movlw	0
  2042  00DC' 0100               	movlb	0	; () banked
  2043  00DE' 2100'              	addwfc	(receiveData@r+1)& (0+255),w,b
  2044  00E0' 6E00'              	movwf	(??_receiveData+1)& (0+255),c
  2045  00E2' 0102               	movlb	2	; () banked
  2046  00E4' 0E00'              	movlw	low _rx_buffer
  2047  00E6' 2420'              	addwf	??_receiveData,w,c
  2048  00E8' 6ED9               	movwf	fsr2l,c
  2049  00EA' 0102               	movlb	2	; () banked
  2050  00EC' 0E00'              	movlw	high _rx_buffer
  2051  00EE' 2021'              	addwfc	??_receiveData+1,w,c
  2052  00F0' 6EDA               	movwf	fsr2h,c
  2053  00F2' 50DF               	movf	indf2,w,c
  2054  00F4' 6E1B'              	movwf	_group,c
  2055                           
  2056                           ;FastTransfer.c: 151: group.parts[1] = rx_buffer[r + 2];
  2057  00F6' 0E02               	movlw	2
  2058  00F8' 0100               	movlb	0	; () banked
  2059  00FA' 2500'              	addwf	receiveData@r& (0+255),w,b
  2060  00FC' 6E00'              	movwf	??_receiveData& (0+255),c
  2061  00FE' 0E00               	movlw	0
  2062  0100' 0100               	movlb	0	; () banked
  2063  0102' 2100'              	addwfc	(receiveData@r+1)& (0+255),w,b
  2064  0104' 6E00'              	movwf	(??_receiveData+1)& (0+255),c
  2065  0106' 0102               	movlb	2	; () banked
  2066  0108' 0E00'              	movlw	low _rx_buffer
  2067  010A' 2420'              	addwf	??_receiveData,w,c
  2068  010C' 6ED9               	movwf	fsr2l,c
  2069  010E' 0102               	movlb	2	; () banked
  2070  0110' 0E00'              	movlw	high _rx_buffer
  2071  0112' 2021'              	addwfc	??_receiveData+1,w,c
  2072  0114' 6EDA               	movwf	fsr2h,c
  2073  0116' 50DF               	movf	indf2,w,c
  2074  0118' 6E1C'              	movwf	_group+1,c
  2075                           
  2076                           ; BSR set to: 2
  2077                           ;FastTransfer.c: 152: receiveArrayAddress[(rx_buffer[r])] = group.integer;
  2078  011A' 0102               	movlb	2	; () banked
  2079  011C' 0E00'              	movlw	low _rx_buffer
  2080  011E' 0100               	movlb	0	; () banked
  2081  0120' 2500'              	addwf	receiveData@r& (0+255),w,b
  2082  0122' 6ED9               	movwf	fsr2l,c
  2083  0124' 0102               	movlb	2	; () banked
  2084  0126' 0E00'              	movlw	high _rx_buffer
  2085  0128' 0100               	movlb	0	; () banked
  2086  012A' 2100'              	addwfc	(receiveData@r+1)& (0+255),w,b
  2087  012C' 6EDA               	movwf	fsr2h,c
  2088  012E' 50DF               	movf	indf2,w,c
  2089  0130' 6E00'              	movwf	??_receiveData& (0+255),c
  2090  0132' 5020'              	movf	??_receiveData,w,c
  2091  0134' 0D02               	mullw	2
  2092  0136' 50F3               	movf	prodl,w,c
  2093  0138' 2406'              	addwf	_receiveArrayAddress,w,c
  2094  013A' 6ED9               	movwf	fsr2l,c
  2095  013C' 50F4               	movf	prodh,w,c
  2096  013E' 2007'              	addwfc	_receiveArrayAddress+1,w,c
  2097  0140' 6EDA               	movwf	fsr2h,c
  2098  0142' C01B' FFDE         	movff	_group,postinc2
  2099  0146' C01C' FFDD         	movff	_group+1,postdec2
  2100                           
  2101                           ;FastTransfer.c: 153: } else {
  2102  014A' D003               	goto	l3140
  2103  014C'                    l3138:
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;FastTransfer.c: 154: dataAdressErrorCounter++;
  2107  014C' 0100               	movlb	0	; () banked
  2108  014E' 4B00'              	infsnz	_dataAdressErrorCounter& (0+255),f,b
  2109  0150' 2B00'              	incf	(_dataAdressErrorCounter+1)& (0+255),f,b
  2110  0152'                    l3140:
  2111                           
  2112                           ; BSR set to: 0
  2113  0152' 0E03               	movlw	3
  2114  0154' 0100               	movlb	0	; () banked
  2115  0156' 2500'              	addwf	receiveData@r& (0+255),w,b
  2116  0158' 0100               	movlb	0	; () banked
  2117  015A' 6F00'              	movwf	receiveData@r& (0+255),b
  2118  015C' 0E00               	movlw	0
  2119  015E' 0100               	movlb	0	; () banked
  2120  0160' 2100'              	addwfc	(receiveData@r+1)& (0+255),w,b
  2121  0162' 0100               	movlb	0	; () banked
  2122  0164' 6F00'              	movwf	(receiveData@r+1)& (0+255),b
  2123  0166'                    l3142:
  2124                           
  2125                           ; BSR set to: 0
  2126  0166' 5018'              	movf	_rx_len,w,c
  2127  0168' 6E00'              	movwf	??_receiveData& (0+255),c
  2128  016A' 6A00'              	clrf	(??_receiveData+1)& (0+255),c
  2129  016C' 0100               	movlb	0	; () banked
  2130  016E' 5100'              	movf	(receiveData@r+1)& (0+255),w,b
  2131  0170' 0A80               	xorlw	128
  2132  0172' 6E00'              	movwf	(??_receiveData+2)& (0+255),c
  2133  0174' 5020'              	movf	??_receiveData,w,c
  2134  0176' 0100               	movlb	0	; () banked
  2135  0178' 5D00'              	subwf	receiveData@r& (0+255),w,b
  2136  017A' 5021'              	movf	??_receiveData+1,w,c
  2137  017C' 0A80               	xorlw	128
  2138  017E' 5800'              	subwfb	(??_receiveData+2)& (0+255),w,c
  2139  0180' A0D8               	btfss	status,0,c
  2140  0182' D797               	goto	l3132
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;FastTransfer.c: 155: }
  2144                           ;FastTransfer.c: 156: }
  2145                           ;FastTransfer.c: 159: if (AKNAKsend) {
  2146                           
  2147                           ; BSR set to: 0
  2148  0184' 500A'              	movf	_AKNAKsend,w,c
  2149  0186' B4D8               	btfsc	status,2,c
  2150  0188' D027               	goto	l3154
  2151                           
  2152                           ; BSR set to: 0
  2153                           ;FastTransfer.c: 160: unsigned char holder[3];
  2154                           ;FastTransfer.c: 161: holder[0] = 255;
  2155  018A' 0100               	movlb	0	; () banked
  2156  018C' 6900'              	setf	receiveData@holder& (0+255),b
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;FastTransfer.c: 162: holder[1] = 1;
  2160  018E' 0E01               	movlw	1
  2161  0190' 0100               	movlb	0	; () banked
  2162  0192' 6F00'              	movwf	(receiveData@holder+1)& (0+255),b
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;FastTransfer.c: 163: holder[2] = rx_buffer[rx_array_inx - 1];
  2166  0194' 0EFF               	movlw	255
  2167  0196' 6E00'              	movwf	??_receiveData& (0+255),c
  2168  0198' 0EFF               	movlw	255
  2169  019A' 6E00'              	movwf	(??_receiveData+1)& (0+255),c
  2170  019C' 5017'              	movf	_rx_array_inx,w,c
  2171  019E' 6E00'              	movwf	(??_receiveData+2)& (0+255),c
  2172  01A0' 6A00'              	clrf	(??_receiveData+3)& (0+255),c
  2173  01A2' 5020'              	movf	??_receiveData,w,c
  2174  01A4' 2622'              	addwf	??_receiveData+2,f,c
  2175  01A6' 5021'              	movf	??_receiveData+1,w,c
  2176  01A8' 2223'              	addwfc	??_receiveData+3,f,c
  2177  01AA' 0102               	movlb	2	; () banked
  2178  01AC' 0E00'              	movlw	low _rx_buffer
  2179  01AE' 2422'              	addwf	??_receiveData+2,w,c
  2180  01B0' 6ED9               	movwf	fsr2l,c
  2181  01B2' 0102               	movlb	2	; () banked
  2182  01B4' 0E00'              	movlw	high _rx_buffer
  2183  01B6' 2023'              	addwfc	??_receiveData+3,w,c
  2184  01B8' 6EDA               	movwf	fsr2h,c
  2185  01BA' 50DF               	movf	indf2,w,c
  2186  01BC' 0100               	movlb	0	; () banked
  2187  01BE' 6F00'              	movwf	(receiveData@holder+2)& (0+255),b
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;FastTransfer.c: 173: serial_write(crcHolder);
  2191  01C0' 0100               	movlb	0	; () banked
  2192  01C2' 0E00'              	movlw	high receiveData@holder
  2193  01C4' 6E15'              	movwf	CRC8@data+1,c
  2194  01C6' 0100               	movlb	0	; () banked
  2195  01C8' 0E00'              	movlw	low receiveData@holder
  2196  01CA' 6E14'              	movwf	CRC8@data,c
  2197  01CC' 0E03               	movlw	3
  2198  01CE' 6E16'              	movwf	CRC8@len,c
  2199  01D0' EC00' F000'        	call	_CRC8	;wreg free
  2200  01D4' 0100               	movlb	0	; () banked
  2201  01D6' 6F00'              	movwf	receiveData@crcHolder& (0+255),b
  2202  01D8'                    l3154:
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;FastTransfer.c: 174: }
  2206                           ;FastTransfer.c: 178: rx_len = 0;
  2207  01D8' 0E00               	movlw	0
  2208  01DA' 6E18'              	movwf	_rx_len,c
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;FastTransfer.c: 179: rx_array_inx = 0;
  2212  01DC' 0E00               	movlw	0
  2213  01DE' 6E17'              	movwf	_rx_array_inx,c
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;FastTransfer.c: 180: return 1;
  2217  01E0' 0E01               	movlw	1
  2218  01E2' 0012               	return	
  2219  01E4'                    l3164:
  2220                           
  2221                           ;FastTransfer.c: 182: crcErrorCounter++;
  2222  01E4' 0100               	movlb	0	; () banked
  2223  01E6' 4B00'              	infsnz	_crcErrorCounter& (0+255),f,b
  2224  01E8' 2B00'              	incf	(_crcErrorCounter+1)& (0+255),f,b
  2225                           
  2226                           ; BSR set to: 0
  2227                           ;FastTransfer.c: 184: if (AKNAKsend) {
  2228  01EA' 500A'              	movf	_AKNAKsend,w,c
  2229  01EC' B4D8               	btfsc	status,2,c
  2230  01EE' D027               	goto	l3176
  2231                           
  2232                           ; BSR set to: 0
  2233                           ;FastTransfer.c: 185: unsigned char holder[3];
  2234                           ;FastTransfer.c: 186: holder[0] = 255;
  2235  01F0' 0100               	movlb	0	; () banked
  2236  01F2' 6900'              	setf	receiveData@holder_1776& (0+255),b
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;FastTransfer.c: 187: holder[1] = 2;
  2240  01F4' 0E02               	movlw	2
  2241  01F6' 0100               	movlb	0	; () banked
  2242  01F8' 6F00'              	movwf	(receiveData@holder_1776+1)& (0+255),b
  2243                           
  2244                           ; BSR set to: 0
  2245                           ;FastTransfer.c: 188: holder[2] = rx_buffer[rx_array_inx - 1];
  2246  01FA' 0EFF               	movlw	255
  2247  01FC' 6E00'              	movwf	??_receiveData& (0+255),c
  2248  01FE' 0EFF               	movlw	255
  2249  0200' 6E00'              	movwf	(??_receiveData+1)& (0+255),c
  2250  0202' 5017'              	movf	_rx_array_inx,w,c
  2251  0204' 6E00'              	movwf	(??_receiveData+2)& (0+255),c
  2252  0206' 6A00'              	clrf	(??_receiveData+3)& (0+255),c
  2253  0208' 5020'              	movf	??_receiveData,w,c
  2254  020A' 2622'              	addwf	??_receiveData+2,f,c
  2255  020C' 5021'              	movf	??_receiveData+1,w,c
  2256  020E' 2223'              	addwfc	??_receiveData+3,f,c
  2257  0210' 0102               	movlb	2	; () banked
  2258  0212' 0E00'              	movlw	low _rx_buffer
  2259  0214' 2422'              	addwf	??_receiveData+2,w,c
  2260  0216' 6ED9               	movwf	fsr2l,c
  2261  0218' 0102               	movlb	2	; () banked
  2262  021A' 0E00'              	movlw	high _rx_buffer
  2263  021C' 2023'              	addwfc	??_receiveData+3,w,c
  2264  021E' 6EDA               	movwf	fsr2h,c
  2265  0220' 50DF               	movf	indf2,w,c
  2266  0222' 0100               	movlb	0	; () banked
  2267  0224' 6F00'              	movwf	(receiveData@holder_1776+2)& (0+255),b
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;FastTransfer.c: 198: serial_write(crcHolder);
  2271  0226' 0100               	movlb	0	; () banked
  2272  0228' 0E00'              	movlw	high receiveData@holder_1776
  2273  022A' 6E15'              	movwf	CRC8@data+1,c
  2274  022C' 0100               	movlb	0	; () banked
  2275  022E' 0E00'              	movlw	low receiveData@holder_1776
  2276  0230' 6E14'              	movwf	CRC8@data,c
  2277  0232' 0E03               	movlw	3
  2278  0234' 6E16'              	movwf	CRC8@len,c
  2279  0236' EC00' F000'        	call	_CRC8	;wreg free
  2280  023A' 0100               	movlb	0	; () banked
  2281  023C' 6F00'              	movwf	receiveData@crcHolder_1777& (0+255),b
  2282  023E'                    l3176:
  2283                           
  2284                           ; BSR set to: 0
  2285                           ;FastTransfer.c: 199: }
  2286                           ;FastTransfer.c: 202: rx_len = 0;
  2287  023E' 0E00               	movlw	0
  2288  0240' 6E18'              	movwf	_rx_len,c
  2289                           
  2290                           ; BSR set to: 0
  2291                           ;FastTransfer.c: 203: rx_array_inx = 0;
  2292  0242' 0E00               	movlw	0
  2293  0244' 6E17'              	movwf	_rx_array_inx,c
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;FastTransfer.c: 204: return 0;
  2297  0246' 0E00               	movlw	0
  2298  0248' 0012               	return	
  2299  024A'                    l3184:
  2300                           
  2301                           ;FastTransfer.c: 205: }
  2302                           ;FastTransfer.c: 206: }
  2303                           ;FastTransfer.c: 207: }
  2304                           ;FastTransfer.c: 210: return 0;
  2305  024A' 0E00               	movlw	0
  2306  024C' 0012               	return	
  2307  024E'                    __end_of_receiveData:
  2308                           	opt stack 0
  2309                           tblptru	equ	0xFF8
  2310                           prodh	equ	0xFF4
  2311                           prodl	equ	0xFF3
  2312                           intcon	equ	0xFF2
  2313                           postinc0	equ	0xFEE
  2314                           wreg	equ	0xFE8
  2315                           indf2	equ	0xFDF
  2316                           postinc2	equ	0xFDE
  2317                           postdec2	equ	0xFDD
  2318                           fsr2h	equ	0xFDA
  2319                           fsr2l	equ	0xFD9
  2320                           status	equ	0xFD8
  2321                           
  2322 ;; *************** function _CRCcheck *****************
  2323 ;; Defined at:
  2324 ;;		line 373 in file "FastTransfer.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;		None
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;  rt              2    5[BANK0 ] int 
  2329 ;;  arrayHolder     3    2[BANK0 ] unsigned char [3]
  2330 ;;  calculatedCR    1    1[BANK0 ] unsigned char 
  2331 ;;  SentCRC         1    0[BANK0 ] unsigned char 
  2332 ;; Return value:  Size  Location     Type
  2333 ;;		None               void
  2334 ;; Registers used:
  2335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2341 ;;      Params:         0       0       0       0       0       0       0
  2342 ;;      Locals:         0       7       0       0       0       0       0
  2343 ;;      Temps:          0       0       0       0       0       0       0
  2344 ;;      Totals:         0       7       0       0       0       0       0
  2345 ;;Total ram usage:        7 bytes
  2346 ;; Hardware stack levels used:    1
  2347 ;; Hardware stack levels required when called:    4
  2348 ;; This function calls:
  2349 ;;		_CRC8
  2350 ;;		_crcBufS_get
  2351 ;;		_crcBufS_status_put
  2352 ;; This function is called by:
  2353 ;;		_receiveData
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text13
  2358  0000'                    __ptext13:
  2359                           	opt stack 0
  2360  0000'                    _CRCcheck:
  2361                           	opt stack 24
  2362  0000'                    l735:
  2363  0000' D7FF               	goto	l735
  2364  0002'                    l3054:
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;FastTransfer.c: 389: if (returnAddress == crcBufS_get(&crc_buffer, rt, 0)) {
  2368  0002' 0100               	movlb	0	; () banked
  2369  0004' 0E00'              	movlw	high _crc_buffer
  2370  0006' 6E15'              	movwf	crcBufS_get@_this+1,c
  2371  0008' 0100               	movlb	0	; () banked
  2372  000A' 0E00'              	movlw	low _crc_buffer
  2373  000C' 6E14'              	movwf	crcBufS_get@_this,c
  2374  000E' C005' F016'        	movff	CRCcheck@rt,crcBufS_get@time
  2375  0012' 0E00               	movlw	0
  2376  0014' 6E17'              	movwf	crcBufS_get@space,c
  2377  0016' EC00' F000'        	call	_crcBufS_get	;wreg free
  2378  001A' 1815'              	xorwf	_returnAddress,w,c
  2379  001C' A4D8               	btfss	status,2,c
  2380  001E' D033               	goto	l3068
  2381                           
  2382                           ;FastTransfer.c: 390: if (arrayHolder[2] == crcBufS_get(&crc_buffer, rt, 1)) {
  2383  0020' 0100               	movlb	0	; () banked
  2384  0022' 0E00'              	movlw	high _crc_buffer
  2385  0024' 6E15'              	movwf	crcBufS_get@_this+1,c
  2386  0026' 0100               	movlb	0	; () banked
  2387  0028' 0E00'              	movlw	low _crc_buffer
  2388  002A' 6E14'              	movwf	crcBufS_get@_this,c
  2389  002C' C005' F016'        	movff	CRCcheck@rt,crcBufS_get@time
  2390  0030' 0E01               	movlw	1
  2391  0032' 6E17'              	movwf	crcBufS_get@space,c
  2392  0034' EC00' F000'        	call	_crcBufS_get	;wreg free
  2393  0038' 0100               	movlb	0	; () banked
  2394  003A' 1900'              	xorwf	(CRCcheck@arrayHolder+2)& (0+255),w,b
  2395  003C' A4D8               	btfss	status,2,c
  2396  003E' D023               	goto	l3068
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;FastTransfer.c: 391: if (arrayHolder[1] == 1) {
  2400  0040' 0100               	movlb	0	; () banked
  2401  0042' 0500'              	decf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  2402  0044' A4D8               	btfss	status,2,c
  2403  0046' D00D               	goto	l3064
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;FastTransfer.c: 392: crcBufS_status_put(&crc_buffer, rt, 1);
  2407  0048' 0100               	movlb	0	; () banked
  2408  004A' 0E00'              	movlw	high _crc_buffer
  2409  004C' 6E15'              	movwf	crcBufS_status_put@_this+1,c
  2410  004E' 0100               	movlb	0	; () banked
  2411  0050' 0E00'              	movlw	low _crc_buffer
  2412  0052' 6E14'              	movwf	crcBufS_status_put@_this,c
  2413  0054' C005' F016'        	movff	CRCcheck@rt,crcBufS_status_put@time
  2414  0058' 0E01               	movlw	1
  2415  005A' 6E17'              	movwf	crcBufS_status_put@status,c
  2416  005C' EC00' F000'        	call	_crcBufS_status_put	;wreg free
  2417                           
  2418                           ;FastTransfer.c: 393: break;
  2419  0060' 0012               	return	
  2420  0062'                    l3064:
  2421  0062' 0100               	movlb	0	; () banked
  2422  0064' 5100'              	movf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  2423  0066' 0A02               	xorlw	2
  2424  0068' A4D8               	btfss	status,2,c
  2425  006A' D00D               	goto	l3068
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;FastTransfer.c: 395: crcBufS_status_put(&crc_buffer, rt, 2);
  2429  006C' 0100               	movlb	0	; () banked
  2430  006E' 0E00'              	movlw	high _crc_buffer
  2431  0070' 6E15'              	movwf	crcBufS_status_put@_this+1,c
  2432  0072' 0100               	movlb	0	; () banked
  2433  0074' 0E00'              	movlw	low _crc_buffer
  2434  0076' 6E14'              	movwf	crcBufS_status_put@_this,c
  2435  0078' C005' F016'        	movff	CRCcheck@rt,crcBufS_status_put@time
  2436  007C' 0E02               	movlw	2
  2437  007E' 6E17'              	movwf	crcBufS_status_put@status,c
  2438  0080' EC00' F000'        	call	_crcBufS_status_put	;wreg free
  2439                           
  2440                           ;FastTransfer.c: 396: break;
  2441  0084' 0012               	return	
  2442  0086'                    l3068:
  2443  0086' 0100               	movlb	0	; () banked
  2444  0088' 4B00'              	infsnz	CRCcheck@rt& (0+255),f,b
  2445  008A' 2B00'              	incf	(CRCcheck@rt+1)& (0+255),f,b
  2446                           
  2447                           ; BSR set to: 0
  2448  008C' 0100               	movlb	0	; () banked
  2449  008E' 5100'              	movf	(CRCcheck@rt+1)& (0+255),w,b
  2450  0090' 0A80               	xorlw	128
  2451  0092' 0F80               	addlw	-128
  2452  0094' 0E05               	movlw	5
  2453  0096' B4D8               	btfsc	status,2,c
  2454  0098' 5D00'              	subwf	CRCcheck@rt& (0+255),w,b
  2455  009A' B0D8               	btfsc	status,0,c
  2456                           
  2457                           ; BSR set to: 0
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;FastTransfer.c: 402: crcErrorCounter++;
  2461                           
  2462                           ; BSR set to: 0
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;FastTransfer.c: 397: }
  2466                           ;FastTransfer.c: 398: }
  2467                           ;FastTransfer.c: 399: }
  2468                           ;FastTransfer.c: 400: }
  2469                           ;FastTransfer.c: 401: } else {
  2470  009C' 0012               	return	
  2471  009E' D7B1               	goto	l3054
  2472  00A0'                    __end_of_CRCcheck:
  2473                           	opt stack 0
  2474                           tblptru	equ	0xFF8
  2475                           prodh	equ	0xFF4
  2476                           prodl	equ	0xFF3
  2477                           intcon	equ	0xFF2
  2478                           postinc0	equ	0xFEE
  2479                           wreg	equ	0xFE8
  2480                           indf2	equ	0xFDF
  2481                           postinc2	equ	0xFDE
  2482                           postdec2	equ	0xFDD
  2483                           fsr2h	equ	0xFDA
  2484                           fsr2l	equ	0xFD9
  2485                           status	equ	0xFD8
  2486                           
  2487 ;; *************** function _crcBufS_status_put *****************
  2488 ;; Defined at:
  2489 ;;		line 336 in file "FastTransfer.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;  _this           2   20[COMRAM] PTR struct crcBufS
  2492 ;;		 -> crc_buffer(17), 
  2493 ;;  time            1   22[COMRAM] unsigned char 
  2494 ;;  status          1   23[COMRAM] unsigned char 
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;  wantedTime      2   28[COMRAM] int 
  2497 ;; Return value:  Size  Location     Type
  2498 ;;		None               void
  2499 ;; Registers used:
  2500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2506 ;;      Params:         4       0       0       0       0       0       0
  2507 ;;      Locals:         2       0       0       0       0       0       0
  2508 ;;      Temps:          4       0       0       0       0       0       0
  2509 ;;      Totals:        10       0       0       0       0       0       0
  2510 ;;Total ram usage:       10 bytes
  2511 ;; Hardware stack levels used:    1
  2512 ;; Hardware stack levels required when called:    3
  2513 ;; This function calls:
  2514 ;;		Nothing
  2515 ;; This function is called by:
  2516 ;;		_CRCcheck
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           	psect	text14
  2521  0000'                    __ptext14:
  2522                           	opt stack 0
  2523  0000'                    _crcBufS_status_put:
  2524                           	opt stack 24
  2525                           
  2526                           ;FastTransfer.c: 337: if (time >= 5) {
  2527                           
  2528                           ;incstack = 0
  2529  0000' 0E04               	movlw	4
  2530  0002' 6416'              	cpfsgt	crcBufS_status_put@time,c
  2531  0004' D002               	goto	l3020
  2532                           
  2533                           ;FastTransfer.c: 338: time = 5 - 1;
  2534  0006' 0E04               	movlw	4
  2535  0008' 6E16'              	movwf	crcBufS_status_put@time,c
  2536  000A'                    l3020:
  2537                           
  2538                           ;FastTransfer.c: 339: }
  2539                           ;FastTransfer.c: 340: time = time + 1;
  2540  000A' 2816'              	incf	crcBufS_status_put@time,w,c
  2541  000C' 6E16'              	movwf	crcBufS_status_put@time,c
  2542                           
  2543                           ;FastTransfer.c: 341: int wantedTime = time * 3;
  2544  000E' 5016'              	movf	crcBufS_status_put@time,w,c
  2545  0010' 0D03               	mullw	3
  2546  0012' CFF3 F01C'         	movff	prodl,crcBufS_status_put@wantedTime
  2547  0016' CFF4 F01D'         	movff	prodh,crcBufS_status_put@wantedTime+1
  2548                           
  2549                           ;FastTransfer.c: 342: if (wantedTime > _this->head) {
  2550  001A' EE20 F00F          	lfsr	2,15
  2551  001E' 5014'              	movf	crcBufS_status_put@_this,w,c
  2552  0020' 26D9               	addwf	fsr2l,f,c
  2553  0022' 5015'              	movf	crcBufS_status_put@_this+1,w,c
  2554  0024' 22DA               	addwfc	fsr2h,f,c
  2555  0026' CFDE F018'         	movff	postinc2,??_crcBufS_status_put
  2556  002A' CFDD F019'         	movff	postdec2,??_crcBufS_status_put+1
  2557  002E' 5019'              	movf	??_crcBufS_status_put+1,w,c
  2558  0030' 0A80               	xorlw	128
  2559  0032' 6E00'              	movwf	(??_crcBufS_status_put+2)& (0+255),c
  2560  0034' 501C'              	movf	crcBufS_status_put@wantedTime,w,c
  2561  0036' 5C18'              	subwf	??_crcBufS_status_put,w,c
  2562  0038' 501D'              	movf	crcBufS_status_put@wantedTime+1,w,c
  2563  003A' 0A80               	xorlw	128
  2564  003C' 5800'              	subwfb	(??_crcBufS_status_put+2)& (0+255),w,c
  2565  003E' B0D8               	btfsc	status,0,c
  2566  0040' D02B               	goto	l3028
  2567                           
  2568                           ;FastTransfer.c: 343: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  2569  0042' EE20 F00F          	lfsr	2,15
  2570  0046' 5014'              	movf	crcBufS_status_put@_this,w,c
  2571  0048' 26D9               	addwf	fsr2l,f,c
  2572  004A' 5015'              	movf	crcBufS_status_put@_this+1,w,c
  2573  004C' 22DA               	addwfc	fsr2h,f,c
  2574  004E' CFDE F018'         	movff	postinc2,??_crcBufS_status_put
  2575  0052' CFDD F019'         	movff	postdec2,??_crcBufS_status_put+1
  2576  0056' 1E18'              	comf	??_crcBufS_status_put,f,c
  2577  0058' 1E19'              	comf	??_crcBufS_status_put+1,f,c
  2578  005A' 4A18'              	infsnz	??_crcBufS_status_put,f,c
  2579  005C' 2A19'              	incf	??_crcBufS_status_put+1,f,c
  2580  005E' 501C'              	movf	crcBufS_status_put@wantedTime,w,c
  2581  0060' 2618'              	addwf	??_crcBufS_status_put,f,c
  2582  0062' 501D'              	movf	crcBufS_status_put@wantedTime+1,w,c
  2583  0064' 2219'              	addwfc	??_crcBufS_status_put+1,f,c
  2584  0066' 1E18'              	comf	??_crcBufS_status_put,f,c
  2585  0068' 1E19'              	comf	??_crcBufS_status_put+1,f,c
  2586  006A' 4A18'              	infsnz	??_crcBufS_status_put,f,c
  2587  006C' 2A19'              	incf	??_crcBufS_status_put+1,f,c
  2588  006E' 0E0F               	movlw	15
  2589  0070' 2418'              	addwf	??_crcBufS_status_put,w,c
  2590  0072' 6E1C'              	movwf	crcBufS_status_put@wantedTime,c
  2591  0074' 0E00               	movlw	0
  2592  0076' 2019'              	addwfc	??_crcBufS_status_put+1,w,c
  2593  0078' 6E1D'              	movwf	crcBufS_status_put@wantedTime+1,c
  2594                           
  2595                           ;FastTransfer.c: 344: _this->buf[(wantedTime + 2)] = status;
  2596  007A' 0E02               	movlw	2
  2597  007C' 241C'              	addwf	crcBufS_status_put@wantedTime,w,c
  2598  007E' 6E00'              	movwf	??_crcBufS_status_put& (0+255),c
  2599  0080' 0E00               	movlw	0
  2600  0082' 201D'              	addwfc	crcBufS_status_put@wantedTime+1,w,c
  2601  0084' 6E00'              	movwf	(??_crcBufS_status_put+1)& (0+255),c
  2602  0086' 5018'              	movf	??_crcBufS_status_put,w,c
  2603  0088' 2414'              	addwf	crcBufS_status_put@_this,w,c
  2604  008A' 6ED9               	movwf	fsr2l,c
  2605  008C' 5019'              	movf	??_crcBufS_status_put+1,w,c
  2606  008E' 2015'              	addwfc	crcBufS_status_put@_this+1,w,c
  2607  0090' 6EDA               	movwf	fsr2h,c
  2608  0092' C017' FFDF         	movff	crcBufS_status_put@status,indf2
  2609                           
  2610                           ;FastTransfer.c: 345: } else {
  2611  0096' 0012               	return	
  2612  0098'                    l3028:
  2613                           
  2614                           ;FastTransfer.c: 346: _this->buf[(_this->head - wantedTime) + 2] = status;
  2615  0098' EE20 F00F          	lfsr	2,15
  2616  009C' 5014'              	movf	crcBufS_status_put@_this,w,c
  2617  009E' 26D9               	addwf	fsr2l,f,c
  2618  00A0' 5015'              	movf	crcBufS_status_put@_this+1,w,c
  2619  00A2' 22DA               	addwfc	fsr2h,f,c
  2620  00A4' CFDE F018'         	movff	postinc2,??_crcBufS_status_put
  2621  00A8' CFDD F019'         	movff	postdec2,??_crcBufS_status_put+1
  2622  00AC' C01C' F01A'        	movff	crcBufS_status_put@wantedTime,??_crcBufS_status_put+2
  2623  00B0' C01D' F01B'        	movff	crcBufS_status_put@wantedTime+1,??_crcBufS_status_put+3
  2624  00B4' 1E1A'              	comf	??_crcBufS_status_put+2,f,c
  2625  00B6' 1E1B'              	comf	??_crcBufS_status_put+3,f,c
  2626  00B8' 4A1A'              	infsnz	??_crcBufS_status_put+2,f,c
  2627  00BA' 2A1B'              	incf	??_crcBufS_status_put+3,f,c
  2628  00BC' 5018'              	movf	??_crcBufS_status_put,w,c
  2629  00BE' 261A'              	addwf	??_crcBufS_status_put+2,f,c
  2630  00C0' 5019'              	movf	??_crcBufS_status_put+1,w,c
  2631  00C2' 221B'              	addwfc	??_crcBufS_status_put+3,f,c
  2632  00C4' 0E02               	movlw	2
  2633  00C6' 261A'              	addwf	??_crcBufS_status_put+2,f,c
  2634  00C8' 0E00               	movlw	0
  2635  00CA' 221B'              	addwfc	??_crcBufS_status_put+3,f,c
  2636  00CC' 501A'              	movf	??_crcBufS_status_put+2,w,c
  2637  00CE' 2414'              	addwf	crcBufS_status_put@_this,w,c
  2638  00D0' 6ED9               	movwf	fsr2l,c
  2639  00D2' 501B'              	movf	??_crcBufS_status_put+3,w,c
  2640  00D4' 2015'              	addwfc	crcBufS_status_put@_this+1,w,c
  2641  00D6' 6EDA               	movwf	fsr2h,c
  2642  00D8' C017' FFDF         	movff	crcBufS_status_put@status,indf2
  2643  00DC' 0012               	return	
  2644  00DE'                    __end_of_crcBufS_status_put:
  2645                           	opt stack 0
  2646                           tblptru	equ	0xFF8
  2647                           prodh	equ	0xFF4
  2648                           prodl	equ	0xFF3
  2649                           intcon	equ	0xFF2
  2650                           postinc0	equ	0xFEE
  2651                           wreg	equ	0xFE8
  2652                           indf2	equ	0xFDF
  2653                           postinc2	equ	0xFDE
  2654                           postdec2	equ	0xFDD
  2655                           fsr2h	equ	0xFDA
  2656                           fsr2l	equ	0xFD9
  2657                           status	equ	0xFD8
  2658                           
  2659 ;; *************** function _crcBufS_get *****************
  2660 ;; Defined at:
  2661 ;;		line 353 in file "FastTransfer.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  _this           2   20[COMRAM] PTR struct crcBufS
  2664 ;;		 -> crc_buffer(17), 
  2665 ;;  time            1   22[COMRAM] unsigned char 
  2666 ;;  space           1   23[COMRAM] unsigned char 
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;  wantedTime      2   30[COMRAM] int 
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  1    wreg      unsigned char 
  2671 ;; Registers used:
  2672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2678 ;;      Params:         4       0       0       0       0       0       0
  2679 ;;      Locals:         2       0       0       0       0       0       0
  2680 ;;      Temps:          6       0       0       0       0       0       0
  2681 ;;      Totals:        12       0       0       0       0       0       0
  2682 ;;Total ram usage:       12 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; Hardware stack levels required when called:    3
  2685 ;; This function calls:
  2686 ;;		Nothing
  2687 ;; This function is called by:
  2688 ;;		_CRCcheck
  2689 ;;		_AKNAK
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text15
  2694  0000'                    __ptext15:
  2695                           	opt stack 0
  2696  0000'                    _crcBufS_get:
  2697                           	opt stack 24
  2698                           
  2699                           ;FastTransfer.c: 354: if (time >= 5) {
  2700                           
  2701                           ;incstack = 0
  2702  0000' 0E04               	movlw	4
  2703  0002' 6416'              	cpfsgt	crcBufS_get@time,c
  2704  0004' D002               	goto	l2996
  2705                           
  2706                           ;FastTransfer.c: 355: time = 5 - 1;
  2707  0006' 0E04               	movlw	4
  2708  0008' 6E16'              	movwf	crcBufS_get@time,c
  2709  000A'                    l2996:
  2710                           
  2711                           ;FastTransfer.c: 356: }
  2712                           ;FastTransfer.c: 357: if (space >= 3) {
  2713  000A' 0E02               	movlw	2
  2714  000C' 6417'              	cpfsgt	crcBufS_get@space,c
  2715  000E' D002               	goto	l3000
  2716                           
  2717                           ;FastTransfer.c: 358: space = 3 - 1;
  2718  0010' 0E02               	movlw	2
  2719  0012' 6E17'              	movwf	crcBufS_get@space,c
  2720  0014'                    l3000:
  2721                           
  2722                           ;FastTransfer.c: 359: }
  2723                           ;FastTransfer.c: 360: time = time + 1;
  2724  0014' 2816'              	incf	crcBufS_get@time,w,c
  2725  0016' 6E16'              	movwf	crcBufS_get@time,c
  2726                           
  2727                           ;FastTransfer.c: 361: int wantedTime = time * 3;
  2728  0018' 5016'              	movf	crcBufS_get@time,w,c
  2729  001A' 0D03               	mullw	3
  2730  001C' CFF3 F01E'         	movff	prodl,crcBufS_get@wantedTime
  2731  0020' CFF4 F01F'         	movff	prodh,crcBufS_get@wantedTime+1
  2732                           
  2733                           ;FastTransfer.c: 362: if (wantedTime > _this->head) {
  2734  0024' EE20 F00F          	lfsr	2,15
  2735  0028' 5014'              	movf	crcBufS_get@_this,w,c
  2736  002A' 26D9               	addwf	fsr2l,f,c
  2737  002C' 5015'              	movf	crcBufS_get@_this+1,w,c
  2738  002E' 22DA               	addwfc	fsr2h,f,c
  2739  0030' CFDE F018'         	movff	postinc2,??_crcBufS_get
  2740  0034' CFDD F019'         	movff	postdec2,??_crcBufS_get+1
  2741  0038' 5019'              	movf	??_crcBufS_get+1,w,c
  2742  003A' 0A80               	xorlw	128
  2743  003C' 6E00'              	movwf	(??_crcBufS_get+2)& (0+255),c
  2744  003E' 501E'              	movf	crcBufS_get@wantedTime,w,c
  2745  0040' 5C18'              	subwf	??_crcBufS_get,w,c
  2746  0042' 501F'              	movf	crcBufS_get@wantedTime+1,w,c
  2747  0044' 0A80               	xorlw	128
  2748  0046' 5800'              	subwfb	(??_crcBufS_get+2)& (0+255),w,c
  2749  0048' B0D8               	btfsc	status,0,c
  2750  004A' D02A               	goto	l3012
  2751                           
  2752                           ;FastTransfer.c: 363: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  2753  004C' EE20 F00F          	lfsr	2,15
  2754  0050' 5014'              	movf	crcBufS_get@_this,w,c
  2755  0052' 26D9               	addwf	fsr2l,f,c
  2756  0054' 5015'              	movf	crcBufS_get@_this+1,w,c
  2757  0056' 22DA               	addwfc	fsr2h,f,c
  2758  0058' CFDE F018'         	movff	postinc2,??_crcBufS_get
  2759  005C' CFDD F019'         	movff	postdec2,??_crcBufS_get+1
  2760  0060' 1E18'              	comf	??_crcBufS_get,f,c
  2761  0062' 1E19'              	comf	??_crcBufS_get+1,f,c
  2762  0064' 4A18'              	infsnz	??_crcBufS_get,f,c
  2763  0066' 2A19'              	incf	??_crcBufS_get+1,f,c
  2764  0068' 501E'              	movf	crcBufS_get@wantedTime,w,c
  2765  006A' 2618'              	addwf	??_crcBufS_get,f,c
  2766  006C' 501F'              	movf	crcBufS_get@wantedTime+1,w,c
  2767  006E' 2219'              	addwfc	??_crcBufS_get+1,f,c
  2768  0070' 1E18'              	comf	??_crcBufS_get,f,c
  2769  0072' 1E19'              	comf	??_crcBufS_get+1,f,c
  2770  0074' 4A18'              	infsnz	??_crcBufS_get,f,c
  2771  0076' 2A19'              	incf	??_crcBufS_get+1,f,c
  2772  0078' 0E0F               	movlw	15
  2773  007A' 2418'              	addwf	??_crcBufS_get,w,c
  2774  007C' 6E1E'              	movwf	crcBufS_get@wantedTime,c
  2775  007E' 0E00               	movlw	0
  2776  0080' 2019'              	addwfc	??_crcBufS_get+1,w,c
  2777  0082' 6E1F'              	movwf	crcBufS_get@wantedTime+1,c
  2778                           
  2779                           ;FastTransfer.c: 364: return (_this->buf[(wantedTime + space)]);
  2780  0084' 5017'              	movf	crcBufS_get@space,w,c
  2781  0086' 241E'              	addwf	crcBufS_get@wantedTime,w,c
  2782  0088' 6E00'              	movwf	??_crcBufS_get& (0+255),c
  2783  008A' 0E00               	movlw	0
  2784  008C' 201F'              	addwfc	crcBufS_get@wantedTime+1,w,c
  2785  008E' 6E00'              	movwf	(??_crcBufS_get+1)& (0+255),c
  2786  0090' 5018'              	movf	??_crcBufS_get,w,c
  2787  0092' 2414'              	addwf	crcBufS_get@_this,w,c
  2788  0094' 6ED9               	movwf	fsr2l,c
  2789  0096' 5019'              	movf	??_crcBufS_get+1,w,c
  2790  0098' 2015'              	addwfc	crcBufS_get@_this+1,w,c
  2791  009A' 6EDA               	movwf	fsr2h,c
  2792  009C' 50DF               	movf	indf2,w,c
  2793  009E' 0012               	return	
  2794  00A0'                    l3012:
  2795                           
  2796                           ;FastTransfer.c: 366: return (_this->buf[(_this->head - wantedTime) + space]);
  2797  00A0' EE20 F00F          	lfsr	2,15
  2798  00A4' 5014'              	movf	crcBufS_get@_this,w,c
  2799  00A6' 26D9               	addwf	fsr2l,f,c
  2800  00A8' 5015'              	movf	crcBufS_get@_this+1,w,c
  2801  00AA' 22DA               	addwfc	fsr2h,f,c
  2802  00AC' CFDE F018'         	movff	postinc2,??_crcBufS_get
  2803  00B0' CFDD F019'         	movff	postdec2,??_crcBufS_get+1
  2804  00B4' C01E' F01A'        	movff	crcBufS_get@wantedTime,??_crcBufS_get+2
  2805  00B8' C01F' F01B'        	movff	crcBufS_get@wantedTime+1,??_crcBufS_get+3
  2806  00BC' 1E1A'              	comf	??_crcBufS_get+2,f,c
  2807  00BE' 1E1B'              	comf	??_crcBufS_get+3,f,c
  2808  00C0' 4A1A'              	infsnz	??_crcBufS_get+2,f,c
  2809  00C2' 2A1B'              	incf	??_crcBufS_get+3,f,c
  2810  00C4' 5017'              	movf	crcBufS_get@space,w,c
  2811  00C6' 6E00'              	movwf	(??_crcBufS_get+4)& (0+255),c
  2812  00C8' 6A00'              	clrf	(??_crcBufS_get+5)& (0+255),c
  2813  00CA' 501A'              	movf	??_crcBufS_get+2,w,c
  2814  00CC' 261C'              	addwf	??_crcBufS_get+4,f,c
  2815  00CE' 501B'              	movf	??_crcBufS_get+3,w,c
  2816  00D0' 221D'              	addwfc	??_crcBufS_get+5,f,c
  2817  00D2' 5018'              	movf	??_crcBufS_get,w,c
  2818  00D4' 261C'              	addwf	??_crcBufS_get+4,f,c
  2819  00D6' 5019'              	movf	??_crcBufS_get+1,w,c
  2820  00D8' 221D'              	addwfc	??_crcBufS_get+5,f,c
  2821  00DA' 501C'              	movf	??_crcBufS_get+4,w,c
  2822  00DC' 2414'              	addwf	crcBufS_get@_this,w,c
  2823  00DE' 6ED9               	movwf	fsr2l,c
  2824  00E0' 501D'              	movf	??_crcBufS_get+5,w,c
  2825  00E2' 2015'              	addwfc	crcBufS_get@_this+1,w,c
  2826  00E4' 6EDA               	movwf	fsr2h,c
  2827  00E6' 50DF               	movf	indf2,w,c
  2828  00E8' 0012               	return	
  2829  00EA'                    __end_of_crcBufS_get:
  2830                           	opt stack 0
  2831                           tblptru	equ	0xFF8
  2832                           prodh	equ	0xFF4
  2833                           prodl	equ	0xFF3
  2834                           intcon	equ	0xFF2
  2835                           postinc0	equ	0xFEE
  2836                           wreg	equ	0xFE8
  2837                           indf2	equ	0xFDF
  2838                           postinc2	equ	0xFDE
  2839                           postdec2	equ	0xFDD
  2840                           fsr2h	equ	0xFDA
  2841                           fsr2l	equ	0xFD9
  2842                           status	equ	0xFD8
  2843                           
  2844 ;; *************** function _CRC8 *****************
  2845 ;; Defined at:
  2846 ;;		line 34 in file "FastTransfer.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;  data            2   20[COMRAM] PTR const unsigned char 
  2849 ;;		 -> CRCcheck@arrayHolder(3), receiveData@holder_1776(3), receiveData@holder(3), rx_buffer(200), 
  2850 ;;		 -> ring_buffer(206), NULL(0), 
  2851 ;;  len             1   22[COMRAM] unsigned char 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;  sum             1   23[COMRAM] unsigned char 
  2854 ;;  tempI           1   25[COMRAM] unsigned char 
  2855 ;;  extract         1   24[COMRAM] unsigned char 
  2856 ;;  crc             1   26[COMRAM] unsigned char 
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  1    wreg      unsigned char 
  2859 ;; Registers used:
  2860 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2866 ;;      Params:         3       0       0       0       0       0       0
  2867 ;;      Locals:         4       0       0       0       0       0       0
  2868 ;;      Temps:          0       0       0       0       0       0       0
  2869 ;;      Totals:         7       0       0       0       0       0       0
  2870 ;;Total ram usage:        7 bytes
  2871 ;; Hardware stack levels used:    1
  2872 ;; Hardware stack levels required when called:    3
  2873 ;; This function calls:
  2874 ;;		Nothing
  2875 ;; This function is called by:
  2876 ;;		_sendData
  2877 ;;		_receiveData
  2878 ;;		_CRCcheck
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text16
  2883  0000'                    __ptext16:
  2884                           	opt stack 0
  2885  0000'                    _CRC8:
  2886                           	opt stack 24
  2887                           
  2888                           ;FastTransfer.c: 35: unsigned char crc = 0x00;
  2889                           
  2890                           ;incstack = 0
  2891  0000' 0E00               	movlw	0
  2892  0002' 6E1A'              	movwf	CRC8@crc,c
  2893                           
  2894                           ;FastTransfer.c: 36: while (len--) {
  2895  0004' D01B               	goto	l2976
  2896  0006'                    l2960:
  2897                           
  2898                           ;FastTransfer.c: 37: unsigned char extract = *data++;
  2899  0006' C014' FFD9         	movff	CRC8@data,fsr2l
  2900  000A' C015' FFDA         	movff	CRC8@data+1,fsr2h
  2901  000E' 50DF               	movf	indf2,w,c
  2902  0010' 6E18'              	movwf	CRC8@extract,c
  2903  0012' 4A14'              	infsnz	CRC8@data,f,c
  2904  0014' 2A15'              	incf	CRC8@data+1,f,c
  2905                           
  2906                           ;FastTransfer.c: 38: unsigned char tempI;
  2907                           ;FastTransfer.c: 39: for (tempI = 8; tempI; tempI--) {
  2908  0016' 0E08               	movlw	8
  2909  0018' 6E19'              	movwf	CRC8@tempI,c
  2910  001A' D00E               	goto	l2974
  2911  001C'                    l2966:
  2912                           
  2913                           ;FastTransfer.c: 40: unsigned char sum = (crc ^ extract) & 0x01;
  2914  001C' 501A'              	movf	CRC8@crc,w,c
  2915  001E' 1818'              	xorwf	CRC8@extract,w,c
  2916  0020' 0B01               	andlw	1
  2917  0022' 6E17'              	movwf	CRC8@sum,c
  2918                           
  2919                           ;FastTransfer.c: 41: crc >>= 1;
  2920  0024' 90D8               	bcf	status,0,c
  2921  0026' 321A'              	rrcf	CRC8@crc,f,c
  2922                           
  2923                           ;FastTransfer.c: 42: if (sum) {
  2924  0028' 5017'              	movf	CRC8@sum,w,c
  2925  002A' B4D8               	btfsc	status,2,c
  2926  002C' D002               	goto	l632
  2927                           
  2928                           ;FastTransfer.c: 43: crc ^= 0x8C;
  2929  002E' 0E8C               	movlw	140
  2930  0030' 1A1A'              	xorwf	CRC8@crc,f,c
  2931  0032'                    l632:
  2932                           
  2933                           ;FastTransfer.c: 44: }
  2934                           ;FastTransfer.c: 45: extract >>= 1;
  2935  0032' 90D8               	bcf	status,0,c
  2936  0034' 3218'              	rrcf	CRC8@extract,f,c
  2937  0036' 0619'              	decf	CRC8@tempI,f,c
  2938  0038'                    l2974:
  2939  0038' 6619'              	tstfsz	CRC8@tempI,c
  2940  003A' D7F0               	goto	l2966
  2941  003C'                    l2976:
  2942  003C' 0616'              	decf	CRC8@len,f,c
  2943  003E' 2800'              	incf	CRC8@len& (0+255),w,c
  2944  0040' A4D8               	btfss	status,2,c
  2945  0042' D7E1               	goto	l2960
  2946                           
  2947                           ;FastTransfer.c: 46: }
  2948                           ;FastTransfer.c: 47: }
  2949                           ;FastTransfer.c: 48: return crc;
  2950  0044' 501A'              	movf	CRC8@crc,w,c
  2951  0046' 0012               	return	
  2952  0048'                    __end_of_CRC8:
  2953                           	opt stack 0
  2954                           tblptru	equ	0xFF8
  2955                           prodh	equ	0xFF4
  2956                           prodl	equ	0xFF3
  2957                           intcon	equ	0xFF2
  2958                           postinc0	equ	0xFEE
  2959                           wreg	equ	0xFE8
  2960                           indf2	equ	0xFDF
  2961                           postinc2	equ	0xFDE
  2962                           postdec2	equ	0xFDD
  2963                           fsr2h	equ	0xFDA
  2964                           fsr2l	equ	0xFD9
  2965                           status	equ	0xFD8
  2966                           
  2967 ;; *************** function _handleIndicators *****************
  2968 ;; Defined at:
  2969 ;;		line 31 in file "Communications.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;  receivedIndi    2   23[COMRAM] int 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  i               2   28[COMRAM] int 
  2974 ;; Return value:  Size  Location     Type
  2975 ;;		None               void
  2976 ;; Registers used:
  2977 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2983 ;;      Params:         2       0       0       0       0       0       0
  2984 ;;      Locals:         2       0       0       0       0       0       0
  2985 ;;      Temps:          3       0       0       0       0       0       0
  2986 ;;      Totals:         7       0       0       0       0       0       0
  2987 ;;Total ram usage:        7 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; Hardware stack levels required when called:    4
  2990 ;; This function calls:
  2991 ;;		_SetLEDOut
  2992 ;; This function is called by:
  2993 ;;		_updateComms
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           	psect	text17
  2998  0000'                    __ptext17:
  2999                           	opt stack 0
  3000  0000'                    _handleIndicators:
  3001                           	opt stack 25
  3002                           
  3003                           ;Communications.c: 32: static int oldIndicators = 0;
  3004                           ;Communications.c: 33: if (receivedIndicators != oldIndicators) {
  3005                           
  3006                           ;incstack = 0
  3007  0000' 0100               	movlb	0	; () banked
  3008  0002' 5100'              	movf	(handleIndicators@oldIndicators+1)& (0+255),w,b
  3009  0004' 1818'              	xorwf	handleIndicators@receivedIndicators+1,w,c
  3010  0006' E103               	bnz	u1305
  3011  0008' 0100               	movlb	0	; () banked
  3012  000A' 5100'              	movf	handleIndicators@oldIndicators& (0+255),w,b
  3013  000C' 1817'              	xorwf	handleIndicators@receivedIndicators,w,c
  3014  000E'                    u1305:
  3015  000E' B4D8               	btfsc	status,2,c
  3016  0010' 0012               	return	
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;Communications.c: 34: int i = 0;
  3020  0012' 0E00               	movlw	0
  3021  0014' 6E1D'              	movwf	handleIndicators@i+1,c
  3022  0016' 0E00               	movlw	0
  3023  0018' 6E1C'              	movwf	handleIndicators@i,c
  3024                           
  3025                           ;Communications.c: 35: for (i = 0; i < 6; i++) {
  3026  001A' 0E00               	movlw	0
  3027  001C' 6E1D'              	movwf	handleIndicators@i+1,c
  3028  001E' 0E00               	movlw	0
  3029  0020' 6E1C'              	movwf	handleIndicators@i,c
  3030  0022'                    
  3031                           ; BSR set to: 0
  3032  0022' 501D'              	movf	handleIndicators@i+1,w,c
  3033  0024' 0A80               	xorlw	128
  3034  0026' 0F80               	addlw	-128
  3035  0028' 0E06               	movlw	6
  3036  002A' B4D8               	btfsc	status,2,c
  3037  002C' 5C1C'              	subwf	handleIndicators@i,w,c
  3038  002E' B0D8               	btfsc	status,0,c
  3039  0030' D019               	goto	l553
  3040                           
  3041                           ;Communications.c: 36: SetLEDOut(i, ((receivedIndicators >> i)&0x01));
  3042                           
  3043                           ; BSR set to: 0
  3044                           
  3045                           ; BSR set to: 0
  3046  0032' C01C' F014'        	movff	handleIndicators@i,_SetLEDOut$0
  3047  0036' C01D' F015'        	movff	handleIndicators@i+1,_SetLEDOut$0+1
  3048  003A' C01C' F019'        	movff	handleIndicators@i,??_handleIndicators
  3049  003E' C017' F01A'        	movff	handleIndicators@receivedIndicators,??_handleIndicators+1
  3050  0042' C018' F01B'        	movff	handleIndicators@receivedIndicators+1,??_handleIndicators+2
  3051  0046' 2A19'              	incf	??_handleIndicators,f,c
  3052  0048' D003               	goto	u1324
  3053  004A'                    u1325:
  3054  004A' 341B'              	rlcf	??_handleIndicators+2,w,c
  3055  004C' 321B'              	rrcf	??_handleIndicators+2,f,c
  3056  004E' 321A'              	rrcf	??_handleIndicators+1,f,c
  3057  0050'                    u1324:
  3058  0050' 2E19'              	decfsz	??_handleIndicators,f,c
  3059  0052' D7FB               	goto	u1325
  3060  0054' 501A'              	movf	??_handleIndicators+1,w,c
  3061  0056' 0B01               	andlw	1
  3062  0058' 6E16'              	movwf	_SetLEDOut$1,c
  3063  005A' EC00' F000'        	call	_SetLEDOut	;wreg free
  3064  005E' 4A1C'              	infsnz	handleIndicators@i,f,c
  3065  0060' 2A1D'              	incf	handleIndicators@i+1,f,c
  3066  0062' D7DF               	goto	L2
  3067  0064'                    l553:
  3068                           
  3069                           ;Communications.c: 37: }
  3070                           ;Communications.c: 38: oldIndicators = receivedIndicators;
  3071  0064' C017' F04E'        	movff	handleIndicators@receivedIndicators,handleIndicators@oldIndicators
  3072  0068' C018' F04F'        	movff	handleIndicators@receivedIndicators+1,handleIndicators@oldIndicators+1
  3073  006C' 0012               	return	
  3074  006E'                    __end_of_handleIndicators:
  3075                           	opt stack 0
  3076                           tblptru	equ	0xFF8
  3077                           prodh	equ	0xFF4
  3078                           prodl	equ	0xFF3
  3079                           intcon	equ	0xFF2
  3080                           postinc0	equ	0xFEE
  3081                           wreg	equ	0xFE8
  3082                           indf2	equ	0xFDF
  3083                           postinc2	equ	0xFDE
  3084                           postdec2	equ	0xFDD
  3085                           fsr2h	equ	0xFDA
  3086                           fsr2l	equ	0xFD9
  3087                           status	equ	0xFD8
  3088                           
  3089 ;; *************** function _TBbarGraphs *****************
  3090 ;; Defined at:
  3091 ;;		line 43 in file "Communications.c"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;  t               2   20[COMRAM] int 
  3094 ;;  b               2   22[COMRAM] int 
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;		None
  3097 ;; Return value:  Size  Location     Type
  3098 ;;		None               void
  3099 ;; Registers used:
  3100 ;;		None
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3106 ;;      Params:         4       0       0       0       0       0       0
  3107 ;;      Locals:         0       0       0       0       0       0       0
  3108 ;;      Temps:          0       0       0       0       0       0       0
  3109 ;;      Totals:         4       0       0       0       0       0       0
  3110 ;;Total ram usage:        4 bytes
  3111 ;; Hardware stack levels used:    1
  3112 ;; Hardware stack levels required when called:    3
  3113 ;; This function calls:
  3114 ;;		Nothing
  3115 ;; This function is called by:
  3116 ;;		_updateComms
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           	psect	text18
  3121  0000'                    __ptext18:
  3122                           	opt stack 0
  3123  0000'                    _TBbarGraphs:
  3124                           	opt stack 26
  3125                           
  3126                           ;Communications.c: 44: throttle = t;
  3127                           
  3128                           ;incstack = 0
  3129  0000' C014' F04C'        	movff	TBbarGraphs@t,_throttle
  3130  0004' C015' F04D'        	movff	TBbarGraphs@t+1,_throttle+1
  3131                           
  3132                           ;Communications.c: 45: brake = b;
  3133  0008' C016' F03C'        	movff	TBbarGraphs@b,_brake
  3134  000C' C017' F03D'        	movff	TBbarGraphs@b+1,_brake+1
  3135  0010' 0012               	return	
  3136  0012'                    __end_of_TBbarGraphs:
  3137                           	opt stack 0
  3138                           tblptru	equ	0xFF8
  3139                           prodh	equ	0xFF4
  3140                           prodl	equ	0xFF3
  3141                           intcon	equ	0xFF2
  3142                           postinc0	equ	0xFEE
  3143                           wreg	equ	0xFE8
  3144                           indf2	equ	0xFDF
  3145                           postinc2	equ	0xFDE
  3146                           postdec2	equ	0xFDD
  3147                           fsr2h	equ	0xFDA
  3148                           fsr2l	equ	0xFD9
  3149                           status	equ	0xFD8
  3150                           
  3151 ;; *************** function _SYSTEM_Initialize *****************
  3152 ;; Defined at:
  3153 ;;		line 112 in file "mcc_generated_files/mcc.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;		None
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;		None
  3158 ;; Return value:  Size  Location     Type
  3159 ;;		None               void
  3160 ;; Registers used:
  3161 ;;		wreg, status,2, status,0, cstack
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3167 ;;      Params:         0       0       0       0       0       0       0
  3168 ;;      Locals:         0       0       0       0       0       0       0
  3169 ;;      Temps:          0       0       0       0       0       0       0
  3170 ;;      Totals:         0       0       0       0       0       0       0
  3171 ;;Total ram usage:        0 bytes
  3172 ;; Hardware stack levels used:    1
  3173 ;; Hardware stack levels required when called:    5
  3174 ;; This function calls:
  3175 ;;		_ECCP1_Initialize
  3176 ;;		_ECCP2_Initialize
  3177 ;;		_EUSART1_Initialize
  3178 ;;		_I2C1_Initialize
  3179 ;;		_INTERRUPT_Initialize
  3180 ;;		_OSCILLATOR_Initialize
  3181 ;;		_PIN_MANAGER_Initialize
  3182 ;;		_TMR1_Initialize
  3183 ;;		_TMR2_Initialize
  3184 ;; This function is called by:
  3185 ;;		_main
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text19
  3190  0000'                    __ptext19:
  3191                           	opt stack 0
  3192  0000'                    _SYSTEM_Initialize:
  3193                           	opt stack 25
  3194                           
  3195                           ;mcc.c: 113: OSCILLATOR_Initialize();
  3196                           
  3197                           ;incstack = 0
  3198  0000' EC00' F000'        	call	_OSCILLATOR_Initialize	;wreg free
  3199                           
  3200                           ;mcc.c: 114: PIN_MANAGER_Initialize();
  3201  0004' EC00' F000'        	call	_PIN_MANAGER_Initialize	;wreg free
  3202                           
  3203                           ;mcc.c: 115: INTERRUPT_Initialize();
  3204  0008' EC00' F000'        	call	_INTERRUPT_Initialize	;wreg free
  3205                           
  3206                           ;mcc.c: 116: EUSART1_Initialize();
  3207  000C' EC00' F000'        	call	_EUSART1_Initialize	;wreg free
  3208                           
  3209                           ;mcc.c: 117: TMR1_Initialize();
  3210  0010' EC00' F000'        	call	_TMR1_Initialize	;wreg free
  3211                           
  3212                           ;mcc.c: 118: ECCP1_Initialize();
  3213  0014' EC00' F000'        	call	_ECCP1_Initialize	;wreg free
  3214                           
  3215                           ;mcc.c: 119: ECCP2_Initialize();
  3216  0018' EC00' F000'        	call	_ECCP2_Initialize	;wreg free
  3217                           
  3218                           ;mcc.c: 120: I2C1_Initialize();
  3219  001C' EC00' F000'        	call	_I2C1_Initialize	;wreg free
  3220                           
  3221                           ;mcc.c: 121: TMR2_Initialize();
  3222  0020' EC00' F000'        	call	_TMR2_Initialize	;wreg free
  3223  0024' 0012               	return	
  3224  0026'                    __end_of_SYSTEM_Initialize:
  3225                           	opt stack 0
  3226                           tblptru	equ	0xFF8
  3227                           prodh	equ	0xFF4
  3228                           prodl	equ	0xFF3
  3229                           intcon	equ	0xFF2
  3230                           postinc0	equ	0xFEE
  3231                           wreg	equ	0xFE8
  3232                           indf2	equ	0xFDF
  3233                           postinc2	equ	0xFDE
  3234                           postdec2	equ	0xFDD
  3235                           fsr2h	equ	0xFDA
  3236                           fsr2l	equ	0xFD9
  3237                           status	equ	0xFD8
  3238                           
  3239 ;; *************** function _TMR2_Initialize *****************
  3240 ;; Defined at:
  3241 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;		None
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;		None
  3246 ;; Return value:  Size  Location     Type
  3247 ;;		None               void
  3248 ;; Registers used:
  3249 ;;		wreg, status,2, cstack
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3255 ;;      Params:         0       0       0       0       0       0       0
  3256 ;;      Locals:         0       0       0       0       0       0       0
  3257 ;;      Temps:          0       0       0       0       0       0       0
  3258 ;;      Totals:         0       0       0       0       0       0       0
  3259 ;;Total ram usage:        0 bytes
  3260 ;; Hardware stack levels used:    1
  3261 ;; Hardware stack levels required when called:    4
  3262 ;; This function calls:
  3263 ;;		_TMR2_StartTimer
  3264 ;; This function is called by:
  3265 ;;		_SYSTEM_Initialize
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           	psect	text20
  3270  0000'                    __ptext20:
  3271                           	opt stack 0
  3272  0000'                    _TMR2_Initialize:
  3273                           	opt stack 25
  3274                           
  3275                           ;tmr2.c: 62: T2CON = 0x7A;
  3276                           
  3277                           ;incstack = 0
  3278  0000' 0E7A               	movlw	122
  3279  0002' 6EBA               	movwf	4026,c	;volatile
  3280                           
  3281                           ;tmr2.c: 65: PR2 = 0x9B;
  3282  0004' 0E9B               	movlw	155
  3283  0006' 6EBB               	movwf	4027,c	;volatile
  3284                           
  3285                           ;tmr2.c: 68: TMR2 = 0x00;
  3286  0008' 0E00               	movlw	0
  3287  000A' 6EBC               	movwf	4028,c	;volatile
  3288                           
  3289                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
  3290  000C' 929E               	bcf	3998,1,c	;volatile
  3291                           
  3292                           ;tmr2.c: 74: PIE1bits.TMR2IE = 1;
  3293  000E' 829D               	bsf	3997,1,c	;volatile
  3294                           
  3295                           ;tmr2.c: 77: TMR2_StartTimer();
  3296  0010' EC00' F000'        	call	_TMR2_StartTimer	;wreg free
  3297  0014' 0012               	return	
  3298  0016'                    __end_of_TMR2_Initialize:
  3299                           	opt stack 0
  3300                           tblptru	equ	0xFF8
  3301                           prodh	equ	0xFF4
  3302                           prodl	equ	0xFF3
  3303                           intcon	equ	0xFF2
  3304                           postinc0	equ	0xFEE
  3305                           wreg	equ	0xFE8
  3306                           indf2	equ	0xFDF
  3307                           postinc2	equ	0xFDE
  3308                           postdec2	equ	0xFDD
  3309                           fsr2h	equ	0xFDA
  3310                           fsr2l	equ	0xFD9
  3311                           status	equ	0xFD8
  3312                           
  3313 ;; *************** function _TMR2_StartTimer *****************
  3314 ;; Defined at:
  3315 ;;		line 80 in file "mcc_generated_files/tmr2.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;		None
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;		None
  3320 ;; Return value:  Size  Location     Type
  3321 ;;		None               void
  3322 ;; Registers used:
  3323 ;;		None
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3329 ;;      Params:         0       0       0       0       0       0       0
  3330 ;;      Locals:         0       0       0       0       0       0       0
  3331 ;;      Temps:          0       0       0       0       0       0       0
  3332 ;;      Totals:         0       0       0       0       0       0       0
  3333 ;;Total ram usage:        0 bytes
  3334 ;; Hardware stack levels used:    1
  3335 ;; Hardware stack levels required when called:    3
  3336 ;; This function calls:
  3337 ;;		Nothing
  3338 ;; This function is called by:
  3339 ;;		_TMR2_Initialize
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           	psect	text21
  3344  0000'                    __ptext21:
  3345                           	opt stack 0
  3346  0000'                    _TMR2_StartTimer:
  3347                           	opt stack 25
  3348                           
  3349                           ;tmr2.c: 82: T2CONbits.TMR2ON = 1;
  3350                           
  3351                           ;incstack = 0
  3352  0000' 84BA               	bsf	4026,2,c	;volatile
  3353  0002' 0012               	return	
  3354  0004'                    __end_of_TMR2_StartTimer:
  3355                           	opt stack 0
  3356                           tblptru	equ	0xFF8
  3357                           prodh	equ	0xFF4
  3358                           prodl	equ	0xFF3
  3359                           intcon	equ	0xFF2
  3360                           postinc0	equ	0xFEE
  3361                           wreg	equ	0xFE8
  3362                           indf2	equ	0xFDF
  3363                           postinc2	equ	0xFDE
  3364                           postdec2	equ	0xFDD
  3365                           fsr2h	equ	0xFDA
  3366                           fsr2l	equ	0xFD9
  3367                           status	equ	0xFD8
  3368                           
  3369 ;; *************** function _TMR1_Initialize *****************
  3370 ;; Defined at:
  3371 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;		None
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;		None
  3376 ;; Return value:  Size  Location     Type
  3377 ;;		None               void
  3378 ;; Registers used:
  3379 ;;		wreg, status,2, cstack
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3385 ;;      Params:         0       0       0       0       0       0       0
  3386 ;;      Locals:         0       0       0       0       0       0       0
  3387 ;;      Temps:          0       0       0       0       0       0       0
  3388 ;;      Totals:         0       0       0       0       0       0       0
  3389 ;;Total ram usage:        0 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:    4
  3392 ;; This function calls:
  3393 ;;		_TMR1_StartTimer
  3394 ;; This function is called by:
  3395 ;;		_SYSTEM_Initialize
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text22
  3400  0000'                    __ptext22:
  3401                           	opt stack 0
  3402  0000'                    _TMR1_Initialize:
  3403                           	opt stack 25
  3404                           
  3405                           ;tmr1.c: 67: T1CON = 0x40;
  3406                           
  3407                           ;incstack = 0
  3408  0000' 0E40               	movlw	64
  3409  0002' 6ECD               	movwf	4045,c	;volatile
  3410                           
  3411                           ;tmr1.c: 70: T1GCON = 0x00;
  3412  0004' 0E00               	movlw	0
  3413  0006' 6ECC               	movwf	4044,c	;volatile
  3414                           
  3415                           ;tmr1.c: 73: TMR1H = 0xE0;
  3416  0008' 0EE0               	movlw	224
  3417  000A' 6ECF               	movwf	4047,c	;volatile
  3418                           
  3419                           ;tmr1.c: 76: TMR1L = 0xC0;
  3420  000C' 0EC0               	movlw	192
  3421  000E' 6ECE               	movwf	4046,c	;volatile
  3422                           
  3423                           ;tmr1.c: 79: timer1ReloadVal = TMR1;
  3424  0010' CFCE F007'         	movff	4046,_timer1ReloadVal	;volatile
  3425  0014' CFCF F008'         	movff	4047,_timer1ReloadVal+1	;volatile
  3426                           
  3427                           ;tmr1.c: 82: PIR1bits.TMR1IF = 0;
  3428  0018' 909E               	bcf	3998,0,c	;volatile
  3429                           
  3430                           ;tmr1.c: 85: TMR1_StartTimer();
  3431  001A' EC00' F000'        	call	_TMR1_StartTimer	;wreg free
  3432  001E' 0012               	return	
  3433  0020'                    __end_of_TMR1_Initialize:
  3434                           	opt stack 0
  3435                           tblptru	equ	0xFF8
  3436                           prodh	equ	0xFF4
  3437                           prodl	equ	0xFF3
  3438                           intcon	equ	0xFF2
  3439                           postinc0	equ	0xFEE
  3440                           wreg	equ	0xFE8
  3441                           indf2	equ	0xFDF
  3442                           postinc2	equ	0xFDE
  3443                           postdec2	equ	0xFDD
  3444                           fsr2h	equ	0xFDA
  3445                           fsr2l	equ	0xFD9
  3446                           status	equ	0xFD8
  3447                           
  3448 ;; *************** function _TMR1_StartTimer *****************
  3449 ;; Defined at:
  3450 ;;		line 88 in file "mcc_generated_files/tmr1.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;		None
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;		None
  3455 ;; Return value:  Size  Location     Type
  3456 ;;		None               void
  3457 ;; Registers used:
  3458 ;;		None
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3464 ;;      Params:         0       0       0       0       0       0       0
  3465 ;;      Locals:         0       0       0       0       0       0       0
  3466 ;;      Temps:          0       0       0       0       0       0       0
  3467 ;;      Totals:         0       0       0       0       0       0       0
  3468 ;;Total ram usage:        0 bytes
  3469 ;; Hardware stack levels used:    1
  3470 ;; Hardware stack levels required when called:    3
  3471 ;; This function calls:
  3472 ;;		Nothing
  3473 ;; This function is called by:
  3474 ;;		_TMR1_Initialize
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           	psect	text23
  3479  0000'                    __ptext23:
  3480                           	opt stack 0
  3481  0000'                    _TMR1_StartTimer:
  3482                           	opt stack 25
  3483                           
  3484                           ;tmr1.c: 90: T1CONbits.TMR1ON = 1;
  3485                           
  3486                           ;incstack = 0
  3487  0000' 80CD               	bsf	4045,0,c	;volatile
  3488  0002' 0012               	return	
  3489  0004'                    __end_of_TMR1_StartTimer:
  3490                           	opt stack 0
  3491                           tblptru	equ	0xFF8
  3492                           prodh	equ	0xFF4
  3493                           prodl	equ	0xFF3
  3494                           intcon	equ	0xFF2
  3495                           postinc0	equ	0xFEE
  3496                           wreg	equ	0xFE8
  3497                           indf2	equ	0xFDF
  3498                           postinc2	equ	0xFDE
  3499                           postdec2	equ	0xFDD
  3500                           fsr2h	equ	0xFDA
  3501                           fsr2l	equ	0xFD9
  3502                           status	equ	0xFD8
  3503                           
  3504 ;; *************** function _PIN_MANAGER_Initialize *****************
  3505 ;; Defined at:
  3506 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;		None
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;		None
  3511 ;; Return value:  Size  Location     Type
  3512 ;;		None               void
  3513 ;; Registers used:
  3514 ;;		wreg, status,2
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3520 ;;      Params:         0       0       0       0       0       0       0
  3521 ;;      Locals:         0       0       0       0       0       0       0
  3522 ;;      Temps:          0       0       0       0       0       0       0
  3523 ;;      Totals:         0       0       0       0       0       0       0
  3524 ;;Total ram usage:        0 bytes
  3525 ;; Hardware stack levels used:    1
  3526 ;; Hardware stack levels required when called:    3
  3527 ;; This function calls:
  3528 ;;		Nothing
  3529 ;; This function is called by:
  3530 ;;		_SYSTEM_Initialize
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           	psect	text24
  3535  0000'                    __ptext24:
  3536                           	opt stack 0
  3537  0000'                    _PIN_MANAGER_Initialize:
  3538                           	opt stack 26
  3539                           
  3540                           ;pin_manager.c: 51: LATA = 0x00;
  3541                           
  3542                           ;incstack = 0
  3543  0000' 0E00               	movlw	0
  3544  0002' 6E89               	movwf	3977,c	;volatile
  3545                           
  3546                           ;pin_manager.c: 52: TRISA = 0xFF;
  3547  0004' 6892               	setf	3986,c	;volatile
  3548                           
  3549                           ;pin_manager.c: 53: ANSELA = 0x2F;
  3550  0006' 0E2F               	movlw	47
  3551  0008' 010F               	movlb	15	; () banked
  3552  000A' 6F38               	movwf	56,b	;volatile
  3553                           
  3554                           ;pin_manager.c: 55: LATB = 0x00;
  3555  000C' 0E00               	movlw	0
  3556  000E' 6E8A               	movwf	3978,c	;volatile
  3557                           
  3558                           ; BSR set to: 15
  3559                           ;pin_manager.c: 56: TRISB = 0xFF;
  3560  0010' 6893               	setf	3987,c	;volatile
  3561                           
  3562                           ;pin_manager.c: 57: ANSELB = 0x3F;
  3563  0012' 0E3F               	movlw	63
  3564  0014' 010F               	movlb	15	; () banked
  3565  0016' 6F39               	movwf	57,b	;volatile
  3566                           
  3567                           ;pin_manager.c: 58: WPUB = 0x00;
  3568  0018' 0E00               	movlw	0
  3569  001A' 6E61               	movwf	3937,c	;volatile
  3570                           
  3571                           ;pin_manager.c: 60: LATC = 0x18;
  3572  001C' 0E18               	movlw	24
  3573  001E' 6E8B               	movwf	3979,c	;volatile
  3574                           
  3575                           ; BSR set to: 15
  3576                           ;pin_manager.c: 61: TRISC = 0xFF;
  3577  0020' 6894               	setf	3988,c	;volatile
  3578                           
  3579                           ;pin_manager.c: 62: ANSELC = 0x20;
  3580  0022' 0E20               	movlw	32
  3581  0024' 010F               	movlb	15	; () banked
  3582  0026' 6F3A               	movwf	58,b	;volatile
  3583                           
  3584                           ;pin_manager.c: 64: LATD = 0x00;
  3585  0028' 0E00               	movlw	0
  3586  002A' 6E8C               	movwf	3980,c	;volatile
  3587                           
  3588                           ; BSR set to: 15
  3589                           ;pin_manager.c: 65: TRISD = 0xFF;
  3590  002C' 6895               	setf	3989,c	;volatile
  3591                           
  3592                           ; BSR set to: 15
  3593                           ;pin_manager.c: 66: ANSELD = 0xFF;
  3594  002E' 010F               	movlb	15	; () banked
  3595  0030' 693B               	setf	59,b	;volatile
  3596                           
  3597                           ;pin_manager.c: 68: LATE = 0x00;
  3598  0032' 0E00               	movlw	0
  3599  0034' 6E8D               	movwf	3981,c	;volatile
  3600                           
  3601                           ;pin_manager.c: 69: TRISE = 0x07;
  3602  0036' 0E07               	movlw	7
  3603  0038' 6E96               	movwf	3990,c	;volatile
  3604                           
  3605                           ;pin_manager.c: 70: ANSELE = 0x07;
  3606  003A' 0E07               	movlw	7
  3607  003C' 010F               	movlb	15	; () banked
  3608  003E' 6F3C               	movwf	60,b	;volatile
  3609                           
  3610                           ; BSR set to: 15
  3611                           ;pin_manager.c: 72: INTCON2bits.nRBPU = 0x01;
  3612  0040' 8EF1               	bsf	intcon2,7,c	;volatile
  3613                           
  3614                           ; BSR set to: 15
  3615  0042' 0012               	return	
  3616  0044'                    __end_of_PIN_MANAGER_Initialize:
  3617                           	opt stack 0
  3618                           tblptru	equ	0xFF8
  3619                           prodh	equ	0xFF4
  3620                           prodl	equ	0xFF3
  3621                           intcon	equ	0xFF2
  3622                           intcon2	equ	0xFF1
  3623                           postinc0	equ	0xFEE
  3624                           wreg	equ	0xFE8
  3625                           indf2	equ	0xFDF
  3626                           postinc2	equ	0xFDE
  3627                           postdec2	equ	0xFDD
  3628                           fsr2h	equ	0xFDA
  3629                           fsr2l	equ	0xFD9
  3630                           status	equ	0xFD8
  3631                           
  3632 ;; *************** function _OSCILLATOR_Initialize *****************
  3633 ;; Defined at:
  3634 ;;		line 124 in file "mcc_generated_files/mcc.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;		None
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;		None
  3639 ;; Return value:  Size  Location     Type
  3640 ;;		None               void
  3641 ;; Registers used:
  3642 ;;		wreg, status,2
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3648 ;;      Params:         0       0       0       0       0       0       0
  3649 ;;      Locals:         0       0       0       0       0       0       0
  3650 ;;      Temps:          0       0       0       0       0       0       0
  3651 ;;      Totals:         0       0       0       0       0       0       0
  3652 ;;Total ram usage:        0 bytes
  3653 ;; Hardware stack levels used:    1
  3654 ;; Hardware stack levels required when called:    3
  3655 ;; This function calls:
  3656 ;;		Nothing
  3657 ;; This function is called by:
  3658 ;;		_SYSTEM_Initialize
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           	psect	text25
  3663  0000'                    __ptext25:
  3664                           	opt stack 0
  3665  0000'                    _OSCILLATOR_Initialize:
  3666                           	opt stack 26
  3667                           
  3668                           ;mcc.c: 126: OSCCON = 0x70;
  3669                           
  3670                           ; BSR set to: 15
  3671                           ;incstack = 0
  3672  0000' 0E70               	movlw	112
  3673  0002' 6ED3               	movwf	4051,c	;volatile
  3674                           
  3675                           ;mcc.c: 128: OSCCON2 = 0x04;
  3676  0004' 0E04               	movlw	4
  3677  0006' 6ED2               	movwf	4050,c	;volatile
  3678                           
  3679                           ;mcc.c: 130: OSCTUNE = 0x00;
  3680  0008' 0E00               	movlw	0
  3681  000A' 6E9B               	movwf	3995,c	;volatile
  3682  000C' 0012               	return	
  3683  000E'                    __end_of_OSCILLATOR_Initialize:
  3684                           	opt stack 0
  3685                           tblptru	equ	0xFF8
  3686                           prodh	equ	0xFF4
  3687                           prodl	equ	0xFF3
  3688                           intcon	equ	0xFF2
  3689                           intcon2	equ	0xFF1
  3690                           postinc0	equ	0xFEE
  3691                           wreg	equ	0xFE8
  3692                           indf2	equ	0xFDF
  3693                           postinc2	equ	0xFDE
  3694                           postdec2	equ	0xFDD
  3695                           fsr2h	equ	0xFDA
  3696                           fsr2l	equ	0xFD9
  3697                           status	equ	0xFD8
  3698                           
  3699 ;; *************** function _INTERRUPT_Initialize *****************
  3700 ;; Defined at:
  3701 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;		None
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;		None
  3706 ;; Return value:  Size  Location     Type
  3707 ;;		None               void
  3708 ;; Registers used:
  3709 ;;		None
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3715 ;;      Params:         0       0       0       0       0       0       0
  3716 ;;      Locals:         0       0       0       0       0       0       0
  3717 ;;      Temps:          0       0       0       0       0       0       0
  3718 ;;      Totals:         0       0       0       0       0       0       0
  3719 ;;Total ram usage:        0 bytes
  3720 ;; Hardware stack levels used:    1
  3721 ;; Hardware stack levels required when called:    3
  3722 ;; This function calls:
  3723 ;;		Nothing
  3724 ;; This function is called by:
  3725 ;;		_SYSTEM_Initialize
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	text26
  3730  0000'                    __ptext26:
  3731                           	opt stack 0
  3732  0000'                    _INTERRUPT_Initialize:
  3733                           	opt stack 26
  3734                           
  3735                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  3736                           
  3737                           ;incstack = 0
  3738  0000' 9ED0               	bcf	4048,7,c	;volatile
  3739                           
  3740                           ;interrupt_manager.c: 59: IPR1bits.SSP1IP = 0;
  3741  0002' 969F               	bcf	3999,3,c	;volatile
  3742                           
  3743                           ;interrupt_manager.c: 61: IPR2bits.BCL1IP = 0;
  3744  0004' 96A2               	bcf	4002,3,c	;volatile
  3745                           
  3746                           ;interrupt_manager.c: 63: IPR1bits.RC1IP = 0;
  3747  0006' 9A9F               	bcf	3999,5,c	;volatile
  3748                           
  3749                           ;interrupt_manager.c: 65: IPR1bits.TX1IP = 0;
  3750  0008' 989F               	bcf	3999,4,c	;volatile
  3751                           
  3752                           ;interrupt_manager.c: 67: IPR1bits.CCP1IP = 0;
  3753  000A' 949F               	bcf	3999,2,c	;volatile
  3754                           
  3755                           ;interrupt_manager.c: 69: IPR2bits.CCP2IP = 0;
  3756  000C' 90A2               	bcf	4002,0,c	;volatile
  3757                           
  3758                           ;interrupt_manager.c: 71: IPR1bits.TMR2IP = 0;
  3759  000E' 929F               	bcf	3999,1,c	;volatile
  3760  0010' 0012               	return	
  3761  0012'                    __end_of_INTERRUPT_Initialize:
  3762                           	opt stack 0
  3763                           tblptru	equ	0xFF8
  3764                           prodh	equ	0xFF4
  3765                           prodl	equ	0xFF3
  3766                           intcon	equ	0xFF2
  3767                           intcon2	equ	0xFF1
  3768                           postinc0	equ	0xFEE
  3769                           wreg	equ	0xFE8
  3770                           indf2	equ	0xFDF
  3771                           postinc2	equ	0xFDE
  3772                           postdec2	equ	0xFDD
  3773                           fsr2h	equ	0xFDA
  3774                           fsr2l	equ	0xFD9
  3775                           status	equ	0xFD8
  3776                           
  3777 ;; *************** function _I2C1_Initialize *****************
  3778 ;; Defined at:
  3779 ;;		line 194 in file "mcc_generated_files/i2c1.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;		None
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;		None
  3784 ;; Return value:  Size  Location     Type
  3785 ;;		None               void
  3786 ;; Registers used:
  3787 ;;		wreg, status,2, status,0
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3793 ;;      Params:         0       0       0       0       0       0       0
  3794 ;;      Locals:         0       0       0       0       0       0       0
  3795 ;;      Temps:          0       0       0       0       0       0       0
  3796 ;;      Totals:         0       0       0       0       0       0       0
  3797 ;;Total ram usage:        0 bytes
  3798 ;; Hardware stack levels used:    1
  3799 ;; Hardware stack levels required when called:    3
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_SYSTEM_Initialize
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           	psect	text27
  3808  0000'                    __ptext27:
  3809                           	opt stack 0
  3810  0000'                    _I2C1_Initialize:
  3811                           	opt stack 26
  3812                           
  3813                           ;i2c1.c: 195: i2c1_object.pTrHead = i2c1_tr_queue;
  3814                           
  3815                           ;incstack = 0
  3816  0000' 0100               	movlb	0	; () banked
  3817  0002' 0E00'              	movlw	high _i2c1_tr_queue
  3818  0004' 6E03'              	movwf	_i2c1_object+3,c
  3819  0006' 0100               	movlb	0	; () banked
  3820  0008' 0E00'              	movlw	low _i2c1_tr_queue
  3821  000A' 6E02'              	movwf	_i2c1_object+2,c
  3822                           
  3823                           ;i2c1.c: 196: i2c1_object.pTrTail = i2c1_tr_queue;
  3824  000C' 0100               	movlb	0	; () banked
  3825  000E' 0E00'              	movlw	high _i2c1_tr_queue
  3826  0010' 6E01'              	movwf	_i2c1_object+1,c
  3827  0012' 0100               	movlb	0	; () banked
  3828  0014' 0E00'              	movlw	low _i2c1_tr_queue
  3829  0016' 6E00'              	movwf	_i2c1_object,c
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;i2c1.c: 197: i2c1_object.trStatus.s.empty = 1;
  3833  0018' 8204'              	bsf	_i2c1_object+4,1,c
  3834                           
  3835                           ; BSR set to: 0
  3836                           ;i2c1.c: 198: i2c1_object.trStatus.s.full = 0;
  3837  001A' 9004'              	bcf	_i2c1_object+4,0,c
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;i2c1.c: 200: i2c1_object.i2cErrors = 0;
  3841  001C' 0E00               	movlw	0
  3842  001E' 6E06'              	movwf	_i2c1_object+6,c
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;i2c1.c: 203: SSP1STAT = 0x80;
  3846  0020' 0E80               	movlw	128
  3847  0022' 6EC7               	movwf	4039,c	;volatile
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;i2c1.c: 205: SSP1CON1 = 0x28;
  3851  0024' 0E28               	movlw	40
  3852  0026' 6EC6               	movwf	4038,c	;volatile
  3853                           
  3854                           ; BSR set to: 0
  3855                           ;i2c1.c: 207: SSP1CON3 = 0x00;
  3856  0028' 0E00               	movlw	0
  3857  002A' 6ECB               	movwf	4043,c	;volatile
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;i2c1.c: 209: SSP1ADD = 0x3F;
  3861  002C' 0E3F               	movlw	63
  3862  002E' 6EC8               	movwf	4040,c	;volatile
  3863                           
  3864                           ; BSR set to: 0
  3865                           ;i2c1.c: 213: PIR1bits.SSP1IF = 0;
  3866  0030' 969E               	bcf	3998,3,c	;volatile
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;i2c1.c: 215: PIE1bits.SSP1IE = 1;
  3870  0032' 869D               	bsf	3997,3,c	;volatile
  3871                           
  3872                           ; BSR set to: 0
  3873  0034' 0012               	return	
  3874  0036'                    __end_of_I2C1_Initialize:
  3875                           	opt stack 0
  3876                           tblptru	equ	0xFF8
  3877                           prodh	equ	0xFF4
  3878                           prodl	equ	0xFF3
  3879                           intcon	equ	0xFF2
  3880                           intcon2	equ	0xFF1
  3881                           postinc0	equ	0xFEE
  3882                           wreg	equ	0xFE8
  3883                           indf2	equ	0xFDF
  3884                           postinc2	equ	0xFDE
  3885                           postdec2	equ	0xFDD
  3886                           fsr2h	equ	0xFDA
  3887                           fsr2l	equ	0xFD9
  3888                           status	equ	0xFD8
  3889                           
  3890 ;; *************** function _EUSART1_Initialize *****************
  3891 ;; Defined at:
  3892 ;;		line 76 in file "mcc_generated_files/eusart1.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;		None
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;		None
  3897 ;; Return value:  Size  Location     Type
  3898 ;;		None               void
  3899 ;; Registers used:
  3900 ;;		wreg, status,2
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3906 ;;      Params:         0       0       0       0       0       0       0
  3907 ;;      Locals:         0       0       0       0       0       0       0
  3908 ;;      Temps:          0       0       0       0       0       0       0
  3909 ;;      Totals:         0       0       0       0       0       0       0
  3910 ;;Total ram usage:        0 bytes
  3911 ;; Hardware stack levels used:    1
  3912 ;; Hardware stack levels required when called:    3
  3913 ;; This function calls:
  3914 ;;		Nothing
  3915 ;; This function is called by:
  3916 ;;		_SYSTEM_Initialize
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text28
  3921  0000'                    __ptext28:
  3922                           	opt stack 0
  3923  0000'                    _EUSART1_Initialize:
  3924                           	opt stack 26
  3925                           
  3926                           ;eusart1.c: 78: PIE1bits.RC1IE = 0;
  3927                           
  3928                           ; BSR set to: 0
  3929                           ;incstack = 0
  3930  0000' 9A9D               	bcf	3997,5,c	;volatile
  3931                           
  3932                           ;eusart1.c: 79: PIE1bits.TX1IE = 0;
  3933  0002' 989D               	bcf	3997,4,c	;volatile
  3934                           
  3935                           ;eusart1.c: 84: BAUD1CON = 0x48;
  3936  0004' 0E48               	movlw	72
  3937  0006' 6EB8               	movwf	4024,c	;volatile
  3938                           
  3939                           ;eusart1.c: 87: RC1STA = 0x80;
  3940  0008' 0E80               	movlw	128
  3941  000A' 6EAB               	movwf	4011,c	;volatile
  3942                           
  3943                           ;eusart1.c: 90: TX1STA = 0x26;
  3944  000C' 0E26               	movlw	38
  3945  000E' 6EAC               	movwf	4012,c	;volatile
  3946                           
  3947                           ;eusart1.c: 93: SPBRG1 = 0x44;
  3948  0010' 0E44               	movlw	68
  3949  0012' 6EAF               	movwf	4015,c	;volatile
  3950                           
  3951                           ;eusart1.c: 96: SPBRGH1 = 0x00;
  3952  0014' 0E00               	movlw	0
  3953  0016' 6EB0               	movwf	4016,c	;volatile
  3954                           
  3955                           ;eusart1.c: 100: eusart1TxHead = 0;
  3956  0018' 0E00               	movlw	0
  3957  001A' 6E0F'              	movwf	_eusart1TxHead,c
  3958                           
  3959                           ;eusart1.c: 101: eusart1TxTail = 0;
  3960  001C' 0E00               	movlw	0
  3961  001E' 6E10'              	movwf	_eusart1TxTail,c
  3962                           
  3963                           ;eusart1.c: 102: eusart1TxBufferRemaining = sizeof (eusart1TxBuffer);
  3964  0020' 0E08               	movlw	8
  3965  0022' 6E09'              	movwf	_eusart1TxBufferRemaining,c	;volatile
  3966                           
  3967                           ;eusart1.c: 104: eusart1RxHead = 0;
  3968  0024' 0E00               	movlw	0
  3969  0026' 6E0D'              	movwf	_eusart1RxHead,c
  3970                           
  3971                           ;eusart1.c: 105: eusart1RxTail = 0;
  3972  0028' 0E00               	movlw	0
  3973  002A' 6E0E'              	movwf	_eusart1RxTail,c
  3974                           
  3975                           ;eusart1.c: 106: eusart1RxCount = 0;
  3976  002C' 0E00               	movlw	0
  3977  002E' 6E0C'              	movwf	_eusart1RxCount,c	;volatile
  3978                           
  3979                           ;eusart1.c: 109: PIE1bits.RC1IE = 1;
  3980  0030' 8A9D               	bsf	3997,5,c	;volatile
  3981  0032' 0012               	return	
  3982  0034'                    __end_of_EUSART1_Initialize:
  3983                           	opt stack 0
  3984                           tblptru	equ	0xFF8
  3985                           prodh	equ	0xFF4
  3986                           prodl	equ	0xFF3
  3987                           intcon	equ	0xFF2
  3988                           intcon2	equ	0xFF1
  3989                           postinc0	equ	0xFEE
  3990                           wreg	equ	0xFE8
  3991                           indf2	equ	0xFDF
  3992                           postinc2	equ	0xFDE
  3993                           postdec2	equ	0xFDD
  3994                           fsr2h	equ	0xFDA
  3995                           fsr2l	equ	0xFD9
  3996                           status	equ	0xFD8
  3997                           
  3998 ;; *************** function _ECCP2_Initialize *****************
  3999 ;; Defined at:
  4000 ;;		line 58 in file "mcc_generated_files/eccp2.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;		None
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;		None
  4005 ;; Return value:  Size  Location     Type
  4006 ;;		None               void
  4007 ;; Registers used:
  4008 ;;		wreg, status,2
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4014 ;;      Params:         0       0       0       0       0       0       0
  4015 ;;      Locals:         0       0       0       0       0       0       0
  4016 ;;      Temps:          0       0       0       0       0       0       0
  4017 ;;      Totals:         0       0       0       0       0       0       0
  4018 ;;Total ram usage:        0 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; Hardware stack levels required when called:    3
  4021 ;; This function calls:
  4022 ;;		Nothing
  4023 ;; This function is called by:
  4024 ;;		_SYSTEM_Initialize
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           	psect	text29
  4029  0000'                    __ptext29:
  4030                           	opt stack 0
  4031  0000'                    _ECCP2_Initialize:
  4032                           	opt stack 26
  4033                           
  4034                           ;eccp2.c: 62: CCP2CON = 0x05;
  4035                           
  4036                           ;incstack = 0
  4037  0000' 0E05               	movlw	5
  4038  0002' 6E66               	movwf	3942,c	;volatile
  4039                           
  4040                           ;eccp2.c: 65: CCPR2L = 0x00;
  4041  0004' 0E00               	movlw	0
  4042  0006' 6E67               	movwf	3943,c	;volatile
  4043                           
  4044                           ;eccp2.c: 68: CCPR2H = 0x00;
  4045  0008' 0E00               	movlw	0
  4046  000A' 6E68               	movwf	3944,c	;volatile
  4047                           
  4048                           ;eccp2.c: 71: PIR2bits.CCP2IF = 0;
  4049  000C' 90A1               	bcf	4001,0,c	;volatile
  4050                           
  4051                           ;eccp2.c: 74: PIE2bits.CCP2IE = 1;
  4052  000E' 80A0               	bsf	4000,0,c	;volatile
  4053                           
  4054                           ;eccp2.c: 77: CCPTMRS0bits.C2TSEL = 0x0;
  4055  0010' 0EE7               	movlw	-25
  4056  0012' 010F               	movlb	15	; () banked
  4057  0014' 1749               	andwf	73,f,b	;volatile
  4058                           
  4059                           ; BSR set to: 15
  4060  0016' 0012               	return	
  4061  0018'                    __end_of_ECCP2_Initialize:
  4062                           	opt stack 0
  4063                           tblptru	equ	0xFF8
  4064                           prodh	equ	0xFF4
  4065                           prodl	equ	0xFF3
  4066                           intcon	equ	0xFF2
  4067                           intcon2	equ	0xFF1
  4068                           postinc0	equ	0xFEE
  4069                           wreg	equ	0xFE8
  4070                           indf2	equ	0xFDF
  4071                           postinc2	equ	0xFDE
  4072                           postdec2	equ	0xFDD
  4073                           fsr2h	equ	0xFDA
  4074                           fsr2l	equ	0xFD9
  4075                           status	equ	0xFD8
  4076                           
  4077 ;; *************** function _ECCP1_Initialize *****************
  4078 ;; Defined at:
  4079 ;;		line 58 in file "mcc_generated_files/eccp1.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;		None
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;		None               void
  4086 ;; Registers used:
  4087 ;;		wreg, status,2
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4093 ;;      Params:         0       0       0       0       0       0       0
  4094 ;;      Locals:         0       0       0       0       0       0       0
  4095 ;;      Temps:          0       0       0       0       0       0       0
  4096 ;;      Totals:         0       0       0       0       0       0       0
  4097 ;;Total ram usage:        0 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; Hardware stack levels required when called:    3
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		_SYSTEM_Initialize
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text30
  4108  0000'                    __ptext30:
  4109                           	opt stack 0
  4110  0000'                    _ECCP1_Initialize:
  4111                           	opt stack 26
  4112                           
  4113                           ;eccp1.c: 62: CCP1CON = 0x05;
  4114                           
  4115                           ; BSR set to: 15
  4116                           ;incstack = 0
  4117  0000' 0E05               	movlw	5
  4118  0002' 6EBD               	movwf	4029,c	;volatile
  4119                           
  4120                           ;eccp1.c: 65: CCPR1L = 0x00;
  4121  0004' 0E00               	movlw	0
  4122  0006' 6EBE               	movwf	4030,c	;volatile
  4123                           
  4124                           ;eccp1.c: 68: CCPR1H = 0x00;
  4125  0008' 0E00               	movlw	0
  4126  000A' 6EBF               	movwf	4031,c	;volatile
  4127                           
  4128                           ;eccp1.c: 71: PIR1bits.CCP1IF = 0;
  4129  000C' 949E               	bcf	3998,2,c	;volatile
  4130                           
  4131                           ;eccp1.c: 74: PIE1bits.CCP1IE = 1;
  4132  000E' 849D               	bsf	3997,2,c	;volatile
  4133                           
  4134                           ;eccp1.c: 77: CCPTMRS0bits.C1TSEL = 0x0;
  4135  0010' 0EFC               	movlw	-4
  4136  0012' 010F               	movlb	15	; () banked
  4137  0014' 1749               	andwf	73,f,b	;volatile
  4138                           
  4139                           ; BSR set to: 15
  4140  0016' 0012               	return	
  4141  0018'                    __end_of_ECCP1_Initialize:
  4142                           	opt stack 0
  4143                           tblptru	equ	0xFF8
  4144                           prodh	equ	0xFF4
  4145                           prodl	equ	0xFF3
  4146                           intcon	equ	0xFF2
  4147                           intcon2	equ	0xFF1
  4148                           postinc0	equ	0xFEE
  4149                           wreg	equ	0xFE8
  4150                           indf2	equ	0xFDF
  4151                           postinc2	equ	0xFDE
  4152                           postdec2	equ	0xFDD
  4153                           fsr2h	equ	0xFDA
  4154                           fsr2l	equ	0xFD9
  4155                           status	equ	0xFD8
  4156                           
  4157 ;; *************** function _INTERRUPT_InterruptManager *****************
  4158 ;; Defined at:
  4159 ;;		line 74 in file "mcc_generated_files/interrupt_manager.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;		None
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;		None
  4164 ;; Return value:  Size  Location     Type
  4165 ;;		None               void
  4166 ;; Registers used:
  4167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4173 ;;      Params:         0       0       0       0       0       0       0
  4174 ;;      Locals:         0       0       0       0       0       0       0
  4175 ;;      Temps:         14       0       0       0       0       0       0
  4176 ;;      Totals:        14       0       0       0       0       0       0
  4177 ;;Total ram usage:       14 bytes
  4178 ;; Hardware stack levels used:    1
  4179 ;; Hardware stack levels required when called:    2
  4180 ;; This function calls:
  4181 ;;		_ECCP1_CaptureISR
  4182 ;;		_ECCP2_CaptureISR
  4183 ;;		_EUSART1_Receive_ISR
  4184 ;;		_EUSART1_Transmit_ISR
  4185 ;;		_I2C1_BusCollisionISR
  4186 ;;		_I2C1_ISR
  4187 ;;		_TMR2_ISR
  4188 ;; This function is called by:
  4189 ;;		Interrupt level 2
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           	psect	intcode
  4194  0000'                    __pintcode:
  4195                           	opt stack 0
  4196  0000'                    _INTERRUPT_InterruptManager:
  4197                           	opt stack 23
  4198                           
  4199                           ; BSR set to: 15
  4200                           ;incstack = 0
  4201  0000' CFFA F006'         	movff	pclath,??_INTERRUPT_InterruptManager
  4202  0004' CFFB F007'         	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4203  0008' CFE9 F008'         	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  4204  000C' CFEA F009'         	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  4205  0010' CFE1 F00A'         	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  4206  0014' CFE2 F00B'         	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  4207  0018' CFD9 F00C'         	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  4208  001C' CFDA F00D'         	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  4209  0020' CFF3 F00E'         	movff	prodl,??_INTERRUPT_InterruptManager+8
  4210  0024' CFF4 F00F'         	movff	prodh,??_INTERRUPT_InterruptManager+9
  4211  0028' CFF6 F010'         	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  4212  002C' CFF7 F011'         	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  4213  0030' CFF8 F012'         	movff	tblptru,??_INTERRUPT_InterruptManager+12
  4214  0034' CFF5 F013'         	movff	tablat,??_INTERRUPT_InterruptManager+13
  4215                           
  4216                           ;interrupt_manager.c: 76: if (PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1) {
  4217  0038' B69D               	btfsc	3997,3,c	;volatile
  4218  003A' A69E               	btfss	3998,3,c	;volatile
  4219  003C' D003               	goto	i2l383
  4220                           
  4221                           ;interrupt_manager.c: 77: I2C1_ISR();
  4222  003E' EC00' F000'        	call	_I2C1_ISR	;wreg free
  4223                           
  4224                           ;interrupt_manager.c: 78: } else if (PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1) {
  4225  0042' D023               	goto	i2l397
  4226  0044'                    i2l383:
  4227  0044' B6A0               	btfsc	4000,3,c	;volatile
  4228  0046' A6A1               	btfss	4001,3,c	;volatile
  4229  0048' D003               	goto	i2l385
  4230                           
  4231                           ;interrupt_manager.c: 79: I2C1_BusCollisionISR();
  4232  004A' EC00' F000'        	call	_I2C1_BusCollisionISR	;wreg free
  4233                           
  4234                           ;interrupt_manager.c: 80: } else if (PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1) {
  4235  004E' D01D               	goto	i2l397
  4236  0050'                    i2l385:
  4237  0050' BA9D               	btfsc	3997,5,c	;volatile
  4238  0052' AA9E               	btfss	3998,5,c	;volatile
  4239  0054' D003               	goto	i2l387
  4240                           
  4241                           ;interrupt_manager.c: 81: EUSART1_Receive_ISR();
  4242  0056' EC00' F000'        	call	_EUSART1_Receive_ISR	;wreg free
  4243                           
  4244                           ;interrupt_manager.c: 82: } else if (PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1) {
  4245  005A' D017               	goto	i2l397
  4246  005C'                    i2l387:
  4247  005C' B89D               	btfsc	3997,4,c	;volatile
  4248  005E' A89E               	btfss	3998,4,c	;volatile
  4249  0060' D003               	goto	i2l389
  4250                           
  4251                           ;interrupt_manager.c: 83: EUSART1_Transmit_ISR();
  4252  0062' EC00' F000'        	call	_EUSART1_Transmit_ISR	;wreg free
  4253                           
  4254                           ;interrupt_manager.c: 84: } else if (PIE1bits.CCP1IE == 1 && PIR1bits.CCP1IF == 1) {
  4255  0066' D011               	goto	i2l397
  4256  0068'                    i2l389:
  4257  0068' B49D               	btfsc	3997,2,c	;volatile
  4258  006A' A49E               	btfss	3998,2,c	;volatile
  4259  006C' D003               	goto	i2l391
  4260                           
  4261                           ;interrupt_manager.c: 85: ECCP1_CaptureISR();
  4262  006E' EC00' F000'        	call	_ECCP1_CaptureISR	;wreg free
  4263                           
  4264                           ;interrupt_manager.c: 86: } else if (PIE2bits.CCP2IE == 1 && PIR2bits.CCP2IF == 1) {
  4265  0072' D00B               	goto	i2l397
  4266  0074'                    i2l391:
  4267  0074' B0A0               	btfsc	4000,0,c	;volatile
  4268  0076' A0A1               	btfss	4001,0,c	;volatile
  4269  0078' D003               	goto	i2l393
  4270                           
  4271                           ;interrupt_manager.c: 87: ECCP2_CaptureISR();
  4272  007A' EC00' F000'        	call	_ECCP2_CaptureISR	;wreg free
  4273                           
  4274                           ;interrupt_manager.c: 88: } else if (PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1) {
  4275  007E' D005               	goto	i2l397
  4276  0080'                    i2l393:
  4277  0080' B29D               	btfsc	3997,1,c	;volatile
  4278  0082' A29E               	btfss	3998,1,c	;volatile
  4279  0084' D002               	goto	i2l397
  4280                           
  4281                           ;interrupt_manager.c: 89: TMR2_ISR();
  4282  0086' EC00' F000'        	call	_TMR2_ISR	;wreg free
  4283  008A'                    i2l397:
  4284  008A' C013' FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  4285  008E' C012' FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  4286  0092' C011' FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  4287  0096' C010' FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  4288  009A' C00F' FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4289  009E' C00E' FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4290  00A2' C00D' FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4291  00A6' C00C' FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4292  00AA' C00B' FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4293  00AE' C00A' FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4294  00B2' C009' FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4295  00B6' C008' FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4296  00BA' C007' FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4297  00BE' C006' FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4298  00C2' 0011               	retfie		f
  4299  00C4'                    __end_of_INTERRUPT_InterruptManager:
  4300                           	opt stack 0
  4301                           pclatu	equ	0xFFB
  4302                           pclath	equ	0xFFA
  4303                           tblptru	equ	0xFF8
  4304                           tblptrh	equ	0xFF7
  4305                           tblptrl	equ	0xFF6
  4306                           tablat	equ	0xFF5
  4307                           prodh	equ	0xFF4
  4308                           prodl	equ	0xFF3
  4309                           intcon	equ	0xFF2
  4310                           intcon2	equ	0xFF1
  4311                           postinc0	equ	0xFEE
  4312                           fsr0h	equ	0xFEA
  4313                           fsr0l	equ	0xFE9
  4314                           wreg	equ	0xFE8
  4315                           fsr1h	equ	0xFE2
  4316                           fsr1l	equ	0xFE1
  4317                           indf2	equ	0xFDF
  4318                           postinc2	equ	0xFDE
  4319                           postdec2	equ	0xFDD
  4320                           fsr2h	equ	0xFDA
  4321                           fsr2l	equ	0xFD9
  4322                           status	equ	0xFD8
  4323                           
  4324 ;; *************** function _TMR2_ISR *****************
  4325 ;; Defined at:
  4326 ;;		line 107 in file "mcc_generated_files/tmr2.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;		None
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;		None
  4331 ;; Return value:  Size  Location     Type
  4332 ;;		None               void
  4333 ;; Registers used:
  4334 ;;		cstack
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4340 ;;      Params:         0       0       0       0       0       0       0
  4341 ;;      Locals:         0       0       0       0       0       0       0
  4342 ;;      Temps:          0       0       0       0       0       0       0
  4343 ;;      Totals:         0       0       0       0       0       0       0
  4344 ;;Total ram usage:        0 bytes
  4345 ;; Hardware stack levels used:    1
  4346 ;; Hardware stack levels required when called:    1
  4347 ;; This function calls:
  4348 ;;		_TMR2_CallBack
  4349 ;; This function is called by:
  4350 ;;		_INTERRUPT_InterruptManager
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           	psect	text32
  4355  0000'                    __ptext32:
  4356                           	opt stack 0
  4357  0000'                    _TMR2_ISR:
  4358                           	opt stack 23
  4359                           
  4360                           ;tmr2.c: 110: PIR1bits.TMR2IF = 0;
  4361                           
  4362                           ;incstack = 0
  4363  0000' 929E               	bcf	3998,1,c	;volatile
  4364                           
  4365                           ;tmr2.c: 114: TMR2_CallBack();
  4366  0002' EC00' F000'        	call	_TMR2_CallBack	;wreg free
  4367  0006' 0012               	return	
  4368  0008'                    __end_of_TMR2_ISR:
  4369                           	opt stack 0
  4370                           pclatu	equ	0xFFB
  4371                           pclath	equ	0xFFA
  4372                           tblptru	equ	0xFF8
  4373                           tblptrh	equ	0xFF7
  4374                           tblptrl	equ	0xFF6
  4375                           tablat	equ	0xFF5
  4376                           prodh	equ	0xFF4
  4377                           prodl	equ	0xFF3
  4378                           intcon	equ	0xFF2
  4379                           intcon2	equ	0xFF1
  4380                           postinc0	equ	0xFEE
  4381                           fsr0h	equ	0xFEA
  4382                           fsr0l	equ	0xFE9
  4383                           wreg	equ	0xFE8
  4384                           fsr1h	equ	0xFE2
  4385                           fsr1l	equ	0xFE1
  4386                           indf2	equ	0xFDF
  4387                           postinc2	equ	0xFDE
  4388                           postdec2	equ	0xFDD
  4389                           fsr2h	equ	0xFDA
  4390                           fsr2l	equ	0xFD9
  4391                           status	equ	0xFD8
  4392                           
  4393 ;; *************** function _TMR2_CallBack *****************
  4394 ;; Defined at:
  4395 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  4396 ;; Parameters:    Size  Location     Type
  4397 ;;		None
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;		None
  4400 ;; Return value:  Size  Location     Type
  4401 ;;		None               void
  4402 ;; Registers used:
  4403 ;;		None
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4409 ;;      Params:         0       0       0       0       0       0       0
  4410 ;;      Locals:         0       0       0       0       0       0       0
  4411 ;;      Temps:          0       0       0       0       0       0       0
  4412 ;;      Totals:         0       0       0       0       0       0       0
  4413 ;;Total ram usage:        0 bytes
  4414 ;; Hardware stack levels used:    1
  4415 ;; This function calls:
  4416 ;;		Nothing
  4417 ;; This function is called by:
  4418 ;;		_TMR2_ISR
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           	psect	text33
  4423  0000'                    __ptext33:
  4424                           	opt stack 0
  4425  0000'                    _TMR2_CallBack:
  4426                           	opt stack 23
  4427                           
  4428                           ;incstack = 0
  4429  0000' 0012               	return	
  4430  0002'                    __end_of_TMR2_CallBack:
  4431                           	opt stack 0
  4432                           pclatu	equ	0xFFB
  4433                           pclath	equ	0xFFA
  4434                           tblptru	equ	0xFF8
  4435                           tblptrh	equ	0xFF7
  4436                           tblptrl	equ	0xFF6
  4437                           tablat	equ	0xFF5
  4438                           prodh	equ	0xFF4
  4439                           prodl	equ	0xFF3
  4440                           intcon	equ	0xFF2
  4441                           intcon2	equ	0xFF1
  4442                           postinc0	equ	0xFEE
  4443                           fsr0h	equ	0xFEA
  4444                           fsr0l	equ	0xFE9
  4445                           wreg	equ	0xFE8
  4446                           fsr1h	equ	0xFE2
  4447                           fsr1l	equ	0xFE1
  4448                           indf2	equ	0xFDF
  4449                           postinc2	equ	0xFDE
  4450                           postdec2	equ	0xFDD
  4451                           fsr2h	equ	0xFDA
  4452                           fsr2l	equ	0xFD9
  4453                           status	equ	0xFD8
  4454                           
  4455 ;; *************** function _I2C1_ISR *****************
  4456 ;; Defined at:
  4457 ;;		line 226 in file "mcc_generated_files/i2c1.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;		None
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;		None
  4462 ;; Return value:  Size  Location     Type
  4463 ;;		None               void
  4464 ;; Registers used:
  4465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4471 ;;      Params:         0       0       0       0       0       0       0
  4472 ;;      Locals:         0       0       0       0       0       0       0
  4473 ;;      Temps:          3       0       0       0       0       0       0
  4474 ;;      Totals:         3       0       0       0       0       0       0
  4475 ;;Total ram usage:        3 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; Hardware stack levels required when called:    1
  4478 ;; This function calls:
  4479 ;;		_I2C1_FunctionComplete
  4480 ;;		_I2C1_Stop
  4481 ;; This function is called by:
  4482 ;;		_INTERRUPT_InterruptManager
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           	psect	text34
  4487  0000'                    __ptext34:
  4488                           	opt stack 0
  4489  0000'                    _I2C1_ISR:
  4490                           	opt stack 23
  4491                           
  4492                           ;i2c1.c: 228: static uint8_t *pi2c_buf_ptr;
  4493                           ;i2c1.c: 229: static uint16_t i2c_address = 0;
  4494                           ;i2c1.c: 230: static uint8_t i2c_bytes_left = 0;
  4495                           ;i2c1.c: 231: static uint8_t i2c_10bit_address_restart = 0;
  4496                           ;i2c1.c: 233: PIR1bits.SSP1IF = 0;
  4497                           
  4498                           ;incstack = 0
  4499  0000' 969E               	bcf	3998,3,c	;volatile
  4500                           
  4501                           ;i2c1.c: 237: if (SSP1CON1bits.WCOL) {
  4502  0002' AEC6               	btfss	4038,7,c	;volatile
  4503  0004' D105               	goto	i2l2686
  4504                           
  4505                           ;i2c1.c: 239: SSP1CON1bits.WCOL = 0;
  4506  0006' 9EC6               	bcf	4038,7,c	;volatile
  4507                           
  4508                           ;i2c1.c: 240: i2c1_state = S_MASTER_IDLE;
  4509  0008' 0E00               	movlw	0
  4510  000A' 6E11'              	movwf	_i2c1_state,c
  4511                           
  4512                           ;i2c1.c: 241: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
  4513  000C' EE20 F003          	lfsr	2,3
  4514  0010' 5002'              	movf	_p_i2c1_current,w,c
  4515  0012' 26D9               	addwf	fsr2l,f,c
  4516  0014' 5003'              	movf	_p_i2c1_current+1,w,c
  4517  0016' 22DA               	addwfc	fsr2h,f,c
  4518  0018' CFDE F003'         	movff	postinc2,??_I2C1_ISR
  4519  001C' CFDD F004'         	movff	postdec2,??_I2C1_ISR+1
  4520  0020' C003' FFD9         	movff	??_I2C1_ISR,fsr2l
  4521  0024' C004' FFDA         	movff	??_I2C1_ISR+1,fsr2h
  4522  0028' 0E01               	movlw	1
  4523  002A' 6EDF               	movwf	indf2,c
  4524                           
  4525                           ;i2c1.c: 244: p_i2c1_current = (0);
  4526  002C' 0E00               	movlw	0
  4527  002E' 6E03'              	movwf	_p_i2c1_current+1,c
  4528  0030' 0E00               	movlw	0
  4529  0032' 6E02'              	movwf	_p_i2c1_current,c
  4530  0034' 0012               	return	
  4531  0036'                    i2l60:
  4532                           
  4533                           ;i2c1.c: 253: if (i2c1_object.trStatus.s.empty != 1) {
  4534  0036' B204'              	btfsc	_i2c1_object+4,1,c
  4535  0038' 0012               	return	
  4536                           
  4537                           ;i2c1.c: 255: p_i2c1_current = i2c1_object.pTrHead;
  4538  003A' C003' F003'        	movff	_i2c1_object+3,_p_i2c1_current+1
  4539  003E' C002' F002'        	movff	_i2c1_object+2,_p_i2c1_current
  4540                           
  4541                           ;i2c1.c: 256: i2c1_trb_count = i2c1_object.pTrHead->count;
  4542  0042' C002' FFD9         	movff	_i2c1_object+2,fsr2l
  4543  0046' C003' FFDA         	movff	_i2c1_object+3,fsr2h
  4544  004A' 50DF               	movf	indf2,w,c
  4545  004C' 6E12'              	movwf	_i2c1_trb_count,c
  4546                           
  4547                           ;i2c1.c: 257: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
  4548  004E' EE20 F001          	lfsr	2,1
  4549  0052' 5002'              	movf	_i2c1_object+2,w,c
  4550  0054' 26D9               	addwf	fsr2l,f,c
  4551  0056' 5003'              	movf	_i2c1_object+3,w,c
  4552  0058' 22DA               	addwfc	fsr2h,f,c
  4553  005A' CFDE F004'         	movff	postinc2,_p_i2c1_trb_current
  4554  005E' CFDD F005'         	movff	postdec2,_p_i2c1_trb_current+1
  4555                           
  4556                           ;i2c1.c: 259: i2c1_object.pTrHead++;
  4557  0062' 0E06               	movlw	6
  4558  0064' 2602'              	addwf	_i2c1_object+2,f,c
  4559  0066' 0E00               	movlw	0
  4560  0068' 2203'              	addwfc	_i2c1_object+3,f,c
  4561                           
  4562                           ;i2c1.c: 262: if (i2c1_object.pTrHead == (i2c1_tr_queue + 1)) {
  4563  006A' 0E00'              	movlw	low (_i2c1_tr_queue+6)
  4564  006C' 6E00'              	movwf	??_I2C1_ISR& (0+255),c
  4565  006E' 0E00'              	movlw	high (_i2c1_tr_queue+6)
  4566  0070' 6E00'              	movwf	(??_I2C1_ISR+1)& (0+255),c
  4567  0072' EE20' F000'        	lfsr	2,_i2c1_object+2
  4568  0076' 52DE               	movf	postinc2,f,c
  4569  0078' 5004'              	movf	??_I2C1_ISR+1,w,c
  4570  007A' 18DD               	xorwf	postdec2,w,c
  4571  007C' C003' FFE8         	movff	??_I2C1_ISR,wreg
  4572  0080' B4D8               	btfsc	status,2,c
  4573  0082' 18DF               	xorwf	indf2,w,c
  4574  0084' A4D8               	btfss	status,2,c
  4575  0086' D006               	goto	i2l2576
  4576                           
  4577                           ;i2c1.c: 264: i2c1_object.pTrHead = i2c1_tr_queue;
  4578  0088' 0100               	movlb	0	; () banked
  4579  008A' 0E00'              	movlw	high _i2c1_tr_queue
  4580  008C' 6E03'              	movwf	_i2c1_object+3,c
  4581  008E' 0100               	movlb	0	; () banked
  4582  0090' 0E00'              	movlw	low _i2c1_tr_queue
  4583  0092' 6E02'              	movwf	_i2c1_object+2,c
  4584  0094'                    i2l2576:
  4585                           
  4586                           ;i2c1.c: 265: }
  4587                           ;i2c1.c: 269: i2c1_object.trStatus.s.full = 0;
  4588  0094' 9004'              	bcf	_i2c1_object+4,0,c
  4589                           
  4590                           ;i2c1.c: 272: if (i2c1_object.pTrHead == i2c1_object.pTrTail) {
  4591  0096' EE20' F000'        	lfsr	2,_i2c1_object+2
  4592  009A' 52DE               	movf	postinc2,f,c
  4593  009C' 5001'              	movf	_i2c1_object+1,w,c
  4594  009E' 18DD               	xorwf	postdec2,w,c
  4595  00A0' C000' FFE8         	movff	_i2c1_object,wreg
  4596  00A4' B4D8               	btfsc	status,2,c
  4597  00A6' 18DF               	xorwf	indf2,w,c
  4598  00A8' B4D8               	btfsc	status,2,c
  4599                           
  4600                           ;i2c1.c: 274: i2c1_object.trStatus.s.empty = 1;
  4601  00AA' 8204'              	bsf	_i2c1_object+4,1,c
  4602                           
  4603                           ;i2c1.c: 275: }
  4604                           ;i2c1.c: 278: SSP1CON2bits.SEN = 1;
  4605  00AC' 80C5               	bsf	4037,0,c	;volatile
  4606                           
  4607                           ;i2c1.c: 281: i2c1_state = S_MASTER_SEND_ADDR;
  4608  00AE' 0E02               	movlw	2
  4609  00B0' 6E11'              	movwf	_i2c1_state,c
  4610  00B2' 0012               	return	
  4611  00B4'                    i2l65:
  4612                           
  4613                           ;i2c1.c: 291: SSP1CON2bits.RSEN = 1;
  4614  00B4' 82C5               	bsf	4037,1,c	;volatile
  4615                           
  4616                           ;i2c1.c: 294: i2c1_state = S_MASTER_SEND_ADDR;
  4617  00B6' 0E02               	movlw	2
  4618  00B8' 6E11'              	movwf	_i2c1_state,c
  4619                           
  4620                           ;i2c1.c: 296: break;
  4621  00BA' 0012               	return	
  4622  00BC'                    i2l66:
  4623                           
  4624                           ;i2c1.c: 300: if (SSP1CON2bits.ACKSTAT) {
  4625  00BC' ACC5               	btfss	4037,6,c	;volatile
  4626  00BE' D005               	goto	i2l2590
  4627                           
  4628                           ;i2c1.c: 301: i2c1_object.i2cErrors++;
  4629  00C0' 2A06'              	incf	_i2c1_object+6,f,c
  4630                           
  4631                           ;i2c1.c: 302: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  4632  00C2' 0E04               	movlw	4
  4633  00C4' EC00' F000'        	call	_I2C1_Stop
  4634                           
  4635                           ;i2c1.c: 303: } else {
  4636  00C8' 0012               	return	
  4637  00CA'                    i2l2590:
  4638                           
  4639                           ;i2c1.c: 305: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  4640  00CA' 90D8               	bcf	status,0,c
  4641  00CC' 301A'              	rrcf	I2C1_ISR@i2c_address+1,w,c
  4642  00CE' 6E00'              	movwf	(??_I2C1_ISR+1)& (0+255),c
  4643  00D0' 3019'              	rrcf	I2C1_ISR@i2c_address,w,c
  4644  00D2' 6E00'              	movwf	??_I2C1_ISR& (0+255),c
  4645  00D4' 5003'              	movf	??_I2C1_ISR,w,c
  4646  00D6' 6EC9               	movwf	4041,c	;volatile
  4647                           
  4648                           ;i2c1.c: 308: if (i2c_address & 0x01) {
  4649  00D8' A019'              	btfss	I2C1_ISR@i2c_address,0,c
  4650  00DA' D003               	goto	i2l2596
  4651                           
  4652                           ;i2c1.c: 311: i2c1_state = S_MASTER_10BIT_RESTART;
  4653  00DC' 0E0B               	movlw	11
  4654  00DE' 6E11'              	movwf	_i2c1_state,c
  4655                           
  4656                           ;i2c1.c: 312: } else {
  4657  00E0' 0012               	return	
  4658  00E2'                    i2l2596:
  4659                           
  4660                           ;i2c1.c: 314: i2c1_state = S_MASTER_SEND_DATA;
  4661  00E2' 0E03               	movlw	3
  4662  00E4' 6E11'              	movwf	_i2c1_state,c
  4663  00E6' 0012               	return	
  4664  00E8'                    i2l71:
  4665                           
  4666                           ;i2c1.c: 322: if (SSP1CON2bits.ACKSTAT) {
  4667  00E8' ACC5               	btfss	4037,6,c	;volatile
  4668  00EA' D005               	goto	i2l72
  4669                           
  4670                           ;i2c1.c: 323: i2c1_object.i2cErrors++;
  4671  00EC' 2A06'              	incf	_i2c1_object+6,f,c
  4672                           
  4673                           ;i2c1.c: 324: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  4674  00EE' 0E04               	movlw	4
  4675  00F0' EC00' F000'        	call	_I2C1_Stop
  4676                           
  4677                           ;i2c1.c: 325: } else {
  4678  00F4' 0012               	return	
  4679  00F6'                    i2l72:
  4680                           
  4681                           ;i2c1.c: 328: SSP1CON2bits.RSEN = 1;
  4682  00F6' 82C5               	bsf	4037,1,c	;volatile
  4683                           
  4684                           ;i2c1.c: 332: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  4685  00F8' C01A' F003'        	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR
  4686  00FC' C003' F004'        	movff	??_I2C1_ISR,??_I2C1_ISR+1
  4687  0100' 6A00'              	clrf	(??_I2C1_ISR+2)& (0+255),c
  4688  0102' 0E06               	movlw	6
  4689  0104' 1604'              	andwf	??_I2C1_ISR+1,f,c
  4690  0106' 0E00               	movlw	0
  4691  0108' 1605'              	andwf	??_I2C1_ISR+2,f,c
  4692  010A' 0EF0               	movlw	240
  4693  010C' 1004'              	iorwf	??_I2C1_ISR+1,w,c
  4694  010E' 6E19'              	movwf	I2C1_ISR@i2c_address,c
  4695  0110' 5005'              	movf	??_I2C1_ISR+2,w,c
  4696  0112' 6E1A'              	movwf	I2C1_ISR@i2c_address+1,c
  4697                           
  4698                           ;i2c1.c: 335: i2c_address |= 0x0001;
  4699  0114' 8019'              	bsf	I2C1_ISR@i2c_address,0,c
  4700                           
  4701                           ;i2c1.c: 338: i2c_10bit_address_restart = 1;
  4702  0116' 0E01               	movlw	1
  4703  0118' 6E08'              	movwf	I2C1_ISR@i2c_10bit_address_restart,c
  4704                           
  4705                           ;i2c1.c: 341: i2c1_state = S_MASTER_SEND_ADDR;
  4706  011A' 0E02               	movlw	2
  4707  011C' 6E11'              	movwf	_i2c1_state,c
  4708  011E' 0012               	return	
  4709  0120'                    i2l2610:
  4710                           
  4711                           ;i2c1.c: 359: if (i2c_10bit_address_restart != 1) {
  4712  0120' 0408'              	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
  4713  0122' B4D8               	btfsc	status,2,c
  4714  0124' D01A               	goto	i2l76
  4715                           
  4716                           ;i2c1.c: 361: i2c_address = p_i2c1_trb_current->address;
  4717  0126' C004' FFD9         	movff	_p_i2c1_trb_current,fsr2l
  4718  012A' C005' FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
  4719  012E' CFDE F019'         	movff	postinc2,I2C1_ISR@i2c_address
  4720  0132' CFDD F01A'         	movff	postdec2,I2C1_ISR@i2c_address+1
  4721                           
  4722                           ;i2c1.c: 362: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
  4723  0136' EE20 F003          	lfsr	2,3
  4724  013A' 5004'              	movf	_p_i2c1_trb_current,w,c
  4725  013C' 26D9               	addwf	fsr2l,f,c
  4726  013E' 5005'              	movf	_p_i2c1_trb_current+1,w,c
  4727  0140' 22DA               	addwfc	fsr2h,f,c
  4728  0142' CFDE F000'         	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
  4729  0146' CFDD F001'         	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
  4730                           
  4731                           ;i2c1.c: 363: i2c_bytes_left = p_i2c1_trb_current->length;
  4732  014A' EE20 F002          	lfsr	2,2
  4733  014E' 5004'              	movf	_p_i2c1_trb_current,w,c
  4734  0150' 26D9               	addwf	fsr2l,f,c
  4735  0152' 5005'              	movf	_p_i2c1_trb_current+1,w,c
  4736  0154' 22DA               	addwfc	fsr2h,f,c
  4737  0156' 50DF               	movf	indf2,w,c
  4738  0158' 6E09'              	movwf	I2C1_ISR@i2c_bytes_left,c
  4739  015A'                    i2l76:
  4740                           
  4741                           ;i2c1.c: 383: SSP1BUF = i2c_address;
  4742  015A' C019' FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
  4743                           
  4744                           ;i2c1.c: 384: if (i2c_address & 0x01) {
  4745  015E' A019'              	btfss	I2C1_ISR@i2c_address,0,c
  4746  0160' D003               	goto	i2l2630
  4747                           
  4748                           ;i2c1.c: 386: i2c1_state = S_MASTER_ACK_ADDR;
  4749  0162' 0E05               	movlw	5
  4750  0164' 6E11'              	movwf	_i2c1_state,c
  4751                           
  4752                           ;i2c1.c: 387: } else {
  4753  0166' 0012               	return	
  4754  0168'                    i2l2630:
  4755                           
  4756                           ;i2c1.c: 389: i2c1_state = S_MASTER_SEND_DATA;
  4757  0168' 0E03               	movlw	3
  4758  016A' 6E11'              	movwf	_i2c1_state,c
  4759  016C' 0012               	return	
  4760  016E'                    i2l82:
  4761                           
  4762                           ;i2c1.c: 397: if (SSP1CON2bits.ACKSTAT) {
  4763  016E' ACC5               	btfss	4037,6,c	;volatile
  4764  0170' D006               	goto	i2l2638
  4765                           
  4766                           ;i2c1.c: 399: i2c1_object.i2cErrors++;
  4767  0172' 2A06'              	incf	_i2c1_object+6,f,c
  4768                           
  4769                           ;i2c1.c: 402: SSP1CON2bits.ACKSTAT = 0;
  4770  0174' 9CC5               	bcf	4037,6,c	;volatile
  4771                           
  4772                           ;i2c1.c: 405: I2C1_Stop(I2C1_DATA_NO_ACK);
  4773  0176' 0E05               	movlw	5
  4774  0178' EC00' F000'        	call	_I2C1_Stop
  4775                           
  4776                           ;i2c1.c: 407: } else {
  4777  017C' 0012               	return	
  4778  017E'                    i2l2638:
  4779                           
  4780                           ;i2c1.c: 409: if (i2c_bytes_left-- == 0U) {
  4781  017E' 0609'              	decf	I2C1_ISR@i2c_bytes_left,f,c
  4782  0180' 2800'              	incf	I2C1_ISR@i2c_bytes_left& (0+255),w,c
  4783  0182' A4D8               	btfss	status,2,c
  4784  0184' D00E               	goto	i2l2648
  4785                           
  4786                           ;i2c1.c: 413: p_i2c1_trb_current++;
  4787  0186' 0E06               	movlw	6
  4788  0188' 2604'              	addwf	_p_i2c1_trb_current,f,c
  4789  018A' 0E00               	movlw	0
  4790  018C' 2205'              	addwfc	_p_i2c1_trb_current+1,f,c
  4791                           
  4792                           ;i2c1.c: 416: if (--i2c1_trb_count == 0) {
  4793  018E' 2E12'              	decfsz	_i2c1_trb_count,f,c
  4794  0190' D004               	goto	i2l86
  4795                           
  4796                           ;i2c1.c: 417: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  4797  0192' 0E00               	movlw	0
  4798  0194' EC00' F000'        	call	_I2C1_Stop
  4799                           
  4800                           ;i2c1.c: 418: } else {
  4801  0198' 0012               	return	
  4802  019A'                    i2l86:
  4803                           
  4804                           ;i2c1.c: 425: SSP1CON2bits.RSEN = 1;
  4805  019A' 82C5               	bsf	4037,1,c	;volatile
  4806                           
  4807                           ;i2c1.c: 428: i2c1_state = S_MASTER_SEND_ADDR;
  4808  019C' 0E02               	movlw	2
  4809  019E' 6E11'              	movwf	_i2c1_state,c
  4810  01A0' 0012               	return	
  4811  01A2'                    i2l2648:
  4812                           
  4813                           ;i2c1.c: 433: SSP1BUF = *pi2c_buf_ptr++;
  4814  01A2' C000' FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  4815  01A6' C001' FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  4816  01AA' 50DF               	movf	indf2,w,c
  4817  01AC' 6EC9               	movwf	4041,c	;volatile
  4818  01AE' 4A00'              	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
  4819  01B0' 2A01'              	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
  4820  01B2' 0012               	return	
  4821  01B4'                    i2l89:
  4822                           
  4823                           ;i2c1.c: 441: if (SSP1CON2bits.ACKSTAT) {
  4824  01B4' ACC5               	btfss	4037,6,c	;volatile
  4825  01B6' D006               	goto	i2l90
  4826                           
  4827                           ;i2c1.c: 444: i2c1_object.i2cErrors++;
  4828  01B8' 2A06'              	incf	_i2c1_object+6,f,c
  4829                           
  4830                           ;i2c1.c: 447: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  4831  01BA' 0E04               	movlw	4
  4832  01BC' EC00' F000'        	call	_I2C1_Stop
  4833                           
  4834                           ;i2c1.c: 450: SSP1CON2bits.ACKSTAT = 0;
  4835  01C0' 9CC5               	bcf	4037,6,c	;volatile
  4836                           
  4837                           ;i2c1.c: 451: } else {
  4838  01C2' 0012               	return	
  4839  01C4'                    i2l90:
  4840                           
  4841                           ;i2c1.c: 452: SSP1CON2bits.RCEN = 1;
  4842  01C4' 86C5               	bsf	4037,3,c	;volatile
  4843                           
  4844                           ;i2c1.c: 453: i2c1_state = S_MASTER_ACK_RCV_DATA;
  4845  01C6' 0E08               	movlw	8
  4846  01C8' 6E11'              	movwf	_i2c1_state,c
  4847  01CA' 0012               	return	
  4848  01CC'                    i2l2660:
  4849                           
  4850                           ;i2c1.c: 462: i2c1_state = S_MASTER_ACK_RCV_DATA;
  4851  01CC' 0E08               	movlw	8
  4852  01CE' 6E11'              	movwf	_i2c1_state,c
  4853                           
  4854                           ;i2c1.c: 465: SSP1CON2bits.RCEN = 1;
  4855  01D0' 86C5               	bsf	4037,3,c	;volatile
  4856                           
  4857                           ;i2c1.c: 467: break;
  4858  01D2' 0012               	return	
  4859  01D4'                    i2l2664:
  4860                           
  4861                           ;i2c1.c: 472: *pi2c_buf_ptr++ = SSP1BUF;
  4862  01D4' C000' FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  4863  01D8' C001' FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  4864  01DC' CFC9 FFDF          	movff	4041,indf2	;volatile
  4865  01E0' 4A00'              	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
  4866  01E2' 2A01'              	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
  4867                           
  4868                           ;i2c1.c: 475: if (--i2c_bytes_left) {
  4869  01E4' 0E01               	movlw	1
  4870  01E6' 5E09'              	subwf	I2C1_ISR@i2c_bytes_left,f,c
  4871  01E8' B4D8               	btfsc	status,2,c
  4872  01EA' D004               	goto	i2l94
  4873                           
  4874                           ;i2c1.c: 481: SSP1CON2bits.ACKDT = 0;
  4875  01EC' 9AC5               	bcf	4037,5,c	;volatile
  4876                           
  4877                           ;i2c1.c: 484: i2c1_state = S_MASTER_RCV_DATA;
  4878  01EE' 0E06               	movlw	6
  4879  01F0' 6E11'              	movwf	_i2c1_state,c
  4880                           
  4881                           ;i2c1.c: 485: } else {
  4882  01F2' D003               	goto	i2l2676
  4883  01F4'                    i2l94:
  4884                           
  4885                           ;i2c1.c: 489: SSP1CON2bits.ACKDT = 1;
  4886  01F4' 8AC5               	bsf	4037,5,c	;volatile
  4887                           
  4888                           ;i2c1.c: 491: I2C1_FunctionComplete();
  4889  01F6' EC00' F000'        	call	_I2C1_FunctionComplete	;wreg free
  4890  01FA'                    i2l2676:
  4891                           
  4892                           ;i2c1.c: 492: }
  4893                           ;i2c1.c: 495: SSP1CON2bits.ACKEN = 1;
  4894  01FA' 88C5               	bsf	4037,4,c	;volatile
  4895                           
  4896                           ;i2c1.c: 496: break;
  4897  01FC' 0012               	return	
  4898  01FE'                    i2l2678:
  4899                           
  4900                           ;i2c1.c: 499: case S_MASTER_SEND_STOP:
  4901                           ;i2c1.c: 502: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  4902  01FE' 0E00               	movlw	0
  4903  0200' EC00' F000'        	call	_I2C1_Stop
  4904                           
  4905                           ;i2c1.c: 503: break;
  4906  0204' 0012               	return	
  4907  0206'                    i2l2680:
  4908                           
  4909                           ;i2c1.c: 509: i2c1_object.i2cErrors++;
  4910  0206' 2A06'              	incf	_i2c1_object+6,f,c
  4911                           
  4912                           ;i2c1.c: 510: I2C1_Stop(I2C1_LOST_STATE);
  4913  0208' 0E06               	movlw	6
  4914  020A' EC00' F000'        	call	_I2C1_Stop
  4915                           
  4916                           ;i2c1.c: 511: break;
  4917  020E' 0012               	return	
  4918  0210'                    i2l2686:
  4919  0210' 5011'              	movf	_i2c1_state,w,c
  4920                           
  4921                           ; Switch size 1, requested type "space"
  4922                           ; Number of cases is 11, Range of values is 0 to 11
  4923                           ; switch strategies available:
  4924                           ; Name         Instructions Cycles
  4925                           ; simple_byte           34    18 (average)
  4926                           ;	Chosen strategy is simple_byte
  4927  0212' 0A00               	xorlw	0	; case 0
  4928  0214' B4D8               	btfsc	status,2,c
  4929  0216' D70F               	goto	i2l60
  4930  0218' 0A01               	xorlw	1	; case 1
  4931  021A' B4D8               	btfsc	status,2,c
  4932  021C' D74B               	goto	i2l65
  4933  021E' 0A03               	xorlw	3	; case 2
  4934  0220' B4D8               	btfsc	status,2,c
  4935  0222' D77E               	goto	i2l2610
  4936  0224' 0A01               	xorlw	1	; case 3
  4937  0226' B4D8               	btfsc	status,2,c
  4938  0228' D7A2               	goto	i2l82
  4939  022A' 0A07               	xorlw	7	; case 4
  4940  022C' B4D8               	btfsc	status,2,c
  4941  022E' D7E7               	goto	i2l2678
  4942  0230' 0A01               	xorlw	1	; case 5
  4943  0232' B4D8               	btfsc	status,2,c
  4944  0234' D7BF               	goto	i2l89
  4945  0236' 0A03               	xorlw	3	; case 6
  4946  0238' B4D8               	btfsc	status,2,c
  4947  023A' D7C8               	goto	i2l2660
  4948  023C' 0A01               	xorlw	1	; case 7
  4949  023E' B4D8               	btfsc	status,2,c
  4950  0240' D7DE               	goto	i2l2678
  4951  0242' 0A0F               	xorlw	15	; case 8
  4952  0244' B4D8               	btfsc	status,2,c
  4953  0246' D7C6               	goto	i2l2664
  4954  0248' 0A02               	xorlw	2	; case 10
  4955  024A' B4D8               	btfsc	status,2,c
  4956  024C' D737               	goto	i2l66
  4957  024E' 0A01               	xorlw	1	; case 11
  4958  0250' B4D8               	btfsc	status,2,c
  4959  0252' D74A               	goto	i2l71
  4960  0254' D7D8               	goto	i2l2680
  4961  0256'                    __end_of_I2C1_ISR:
  4962                           	opt stack 0
  4963                           pclatu	equ	0xFFB
  4964                           pclath	equ	0xFFA
  4965                           tblptru	equ	0xFF8
  4966                           tblptrh	equ	0xFF7
  4967                           tblptrl	equ	0xFF6
  4968                           tablat	equ	0xFF5
  4969                           prodh	equ	0xFF4
  4970                           prodl	equ	0xFF3
  4971                           intcon	equ	0xFF2
  4972                           intcon2	equ	0xFF1
  4973                           postinc0	equ	0xFEE
  4974                           fsr0h	equ	0xFEA
  4975                           fsr0l	equ	0xFE9
  4976                           wreg	equ	0xFE8
  4977                           fsr1h	equ	0xFE2
  4978                           fsr1l	equ	0xFE1
  4979                           indf2	equ	0xFDF
  4980                           postinc2	equ	0xFDE
  4981                           postdec2	equ	0xFDD
  4982                           fsr2h	equ	0xFDA
  4983                           fsr2l	equ	0xFD9
  4984                           status	equ	0xFD8
  4985                           
  4986 ;; *************** function _I2C1_Stop *****************
  4987 ;; Defined at:
  4988 ;;		line 530 in file "mcc_generated_files/i2c1.c"
  4989 ;; Parameters:    Size  Location     Type
  4990 ;;  completion_c    1    wreg     enum E8836
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;  completion_c    1    2[COMRAM] enum E8836
  4993 ;; Return value:  Size  Location     Type
  4994 ;;		None               void
  4995 ;; Registers used:
  4996 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5002 ;;      Params:         0       0       0       0       0       0       0
  5003 ;;      Locals:         1       0       0       0       0       0       0
  5004 ;;      Temps:          2       0       0       0       0       0       0
  5005 ;;      Totals:         3       0       0       0       0       0       0
  5006 ;;Total ram usage:        3 bytes
  5007 ;; Hardware stack levels used:    1
  5008 ;; This function calls:
  5009 ;;		Nothing
  5010 ;; This function is called by:
  5011 ;;		_I2C1_ISR
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           	psect	text35
  5016  0000'                    __ptext35:
  5017                           	opt stack 0
  5018  0000'                    _I2C1_Stop:
  5019                           	opt stack 23
  5020                           
  5021                           ;incstack = 0
  5022                           ;I2C1_Stop@completion_code stored from wreg
  5023  0000' 6E02'              	movwf	I2C1_Stop@completion_code,c
  5024                           
  5025                           ;i2c1.c: 532: SSP1CON2bits.PEN = 1;
  5026  0002' 84C5               	bsf	4037,2,c	;volatile
  5027                           
  5028                           ;i2c1.c: 535: if (p_i2c1_current->pTrFlag != (0)) {
  5029  0004' EE20 F003          	lfsr	2,3
  5030  0008' 5002'              	movf	_p_i2c1_current,w,c
  5031  000A' 26D9               	addwf	fsr2l,f,c
  5032  000C' 5003'              	movf	_p_i2c1_current+1,w,c
  5033  000E' 22DA               	addwfc	fsr2h,f,c
  5034  0010' 50DE               	movf	postinc2,w,c
  5035  0012' 10DD               	iorwf	postdec2,w,c
  5036  0014' B4D8               	btfsc	status,2,c
  5037  0016' D010               	goto	i2l2398
  5038                           
  5039                           ;i2c1.c: 537: *(p_i2c1_current->pTrFlag) = completion_code;
  5040  0018' EE20 F003          	lfsr	2,3
  5041  001C' 5002'              	movf	_p_i2c1_current,w,c
  5042  001E' 26D9               	addwf	fsr2l,f,c
  5043  0020' 5003'              	movf	_p_i2c1_current+1,w,c
  5044  0022' 22DA               	addwfc	fsr2h,f,c
  5045  0024' CFDE F000'         	movff	postinc2,??_I2C1_Stop
  5046  0028' CFDD F001'         	movff	postdec2,??_I2C1_Stop+1
  5047  002C' C000' FFD9         	movff	??_I2C1_Stop,fsr2l
  5048  0030' C001' FFDA         	movff	??_I2C1_Stop+1,fsr2h
  5049  0034' C002' FFDF         	movff	I2C1_Stop@completion_code,indf2
  5050  0038'                    i2l2398:
  5051                           
  5052                           ;i2c1.c: 538: }
  5053                           ;i2c1.c: 541: i2c1_state = S_MASTER_IDLE;
  5054  0038' 0E00               	movlw	0
  5055  003A' 6E11'              	movwf	_i2c1_state,c
  5056  003C' 0012               	return	
  5057  003E'                    __end_of_I2C1_Stop:
  5058                           	opt stack 0
  5059                           pclatu	equ	0xFFB
  5060                           pclath	equ	0xFFA
  5061                           tblptru	equ	0xFF8
  5062                           tblptrh	equ	0xFF7
  5063                           tblptrl	equ	0xFF6
  5064                           tablat	equ	0xFF5
  5065                           prodh	equ	0xFF4
  5066                           prodl	equ	0xFF3
  5067                           intcon	equ	0xFF2
  5068                           intcon2	equ	0xFF1
  5069                           postinc0	equ	0xFEE
  5070                           fsr0h	equ	0xFEA
  5071                           fsr0l	equ	0xFE9
  5072                           wreg	equ	0xFE8
  5073                           fsr1h	equ	0xFE2
  5074                           fsr1l	equ	0xFE1
  5075                           indf2	equ	0xFDF
  5076                           postinc2	equ	0xFDE
  5077                           postdec2	equ	0xFDD
  5078                           fsr2h	equ	0xFDA
  5079                           fsr2l	equ	0xFD9
  5080                           status	equ	0xFD8
  5081                           
  5082 ;; *************** function _I2C1_FunctionComplete *****************
  5083 ;; Defined at:
  5084 ;;		line 516 in file "mcc_generated_files/i2c1.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;		None
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;		None
  5089 ;; Return value:  Size  Location     Type
  5090 ;;		None               void
  5091 ;; Registers used:
  5092 ;;		wreg, status,2, status,0
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5098 ;;      Params:         0       0       0       0       0       0       0
  5099 ;;      Locals:         0       0       0       0       0       0       0
  5100 ;;      Temps:          0       0       0       0       0       0       0
  5101 ;;      Totals:         0       0       0       0       0       0       0
  5102 ;;Total ram usage:        0 bytes
  5103 ;; Hardware stack levels used:    1
  5104 ;; This function calls:
  5105 ;;		Nothing
  5106 ;; This function is called by:
  5107 ;;		_I2C1_ISR
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111                           	psect	text36
  5112  0000'                    __ptext36:
  5113                           	opt stack 0
  5114  0000'                    _I2C1_FunctionComplete:
  5115                           	opt stack 23
  5116                           
  5117                           ;i2c1.c: 519: p_i2c1_trb_current++;
  5118                           
  5119                           ;incstack = 0
  5120  0000' 0E06               	movlw	6
  5121  0002' 2604'              	addwf	_p_i2c1_trb_current,f,c
  5122  0004' 0E00               	movlw	0
  5123  0006' 2205'              	addwfc	_p_i2c1_trb_current+1,f,c
  5124                           
  5125                           ;i2c1.c: 522: if (--i2c1_trb_count == 0) {
  5126  0008' 2E12'              	decfsz	_i2c1_trb_count,f,c
  5127  000A' D003               	goto	i2l2406
  5128                           
  5129                           ;i2c1.c: 523: i2c1_state = S_MASTER_SEND_STOP;
  5130  000C' 0E04               	movlw	4
  5131  000E' 6E11'              	movwf	_i2c1_state,c
  5132                           
  5133                           ;i2c1.c: 524: } else {
  5134  0010' 0012               	return	
  5135  0012'                    i2l2406:
  5136                           
  5137                           ;i2c1.c: 525: i2c1_state = S_MASTER_RESTART;
  5138  0012' 0E01               	movlw	1
  5139  0014' 6E11'              	movwf	_i2c1_state,c
  5140  0016' 0012               	return	
  5141  0018'                    __end_of_I2C1_FunctionComplete:
  5142                           	opt stack 0
  5143                           pclatu	equ	0xFFB
  5144                           pclath	equ	0xFFA
  5145                           tblptru	equ	0xFF8
  5146                           tblptrh	equ	0xFF7
  5147                           tblptrl	equ	0xFF6
  5148                           tablat	equ	0xFF5
  5149                           prodh	equ	0xFF4
  5150                           prodl	equ	0xFF3
  5151                           intcon	equ	0xFF2
  5152                           intcon2	equ	0xFF1
  5153                           postinc0	equ	0xFEE
  5154                           fsr0h	equ	0xFEA
  5155                           fsr0l	equ	0xFE9
  5156                           wreg	equ	0xFE8
  5157                           fsr1h	equ	0xFE2
  5158                           fsr1l	equ	0xFE1
  5159                           indf2	equ	0xFDF
  5160                           postinc2	equ	0xFDE
  5161                           postdec2	equ	0xFDD
  5162                           fsr2h	equ	0xFDA
  5163                           fsr2l	equ	0xFD9
  5164                           status	equ	0xFD8
  5165                           
  5166 ;; *************** function _I2C1_BusCollisionISR *****************
  5167 ;; Defined at:
  5168 ;;		line 656 in file "mcc_generated_files/i2c1.c"
  5169 ;; Parameters:    Size  Location     Type
  5170 ;;		None
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;		None
  5173 ;; Return value:  Size  Location     Type
  5174 ;;		None               void
  5175 ;; Registers used:
  5176 ;;		None
  5177 ;; Tracked objects:
  5178 ;;		On entry : 0/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5182 ;;      Params:         0       0       0       0       0       0       0
  5183 ;;      Locals:         0       0       0       0       0       0       0
  5184 ;;      Temps:          0       0       0       0       0       0       0
  5185 ;;      Totals:         0       0       0       0       0       0       0
  5186 ;;Total ram usage:        0 bytes
  5187 ;; Hardware stack levels used:    1
  5188 ;; This function calls:
  5189 ;;		Nothing
  5190 ;; This function is called by:
  5191 ;;		_INTERRUPT_InterruptManager
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           	psect	text37
  5196  0000'                    __ptext37:
  5197                           	opt stack 0
  5198  0000'                    _I2C1_BusCollisionISR:
  5199                           	opt stack 24
  5200                           
  5201                           ;incstack = 0
  5202  0000' 0012               	return	
  5203  0002'                    __end_of_I2C1_BusCollisionISR:
  5204                           	opt stack 0
  5205                           pclatu	equ	0xFFB
  5206                           pclath	equ	0xFFA
  5207                           tblptru	equ	0xFF8
  5208                           tblptrh	equ	0xFF7
  5209                           tblptrl	equ	0xFF6
  5210                           tablat	equ	0xFF5
  5211                           prodh	equ	0xFF4
  5212                           prodl	equ	0xFF3
  5213                           intcon	equ	0xFF2
  5214                           intcon2	equ	0xFF1
  5215                           postinc0	equ	0xFEE
  5216                           fsr0h	equ	0xFEA
  5217                           fsr0l	equ	0xFE9
  5218                           wreg	equ	0xFE8
  5219                           fsr1h	equ	0xFE2
  5220                           fsr1l	equ	0xFE1
  5221                           indf2	equ	0xFDF
  5222                           postinc2	equ	0xFDE
  5223                           postdec2	equ	0xFDD
  5224                           fsr2h	equ	0xFDA
  5225                           fsr2l	equ	0xFD9
  5226                           status	equ	0xFD8
  5227                           
  5228 ;; *************** function _EUSART1_Transmit_ISR *****************
  5229 ;; Defined at:
  5230 ;;		line 155 in file "mcc_generated_files/eusart1.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;		None
  5233 ;; Auto vars:     Size  Location     Type
  5234 ;;		None
  5235 ;; Return value:  Size  Location     Type
  5236 ;;		None               void
  5237 ;; Registers used:
  5238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5239 ;; Tracked objects:
  5240 ;;		On entry : 0/0
  5241 ;;		On exit  : 0/0
  5242 ;;		Unchanged: 0/0
  5243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5244 ;;      Params:         0       0       0       0       0       0       0
  5245 ;;      Locals:         0       0       0       0       0       0       0
  5246 ;;      Temps:          0       0       0       0       0       0       0
  5247 ;;      Totals:         0       0       0       0       0       0       0
  5248 ;;Total ram usage:        0 bytes
  5249 ;; Hardware stack levels used:    1
  5250 ;; This function calls:
  5251 ;;		Nothing
  5252 ;; This function is called by:
  5253 ;;		_INTERRUPT_InterruptManager
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257                           	psect	text38
  5258  0000'                    __ptext38:
  5259                           	opt stack 0
  5260  0000'                    _EUSART1_Transmit_ISR:
  5261                           	opt stack 24
  5262                           
  5263                           ;eusart1.c: 158: if (sizeof (eusart1TxBuffer) > eusart1TxBufferRemaining) {
  5264                           
  5265                           ;incstack = 0
  5266  0000' 0E08               	movlw	8
  5267  0002' 5C09'              	subwf	_eusart1TxBufferRemaining,w,c	;volatile
  5268  0004' B0D8               	btfsc	status,0,c
  5269  0006' D014               	goto	i2l304
  5270                           
  5271                           ;eusart1.c: 159: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  5272  0008' 5010'              	movf	_eusart1TxTail,w,c
  5273  000A' 0D01               	mullw	1
  5274  000C' 0100               	movlb	0	; () banked
  5275  000E' 0E00'              	movlw	low _eusart1TxBuffer
  5276  0010' 24F3               	addwf	prodl,w,c
  5277  0012' 6ED9               	movwf	fsr2l,c
  5278  0014' 0100               	movlb	0	; () banked
  5279  0016' 0E00'              	movlw	high _eusart1TxBuffer
  5280  0018' 20F4               	addwfc	prodh,w,c
  5281  001A' 6EDA               	movwf	fsr2h,c
  5282  001C' 50DF               	movf	indf2,w,c
  5283  001E' 6EAD               	movwf	4013,c	;volatile
  5284                           
  5285                           ; BSR set to: 0
  5286  0020' 2A10'              	incf	_eusart1TxTail,f,c
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;eusart1.c: 160: if (sizeof (eusart1TxBuffer) <= eusart1TxTail) {
  5290  0022' 0E07               	movlw	7
  5291  0024' 6410'              	cpfsgt	_eusart1TxTail,c
  5292  0026' D002               	goto	i2l2736
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;eusart1.c: 161: eusart1TxTail = 0;
  5296  0028' 0E00               	movlw	0
  5297  002A' 6E10'              	movwf	_eusart1TxTail,c
  5298  002C'                    i2l2736:
  5299                           
  5300                           ; BSR set to: 0
  5301                           ;eusart1.c: 162: }
  5302                           ;eusart1.c: 163: eusart1TxBufferRemaining++;
  5303  002C' 2A09'              	incf	_eusart1TxBufferRemaining,f,c	;volatile
  5304                           
  5305                           ;eusart1.c: 164: } else {
  5306  002E' 0012               	return	
  5307  0030'                    i2l304:
  5308                           
  5309                           ;eusart1.c: 165: PIE1bits.TX1IE = 0;
  5310  0030' 989D               	bcf	3997,4,c	;volatile
  5311  0032' 0012               	return	
  5312  0034'                    __end_of_EUSART1_Transmit_ISR:
  5313                           	opt stack 0
  5314                           pclatu	equ	0xFFB
  5315                           pclath	equ	0xFFA
  5316                           tblptru	equ	0xFF8
  5317                           tblptrh	equ	0xFF7
  5318                           tblptrl	equ	0xFF6
  5319                           tablat	equ	0xFF5
  5320                           prodh	equ	0xFF4
  5321                           prodl	equ	0xFF3
  5322                           intcon	equ	0xFF2
  5323                           intcon2	equ	0xFF1
  5324                           postinc0	equ	0xFEE
  5325                           fsr0h	equ	0xFEA
  5326                           fsr0l	equ	0xFE9
  5327                           wreg	equ	0xFE8
  5328                           fsr1h	equ	0xFE2
  5329                           fsr1l	equ	0xFE1
  5330                           indf2	equ	0xFDF
  5331                           postinc2	equ	0xFDE
  5332                           postdec2	equ	0xFDD
  5333                           fsr2h	equ	0xFDA
  5334                           fsr2l	equ	0xFD9
  5335                           status	equ	0xFD8
  5336                           
  5337 ;; *************** function _EUSART1_Receive_ISR *****************
  5338 ;; Defined at:
  5339 ;;		line 169 in file "mcc_generated_files/eusart1.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;		None
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;		None
  5344 ;; Return value:  Size  Location     Type
  5345 ;;		None               void
  5346 ;; Registers used:
  5347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5353 ;;      Params:         0       0       0       0       0       0       0
  5354 ;;      Locals:         0       0       0       0       0       0       0
  5355 ;;      Temps:          0       0       0       0       0       0       0
  5356 ;;      Totals:         0       0       0       0       0       0       0
  5357 ;;Total ram usage:        0 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; This function calls:
  5360 ;;		Nothing
  5361 ;; This function is called by:
  5362 ;;		_INTERRUPT_InterruptManager
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           	psect	text39
  5367  0000'                    __ptext39:
  5368                           	opt stack 0
  5369  0000'                    _EUSART1_Receive_ISR:
  5370                           	opt stack 24
  5371                           
  5372                           ;eusart1.c: 170: if (1 == RC1STAbits.OERR) {
  5373                           
  5374                           ;incstack = 0
  5375  0000' A2AB               	btfss	4011,1,c	;volatile
  5376  0002' D002               	goto	i2l2742
  5377                           
  5378                           ;eusart1.c: 173: RC1STAbits.CREN = 0;
  5379  0004' 98AB               	bcf	4011,4,c	;volatile
  5380                           
  5381                           ;eusart1.c: 174: RC1STAbits.CREN = 1;
  5382  0006' 88AB               	bsf	4011,4,c	;volatile
  5383  0008'                    i2l2742:
  5384                           
  5385                           ;eusart1.c: 175: }
  5386                           ;eusart1.c: 178: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  5387  0008' 500D'              	movf	_eusart1RxHead,w,c
  5388  000A' 0D01               	mullw	1
  5389  000C' 0100               	movlb	0	; () banked
  5390  000E' 0E00'              	movlw	low _eusart1RxBuffer
  5391  0010' 24F3               	addwf	prodl,w,c
  5392  0012' 6ED9               	movwf	fsr2l,c
  5393  0014' 0100               	movlb	0	; () banked
  5394  0016' 0E00'              	movlw	high _eusart1RxBuffer
  5395  0018' 20F4               	addwfc	prodh,w,c
  5396  001A' 6EDA               	movwf	fsr2h,c
  5397  001C' CFAE FFDF          	movff	4014,indf2	;volatile
  5398                           
  5399                           ; BSR set to: 0
  5400  0020' 2A0D'              	incf	_eusart1RxHead,f,c
  5401                           
  5402                           ; BSR set to: 0
  5403                           ;eusart1.c: 179: if (sizeof (eusart1RxBuffer) <= eusart1RxHead) {
  5404  0022' 0E07               	movlw	7
  5405  0024' 640D'              	cpfsgt	_eusart1RxHead,c
  5406  0026' D002               	goto	i2l2750
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;eusart1.c: 180: eusart1RxHead = 0;
  5410  0028' 0E00               	movlw	0
  5411  002A' 6E0D'              	movwf	_eusart1RxHead,c
  5412  002C'                    i2l2750:
  5413                           
  5414                           ; BSR set to: 0
  5415                           ;eusart1.c: 181: }
  5416                           ;eusart1.c: 182: eusart1RxCount++;
  5417  002C' 2A0C'              	incf	_eusart1RxCount,f,c	;volatile
  5418                           
  5419                           ; BSR set to: 0
  5420  002E' 0012               	return	
  5421  0030'                    __end_of_EUSART1_Receive_ISR:
  5422                           	opt stack 0
  5423                           pclatu	equ	0xFFB
  5424                           pclath	equ	0xFFA
  5425                           tblptru	equ	0xFF8
  5426                           tblptrh	equ	0xFF7
  5427                           tblptrl	equ	0xFF6
  5428                           tablat	equ	0xFF5
  5429                           prodh	equ	0xFF4
  5430                           prodl	equ	0xFF3
  5431                           intcon	equ	0xFF2
  5432                           intcon2	equ	0xFF1
  5433                           postinc0	equ	0xFEE
  5434                           fsr0h	equ	0xFEA
  5435                           fsr0l	equ	0xFE9
  5436                           wreg	equ	0xFE8
  5437                           fsr1h	equ	0xFE2
  5438                           fsr1l	equ	0xFE1
  5439                           indf2	equ	0xFDF
  5440                           postinc2	equ	0xFDE
  5441                           postdec2	equ	0xFDD
  5442                           fsr2h	equ	0xFDA
  5443                           fsr2l	equ	0xFD9
  5444                           status	equ	0xFD8
  5445                           
  5446 ;; *************** function _ECCP2_CaptureISR *****************
  5447 ;; Defined at:
  5448 ;;		line 80 in file "mcc_generated_files/eccp2.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;		None
  5451 ;; Auto vars:     Size  Location     Type
  5452 ;;  module          2    2[COMRAM] struct CCPR2Reg_tag
  5453 ;; Return value:  Size  Location     Type
  5454 ;;		None               void
  5455 ;; Registers used:
  5456 ;;		cstack
  5457 ;; Tracked objects:
  5458 ;;		On entry : 0/0
  5459 ;;		On exit  : 0/0
  5460 ;;		Unchanged: 0/0
  5461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5462 ;;      Params:         0       0       0       0       0       0       0
  5463 ;;      Locals:         2       0       0       0       0       0       0
  5464 ;;      Temps:          0       0       0       0       0       0       0
  5465 ;;      Totals:         2       0       0       0       0       0       0
  5466 ;;Total ram usage:        2 bytes
  5467 ;; Hardware stack levels used:    1
  5468 ;; Hardware stack levels required when called:    1
  5469 ;; This function calls:
  5470 ;;		_ECCP2_CallBack
  5471 ;; This function is called by:
  5472 ;;		_INTERRUPT_InterruptManager
  5473 ;; This function uses a non-reentrant model
  5474 ;;
  5475                           
  5476                           	psect	text40
  5477  0000'                    __ptext40:
  5478                           	opt stack 0
  5479  0000'                    _ECCP2_CaptureISR:
  5480                           	opt stack 23
  5481                           
  5482                           ;eccp2.c: 81: CCP_PERIOD_REG_T module;
  5483                           ;eccp2.c: 84: PIR2bits.CCP2IF = 0;
  5484                           
  5485                           ; BSR set to: 0
  5486                           ;incstack = 0
  5487  0000' 90A1               	bcf	4001,0,c	;volatile
  5488                           
  5489                           ;eccp2.c: 87: module.ccpr2l = CCPR2L;
  5490  0002' CF67 F002'         	movff	3943,ECCP2_CaptureISR@module	;volatile
  5491                           
  5492                           ;eccp2.c: 88: module.ccpr2h = CCPR2H;
  5493  0006' CF68 F003'         	movff	3944,ECCP2_CaptureISR@module+1	;volatile
  5494                           
  5495                           ;eccp2.c: 91: ECCP2_CallBack(module.ccpr2_16Bit);
  5496  000A' C002' F000'        	movff	ECCP2_CaptureISR@module,ECCP2_CallBack@capturedValue
  5497  000E' C003' F001'        	movff	ECCP2_CaptureISR@module+1,ECCP2_CallBack@capturedValue+1
  5498  0012' EC00' F000'        	call	_ECCP2_CallBack	;wreg free
  5499  0016' 0012               	return	
  5500  0018'                    __end_of_ECCP2_CaptureISR:
  5501                           	opt stack 0
  5502                           pclatu	equ	0xFFB
  5503                           pclath	equ	0xFFA
  5504                           tblptru	equ	0xFF8
  5505                           tblptrh	equ	0xFF7
  5506                           tblptrl	equ	0xFF6
  5507                           tablat	equ	0xFF5
  5508                           prodh	equ	0xFF4
  5509                           prodl	equ	0xFF3
  5510                           intcon	equ	0xFF2
  5511                           intcon2	equ	0xFF1
  5512                           postinc0	equ	0xFEE
  5513                           fsr0h	equ	0xFEA
  5514                           fsr0l	equ	0xFE9
  5515                           wreg	equ	0xFE8
  5516                           fsr1h	equ	0xFE2
  5517                           fsr1l	equ	0xFE1
  5518                           indf2	equ	0xFDF
  5519                           postinc2	equ	0xFDE
  5520                           postdec2	equ	0xFDD
  5521                           fsr2h	equ	0xFDA
  5522                           fsr2l	equ	0xFD9
  5523                           status	equ	0xFD8
  5524                           
  5525 ;; *************** function _ECCP2_CallBack *****************
  5526 ;; Defined at:
  5527 ;;		line 94 in file "mcc_generated_files/eccp2.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;  capturedValu    2    0[COMRAM] unsigned int 
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;		None
  5532 ;; Return value:  Size  Location     Type
  5533 ;;		None               void
  5534 ;; Registers used:
  5535 ;;		None
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5541 ;;      Params:         2       0       0       0       0       0       0
  5542 ;;      Locals:         0       0       0       0       0       0       0
  5543 ;;      Temps:          0       0       0       0       0       0       0
  5544 ;;      Totals:         2       0       0       0       0       0       0
  5545 ;;Total ram usage:        2 bytes
  5546 ;; Hardware stack levels used:    1
  5547 ;; This function calls:
  5548 ;;		Nothing
  5549 ;; This function is called by:
  5550 ;;		_ECCP2_CaptureISR
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           
  5554                           	psect	text41
  5555  0000'                    __ptext41:
  5556                           	opt stack 0
  5557  0000'                    _ECCP2_CallBack:
  5558                           	opt stack 23
  5559                           
  5560                           ;incstack = 0
  5561  0000' 0012               	return	
  5562  0002'                    __end_of_ECCP2_CallBack:
  5563                           	opt stack 0
  5564                           pclatu	equ	0xFFB
  5565                           pclath	equ	0xFFA
  5566                           tblptru	equ	0xFF8
  5567                           tblptrh	equ	0xFF7
  5568                           tblptrl	equ	0xFF6
  5569                           tablat	equ	0xFF5
  5570                           prodh	equ	0xFF4
  5571                           prodl	equ	0xFF3
  5572                           intcon	equ	0xFF2
  5573                           intcon2	equ	0xFF1
  5574                           postinc0	equ	0xFEE
  5575                           fsr0h	equ	0xFEA
  5576                           fsr0l	equ	0xFE9
  5577                           wreg	equ	0xFE8
  5578                           fsr1h	equ	0xFE2
  5579                           fsr1l	equ	0xFE1
  5580                           indf2	equ	0xFDF
  5581                           postinc2	equ	0xFDE
  5582                           postdec2	equ	0xFDD
  5583                           fsr2h	equ	0xFDA
  5584                           fsr2l	equ	0xFD9
  5585                           status	equ	0xFD8
  5586                           
  5587 ;; *************** function _ECCP1_CaptureISR *****************
  5588 ;; Defined at:
  5589 ;;		line 80 in file "mcc_generated_files/eccp1.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;		None
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;  module          2    2[COMRAM] struct CCPR1Reg_tag
  5594 ;; Return value:  Size  Location     Type
  5595 ;;		None               void
  5596 ;; Registers used:
  5597 ;;		cstack
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/0
  5600 ;;		On exit  : 0/0
  5601 ;;		Unchanged: 0/0
  5602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5603 ;;      Params:         0       0       0       0       0       0       0
  5604 ;;      Locals:         2       0       0       0       0       0       0
  5605 ;;      Temps:          0       0       0       0       0       0       0
  5606 ;;      Totals:         2       0       0       0       0       0       0
  5607 ;;Total ram usage:        2 bytes
  5608 ;; Hardware stack levels used:    1
  5609 ;; Hardware stack levels required when called:    1
  5610 ;; This function calls:
  5611 ;;		_ECCP1_CallBack
  5612 ;; This function is called by:
  5613 ;;		_INTERRUPT_InterruptManager
  5614 ;; This function uses a non-reentrant model
  5615 ;;
  5616                           
  5617                           	psect	text42
  5618  0000'                    __ptext42:
  5619                           	opt stack 0
  5620  0000'                    _ECCP1_CaptureISR:
  5621                           	opt stack 23
  5622                           
  5623                           ;eccp1.c: 81: CCP_PERIOD_REG_T module;
  5624                           ;eccp1.c: 84: PIR1bits.CCP1IF = 0;
  5625                           
  5626                           ;incstack = 0
  5627  0000' 949E               	bcf	3998,2,c	;volatile
  5628                           
  5629                           ;eccp1.c: 87: module.ccpr1l = CCPR1L;
  5630  0002' CFBE F002'         	movff	4030,ECCP1_CaptureISR@module	;volatile
  5631                           
  5632                           ;eccp1.c: 88: module.ccpr1h = CCPR1H;
  5633  0006' CFBF F003'         	movff	4031,ECCP1_CaptureISR@module+1	;volatile
  5634                           
  5635                           ;eccp1.c: 91: ECCP1_CallBack(module.ccpr1_16Bit);
  5636  000A' C002' F000'        	movff	ECCP1_CaptureISR@module,ECCP1_CallBack@capturedValue
  5637  000E' C003' F001'        	movff	ECCP1_CaptureISR@module+1,ECCP1_CallBack@capturedValue+1
  5638  0012' EC00' F000'        	call	_ECCP1_CallBack	;wreg free
  5639  0016' 0012               	return	
  5640  0018'                    __end_of_ECCP1_CaptureISR:
  5641                           	opt stack 0
  5642                           pclatu	equ	0xFFB
  5643                           pclath	equ	0xFFA
  5644                           tblptru	equ	0xFF8
  5645                           tblptrh	equ	0xFF7
  5646                           tblptrl	equ	0xFF6
  5647                           tablat	equ	0xFF5
  5648                           prodh	equ	0xFF4
  5649                           prodl	equ	0xFF3
  5650                           intcon	equ	0xFF2
  5651                           intcon2	equ	0xFF1
  5652                           postinc0	equ	0xFEE
  5653                           fsr0h	equ	0xFEA
  5654                           fsr0l	equ	0xFE9
  5655                           wreg	equ	0xFE8
  5656                           fsr1h	equ	0xFE2
  5657                           fsr1l	equ	0xFE1
  5658                           indf2	equ	0xFDF
  5659                           postinc2	equ	0xFDE
  5660                           postdec2	equ	0xFDD
  5661                           fsr2h	equ	0xFDA
  5662                           fsr2l	equ	0xFD9
  5663                           status	equ	0xFD8
  5664                           
  5665 ;; *************** function _ECCP1_CallBack *****************
  5666 ;; Defined at:
  5667 ;;		line 94 in file "mcc_generated_files/eccp1.c"
  5668 ;; Parameters:    Size  Location     Type
  5669 ;;  capturedValu    2    0[COMRAM] unsigned int 
  5670 ;; Auto vars:     Size  Location     Type
  5671 ;;		None
  5672 ;; Return value:  Size  Location     Type
  5673 ;;		None               void
  5674 ;; Registers used:
  5675 ;;		None
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5681 ;;      Params:         2       0       0       0       0       0       0
  5682 ;;      Locals:         0       0       0       0       0       0       0
  5683 ;;      Temps:          0       0       0       0       0       0       0
  5684 ;;      Totals:         2       0       0       0       0       0       0
  5685 ;;Total ram usage:        2 bytes
  5686 ;; Hardware stack levels used:    1
  5687 ;; This function calls:
  5688 ;;		Nothing
  5689 ;; This function is called by:
  5690 ;;		_ECCP1_CaptureISR
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694                           	psect	text43
  5695  0000'                    __ptext43:
  5696                           	opt stack 0
  5697  0000'                    _ECCP1_CallBack:
  5698                           	opt stack 23
  5699                           
  5700                           ;incstack = 0
  5701  0000' 0012               	return	
  5702  0002'                    __end_of_ECCP1_CallBack:
  5703                           	opt stack 0
  5704  0000                     pclatu	equ	0xFFB
  5705                           pclath	equ	0xFFA
  5706                           tblptru	equ	0xFF8
  5707                           tblptrh	equ	0xFF7
  5708                           tblptrl	equ	0xFF6
  5709                           tablat	equ	0xFF5
  5710                           prodh	equ	0xFF4
  5711                           prodl	equ	0xFF3
  5712                           intcon	equ	0xFF2
  5713                           intcon2	equ	0xFF1
  5714                           postinc0	equ	0xFEE
  5715                           fsr0h	equ	0xFEA
  5716                           fsr0l	equ	0xFE9
  5717                           wreg	equ	0xFE8
  5718                           fsr1h	equ	0xFE2
  5719                           fsr1l	equ	0xFE1
  5720                           indf2	equ	0xFDF
  5721                           postinc2	equ	0xFDE
  5722                           postdec2	equ	0xFDD
  5723                           fsr2h	equ	0xFDA
  5724                           fsr2l	equ	0xFD9
  5725                           status	equ	0xFD8
  5726                           pclatu	equ	0xFFB
  5727                           pclath	equ	0xFFA
  5728                           tblptru	equ	0xFF8
  5729                           tblptrh	equ	0xFF7
  5730                           tblptrl	equ	0xFF6
  5731                           tablat	equ	0xFF5
  5732                           prodh	equ	0xFF4
  5733                           prodl	equ	0xFF3
  5734                           intcon	equ	0xFF2
  5735                           intcon2	equ	0xFF1
  5736                           postinc0	equ	0xFEE
  5737                           fsr0h	equ	0xFEA
  5738                           fsr0l	equ	0xFE9
  5739                           wreg	equ	0xFE8
  5740                           fsr1h	equ	0xFE2
  5741                           fsr1l	equ	0xFE1
  5742                           indf2	equ	0xFDF
  5743                           postinc2	equ	0xFDE
  5744                           postdec2	equ	0xFDD
  5745                           fsr2h	equ	0xFDA
  5746                           fsr2l	equ	0xFD9
  5747                           status	equ	0xFD8
  5748                           
  5749                           	psect	rparam
  5750  0000                     pclatu	equ	0xFFB
  5751                           pclath	equ	0xFFA
  5752                           tblptru	equ	0xFF8
  5753                           tblptrh	equ	0xFF7
  5754                           tblptrl	equ	0xFF6
  5755                           tablat	equ	0xFF5
  5756                           prodh	equ	0xFF4
  5757                           prodl	equ	0xFF3
  5758                           intcon	equ	0xFF2
  5759                           intcon2	equ	0xFF1
  5760                           postinc0	equ	0xFEE
  5761                           fsr0h	equ	0xFEA
  5762                           fsr0l	equ	0xFE9
  5763                           wreg	equ	0xFE8
  5764                           fsr1h	equ	0xFE2
  5765                           fsr1l	equ	0xFE1
  5766                           indf2	equ	0xFDF
  5767                           postinc2	equ	0xFDE
  5768                           postdec2	equ	0xFDD
  5769                           fsr2h	equ	0xFDA
  5770                           fsr2l	equ	0xFD9
  5771                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         550
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      75
    BANK0           160     19     134
    BANK1           256      0     206
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_tr_queue.pTrFlag	PTR enum E8836 size(2) Largest target is 0

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK0[6]), I2C1_MasterWrite@trBlock(BANK0[6]), 

    memset@p1	PTR void  size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), 

    memset@p	PTR unsigned char  size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), 

    crcBufS_get@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK0[17]), 

    crcBufS_status_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK0[17]), 

    crcBufS_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK0[17]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), 

    FastTransfer_buffer_flush@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), 

    FastTransfer_buffer_put@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), 

    CRC8@data	PTR const unsigned char  size(2) Largest target is 206
		 -> CRCcheck@arrayHolder(BANK0[3]), receiveData@holder_1776(BANK0[3]), receiveData@holder(BANK0[3]), rx_buffer(BANK2[200]), 
		 -> ring_buffer(BANK1[206]), NULL(NULL[0]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), NULL(NULL[0]), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 0
		 -> Absolute function(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 0
		 -> Absolute function(), 

    serial_available	PTR FTN()int  size(2) Largest target is 0
		 -> Absolute function(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_object.pTrTail.pTrFlag	PTR enum E8836 size(2) Largest target is 0

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[6]), I2C1_MasterWrite@trBlock(BANK0[6]), 

    F8948.pbuffer	PTR unsigned char  size(2) Largest target is 0

    F8943.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> group(COMRAM[2]), I2C1_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), 

    S21$pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[6]), I2C1_MasterWrite@trBlock(BANK0[6]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E8836 size(2) Largest target is 0

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[6]), I2C1_MasterWrite@trBlock(BANK0[6]), 

    S33$pTrFlag	PTR enum E8836 size(2) Largest target is 0

    p_i2c1_current.pTrFlag	PTR enum E8836 size(2) Largest target is 0

    S33$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[6]), I2C1_MasterWrite@trBlock(BANK0[6]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[6]), I2C1_MasterWrite@trBlock(BANK0[6]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[6]), NULL(NULL[0]), 

    S44$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[6]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[6]), 

    S44$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[6]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[6]), 


Critical Paths under _main in COMRAM

    _updateComms->_receiveData
    _respondECU->_ToSend
    _sendData->_FastTransfer_buffer_flush
    _FastTransfer_buffer_flush->_memset
    _buttonsCollector->_GetButtonState
    _ToSend->_FastTransfer_buffer_put
    _FastTransfer_buffer_put->_FastTransfer_buffer_modulo_inc
    _CRCcheck->_crcBufS_get
    _handleIndicators->_SetLEDOut

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop
    _ECCP2_CaptureISR->_ECCP2_CallBack
    _ECCP1_CaptureISR->_ECCP1_CallBack

Critical Paths under _main in BANK0

    _updateComms->_receiveData
    _respondECU->_sendData
    _receiveData->_CRCcheck

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9871
                  _SYSTEM_Initialize
                        _updateComms
 ---------------------------------------------------------------------------------
 (1) _updateComms                                          0     0      0    9871
                        _TBbarGraphs
                   _handleIndicators
                        _receiveData
                         _respondECU
 ---------------------------------------------------------------------------------
 (2) _respondECU                                           0     0      0    4208
                              _Delay
                             _ToSend
                   _buttonsCollector
                           _sendData
 ---------------------------------------------------------------------------------
 (3) _sendData                                             5     5      0    2535
                                             32 COMRAM     1     1      0
                                              0 BANK0      4     4      0
                               _CRC8
          _FastTransfer_buffer_flush
                        _crcBufS_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_put                                          7     2      5     742
                                             20 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_flush                            4     0      4     677
                                             28 COMRAM     4     0      4
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     368
                                             20 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (3) _buttonsCollector                                     9     7      2     137
                                             22 COMRAM     9     7      2
                     _GetButtonState
 ---------------------------------------------------------------------------------
 (4) _GetButtonState                                       2     0      2       0
                                             20 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _ToSend                                               3     1      2    1362
                                             33 COMRAM     3     1      2
            _FastTransfer_buffer_put
                   _buttonsCollector (ARG)
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_put                              7     2      5    1190
                                             26 COMRAM     7     2      5
     _FastTransfer_buffer_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _FastTransfer_buffer_modulo_inc                       6     2      4     602
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay                                                5     3      2     174
                                             20 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _receiveData                                         16    16      0    5270
                                             32 COMRAM     4     4      0
                                              7 BANK0     12    12      0
                               _CRC8
                           _CRCcheck
 ---------------------------------------------------------------------------------
 (3) _CRCcheck                                             7     7      0    3799
                                              0 BANK0      7     7      0
                               _CRC8
                        _crcBufS_get
                 _crcBufS_status_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_status_put                                  10     6      4     908
                                             20 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) _crcBufS_get                                         12     8      4    1404
                                             20 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (4) _CRC8                                                 7     4      3    1014
                                             20 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _handleIndicators                                     7     5      2     221
                                             23 COMRAM     7     5      2
                          _SetLEDOut
 ---------------------------------------------------------------------------------
 (3) _SetLEDOut                                            3     0      3       0
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TBbarGraphs                                          4     0      4     172
                                             20 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                   _ECCP1_Initialize
                   _ECCP2_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECCP2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECCP1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          14    14      0     188
                                              6 COMRAM    14    14      0
                   _ECCP1_CaptureISR
                   _ECCP2_CaptureISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (8) _TMR2_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_ISR                                             3     3      0      22
                                              3 COMRAM     3     3      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (8) _I2C1_Stop                                            3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ECCP2_CaptureISR                                     2     2      0      83
                                              2 COMRAM     2     2      0
                     _ECCP2_CallBack
 ---------------------------------------------------------------------------------
 (8) _ECCP2_CallBack                                       2     0      2      53
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _ECCP1_CaptureISR                                     2     2      0      83
                                              2 COMRAM     2     2      0
                     _ECCP1_CallBack
 ---------------------------------------------------------------------------------
 (8) _ECCP1_CallBack                                       2     0      2      53
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ECCP1_Initialize
     _ECCP2_Initialize
     _EUSART1_Initialize
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
   _updateComms
     _TBbarGraphs
     _handleIndicators
       _SetLEDOut
     _receiveData
       _CRC8
       _CRCcheck
         _CRC8
         _crcBufS_get
         _crcBufS_status_put
     _respondECU
       _Delay
       _ToSend
         _FastTransfer_buffer_put
           _FastTransfer_buffer_modulo_inc
         _buttonsCollector (ARG)
           _GetButtonState
       _buttonsCollector
         _GetButtonState
       _sendData
         _CRC8
         _FastTransfer_buffer_flush
           _memset
         _crcBufS_put

 _INTERRUPT_InterruptManager (ROOT)
   _ECCP1_CaptureISR
     _ECCP1_CallBack
   _ECCP2_CaptureISR
     _ECCP2_CallBack
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR2_ISR
     _TMR2_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      C8       8       78.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      CE       6       80.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     13      86       4       83.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     24      4B       1       78.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     267       9        0.0%
DATA                 0      0     267      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Aug 13 23:57:10 2015

      __end_of_FastTransfer_buffer_flush 000062                 __end_of_ECCP2_Initialize 000018  
               _eusart1TxBufferRemaining 000009                             _rx_array_inx 000017  
                           __CFG_CP0$OFF 000000                             __CFG_CP1$OFF 000000  
                           __CFG_CP2$OFF 000000                             __CFG_CP3$OFF 000000  
                                    l632 000032                                      l553 000064  
                                    l561 00005E                                      l735 000000  
                                    l658 000040                                      l769 00001E  
                           __CFG_CPB$OFF 000000                                      _PR2 000FBB  
                           __CFG_CPD$OFF 000000                          _timer1ReloadVal 000007  
   FastTransfer_buffer_flush@clearBuffer 00001E                          _TMR2_Initialize 000000  
                                    prod 000FF3                                      wreg 000FE8  
                            _TBbarGraphs 000000                             __CFG_LVP$OFF 000000  
                       __end_of_I2C1_ISR 000256                                     l3000 000014  
                                   l3012 0000A0                                     l3020 00000A  
                                   l3102 000036                                     l2206 000020  
                                   l3034 00002A                                     l3028 000098  
                                   l3140 000152                                     l3132 0000B2  
                                   l3124 000042                                     l2324 00000A  
                                   l3036 000030                                     l3054 000002  
                                   l3142 000166                                     l3064 000062  
                                   l3154 0001D8                                     l3138 00014C  
                                   l3234 00000A                                     l3068 000086  
                                   l3164 0001E4                                     l3092 000002  
                                   l3176 00023E                                     l3184 00024A  
                                   l2960 000006                                     l2952 00000A  
                                   l2956 00001A                                     l2966 00001C  
                                   l2974 000038                                     l2976 00003C  
                   receiveData@crcHolder 000007                                     l2996 00000A  
                                   _CRC8 000000                                     u1305 00000E  
                                   u1074 000048                                     u1075 000042  
                                   u1324 000050                                     u1325 00004A  
                                   _LATA 000F89                                     _LATB 000F8A  
                                   _LATC 000F8B                                     _LATD 000F8C  
                                   _LATE 000F8D                                     u2247 000010  
                                   i2l60 000036                                     i2l71 0000E8  
                                   i2l72 0000F6                                     i2l65 0000B4  
                                   i2l90 0001C4                                     i2l82 00016E  
                                   i2l66 0000BC                                     i2l76 00015A  
                                   i2l94 0001F4                                     i2l86 00019A  
                                   i2l89 0001B4                                     _TMR1 000FCE  
                                   _TMR2 000FBC                                     _WPUB 000F61  
                                   _main 000000                                     fsr0h 000FEA  
                                   fsr1h 000FE2                                     fsr0l 000FE9  
                                   fsr2h 000FDA                                     fsr1l 000FE1  
                                   indf2 000FDF                                     fsr2l 000FD9  
                          __CFG_BORV$190 000000                                     pclat 000FFA  
                                   prodh 000FF4                                     prodl 000FF3  
        __end_of_FastTransfer_buffer_put 000170                                     start 000000* 
                          __CFG_IESO$OFF 000000                         _handleIndicators 000000  
                                  ?_CRC8 000014                               _i2c1_state 000011  
                       __end_of_CRCcheck 0000A0           __size_of_OSCILLATOR_Initialize 000000  
          __end_of_OSCILLATOR_Initialize 00000E                       crcBufS_put@address 000016  
                                  ?_main 000000                        __end_of_I2C1_Stop 00003E  
                        _TMR1_StartTimer 000000                                    _T1CON 000FCD  
                                  _T2CON 000FBA                           __CFG_DEBUG$OFF 000000  
                                  i2l304 000030                                    i2l391 000074  
                                  i2l383 000044                                    i2l393 000080  
                                  i2l385 000050                                    i2l387 00005C  
                                  i2l389 000068                                    i2l397 00008A  
                                  _TMR1H 000FCF                                    _TMR1L 000FCE  
                                  _TRISA 000F92                                    _TRISB 000F93  
                                  _TRISC 000F94                                    _TRISD 000F95  
                                  _TRISE 000F96                                    _Delay 000000  
                 ECCP2_CaptureISR@module 000002             __end_of_I2C1_BusCollisionISR 000002  
                          __CFG_WRT0$OFF 000000                            __CFG_WRT1$OFF 000000  
                          __CFG_WRT2$OFF 000000                            __CFG_WRT3$OFF 000000  
                      ?_buttonsCollector 000016                     _EUSART1_Transmit_ISR 000000  
                         __CFG_EBTR0$OFF 000000                           __CFG_FCMEN$OFF 000000  
                         __CFG_EBTR1$OFF 000000                           __CFG_EBTR2$OFF 000000  
                         __CFG_EBTR3$OFF 000000                        ??_I2C1_Initialize 000014  
                       __end_of_TMR2_ISR 000008                            __CFG_WRTB$OFF 000000  
                          __CFG_WRTC$OFF 000000                            __CFG_WRTD$OFF 000000  
                         __CFG_EBTRB$OFF 000000                                    _brake 00003C  
                     ??_buttonsCollector 000018                                    _group 00001B  
                     __CFG_MCLRE$EXTMCLR 000000                  __end_of_TMR1_Initialize 000020  
                                  tablat 000FF5                     __size_of_crcBufS_get 000000  
                   __size_of_crcBufS_put 000000                                    status 000FD8  
                         __CFG_HFOFST$ON 000000                          _TMR2_StartTimer 000000  
                           ?_receiveData 000000                           __CFG_PBADEN$ON 000000  
                           __end_of_CRC8 000048                          CRCcheck@SentCRC 000000  
                        __initialization 000000               __end_of_EUSART1_Initialize 000034  
                           __end_of_main 000010                               ToSend@what 000021  
            ECCP2_CallBack@capturedValue 000000                                   ??_CRC8 000017  
                __end_of_TMR2_Initialize 000016              ?_INTERRUPT_InterruptManager 000000  
                            _i2c1_object 000000                                   ??_main 000024  
                          __activetblptr 000002                        ?_ECCP1_CaptureISR 000000  
                                 ?_Delay 000014                    ?_EUSART1_Transmit_ISR 000000  
          FastTransfer_buffer_put@towhat 00001D                       ??_ECCP1_CaptureISR 000002  
                                 _CCPR1H 000FBF                                   _CCPR2H 000F68  
                                 _CCPR1L 000FBE                                   _CCPR2L 000F67  
                                 _ANSELA 000F38                                   _ANSELB 000F39  
                                 _ANSELC 000F3A                                   _ANSELD 000F3B  
                                 _ANSELE 000F3C                                   _T1GCON 000FCC  
                                 _RC1STA 000FAB                                   i2l2406 000012  
                                 i2l2610 000120                                   i2l2630 000168  
                         __CFG_WDTEN$OFF 000000                                   i2l2660 0001CC  
                                 Delay@x 000017                                   i2l2750 00002C  
                                 i2l2742 000008                                   i2l2398 000038  
                                 i2l2638 00017E                                   i2l2590 0000CA  
                                 i2l2736 00002C                                   i2l2680 000206  
                                 i2l2664 0001D4                                   i2l2648 0001A2  
                                 i2l2576 000094                                   i2l2676 0001FA  
                                 i2l2596 0000E2                                   i2l2678 0001FE  
                                 i2l2686 000210                           _GetButtonState 000000* 
                                 _RCREG1 000FAE                                   _OSCCON 000FD3  
                                 _SPBRG1 000FAF                                   _TX1STA 000FAC  
                                 _TXREG1 000FAD                        ?_ECCP2_CaptureISR 000000  
                         __CFG_XINST$OFF 000000                       ??_ECCP2_CaptureISR 000002  
                                 _ToSend 000000                         crcBufS_get@_this 000014  
                           _CCPTMRS0bits 000F49              ??_FastTransfer_buffer_flush 000020  
                         _p_i2c1_current 000002                  __size_of_ECCP1_CallBack 000000  
                       crcBufS_get@space 000017                  __end_of_TMR1_StartTimer 000004  
                              CRC8@tempI 000019                           __CFG_STVREN$ON 000000  
                __size_of_ECCP2_CallBack 000000                                   _memset 000000  
                              ?_I2C1_ISR 000000                                   clear_0 000006  
                                 clear_1 000012                                   clear_2 00001E  
                                 clear_3 00002A                                   _rx_len 000018  
                       __end_of_sendData 000082                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
       __size_of_FastTransfer_buffer_put 000000                  __end_of_TMR2_StartTimer 000004  
                      ?_ECCP1_Initialize 000000                          _eusart1RxBuffer 000028  
          __size_of_INTERRUPT_Initialize 000000                          _eusart1TxBuffer 000030  
                       ?_TMR1_Initialize 000000                        _SYSTEM_Initialize 000000  
                     ??_ECCP1_Initialize 000014                               __accesstop 000000* 
                __end_of__initialization 000030                                ?_CRCcheck 000000  
                  __end_of_TMR2_CallBack 000002                       ?_SYSTEM_Initialize 000000  
                         _i2c1_trb_count 000012                             ?_updateComms 000000  
                           TBbarGraphs@b 000016                             TBbarGraphs@t 000014  
                          __end_of_Delay 000034                    _I2C1_FunctionComplete 000000  
                   _I2C1_BusCollisionISR 000000                           __pcstackCOMRAM 000000  
                     _crcBufS_status_put 000000                      ??_SYSTEM_Initialize 000014  
                       crcBufS_put@_this 000014                                ?_TMR2_ISR 000000  
                      ?_ECCP2_Initialize 000000   __end_of_FastTransfer_buffer_modulo_inc 00002A  
__size_of_FastTransfer_buffer_modulo_inc 000000           _FastTransfer_buffer_modulo_inc 000000  
                             ??_I2C1_ISR 000003                         ?_TMR2_Initialize 000000  
           FastTransfer_buffer_put@_this 00001A                       ??_ECCP2_Initialize 000014  
                            ToSend@where 000023                              _SetLEDOut$0 000014  
                            _SetLEDOut$1 000016                      ?_crcBufS_status_put 000014  
                 ??_EUSART1_Transmit_ISR 000000                                  ??_Delay 000016  
                           ?_TBbarGraphs 000014              __end_of_EUSART1_Receive_ISR 000030  
              _FastTransfer_buffer_flush 000000                                  CRC8@crc 00001A  
                                CRC8@len 000016                                  CRC8@sum 000017  
                        ?_GetButtonState 000014                __end_of_SYSTEM_Initialize 000026  
               __end_of_handleIndicators 00006E                   receiveData@holder_1776 00000C  
                          _eusart1RxHead 00000D                      _addressErrorCounter 000038  
                          _eusart1TxHead 00000F                            _eusart1RxTail 00000E  
                             __pbssBANK0 000000                               __pbssBANK1 000000  
                             __pbssBANK2 000000                            _eusart1TxTail 000010  
                        __CFG_PLLCFG$OFF 000000                               ??_CRCcheck 000020  
                   ??_crcBufS_status_put 000018                               __pnvCOMRAM 000000  
                  ?_I2C1_BusCollisionISR 000000                     __size_of_receiveData 000000  
                                ?_ToSend 000021                       __CFG_CCP2MX$PORTC1 000000  
                       ?_TMR1_StartTimer 000000                               ??_TMR2_ISR 000000  
                     __CFG_CCP3MX$PORTB5 000000      FastTransfer_buffer_modulo_inc@value 000014  
                        _I2C1_Initialize 000000                                  _CCP1CON 000FBD  
                                _CCP2CON 000F66                                  ?_memset 000014  
                             _crc_buffer 000050                                  _OSCCON2 000FD2  
                              _I2C1_Stop 000000                        __CFG_PRICLKEN$OFF 000000  
                                _OSCTUNE 000F9B                                  _SPBRGH1 000FB0  
                                _SSP1ADD 000FC8                      sendData@whereToSend 000000  
                    _receiveArrayAddress 000006                                  _SSP1BUF 000FC9  
                       ?_TMR2_StartTimer 000000                                ?_sendData 000000  
                      _alignErrorCounter 00003A                          __CFG_PWRTEN$OFF 000000  
              __size_of_buttonsCollector 000000                   ?_I2C1_FunctionComplete 000000  
                                __Hparam 000000                                  __Lparam 000000  
                        __size_of_ToSend 000000                       _p_i2c1_trb_current 000004  
                         _ECCP1_CallBack 000000                                _AKNAKsend 00000A  
                         _ECCP2_CallBack 000000                                  _calc_CS 00000B  
                                __pcinit 000000                          __size_of_memset 000000  
                                __ramtop 000000*                                 __ptext0 000000  
                                __ptext1 000000                                  __ptext2 000000  
                                __ptext3 000000                                  __ptext4 000000  
                                __ptext5 000000                                  __ptext6 000000  
                                __ptext7 000000                                  __ptext8 000000  
                                __ptext9 000000                                _T1CONbits 000FCD  
                  _OSCILLATOR_Initialize 000000                                _T2CONbits 000FBA  
                _FastTransfer_buffer_put 000000                    CRCcheck@calculatedCRC 000001  
                     _EUSART1_Initialize 000000                 ??_PIN_MANAGER_Initialize 000014  
                             ?_I2C1_Stop 000000             crcBufS_status_put@wantedTime 00001C  
                          ??_crcBufS_get 000018                            ??_crcBufS_put 000019  
             __size_of_SYSTEM_Initialize 000000                     I2C1_ISR@pi2c_buf_ptr 000000  
                   end_of_initialization 000030                                Delay@wait 000014  
                    ?_EUSART1_Initialize 000000                                  memset@c 000016  
                                memset@n 000018                                  memset@p 00001A  
                          __Lmediumconst 000000*               __size_of_ECCP1_CaptureISR 000000  
                 ??_I2C1_BusCollisionISR 000000                               ??_sendData 000020  
                 __end_of_ECCP1_CallBack 000002                  __end_of_I2C1_Initialize 000036  
                 __end_of_ECCP2_CallBack 000002                     __size_of_updateComms 000000  
                                postdec2 000FDD              ECCP1_CallBack@capturedValue 000000  
                                postinc0 000FEE                                  postinc2 000FDE  
                             _respondECU 000000                      CRCcheck@arrayHolder 000002  
                   ??_EUSART1_Initialize 000014                __size_of_ECCP2_CaptureISR 000000  
                 _dataAdressErrorCounter 000040                        __size_of_I2C1_ISR 000000  
                             _rx_address 000016                     __size_of_TBbarGraphs 000000  
      I2C1_ISR@i2c_10bit_address_restart 000008       __size_of_FastTransfer_buffer_flush 000000  
                    __end_of_crcBufS_get 0000EA                      __end_of_crcBufS_put 0000D6  
                        ?_ECCP1_CallBack 000000                        __size_of_CRCcheck 000000  
                          _moduleAddress 000014                          ?_ECCP2_CallBack 000000  
                             CRCcheck@rt 000005                __size_of_ECCP1_Initialize 000000  
                         __end_of_ToSend 000020             __end_of_INTERRUPT_Initialize 000012  
                        _crcErrorCounter 00003E                  I2C1_MasterWrite@trBlock 000067  
                      crcBufS_put@oldCRC 000017                 I2C1_Stop@completion_code 000002  
                      __size_of_TMR2_ISR 000000                ??_FastTransfer_buffer_put 00001F  
                 ?_OSCILLATOR_Initialize 000000                           __end_of_memset 00002C  
                      crcBufS_put@status 000018                  buttonsCollector@sendVal 00001B  
                           receiveData@r 000011                             receiveData@u 00000F  
                       ??_GetButtonState 000016                      start_initialization 000000  
                            ??_I2C1_Stop 000000          __size_of_PIN_MANAGER_Initialize 000000  
                  crcBufS_get@wantedTime 00001E                __size_of_ECCP2_Initialize 000000  
                              _SetLEDOut 000000*                       ?_handleIndicators 000017  
                     ??_handleIndicators 000019                         _buttonsCollector 000000  
                       ?_I2C1_Initialize 000000                                 ??_ToSend 000023  
               __size_of_TMR1_Initialize 000000                                 CRC8@data 000014  
                        crcBufS_get@time 000016                              ?_respondECU 000000  
                               ??_memset 00001A                        handleIndicators@i 00001C  
                         _eusart1RxCount 00000C                   __size_of_TMR2_CallBack 000000  
                            __pbssCOMRAM 000000            __size_of_EUSART1_Transmit_ISR 000000  
                          __pcstackBANK0 000000                 __size_of_TMR2_Initialize 000000  
                          _i2c1_tr_queue 00006D                               ?_SetLEDOut 000014  
                            _crcBufS_get 000000                              _crcBufS_put 000000  
                ??_I2C1_FunctionComplete 000000             __size_of_EUSART1_Receive_ISR 000000  
                       _ECCP1_CaptureISR 000000                            ??_receiveData 000020  
            __size_of_crcBufS_status_put 000000                               sendData@CS 000001  
                 _PIN_MANAGER_Initialize 000000                        __size_of_sendData 000000  
                              __pintcode 000000                                 _I2C1_ISR 000000  
           ??_INTERRUPT_InterruptManager 000006                         _ECCP2_CaptureISR 000000  
                               _BAUD1CON 000FB8                 __size_of_TMR1_StartTimer 000000  
                      buttonsCollector@i 00001D                           __size_of_Delay 000000  
                    __size_of_respondECU 000000                     _INTERRUPT_Initialize 000000  
                           _receiveArray 000000                   I2C1_MasterRead@trBlock 000061  
                               _CRCcheck 000000                                 _LATCbits 000F8B  
                       _GetButtonState$0 000014                            _TMR2_CallBack 000000  
                               _IPR1bits 000F9F                                 _IPR2bits 000FA2  
                               _PIE1bits 000F9D                                 _PIE2bits 000FA0  
               __size_of_TMR2_StartTimer 000000      __size_of_INTERRUPT_InterruptManager 000000  
                               _PIR1bits 000F9E                                 _PIR2bits 000FA1  
                               _RCONbits 000FD0                         __CFG_WDTPS$32768 000000  
                       _ECCP1_Initialize 000000                      __end_of_receiveData 00024E  
                               _SSP1CON1 000FC6                                 _SSP1CON3 000FCB  
                               _TMR2_ISR 000000                                 _SSP1STAT 000FC7  
         FastTransfer_buffer_flush@_this 00001C                                _rx_buffer 000000  
                      ??_TMR1_Initialize 000014                   ECCP1_CaptureISR@module 000002  
                       _ECCP2_Initialize 000000                              ??_SetLEDOut 000017  
                            _INTCON2bits 000FF1                    ?_INTERRUPT_Initialize 000000  
                      _sendStructAddress 000042                         ??_ECCP1_CallBack 000002  
                      ??_TMR2_Initialize 000014                           ?_TMR2_CallBack 000000  
                       ??_ECCP2_CallBack 000002                            ??_updateComms 000024  
                               __Hrparam 000000*           __size_of_I2C1_BusCollisionISR 000000  
                               __Lrparam 000000*                      __CFG_BOREN$SBORDIS 000000  
                 I2C1_ISR@i2c_bytes_left 000009                        __CFG_P2BMX$PORTD2 000000  
                ??_OSCILLATOR_Initialize 000014              __size_of_EUSART1_Initialize 000000  
                            CRC8@extract 000018                 __end_of_buttonsCollector 000068  
                              sendData@i 000002                            ??_TBbarGraphs 000018  
                    I2C1_ISR@i2c_address 000019                 crcBufS_status_put@status 000017  
                               __ptext10 000000                                 __ptext11 000000  
                               __ptext20 000000                                 __ptext12 000000  
                               __ptext21 000000                                 __ptext13 000000  
                             _T1GCONbits 000FCC                                 __ptext30 000000  
                               __ptext22 000000                                 __ptext14 000000  
                               __ptext23 000000                                 __ptext15 000000  
                               __ptext40 000000                                 __ptext32 000000  
                               __ptext24 000000                                 __ptext16 000000  
                               __ptext41 000000                                 __ptext33 000000  
                               __ptext25 000000                                 __ptext17 000000  
                               __ptext42 000000                                 __ptext34 000000  
                               __ptext26 000000                                 __ptext18 000000  
                               __ptext43 000000                                 __ptext35 000000  
                               __ptext27 000000                                 __ptext19 000000  
                               __ptext36 000000                                 __ptext28 000000  
                               __ptext37 000000                                 __ptext29 000000  
                               __ptext38 000000                                 __ptext39 000000  
                           _SSP1CON1bits 000FC6                             _SSP1CON2bits 000FC5  
                      ??_TMR1_StartTimer 000014                            __size_of_CRC8 000000  
                          _returnAddress 000015                            __size_of_main 000000  
                            _receiveData 000000                                 _sendData 000000  
                             _RC1STAbits 000FAB                             ??_respondECU 000024  
              __size_of_handleIndicators 000000            handleIndicators@oldIndicators 00004E  
                           _serial_write 00004A                                 _throttle 00004C  
                      ??_TMR2_StartTimer 000014                      __end_of_updateComms 00003C  
     __end_of_INTERRUPT_InterruptManager 0000C4               _INTERRUPT_InterruptManager 000000  
                    _EUSART1_Receive_ISR 000000                        receiveData@holder 000009  
               __end_of_ECCP1_CaptureISR 000018                               _INTCONbits 000FF2  
     handleIndicators@receivedIndicators 000017                   ??_INTERRUPT_Initialize 000014  
                               memset@p1 000014                         _serial_available 000044  
                           ?_crcBufS_get 000014                             ?_crcBufS_put 000014  
                               intlevel2 000000*                 crcBufS_status_put@_this 000014  
                        ??_TMR2_CallBack 000000                       __end_of_respondECU 000044  
                    __end_of_TBbarGraphs 000012                     ?_EUSART1_Receive_ISR 000000  
 FastTransfer_buffer_modulo_inc@my_value 000018           FastTransfer_buffer_put@towhere 00001C  
                ?_PIN_MANAGER_Initialize 000000                 __end_of_ECCP2_CaptureISR 000018  
         __size_of_I2C1_FunctionComplete 000000            __end_of_I2C1_FunctionComplete 000018  
           __end_of_EUSART1_Transmit_ISR 000034                              _ring_buffer 000000  
             ?_FastTransfer_buffer_flush 00001C                              _serial_peek 000046  
                            _serial_read 000048                 ?_FastTransfer_buffer_put 00001A  
               __size_of_I2C1_Initialize 000000    FastTransfer_buffer_modulo_inc@modulus 000016  
                 crcBufS_status_put@time 000016                receiveData@crcHolder_1777 000008  
                      __CFG_T3CMX$PORTC0 000000                           _maxDataAddress 000013  
               __end_of_ECCP1_Initialize 000018               __end_of_crcBufS_status_put 0000DE  
                  ??_EUSART1_Receive_ISR 000000           __end_of_PIN_MANAGER_Initialize 000044  
       ??_FastTransfer_buffer_modulo_inc 000018          ?_FastTransfer_buffer_modulo_inc 000014  
                     __size_of_I2C1_Stop 000000                        __CFG_FOSC$INTIO67 000000  
                        _TMR1_Initialize 000000                              _updateComms 000000  
