

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat May 16 23:28:51 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	smallconst
    42  000600                     __psmallconst:
    43                           	opt stack 0
    44  000600  00                 	db	0
    45  000601                     _dpowers:
    46                           	opt stack 0
    47  000601  0001               	dw	1
    48  000603  000A               	dw	10
    49  000605  0064               	dw	100
    50  000607  03E8               	dw	1000
    51  000609  2710               	dw	10000
    52  00060B                     __end_of_dpowers:
    53                           	opt stack 0
    54  00060B                     STR_1:
    55  00060B  41                 	db	65	;'A'
    56  00060C  44                 	db	68	;'D'
    57  00060D  43                 	db	67	;'C'
    58  00060E  20                 	db	32
    59  00060F  56                 	db	86	;'V'
    60  000610  6F                 	db	111	;'o'
    61  000611  6C                 	db	108	;'l'
    62  000612  75                 	db	117	;'u'
    63  000613  6D                 	db	109	;'m'
    64  000614  65                 	db	101	;'e'
    65  000615  20                 	db	32
    66  000616  3D                 	db	61	;'='
    67  000617  20                 	db	32
    68  000618  25                 	db	37
    69  000619  64                 	db	100	;'d'
    70  00061A  00                 	db	0
    71                           
    72                           ; #config settings
    73  00061B  00                 	db	0	; dummy byte at the end
    74  0000                     
    75                           	psect	nvCOMRAM
    76  00004A                     __pnvCOMRAM:
    77                           	opt stack 0
    78  00004A                     _timer0ReloadVal16bit:
    79                           	opt stack 0
    80  00004A                     	ds	2
    81  00004C                     _eusart1TxBufferRemaining:
    82                           	opt stack 0
    83  00004C                     	ds	1
    84  0000                     _ANSELA	set	3896
    85  0000                     _ANSELB	set	3897
    86  0000                     _ANSELC	set	3898
    87  0000                     _ANSELD	set	3899
    88  0000                     _ANSELE	set	3900
    89  0000                     _ADCON0	set	4034
    90  0000                     _ADCON0bits	set	4034
    91  0000                     _ADCON1	set	4033
    92  0000                     _ADCON2	set	4032
    93  0000                     _ADRESH	set	4036
    94  0000                     _ADRESL	set	4035
    95  0000                     _BAUD1CON	set	4024
    96  0000                     _INTCON2bits	set	4081
    97  0000                     _INTCONbits	set	4082
    98  0000                     _IPR1bits	set	3999
    99  0000                     _IPR2bits	set	4002
   100  0000                     _LATA	set	3977
   101  0000                     _LATB	set	3978
   102  0000                     _LATC	set	3979
   103  0000                     _LATD	set	3980
   104  0000                     _LATE	set	3981
   105  0000                     _OSCCON	set	4051
   106  0000                     _OSCCON2	set	4050
   107  0000                     _OSCTUNE	set	3995
   108  0000                     _PIE1bits	set	3997
   109  0000                     _PIE2bits	set	4000
   110  0000                     _PIR1bits	set	3998
   111  0000                     _PIR2bits	set	4001
   112  0000                     _RC1REG	set	4014
   113  0000                     _RC1STA	set	4011
   114  0000                     _RC1STAbits	set	4011
   115  0000                     _RCONbits	set	4048
   116  0000                     _RCREG1	set	4014
   117  0000                     _SPBRG1	set	4015
   118  0000                     _SPBRGH1	set	4016
   119  0000                     _SSP1ADD	set	4040
   120  0000                     _SSP1BUF	set	4041
   121  0000                     _SSP1CON1	set	4038
   122  0000                     _SSP1CON1bits	set	4038
   123  0000                     _SSP1CON2bits	set	4037
   124  0000                     _SSP1CON3	set	4043
   125  0000                     _SSP1STAT	set	4039
   126  0000                     _T0CON	set	4053
   127  0000                     _T0CONbits	set	4053
   128  0000                     _TMR0H	set	4055
   129  0000                     _TMR0L	set	4054
   130  0000                     _TRISA	set	3986
   131  0000                     _TRISB	set	3987
   132  0000                     _TRISC	set	3988
   133  0000                     _TRISD	set	3989
   134  0000                     _TRISE	set	3990
   135  0000                     _TX1REG	set	4013
   136  0000                     _TX1STA	set	4012
   137  0000                     _TXREG1	set	4013
   138  0000                     _WPUB	set	3937
   139  0000                     _LATA3	set	31819
   140                           
   141                           	psect	cinit
   142  000CBC                     __pcinit:
   143                           	opt stack 0
   144  000CBC                     start_initialization:
   145                           	opt stack 0
   146  000CBC                     __initialization:
   147                           	opt stack 0
   148                           
   149                           ; Clear objects allocated to BANK0 (16 bytes)
   150  000CBC  EE00  F060         	lfsr	0,__pbssBANK0
   151  000CC0  0E10               	movlw	16
   152  000CC2                     clear_0:
   153  000CC2  6AEE               	clrf	postinc0,c
   154  000CC4  06E8               	decf	wreg,f,c
   155  000CC6  E1FD               	bnz	clear_0
   156                           
   157                           ; Clear objects allocated to COMRAM (42 bytes)
   158  000CC8  EE00  F001         	lfsr	0,__pbssCOMRAM
   159  000CCC  0E2A               	movlw	42
   160  000CCE                     clear_1:
   161  000CCE  6AEE               	clrf	postinc0,c
   162  000CD0  06E8               	decf	wreg,f,c
   163  000CD2  E1FD               	bnz	clear_1
   164  000CD4                     end_of_initialization:
   165                           	opt stack 0
   166  000CD4                     __end_of__initialization:
   167                           	opt stack 0
   168  000CD4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   169  000CD6  6EF8               	movwf	tblptru,c
   170  000CD8  0100               	movlb	0
   171  000CDA  EF7B  F005         	goto	_main	;jump to C main() function
   172                           tblptru	equ	0xFF8
   173                           postinc0	equ	0xFEE
   174                           wreg	equ	0xFE8
   175                           
   176                           	psect	bssCOMRAM
   177  000001                     __pbssCOMRAM:
   178                           	opt stack 0
   179  000001                     _i2c1_object:
   180                           	opt stack 0
   181  000001                     	ds	7
   182  000008                     I2C1_ISR@pi2c_buf_ptr:
   183                           	opt stack 0
   184  000008                     	ds	2
   185  00000A                     _p_i2c1_current:
   186                           	opt stack 0
   187  00000A                     	ds	2
   188  00000C                     _p_i2c1_trb_current:
   189                           	opt stack 0
   190  00000C                     	ds	2
   191  00000E                     I2C1_ISR@i2c_10bit_address_restart:
   192                           	opt stack 0
   193  00000E                     	ds	1
   194  00000F                     I2C1_ISR@i2c_bytes_left:
   195                           	opt stack 0
   196  00000F                     	ds	1
   197  000010                     _eusart1RxCount:
   198                           	opt stack 0
   199  000010                     	ds	1
   200  000011                     _eusart1RxHead:
   201                           	opt stack 0
   202  000011                     	ds	1
   203  000012                     _eusart1RxTail:
   204                           	opt stack 0
   205  000012                     	ds	1
   206  000013                     _eusart1TxHead:
   207                           	opt stack 0
   208  000013                     	ds	1
   209  000014                     _eusart1TxTail:
   210                           	opt stack 0
   211  000014                     	ds	1
   212  000015                     _i2c1_state:
   213                           	opt stack 0
   214  000015                     	ds	1
   215  000016                     _i2c1_trb_count:
   216                           	opt stack 0
   217  000016                     	ds	1
   218  000017                     I2C1_MasterRead@trBlock:
   219                           	opt stack 0
   220  000017                     	ds	6
   221  00001D                     I2C1_MasterWrite@trBlock:
   222                           	opt stack 0
   223  00001D                     	ds	6
   224  000023                     _i2c1_tr_queue:
   225                           	opt stack 0
   226  000023                     	ds	6
   227  000029                     I2C1_ISR@i2c_address:
   228                           	opt stack 0
   229  000029                     	ds	2
   230                           tblptru	equ	0xFF8
   231                           postinc0	equ	0xFEE
   232                           wreg	equ	0xFE8
   233                           
   234                           	psect	bssBANK0
   235  000060                     __pbssBANK0:
   236                           	opt stack 0
   237  000060                     _eusart1RxBuffer:
   238                           	opt stack 0
   239  000060                     	ds	8
   240  000068                     _eusart1TxBuffer:
   241                           	opt stack 0
   242  000068                     	ds	8
   243                           tblptru	equ	0xFF8
   244                           postinc0	equ	0xFEE
   245                           wreg	equ	0xFE8
   246                           
   247                           	psect	cstackBANK0
   248  000070                     __pcstackBANK0:
   249                           	opt stack 0
   250  000070                     ?_printf:
   251                           	opt stack 0
   252  000070                     printf@f:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0x0
   256  000070                     	ds	4
   257  000074                     ??_printf:
   258                           
   259                           ; 0 bytes @ 0x4
   260  000074                     	ds	1
   261  000075                     printf@ap:
   262                           	opt stack 0
   263                           
   264                           ; 2 bytes @ 0x5
   265  000075                     	ds	2
   266  000077                     printf@flag:
   267                           	opt stack 0
   268                           
   269                           ; 1 bytes @ 0x7
   270  000077                     	ds	1
   271  000078                     printf@prec:
   272                           	opt stack 0
   273                           
   274                           ; 1 bytes @ 0x8
   275  000078                     	ds	1
   276  000079                     printf@val:
   277                           	opt stack 0
   278                           
   279                           ; 2 bytes @ 0x9
   280  000079                     	ds	2
   281  00007B                     printf@c:
   282                           	opt stack 0
   283                           
   284                           ; 1 bytes @ 0xB
   285  00007B                     	ds	1
   286  00007C                     main@ADCNT:
   287                           	opt stack 0
   288                           
   289                           ; 2 bytes @ 0xC
   290  00007C                     	ds	2
   291                           tblptru	equ	0xFF8
   292                           postinc0	equ	0xFEE
   293                           wreg	equ	0xFE8
   294                           
   295                           	psect	cstackCOMRAM
   296  00002B                     __pcstackCOMRAM:
   297                           	opt stack 0
   298  00002B                     ??_I2C1_Stop:
   299  00002B                     
   300                           ; 0 bytes @ 0x0
   301  00002B                     	ds	2
   302  00002D                     I2C1_Stop@completion_code:
   303                           	opt stack 0
   304                           
   305                           ; 1 bytes @ 0x2
   306  00002D                     	ds	1
   307  00002E                     ??_I2C1_ISR:
   308                           
   309                           ; 0 bytes @ 0x3
   310  00002E                     	ds	2
   311  000030                     ??_INTERRUPT_InterruptManager:
   312                           
   313                           ; 0 bytes @ 0x5
   314  000030                     	ds	14
   315  00003E                     ?___lwdiv:
   316                           	opt stack 0
   317  00003E                     EUSART1_Write@txData:
   318                           	opt stack 0
   319  00003E                     Delay@wait:
   320                           	opt stack 0
   321  00003E                     ___lwdiv@dividend:
   322                           	opt stack 0
   323                           
   324                           ; 2 bytes @ 0x13
   325  00003E                     	ds	1
   326  00003F                     putch@txData:
   327                           	opt stack 0
   328                           
   329                           ; 1 bytes @ 0x14
   330  00003F                     	ds	1
   331  000040                     ??_Delay:
   332  000040                     ___lwdiv@divisor:
   333                           	opt stack 0
   334                           
   335                           ; 2 bytes @ 0x15
   336  000040                     	ds	1
   337  000041                     Delay@x:
   338                           	opt stack 0
   339                           
   340                           ; 2 bytes @ 0x16
   341  000041                     	ds	1
   342  000042                     ___lwdiv@counter:
   343                           	opt stack 0
   344                           
   345                           ; 1 bytes @ 0x17
   346  000042                     	ds	1
   347  000043                     ___lwdiv@quotient:
   348                           	opt stack 0
   349                           
   350                           ; 2 bytes @ 0x18
   351  000043                     	ds	2
   352  000045                     ?___lwmod:
   353                           	opt stack 0
   354  000045                     ___lwmod@dividend:
   355                           	opt stack 0
   356                           
   357                           ; 2 bytes @ 0x1A
   358  000045                     	ds	2
   359  000047                     ___lwmod@divisor:
   360                           	opt stack 0
   361                           
   362                           ; 2 bytes @ 0x1C
   363  000047                     	ds	2
   364  000049                     ___lwmod@counter:
   365                           	opt stack 0
   366                           
   367                           ; 1 bytes @ 0x1E
   368  000049                     	ds	1
   369  00004A                     tblptru	equ	0xFF8
   370                           postinc0	equ	0xFEE
   371                           wreg	equ	0xFE8
   372                           
   373                           ; 0 bytes @ 0x1F
   374 ;;
   375 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   376 ;;
   377 ;; *************** function _main *****************
   378 ;; Defined at:
   379 ;;		line 30 in file "main.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;		None
   382 ;; Auto vars:     Size  Location     Type
   383 ;;  ADCNT           2   12[BANK0 ] int 
   384 ;; Return value:  Size  Location     Type
   385 ;;		None               void
   386 ;; Registers used:
   387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   388 ;; Tracked objects:
   389 ;;		On entry : 0/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   393 ;;      Params:         0       0       0       0       0       0       0
   394 ;;      Locals:         0       2       0       0       0       0       0
   395 ;;      Temps:          0       0       0       0       0       0       0
   396 ;;      Totals:         0       2       0       0       0       0       0
   397 ;;Total ram usage:        2 bytes
   398 ;; Hardware stack levels required when called:    6
   399 ;; This function calls:
   400 ;;		_Delay
   401 ;;		_SYSTEM_Initialize
   402 ;;		_printf
   403 ;; This function is called by:
   404 ;;		Startup code after reset
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           	psect	text0
   409  000AF6                     __ptext0:
   410                           	opt stack 0
   411  000AF6                     _main:
   412                           	opt stack 25
   413                           
   414                           ;main.c: 33: SYSTEM_Initialize();
   415                           
   416                           ;incstack = 0
   417  000AF6  EC6F  F006         	call	_SYSTEM_Initialize	;wreg free
   418                           
   419                           ;main.c: 52: (INTCONbits.GIE = 1);
   420  000AFA  8EF2               	bsf	intcon,7,c	;volatile
   421                           
   422                           ;main.c: 55: (INTCONbits.PEIE = 1);
   423  000AFC  8CF2               	bsf	intcon,6,c	;volatile
   424                           
   425                           ;main.c: 62: int ADCNT = 0;
   426  000AFE  0E00               	movlw	0
   427  000B00  0100               	movlb	0	; () banked
   428  000B02  6F7D               	movwf	(main@ADCNT+1)& (0+255),b
   429  000B04  0E00               	movlw	0
   430  000B06  6F7C               	movwf	main@ADCNT& (0+255),b
   431  000B08  D000               	goto	l1987
   432  000B0A                     l1987:
   433                           
   434                           ; BSR set to: 0
   435  000B0A  8689               	bsf	3977,3,c	;volatile
   436                           
   437                           ; BSR set to: 0
   438  000B0C  D000               	goto	l1989
   439  000B0E                     l1989:
   440                           
   441                           ;main.c: 65: {
   442                           ;main.c: 68: printf("ADC Volume = %d",ADCNT);
   443  000B0E  0E0B               	movlw	low STR_1
   444  000B10  0100               	movlb	0	; () banked
   445  000B12  6F70               	movwf	printf@f& (0+255),b
   446  000B14  0E06               	movlw	high STR_1
   447  000B16  0100               	movlb	0	; () banked
   448  000B18  6F71               	movwf	(printf@f+1)& (0+255),b
   449  000B1A  C07C  F072         	movff	main@ADCNT,?_printf+2
   450  000B1E  C07D  F073         	movff	main@ADCNT+1,?_printf+3
   451  000B22  EC49  F004         	call	_printf	;wreg free
   452                           
   453                           ;main.c: 69: Delay(250);
   454  000B26  0E00               	movlw	0
   455  000B28  6E3F               	movwf	Delay@wait+1,c
   456  000B2A  0EFA               	movlw	250
   457  000B2C  6E3E               	movwf	Delay@wait,c
   458  000B2E  ECFC  F005         	call	_Delay	;wreg free
   459  000B32  D000               	goto	l1993
   460  000B34                     l1993:
   461  000B34  7689               	btg	3977,3,c	;volatile
   462  000B36  D7EB               	goto	l1989
   463  000B38  EF61  F000         	goto	start
   464  000B3C                     __end_of_main:
   465                           	opt stack 0
   466                           tblptru	equ	0xFF8
   467                           intcon	equ	0xFF2
   468                           postinc0	equ	0xFEE
   469                           wreg	equ	0xFE8
   470                           
   471 ;; *************** function _printf *****************
   472 ;; Defined at:
   473 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;  f               2    0[BANK0 ] PTR const unsigned char 
   476 ;;		 -> STR_1(16), 
   477 ;; Auto vars:     Size  Location     Type
   478 ;;  tmpval          4    0        struct .
   479 ;;  cp              3    0        PTR const unsigned char 
   480 ;;  val             2    9[BANK0 ] unsigned int 
   481 ;;  ap              2    5[BANK0 ] PTR void [1]
   482 ;;		 -> ?_printf(2), 
   483 ;;  len             2    0        unsigned int 
   484 ;;  c               1   11[BANK0 ] char 
   485 ;;  prec            1    8[BANK0 ] char 
   486 ;;  flag            1    7[BANK0 ] unsigned char 
   487 ;; Return value:  Size  Location     Type
   488 ;;                  2    0[BANK0 ] int 
   489 ;; Registers used:
   490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   496 ;;      Params:         0       4       0       0       0       0       0
   497 ;;      Locals:         0       7       0       0       0       0       0
   498 ;;      Temps:          0       1       0       0       0       0       0
   499 ;;      Totals:         0      12       0       0       0       0       0
   500 ;;Total ram usage:       12 bytes
   501 ;; Hardware stack levels used:    1
   502 ;; Hardware stack levels required when called:    5
   503 ;; This function calls:
   504 ;;		___lwdiv
   505 ;;		___lwmod
   506 ;;		_putch
   507 ;; This function is called by:
   508 ;;		_main
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           	psect	text1
   513  000892                     __ptext1:
   514                           	opt stack 0
   515  000892                     _printf:
   516                           	opt stack 25
   517                           
   518                           ;doprnt.c: 466: va_list ap;
   519                           ;doprnt.c: 499: signed char c;
   520                           ;doprnt.c: 506: signed char prec;
   521                           ;doprnt.c: 508: unsigned char flag;
   522                           ;doprnt.c: 523: union {
   523                           ;doprnt.c: 524: unsigned long vd;
   524                           ;doprnt.c: 525: double integ;
   525                           ;doprnt.c: 526: } tmpval;
   526                           ;doprnt.c: 528: unsigned int val;
   527                           ;doprnt.c: 529: unsigned len;
   528                           ;doprnt.c: 530: const char * cp;
   529                           ;doprnt.c: 533: *ap = __va_start();
   530                           
   531                           ;incstack = 0
   532  000892  0E72               	movlw	low (?_printf+2)
   533  000894  0100               	movlb	0	; () banked
   534  000896  6F75               	movwf	printf@ap& (0+255),b
   535  000898  0E00               	movlw	high (?_printf+2)
   536  00089A  0100               	movlb	0	; () banked
   537  00089C  6F76               	movwf	(printf@ap+1)& (0+255),b
   538                           
   539                           ;doprnt.c: 536: while(c = *f++) {
   540  00089E  D0A0               	goto	l1971
   541  0008A0                     l1925:
   542                           
   543                           ; BSR set to: 0
   544                           ;doprnt.c: 538: if(c != '%')
   545  0008A0  0E25               	movlw	37
   546  0008A2  0100               	movlb	0	; () banked
   547  0008A4  197B               	xorwf	printf@c& (0+255),w,b
   548  0008A6  B4D8               	btfsc	status,2,c
   549  0008A8  D005               	goto	l1929
   550                           
   551                           ; BSR set to: 0
   552                           ;doprnt.c: 540: {
   553                           ;doprnt.c: 541: (putch(c) );
   554  0008AA  0100               	movlb	0	; () banked
   555  0008AC  517B               	movf	printf@c& (0+255),w,b
   556  0008AE  ECBD  F006         	call	_putch
   557                           
   558                           ;doprnt.c: 542: continue;
   559  0008B2  D096               	goto	l1971
   560  0008B4                     l1929:
   561                           
   562                           ;doprnt.c: 543: }
   563                           ;doprnt.c: 548: flag = 0;
   564  0008B4  0E00               	movlw	0
   565  0008B6  0100               	movlb	0	; () banked
   566  0008B8  6F77               	movwf	printf@flag& (0+255),b
   567                           
   568                           ;doprnt.c: 635: switch(c = *f++) {
   569  0008BA  D004               	goto	l1933
   570                           
   571                           ; BSR set to: 0
   572                           ;doprnt.c: 638: goto alldone;
   573                           
   574                           ;doprnt.c: 637: case 0:
   575  0008BC  0012               	return	
   576                           
   577                           ; BSR set to: 0
   578                           ;doprnt.c: 698: case 'i':
   579                           ;doprnt.c: 699: break;
   580                           
   581                           ; BSR set to: 0
   582                           
   583                           ;doprnt.c: 697: case 'd':
   584  0008BE  D017               	goto	l1935
   585                           
   586                           ; BSR set to: 0
   587                           ;doprnt.c: 813: continue;
   588                           
   589                           ;doprnt.c: 802: default:
   590  0008C0  D08F               	goto	l1971
   591                           
   592                           ; BSR set to: 0
   593                           ;doprnt.c: 822: }
   594  0008C2  D015               	goto	l1935
   595  0008C4                     l1933:
   596                           
   597                           ; BSR set to: 0
   598  0008C4  C070  FFF6         	movff	printf@f,tblptrl
   599  0008C8  C071  FFF7         	movff	printf@f+1,tblptrh
   600  0008CC  0100               	movlb	0	; () banked
   601  0008CE  4B70               	infsnz	printf@f& (0+255),f,b
   602  0008D0  2B71               	incf	(printf@f+1)& (0+255),f,b
   603  0008D2                     	if	0	;tblptru may be non-zero
   604  0008D2                     	endif
   605  0008D2                     	if	0	;tblptru may be non-zero
   606  0008D2                     	endif
   607  0008D2  0008               	tblrd		*
   608  0008D4  CFF5 F07B          	movff	tablat,printf@c
   609  0008D8  0100               	movlb	0	; () banked
   610  0008DA  517B               	movf	printf@c& (0+255),w,b
   611                           
   612                           ; Switch size 1, requested type "space"
   613                           ; Number of cases is 3, Range of values is 0 to 105
   614                           ; switch strategies available:
   615                           ; Name         Instructions Cycles
   616                           ; simple_byte           10     6 (average)
   617                           ;	Chosen strategy is simple_byte
   618  0008DC  0A00               	xorlw	0	; case 0
   619  0008DE  B4D8               	btfsc	status,2,c
   620  0008E0  0012               	return	
   621  0008E2  0A64               	xorlw	100	; case 100
   622  0008E4  B4D8               	btfsc	status,2,c
   623  0008E6  D003               	goto	l1935
   624  0008E8  0A0D               	xorlw	13	; case 105
   625  0008EA  A4D8               	btfss	status,2,c
   626  0008EC  D079               	goto	l1971
   627  0008EE                     l1935:
   628                           
   629                           ; BSR set to: 0
   630                           ;doprnt.c: 1253: {
   631                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   632  0008EE  C075  FFD9         	movff	printf@ap,fsr2l
   633  0008F2  C076  FFDA         	movff	printf@ap+1,fsr2h
   634  0008F6  CFDE F079          	movff	postinc2,printf@val
   635  0008FA  CFDD F07A          	movff	postdec2,printf@val+1
   636                           
   637                           ; BSR set to: 0
   638  0008FE  0E02               	movlw	2
   639  000900  0100               	movlb	0	; () banked
   640  000902  2775               	addwf	printf@ap& (0+255),f,b
   641  000904  0E00               	movlw	0
   642  000906  2376               	addwfc	(printf@ap+1)& (0+255),f,b
   643                           
   644                           ; BSR set to: 0
   645                           ;doprnt.c: 1261: if((int)val < 0) {
   646  000908  0100               	movlb	0	; () banked
   647  00090A  AF7A               	btfss	(printf@val+1)& (0+255),7,b
   648  00090C  D009               	goto	l1945
   649                           
   650                           ; BSR set to: 0
   651                           ;doprnt.c: 1262: flag |= 0x03;
   652  00090E  0E03               	movlw	3
   653  000910  0100               	movlb	0	; () banked
   654  000912  1377               	iorwf	printf@flag& (0+255),f,b
   655                           
   656                           ; BSR set to: 0
   657                           ;doprnt.c: 1263: val = -val;
   658  000914  0100               	movlb	0	; () banked
   659  000916  6D79               	negf	printf@val& (0+255),b
   660  000918  1F7A               	comf	(printf@val+1)& (0+255),f,b
   661  00091A  B0D8               	btfsc	status,0,c
   662  00091C  2B7A               	incf	(printf@val+1)& (0+255),f,b
   663  00091E  D000               	goto	l1945
   664  000920                     l1945:
   665                           
   666                           ; BSR set to: 0
   667                           ;doprnt.c: 1264: }
   668                           ;doprnt.c: 1266: }
   669                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   670  000920  0E01               	movlw	1
   671  000922  0100               	movlb	0	; () banked
   672  000924  6F7B               	movwf	printf@c& (0+255),b
   673  000926                     l1947:
   674                           
   675                           ; BSR set to: 0
   676  000926  0E05               	movlw	5
   677  000928  0100               	movlb	0	; () banked
   678  00092A  197B               	xorwf	printf@c& (0+255),w,b
   679  00092C  B4D8               	btfsc	status,2,c
   680  00092E  D01A               	goto	l1959
   681  000930  D001               	goto	l1951
   682                           
   683                           ; BSR set to: 0
   684  000932  D018               	goto	l1959
   685  000934                     l1951:
   686                           
   687                           ; BSR set to: 0
   688                           ;doprnt.c: 1306: if(val < dpowers[c])
   689  000934  0100               	movlb	0	; () banked
   690  000936  517B               	movf	printf@c& (0+255),w,b
   691  000938  0D02               	mullw	2
   692  00093A  0E01               	movlw	low _dpowers
   693  00093C  24F3               	addwf	prodl,w,c
   694  00093E  6EF6               	movwf	tblptrl,c
   695  000940  0E06               	movlw	high _dpowers
   696  000942  20F4               	addwfc	prodh,w,c
   697  000944  6EF7               	movwf	tblptrh,c
   698  000946                     	if	0	;There are less than 3 active tblptr bytes
   699  000946                     	endif
   700  000946  0009               	tblrd		*+
   701  000948  50F5               	movf	tablat,w,c
   702  00094A  0100               	movlb	0	; () banked
   703  00094C  5D79               	subwf	printf@val& (0+255),w,b
   704  00094E  0009               	tblrd		*+
   705  000950  50F5               	movf	tablat,w,c
   706  000952  0100               	movlb	0	; () banked
   707  000954  597A               	subwfb	(printf@val+1)& (0+255),w,b
   708  000956  A0D8               	btfss	status,0,c
   709  000958  D005               	goto	l1959
   710  00095A  D001               	goto	l1955
   711                           
   712                           ; BSR set to: 0
   713                           ;doprnt.c: 1307: break;
   714  00095C  D003               	goto	l1959
   715  00095E                     l1955:
   716                           
   717                           ; BSR set to: 0
   718  00095E  0100               	movlb	0	; () banked
   719  000960  2B7B               	incf	printf@c& (0+255),f,b
   720  000962  D7E1               	goto	l1947
   721  000964                     l1959:
   722                           
   723                           ; BSR set to: 0
   724                           ;doprnt.c: 1422: {
   725                           ;doprnt.c: 1438: if(flag & 0x03)
   726  000964  C077  F074         	movff	printf@flag,??_printf
   727  000968  0E03               	movlw	3
   728  00096A  0100               	movlb	0	; () banked
   729  00096C  1774               	andwf	??_printf& (0+255),f,b
   730  00096E  B4D8               	btfsc	status,2,c
   731  000970  D004               	goto	l1963
   732                           
   733                           ; BSR set to: 0
   734                           ;doprnt.c: 1439: (putch('-') );
   735  000972  0E2D               	movlw	45
   736  000974  ECBD  F006         	call	_putch
   737  000978  D000               	goto	l1963
   738  00097A                     l1963:
   739                           
   740                           ;doprnt.c: 1469: }
   741                           ;doprnt.c: 1472: prec = c;
   742  00097A  C07B  F078         	movff	printf@c,printf@prec
   743                           
   744                           ;doprnt.c: 1474: while(prec--) {
   745  00097E  D028               	goto	l1969
   746  000980                     l1965:
   747                           
   748                           ;doprnt.c: 1478: {
   749                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
   750  000980  0100               	movlb	0	; () banked
   751  000982  5178               	movf	printf@prec& (0+255),w,b
   752  000984  0D02               	mullw	2
   753  000986  0E01               	movlw	low _dpowers
   754  000988  24F3               	addwf	prodl,w,c
   755  00098A  6EF6               	movwf	tblptrl,c
   756  00098C  0E06               	movlw	high _dpowers
   757  00098E  20F4               	addwfc	prodh,w,c
   758  000990  6EF7               	movwf	tblptrh,c
   759  000992                     	if	0	;There are less than 3 active tblptr bytes
   760  000992                     	endif
   761  000992  0009               	tblrd		*+
   762  000994  CFF5 F040          	movff	tablat,___lwdiv@divisor
   763  000998  000A               	tblrd		*-
   764  00099A  CFF5 F041          	movff	tablat,___lwdiv@divisor+1
   765  00099E  C079  F03E         	movff	printf@val,___lwdiv@dividend
   766  0009A2  C07A  F03F         	movff	printf@val+1,___lwdiv@dividend+1
   767  0009A6  EC01  F005         	call	___lwdiv	;wreg free
   768  0009AA  C03E  F045         	movff	?___lwdiv,___lwmod@dividend
   769  0009AE  C03F  F046         	movff	?___lwdiv+1,___lwmod@dividend+1
   770  0009B2  0E00               	movlw	0
   771  0009B4  6E48               	movwf	___lwmod@divisor+1,c
   772  0009B6  0E0A               	movlw	10
   773  0009B8  6E47               	movwf	___lwmod@divisor,c
   774  0009BA  EC2F  F005         	call	___lwmod	;wreg free
   775  0009BE  5045               	movf	?___lwmod,w,c
   776  0009C0  0F30               	addlw	48
   777  0009C2  0100               	movlb	0	; () banked
   778  0009C4  6F7B               	movwf	printf@c& (0+255),b
   779                           
   780                           ; BSR set to: 0
   781                           ;doprnt.c: 1523: }
   782                           ;doprnt.c: 1524: (putch(c) );
   783  0009C6  0100               	movlb	0	; () banked
   784  0009C8  517B               	movf	printf@c& (0+255),w,b
   785  0009CA  ECBD  F006         	call	_putch
   786  0009CE  D000               	goto	l1969
   787  0009D0                     l1969:
   788  0009D0  0100               	movlb	0	; () banked
   789  0009D2  0778               	decf	printf@prec& (0+255),f,b
   790  0009D4  0100               	movlb	0	; () banked
   791  0009D6  2978               	incf	printf@prec& (0+255),w,b
   792  0009D8  B4D8               	btfsc	status,2,c
   793  0009DA  D002               	goto	l1971
   794  0009DC  D7D1               	goto	l1965
   795                           
   796                           ; BSR set to: 0
   797  0009DE  D000               	goto	l1971
   798  0009E0                     l1971:
   799  0009E0  C070  FFF6         	movff	printf@f,tblptrl
   800  0009E4  C071  FFF7         	movff	printf@f+1,tblptrh
   801  0009E8  0100               	movlb	0	; () banked
   802  0009EA  4B70               	infsnz	printf@f& (0+255),f,b
   803  0009EC  2B71               	incf	(printf@f+1)& (0+255),f,b
   804  0009EE                     	if	0	;tblptru may be non-zero
   805  0009EE                     	endif
   806  0009EE                     	if	0	;tblptru may be non-zero
   807  0009EE                     	endif
   808  0009EE  0008               	tblrd		*
   809  0009F0  CFF5 F07B          	movff	tablat,printf@c
   810  0009F4  0100               	movlb	0	; () banked
   811  0009F6  517B               	movf	printf@c& (0+255),w,b
   812  0009F8  B4D8               	btfsc	status,2,c
   813  0009FA  0012               	return	
   814  0009FC  D751               	goto	l1925
   815                           
   816                           ; BSR set to: 0
   817  0009FE  0012               	return	
   818                           
   819                           ; BSR set to: 0
   820                           
   821                           ; BSR set to: 0
   822                           ;doprnt.c: 1540: return 0;
   823                           ;	Return value of _printf is never used
   824                           
   825                           ;doprnt.c: 1525: }
   826                           ;doprnt.c: 1533: }
   827                           ;doprnt.c: 1535: alldone:
   828  000A00  0012               	return		;funcret
   829  000A02                     __end_of_printf:
   830                           	opt stack 0
   831                           tblptru	equ	0xFF8
   832                           tblptrh	equ	0xFF7
   833                           tblptrl	equ	0xFF6
   834                           tablat	equ	0xFF5
   835                           prodh	equ	0xFF4
   836                           prodl	equ	0xFF3
   837                           intcon	equ	0xFF2
   838                           postinc0	equ	0xFEE
   839                           wreg	equ	0xFE8
   840                           postinc2	equ	0xFDE
   841                           postdec2	equ	0xFDD
   842                           fsr2h	equ	0xFDA
   843                           fsr2l	equ	0xFD9
   844                           status	equ	0xFD8
   845                           
   846 ;; *************** function _putch *****************
   847 ;; Defined at:
   848 ;;		line 168 in file "mcc_generated_files/eusart1.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;  txData          1    wreg     unsigned char 
   851 ;; Auto vars:     Size  Location     Type
   852 ;;  txData          1   20[COMRAM] unsigned char 
   853 ;; Return value:  Size  Location     Type
   854 ;;		None               void
   855 ;; Registers used:
   856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   862 ;;      Params:         0       0       0       0       0       0       0
   863 ;;      Locals:         1       0       0       0       0       0       0
   864 ;;      Temps:          0       0       0       0       0       0       0
   865 ;;      Totals:         1       0       0       0       0       0       0
   866 ;;Total ram usage:        1 bytes
   867 ;; Hardware stack levels used:    1
   868 ;; Hardware stack levels required when called:    4
   869 ;; This function calls:
   870 ;;		_EUSART1_Write
   871 ;; This function is called by:
   872 ;;		_printf
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           	psect	text2
   877  000D7A                     __ptext2:
   878                           	opt stack 0
   879  000D7A                     _putch:
   880                           	opt stack 25
   881                           
   882                           ; BSR set to: 0
   883                           ;incstack = 0
   884                           ;putch@txData stored from wreg
   885  000D7A  6E3F               	movwf	putch@txData,c
   886                           
   887                           ;eusart1.c: 170: EUSART1_Write(txData);
   888  000D7C  503F               	movf	putch@txData,w,c
   889  000D7E  EC9E  F005         	call	_EUSART1_Write
   890  000D82  0012               	return		;funcret
   891  000D84                     __end_of_putch:
   892                           	opt stack 0
   893                           tblptru	equ	0xFF8
   894                           tblptrh	equ	0xFF7
   895                           tblptrl	equ	0xFF6
   896                           tablat	equ	0xFF5
   897                           prodh	equ	0xFF4
   898                           prodl	equ	0xFF3
   899                           intcon	equ	0xFF2
   900                           postinc0	equ	0xFEE
   901                           wreg	equ	0xFE8
   902                           postinc2	equ	0xFDE
   903                           postdec2	equ	0xFDD
   904                           fsr2h	equ	0xFDA
   905                           fsr2l	equ	0xFD9
   906                           status	equ	0xFD8
   907                           
   908 ;; *************** function _EUSART1_Write *****************
   909 ;; Defined at:
   910 ;;		line 140 in file "mcc_generated_files/eusart1.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;  txData          1    wreg     unsigned char 
   913 ;; Auto vars:     Size  Location     Type
   914 ;;  txData          1   19[COMRAM] unsigned char 
   915 ;; Return value:  Size  Location     Type
   916 ;;		None               void
   917 ;; Registers used:
   918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   924 ;;      Params:         0       0       0       0       0       0       0
   925 ;;      Locals:         1       0       0       0       0       0       0
   926 ;;      Temps:          0       0       0       0       0       0       0
   927 ;;      Totals:         1       0       0       0       0       0       0
   928 ;;Total ram usage:        1 bytes
   929 ;; Hardware stack levels used:    1
   930 ;; Hardware stack levels required when called:    3
   931 ;; This function calls:
   932 ;;		Nothing
   933 ;; This function is called by:
   934 ;;		_putch
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text3
   939  000B3C                     __ptext3:
   940                           	opt stack 0
   941  000B3C                     _EUSART1_Write:
   942                           	opt stack 25
   943                           
   944                           ;incstack = 0
   945                           ;EUSART1_Write@txData stored from wreg
   946  000B3C  6E3E               	movwf	EUSART1_Write@txData,c
   947                           
   948                           ;eusart1.c: 142: while(0 == eusart1TxBufferRemaining)
   949  000B3E  D000               	goto	l1805
   950  000B40                     l1805:
   951  000B40  504C               	movf	_eusart1TxBufferRemaining,w,c	;volatile
   952  000B42  B4D8               	btfsc	status,2,c
   953  000B44  D7FD               	goto	l1805
   954                           
   955                           ;eusart1.c: 144: }
   956                           ;eusart1.c: 146: if(0 == PIE1bits.TX1IE)
   957  000B46  B89D               	btfsc	3997,4,c	;volatile
   958  000B48  D003               	goto	l201
   959                           
   960                           ;eusart1.c: 147: {
   961                           ;eusart1.c: 148: TX1REG = txData;
   962  000B4A  C03E  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
   963                           
   964                           ;eusart1.c: 149: }
   965  000B4E  D014               	goto	l1819
   966  000B50                     l201:
   967                           
   968                           ;eusart1.c: 150: else
   969                           ;eusart1.c: 151: {
   970                           ;eusart1.c: 152: PIE1bits.TX1IE = 0;
   971  000B50  989D               	bcf	3997,4,c	;volatile
   972                           
   973                           ;eusart1.c: 153: eusart1TxBuffer[eusart1TxHead++] = txData;
   974  000B52  5013               	movf	_eusart1TxHead,w,c
   975  000B54  0D01               	mullw	1
   976  000B56  0E68               	movlw	low _eusart1TxBuffer
   977  000B58  24F3               	addwf	prodl,w,c
   978  000B5A  6ED9               	movwf	fsr2l,c
   979  000B5C  0E00               	movlw	high _eusart1TxBuffer
   980  000B5E  20F4               	addwfc	prodh,w,c
   981  000B60  6EDA               	movwf	fsr2h,c
   982  000B62  C03E  FFDF         	movff	EUSART1_Write@txData,indf2
   983  000B66  2A13               	incf	_eusart1TxHead,f,c
   984                           
   985                           ;eusart1.c: 154: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
   986  000B68  0E07               	movlw	7
   987  000B6A  6413               	cpfsgt	_eusart1TxHead,c
   988  000B6C  D003               	goto	l1817
   989                           
   990                           ;eusart1.c: 155: {
   991                           ;eusart1.c: 156: eusart1TxHead = 0;
   992  000B6E  0E00               	movlw	0
   993  000B70  6E13               	movwf	_eusart1TxHead,c
   994  000B72  D000               	goto	l1817
   995  000B74                     l1817:
   996                           
   997                           ;eusart1.c: 157: }
   998                           ;eusart1.c: 158: eusart1TxBufferRemaining--;
   999  000B74  064C               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  1000  000B76  D000               	goto	l1819
  1001  000B78                     l1819:
  1002                           
  1003                           ;eusart1.c: 159: }
  1004                           ;eusart1.c: 160: PIE1bits.TX1IE = 1;
  1005  000B78  889D               	bsf	3997,4,c	;volatile
  1006  000B7A  0012               	return		;funcret
  1007  000B7C                     __end_of_EUSART1_Write:
  1008                           	opt stack 0
  1009                           tblptru	equ	0xFF8
  1010                           tblptrh	equ	0xFF7
  1011                           tblptrl	equ	0xFF6
  1012                           tablat	equ	0xFF5
  1013                           prodh	equ	0xFF4
  1014                           prodl	equ	0xFF3
  1015                           intcon	equ	0xFF2
  1016                           postinc0	equ	0xFEE
  1017                           wreg	equ	0xFE8
  1018                           indf2	equ	0xFDF
  1019                           postinc2	equ	0xFDE
  1020                           postdec2	equ	0xFDD
  1021                           fsr2h	equ	0xFDA
  1022                           fsr2l	equ	0xFD9
  1023                           status	equ	0xFD8
  1024                           
  1025 ;; *************** function ___lwmod *****************
  1026 ;; Defined at:
  1027 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;  dividend        2   26[COMRAM] unsigned int 
  1030 ;;  divisor         2   28[COMRAM] unsigned int 
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;  counter         1   30[COMRAM] unsigned char 
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  2   26[COMRAM] unsigned int 
  1035 ;; Registers used:
  1036 ;;		wreg, status,2, status,0
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1042 ;;      Params:         4       0       0       0       0       0       0
  1043 ;;      Locals:         1       0       0       0       0       0       0
  1044 ;;      Temps:          0       0       0       0       0       0       0
  1045 ;;      Totals:         5       0       0       0       0       0       0
  1046 ;;Total ram usage:        5 bytes
  1047 ;; Hardware stack levels used:    1
  1048 ;; Hardware stack levels required when called:    3
  1049 ;; This function calls:
  1050 ;;		Nothing
  1051 ;; This function is called by:
  1052 ;;		_printf
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text4
  1057  000A5E                     __ptext4:
  1058                           	opt stack 0
  1059  000A5E                     ___lwmod:
  1060                           	opt stack 26
  1061                           
  1062                           ;incstack = 0
  1063  000A5E  5047               	movf	___lwmod@divisor,w,c
  1064  000A60  1048               	iorwf	___lwmod@divisor+1,w,c
  1065  000A62  B4D8               	btfsc	status,2,c
  1066  000A64  D01D               	goto	l1008
  1067  000A66  0E01               	movlw	1
  1068  000A68  6E49               	movwf	___lwmod@counter,c
  1069  000A6A  D005               	goto	l1901
  1070  000A6C                     l1899:
  1071  000A6C  90D8               	bcf	status,0,c
  1072  000A6E  3647               	rlcf	___lwmod@divisor,f,c
  1073  000A70  3648               	rlcf	___lwmod@divisor+1,f,c
  1074  000A72  2A49               	incf	___lwmod@counter,f,c
  1075  000A74  D000               	goto	l1901
  1076  000A76                     l1901:
  1077  000A76  BE48               	btfsc	___lwmod@divisor+1,7,c
  1078  000A78  D002               	goto	l1903
  1079  000A7A  D7F8               	goto	l1899
  1080  000A7C  D000               	goto	l1903
  1081  000A7E                     l1903:
  1082  000A7E  5047               	movf	___lwmod@divisor,w,c
  1083  000A80  5C45               	subwf	___lwmod@dividend,w,c
  1084  000A82  5048               	movf	___lwmod@divisor+1,w,c
  1085  000A84  5846               	subwfb	___lwmod@dividend+1,w,c
  1086  000A86  A0D8               	btfss	status,0,c
  1087  000A88  D005               	goto	l1907
  1088  000A8A  5047               	movf	___lwmod@divisor,w,c
  1089  000A8C  5E45               	subwf	___lwmod@dividend,f,c
  1090  000A8E  5048               	movf	___lwmod@divisor+1,w,c
  1091  000A90  5A46               	subwfb	___lwmod@dividend+1,f,c
  1092  000A92  D000               	goto	l1907
  1093  000A94                     l1907:
  1094  000A94  90D8               	bcf	status,0,c
  1095  000A96  3248               	rrcf	___lwmod@divisor+1,f,c
  1096  000A98  3247               	rrcf	___lwmod@divisor,f,c
  1097  000A9A  2E49               	decfsz	___lwmod@counter,f,c
  1098  000A9C  D7F0               	goto	l1903
  1099  000A9E  D000               	goto	l1008
  1100  000AA0                     l1008:
  1101  000AA0  C045  F045         	movff	___lwmod@dividend,?___lwmod
  1102  000AA4  C046  F046         	movff	___lwmod@dividend+1,?___lwmod+1
  1103  000AA8  0012               	return		;funcret
  1104  000AAA                     __end_of___lwmod:
  1105                           	opt stack 0
  1106                           tblptru	equ	0xFF8
  1107                           tblptrh	equ	0xFF7
  1108                           tblptrl	equ	0xFF6
  1109                           tablat	equ	0xFF5
  1110                           prodh	equ	0xFF4
  1111                           prodl	equ	0xFF3
  1112                           intcon	equ	0xFF2
  1113                           postinc0	equ	0xFEE
  1114                           wreg	equ	0xFE8
  1115                           indf2	equ	0xFDF
  1116                           postinc2	equ	0xFDE
  1117                           postdec2	equ	0xFDD
  1118                           fsr2h	equ	0xFDA
  1119                           fsr2l	equ	0xFD9
  1120                           status	equ	0xFD8
  1121                           
  1122 ;; *************** function ___lwdiv *****************
  1123 ;; Defined at:
  1124 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  dividend        2   19[COMRAM] unsigned int 
  1127 ;;  divisor         2   21[COMRAM] unsigned int 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  quotient        2   24[COMRAM] unsigned int 
  1130 ;;  counter         1   23[COMRAM] unsigned char 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  2   19[COMRAM] unsigned int 
  1133 ;; Registers used:
  1134 ;;		wreg, status,2, status,0
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1140 ;;      Params:         4       0       0       0       0       0       0
  1141 ;;      Locals:         3       0       0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0       0
  1143 ;;      Totals:         7       0       0       0       0       0       0
  1144 ;;Total ram usage:        7 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    3
  1147 ;; This function calls:
  1148 ;;		Nothing
  1149 ;; This function is called by:
  1150 ;;		_printf
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text5
  1155  000A02                     __ptext5:
  1156                           	opt stack 0
  1157  000A02                     ___lwdiv:
  1158                           	opt stack 26
  1159                           
  1160                           ;incstack = 0
  1161  000A02  0E00               	movlw	0
  1162  000A04  6E44               	movwf	___lwdiv@quotient+1,c
  1163  000A06  0E00               	movlw	0
  1164  000A08  6E43               	movwf	___lwdiv@quotient,c
  1165  000A0A  5040               	movf	___lwdiv@divisor,w,c
  1166  000A0C  1041               	iorwf	___lwdiv@divisor+1,w,c
  1167  000A0E  B4D8               	btfsc	status,2,c
  1168  000A10  D021               	goto	l998
  1169  000A12  0E01               	movlw	1
  1170  000A14  6E42               	movwf	___lwdiv@counter,c
  1171  000A16  D005               	goto	l1881
  1172  000A18                     l1879:
  1173  000A18  90D8               	bcf	status,0,c
  1174  000A1A  3640               	rlcf	___lwdiv@divisor,f,c
  1175  000A1C  3641               	rlcf	___lwdiv@divisor+1,f,c
  1176  000A1E  2A42               	incf	___lwdiv@counter,f,c
  1177  000A20  D000               	goto	l1881
  1178  000A22                     l1881:
  1179  000A22  BE41               	btfsc	___lwdiv@divisor+1,7,c
  1180  000A24  D002               	goto	l1883
  1181  000A26  D7F8               	goto	l1879
  1182  000A28  D000               	goto	l1883
  1183  000A2A                     l1883:
  1184  000A2A  90D8               	bcf	status,0,c
  1185  000A2C  3643               	rlcf	___lwdiv@quotient,f,c
  1186  000A2E  3644               	rlcf	___lwdiv@quotient+1,f,c
  1187  000A30  5040               	movf	___lwdiv@divisor,w,c
  1188  000A32  5C3E               	subwf	___lwdiv@dividend,w,c
  1189  000A34  5041               	movf	___lwdiv@divisor+1,w,c
  1190  000A36  583F               	subwfb	___lwdiv@dividend+1,w,c
  1191  000A38  A0D8               	btfss	status,0,c
  1192  000A3A  D006               	goto	l1891
  1193  000A3C  5040               	movf	___lwdiv@divisor,w,c
  1194  000A3E  5E3E               	subwf	___lwdiv@dividend,f,c
  1195  000A40  5041               	movf	___lwdiv@divisor+1,w,c
  1196  000A42  5A3F               	subwfb	___lwdiv@dividend+1,f,c
  1197  000A44  8043               	bsf	___lwdiv@quotient,0,c
  1198  000A46  D000               	goto	l1891
  1199  000A48                     l1891:
  1200  000A48  90D8               	bcf	status,0,c
  1201  000A4A  3241               	rrcf	___lwdiv@divisor+1,f,c
  1202  000A4C  3240               	rrcf	___lwdiv@divisor,f,c
  1203  000A4E  2E42               	decfsz	___lwdiv@counter,f,c
  1204  000A50  D7EC               	goto	l1883
  1205  000A52  D000               	goto	l998
  1206  000A54                     l998:
  1207  000A54  C043  F03E         	movff	___lwdiv@quotient,?___lwdiv
  1208  000A58  C044  F03F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1209  000A5C  0012               	return		;funcret
  1210  000A5E                     __end_of___lwdiv:
  1211                           	opt stack 0
  1212                           tblptru	equ	0xFF8
  1213                           tblptrh	equ	0xFF7
  1214                           tblptrl	equ	0xFF6
  1215                           tablat	equ	0xFF5
  1216                           prodh	equ	0xFF4
  1217                           prodl	equ	0xFF3
  1218                           intcon	equ	0xFF2
  1219                           postinc0	equ	0xFEE
  1220                           wreg	equ	0xFE8
  1221                           indf2	equ	0xFDF
  1222                           postinc2	equ	0xFDE
  1223                           postdec2	equ	0xFDD
  1224                           fsr2h	equ	0xFDA
  1225                           fsr2l	equ	0xFD9
  1226                           status	equ	0xFD8
  1227                           
  1228 ;; *************** function _SYSTEM_Initialize *****************
  1229 ;; Defined at:
  1230 ;;		line 112 in file "mcc_generated_files/mcc.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;		None               void
  1237 ;; Registers used:
  1238 ;;		wreg, status,2, status,0, cstack
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1244 ;;      Params:         0       0       0       0       0       0       0
  1245 ;;      Locals:         0       0       0       0       0       0       0
  1246 ;;      Temps:          0       0       0       0       0       0       0
  1247 ;;      Totals:         0       0       0       0       0       0       0
  1248 ;;Total ram usage:        0 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; Hardware stack levels required when called:    5
  1251 ;; This function calls:
  1252 ;;		_ADC_Initialize
  1253 ;;		_EUSART1_Initialize
  1254 ;;		_I2C1_Initialize
  1255 ;;		_INTERRUPT_Initialize
  1256 ;;		_OSCILLATOR_Initialize
  1257 ;;		_PIN_MANAGER_Initialize
  1258 ;;		_TMR0_Initialize
  1259 ;; This function is called by:
  1260 ;;		_main
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           	psect	text6
  1265  000CDE                     __ptext6:
  1266                           	opt stack 0
  1267  000CDE                     _SYSTEM_Initialize:
  1268                           	opt stack 25
  1269                           
  1270                           ;mcc.c: 114: OSCILLATOR_Initialize();
  1271                           
  1272                           ;incstack = 0
  1273  000CDE  ECB6  F006         	call	_OSCILLATOR_Initialize	;wreg free
  1274                           
  1275                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1276  000CE2  EC55  F005         	call	_PIN_MANAGER_Initialize	;wreg free
  1277                           
  1278                           ;mcc.c: 116: INTERRUPT_Initialize();
  1279  000CE6  ECA6  F006         	call	_INTERRUPT_Initialize	;wreg free
  1280                           
  1281                           ;mcc.c: 117: ADC_Initialize();
  1282  000CEA  EC9A  F006         	call	_ADC_Initialize	;wreg free
  1283                           
  1284                           ;mcc.c: 118: TMR0_Initialize();
  1285  000CEE  EC7E  F006         	call	_TMR0_Initialize	;wreg free
  1286                           
  1287                           ;mcc.c: 119: EUSART1_Initialize();
  1288  000CF2  ECDE  F005         	call	_EUSART1_Initialize	;wreg free
  1289                           
  1290                           ;mcc.c: 120: I2C1_Initialize();
  1291  000CF6  EC47  F006         	call	_I2C1_Initialize	;wreg free
  1292  000CFA  0012               	return		;funcret
  1293  000CFC                     __end_of_SYSTEM_Initialize:
  1294                           	opt stack 0
  1295                           tblptru	equ	0xFF8
  1296                           tblptrh	equ	0xFF7
  1297                           tblptrl	equ	0xFF6
  1298                           tablat	equ	0xFF5
  1299                           prodh	equ	0xFF4
  1300                           prodl	equ	0xFF3
  1301                           intcon	equ	0xFF2
  1302                           postinc0	equ	0xFEE
  1303                           wreg	equ	0xFE8
  1304                           indf2	equ	0xFDF
  1305                           postinc2	equ	0xFDE
  1306                           postdec2	equ	0xFDD
  1307                           fsr2h	equ	0xFDA
  1308                           fsr2l	equ	0xFD9
  1309                           status	equ	0xFD8
  1310                           
  1311 ;; *************** function _TMR0_Initialize *****************
  1312 ;; Defined at:
  1313 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;		None               void
  1320 ;; Registers used:
  1321 ;;		wreg, status,2, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1327 ;;      Params:         0       0       0       0       0       0       0
  1328 ;;      Locals:         0       0       0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0       0       0
  1330 ;;      Totals:         0       0       0       0       0       0       0
  1331 ;;Total ram usage:        0 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; Hardware stack levels required when called:    4
  1334 ;; This function calls:
  1335 ;;		_TMR0_StartTimer
  1336 ;; This function is called by:
  1337 ;;		_SYSTEM_Initialize
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text7
  1342  000CFC                     __ptext7:
  1343                           	opt stack 0
  1344  000CFC                     _TMR0_Initialize:
  1345                           	opt stack 25
  1346                           
  1347                           ;tmr0.c: 70: T0CON = 0x94;
  1348                           
  1349                           ;incstack = 0
  1350  000CFC  0E94               	movlw	148
  1351  000CFE  6ED5               	movwf	4053,c	;volatile
  1352                           
  1353                           ;tmr0.c: 73: TMR0H = 0x00;
  1354  000D00  0E00               	movlw	0
  1355  000D02  6ED7               	movwf	4055,c	;volatile
  1356                           
  1357                           ;tmr0.c: 76: TMR0L = 0x64;
  1358  000D04  0E64               	movlw	100
  1359  000D06  6ED6               	movwf	4054,c	;volatile
  1360                           
  1361                           ;tmr0.c: 79: timer0ReloadVal16bit = 100;
  1362  000D08  0E00               	movlw	0
  1363  000D0A  6E4B               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  1364  000D0C  0E64               	movlw	100
  1365  000D0E  6E4A               	movwf	_timer0ReloadVal16bit,c	;volatile
  1366                           
  1367                           ;tmr0.c: 82: INTCONbits.TMR0IF = 0;
  1368  000D10  94F2               	bcf	intcon,2,c	;volatile
  1369                           
  1370                           ;tmr0.c: 85: INTCONbits.TMR0IE = 1;
  1371  000D12  8AF2               	bsf	intcon,5,c	;volatile
  1372                           
  1373                           ;tmr0.c: 88: TMR0_StartTimer();
  1374  000D14  ECC5  F006         	call	_TMR0_StartTimer	;wreg free
  1375  000D18  0012               	return		;funcret
  1376  000D1A                     __end_of_TMR0_Initialize:
  1377                           	opt stack 0
  1378                           tblptru	equ	0xFF8
  1379                           tblptrh	equ	0xFF7
  1380                           tblptrl	equ	0xFF6
  1381                           tablat	equ	0xFF5
  1382                           prodh	equ	0xFF4
  1383                           prodl	equ	0xFF3
  1384                           intcon	equ	0xFF2
  1385                           postinc0	equ	0xFEE
  1386                           wreg	equ	0xFE8
  1387                           indf2	equ	0xFDF
  1388                           postinc2	equ	0xFDE
  1389                           postdec2	equ	0xFDD
  1390                           fsr2h	equ	0xFDA
  1391                           fsr2l	equ	0xFD9
  1392                           status	equ	0xFD8
  1393                           
  1394 ;; *************** function _TMR0_StartTimer *****************
  1395 ;; Defined at:
  1396 ;;		line 91 in file "mcc_generated_files/tmr0.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;		None
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;		None
  1401 ;; Return value:  Size  Location     Type
  1402 ;;		None               void
  1403 ;; Registers used:
  1404 ;;		None
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1410 ;;      Params:         0       0       0       0       0       0       0
  1411 ;;      Locals:         0       0       0       0       0       0       0
  1412 ;;      Temps:          0       0       0       0       0       0       0
  1413 ;;      Totals:         0       0       0       0       0       0       0
  1414 ;;Total ram usage:        0 bytes
  1415 ;; Hardware stack levels used:    1
  1416 ;; Hardware stack levels required when called:    3
  1417 ;; This function calls:
  1418 ;;		Nothing
  1419 ;; This function is called by:
  1420 ;;		_TMR0_Initialize
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text8
  1425  000D8A                     __ptext8:
  1426                           	opt stack 0
  1427  000D8A                     _TMR0_StartTimer:
  1428                           	opt stack 25
  1429                           
  1430                           ;tmr0.c: 94: T0CONbits.TMR0ON = 1;
  1431                           
  1432                           ;incstack = 0
  1433  000D8A  8ED5               	bsf	4053,7,c	;volatile
  1434  000D8C  0012               	return		;funcret
  1435  000D8E                     __end_of_TMR0_StartTimer:
  1436                           	opt stack 0
  1437                           tblptru	equ	0xFF8
  1438                           tblptrh	equ	0xFF7
  1439                           tblptrl	equ	0xFF6
  1440                           tablat	equ	0xFF5
  1441                           prodh	equ	0xFF4
  1442                           prodl	equ	0xFF3
  1443                           intcon	equ	0xFF2
  1444                           postinc0	equ	0xFEE
  1445                           wreg	equ	0xFE8
  1446                           indf2	equ	0xFDF
  1447                           postinc2	equ	0xFDE
  1448                           postdec2	equ	0xFDD
  1449                           fsr2h	equ	0xFDA
  1450                           fsr2l	equ	0xFD9
  1451                           status	equ	0xFD8
  1452                           
  1453 ;; *************** function _PIN_MANAGER_Initialize *****************
  1454 ;; Defined at:
  1455 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;		None
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;		None
  1460 ;; Return value:  Size  Location     Type
  1461 ;;		None               void
  1462 ;; Registers used:
  1463 ;;		wreg, status,2
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1469 ;;      Params:         0       0       0       0       0       0       0
  1470 ;;      Locals:         0       0       0       0       0       0       0
  1471 ;;      Temps:          0       0       0       0       0       0       0
  1472 ;;      Totals:         0       0       0       0       0       0       0
  1473 ;;Total ram usage:        0 bytes
  1474 ;; Hardware stack levels used:    1
  1475 ;; Hardware stack levels required when called:    3
  1476 ;; This function calls:
  1477 ;;		Nothing
  1478 ;; This function is called by:
  1479 ;;		_SYSTEM_Initialize
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text9
  1484  000AAA                     __ptext9:
  1485                           	opt stack 0
  1486  000AAA                     _PIN_MANAGER_Initialize:
  1487                           	opt stack 26
  1488                           
  1489                           ;pin_manager.c: 52: LATA = 0x00;
  1490                           
  1491                           ;incstack = 0
  1492  000AAA  0E00               	movlw	0
  1493  000AAC  6E89               	movwf	3977,c	;volatile
  1494                           
  1495                           ;pin_manager.c: 53: TRISA = 0xF7;
  1496  000AAE  0EF7               	movlw	247
  1497  000AB0  6E92               	movwf	3986,c	;volatile
  1498                           
  1499                           ;pin_manager.c: 54: ANSELA = 0x20;
  1500  000AB2  0E20               	movlw	32
  1501  000AB4  010F               	movlb	15	; () banked
  1502  000AB6  6F38               	movwf	56,b	;volatile
  1503                           
  1504                           ;pin_manager.c: 56: LATB = 0x00;
  1505  000AB8  0E00               	movlw	0
  1506  000ABA  6E8A               	movwf	3978,c	;volatile
  1507                           
  1508                           ;pin_manager.c: 57: TRISB = 0xD7;
  1509  000ABC  0ED7               	movlw	215
  1510  000ABE  6E93               	movwf	3987,c	;volatile
  1511                           
  1512                           ;pin_manager.c: 58: ANSELB = 0x00;
  1513  000AC0  0E00               	movlw	0
  1514  000AC2  010F               	movlb	15	; () banked
  1515  000AC4  6F39               	movwf	57,b	;volatile
  1516                           
  1517                           ;pin_manager.c: 59: WPUB = 0x00;
  1518  000AC6  0E00               	movlw	0
  1519  000AC8  6E61               	movwf	3937,c	;volatile
  1520                           
  1521                           ;pin_manager.c: 61: LATC = 0x18;
  1522  000ACA  0E18               	movlw	24
  1523  000ACC  6E8B               	movwf	3979,c	;volatile
  1524                           
  1525                           ; BSR set to: 15
  1526                           ;pin_manager.c: 62: TRISC = 0xFF;
  1527  000ACE  6894               	setf	3988,c	;volatile
  1528                           
  1529                           ;pin_manager.c: 63: ANSELC = 0x04;
  1530  000AD0  0E04               	movlw	4
  1531  000AD2  010F               	movlb	15	; () banked
  1532  000AD4  6F3A               	movwf	58,b	;volatile
  1533                           
  1534                           ;pin_manager.c: 65: LATD = 0x00;
  1535  000AD6  0E00               	movlw	0
  1536  000AD8  6E8C               	movwf	3980,c	;volatile
  1537                           
  1538                           ;pin_manager.c: 66: TRISD = 0xFD;
  1539  000ADA  0EFD               	movlw	253
  1540  000ADC  6E95               	movwf	3989,c	;volatile
  1541                           
  1542                           ;pin_manager.c: 67: ANSELD = 0xDD;
  1543  000ADE  0EDD               	movlw	221
  1544  000AE0  010F               	movlb	15	; () banked
  1545  000AE2  6F3B               	movwf	59,b	;volatile
  1546                           
  1547                           ;pin_manager.c: 69: LATE = 0x00;
  1548  000AE4  0E00               	movlw	0
  1549  000AE6  6E8D               	movwf	3981,c	;volatile
  1550                           
  1551                           ;pin_manager.c: 70: TRISE = 0x00;
  1552  000AE8  0E00               	movlw	0
  1553  000AEA  6E96               	movwf	3990,c	;volatile
  1554                           
  1555                           ;pin_manager.c: 71: ANSELE = 0x00;
  1556  000AEC  0E00               	movlw	0
  1557  000AEE  010F               	movlb	15	; () banked
  1558  000AF0  6F3C               	movwf	60,b	;volatile
  1559                           
  1560                           ; BSR set to: 15
  1561                           ;pin_manager.c: 73: INTCON2bits.nRBPU = 0x01;
  1562  000AF2  8EF1               	bsf	intcon2,7,c	;volatile
  1563                           
  1564                           ; BSR set to: 15
  1565  000AF4  0012               	return		;funcret
  1566  000AF6                     __end_of_PIN_MANAGER_Initialize:
  1567                           	opt stack 0
  1568                           tblptru	equ	0xFF8
  1569                           tblptrh	equ	0xFF7
  1570                           tblptrl	equ	0xFF6
  1571                           tablat	equ	0xFF5
  1572                           prodh	equ	0xFF4
  1573                           prodl	equ	0xFF3
  1574                           intcon	equ	0xFF2
  1575                           intcon2	equ	0xFF1
  1576                           postinc0	equ	0xFEE
  1577                           wreg	equ	0xFE8
  1578                           indf2	equ	0xFDF
  1579                           postinc2	equ	0xFDE
  1580                           postdec2	equ	0xFDD
  1581                           fsr2h	equ	0xFDA
  1582                           fsr2l	equ	0xFD9
  1583                           status	equ	0xFD8
  1584                           
  1585 ;; *************** function _OSCILLATOR_Initialize *****************
  1586 ;; Defined at:
  1587 ;;		line 123 in file "mcc_generated_files/mcc.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;		None
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;		None
  1592 ;; Return value:  Size  Location     Type
  1593 ;;		None               void
  1594 ;; Registers used:
  1595 ;;		wreg, status,2
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1601 ;;      Params:         0       0       0       0       0       0       0
  1602 ;;      Locals:         0       0       0       0       0       0       0
  1603 ;;      Temps:          0       0       0       0       0       0       0
  1604 ;;      Totals:         0       0       0       0       0       0       0
  1605 ;;Total ram usage:        0 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:    3
  1608 ;; This function calls:
  1609 ;;		Nothing
  1610 ;; This function is called by:
  1611 ;;		_SYSTEM_Initialize
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           	psect	text10
  1616  000D6C                     __ptext10:
  1617                           	opt stack 0
  1618  000D6C                     _OSCILLATOR_Initialize:
  1619                           	opt stack 26
  1620                           
  1621                           ;mcc.c: 126: OSCCON = 0x72;
  1622                           
  1623                           ; BSR set to: 15
  1624                           ;incstack = 0
  1625  000D6C  0E72               	movlw	114
  1626  000D6E  6ED3               	movwf	4051,c	;volatile
  1627                           
  1628                           ;mcc.c: 128: OSCCON2 = 0x04;
  1629  000D70  0E04               	movlw	4
  1630  000D72  6ED2               	movwf	4050,c	;volatile
  1631                           
  1632                           ;mcc.c: 130: OSCTUNE = 0x00;
  1633  000D74  0E00               	movlw	0
  1634  000D76  6E9B               	movwf	3995,c	;volatile
  1635  000D78  0012               	return		;funcret
  1636  000D7A                     __end_of_OSCILLATOR_Initialize:
  1637                           	opt stack 0
  1638                           tblptru	equ	0xFF8
  1639                           tblptrh	equ	0xFF7
  1640                           tblptrl	equ	0xFF6
  1641                           tablat	equ	0xFF5
  1642                           prodh	equ	0xFF4
  1643                           prodl	equ	0xFF3
  1644                           intcon	equ	0xFF2
  1645                           intcon2	equ	0xFF1
  1646                           postinc0	equ	0xFEE
  1647                           wreg	equ	0xFE8
  1648                           indf2	equ	0xFDF
  1649                           postinc2	equ	0xFDE
  1650                           postdec2	equ	0xFDD
  1651                           fsr2h	equ	0xFDA
  1652                           fsr2l	equ	0xFD9
  1653                           status	equ	0xFD8
  1654                           
  1655 ;; *************** function _INTERRUPT_Initialize *****************
  1656 ;; Defined at:
  1657 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;		None
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;		None
  1662 ;; Return value:  Size  Location     Type
  1663 ;;		None               void
  1664 ;; Registers used:
  1665 ;;		None
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1671 ;;      Params:         0       0       0       0       0       0       0
  1672 ;;      Locals:         0       0       0       0       0       0       0
  1673 ;;      Temps:          0       0       0       0       0       0       0
  1674 ;;      Totals:         0       0       0       0       0       0       0
  1675 ;;Total ram usage:        0 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    3
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_SYSTEM_Initialize
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           	psect	text11
  1686  000D4C                     __ptext11:
  1687                           	opt stack 0
  1688  000D4C                     _INTERRUPT_Initialize:
  1689                           	opt stack 26
  1690                           
  1691                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  1692                           
  1693                           ;incstack = 0
  1694  000D4C  9ED0               	bcf	4048,7,c	;volatile
  1695                           
  1696                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
  1697  000D4E  9A9F               	bcf	3999,5,c	;volatile
  1698                           
  1699                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  1700  000D50  989F               	bcf	3999,4,c	;volatile
  1701                           
  1702                           ;interrupt_manager.c: 64: INTCON2bits.TMR0IP = 0;
  1703  000D52  94F1               	bcf	intcon2,2,c	;volatile
  1704                           
  1705                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 0;
  1706  000D54  9C9F               	bcf	3999,6,c	;volatile
  1707                           
  1708                           ;interrupt_manager.c: 68: IPR1bits.SSP1IP = 0;
  1709  000D56  969F               	bcf	3999,3,c	;volatile
  1710                           
  1711                           ;interrupt_manager.c: 70: IPR2bits.BCL1IP = 0;
  1712  000D58  96A2               	bcf	4002,3,c	;volatile
  1713  000D5A  0012               	return		;funcret
  1714  000D5C                     __end_of_INTERRUPT_Initialize:
  1715                           	opt stack 0
  1716                           tblptru	equ	0xFF8
  1717                           tblptrh	equ	0xFF7
  1718                           tblptrl	equ	0xFF6
  1719                           tablat	equ	0xFF5
  1720                           prodh	equ	0xFF4
  1721                           prodl	equ	0xFF3
  1722                           intcon	equ	0xFF2
  1723                           intcon2	equ	0xFF1
  1724                           postinc0	equ	0xFEE
  1725                           wreg	equ	0xFE8
  1726                           indf2	equ	0xFDF
  1727                           postinc2	equ	0xFDE
  1728                           postdec2	equ	0xFDD
  1729                           fsr2h	equ	0xFDA
  1730                           fsr2l	equ	0xFD9
  1731                           status	equ	0xFD8
  1732                           
  1733 ;; *************** function _I2C1_Initialize *****************
  1734 ;; Defined at:
  1735 ;;		line 199 in file "mcc_generated_files/i2c1.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;		None
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;		None
  1740 ;; Return value:  Size  Location     Type
  1741 ;;		None               void
  1742 ;; Registers used:
  1743 ;;		wreg, status,2, status,0
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1749 ;;      Params:         0       0       0       0       0       0       0
  1750 ;;      Locals:         0       0       0       0       0       0       0
  1751 ;;      Temps:          0       0       0       0       0       0       0
  1752 ;;      Totals:         0       0       0       0       0       0       0
  1753 ;;Total ram usage:        0 bytes
  1754 ;; Hardware stack levels used:    1
  1755 ;; Hardware stack levels required when called:    3
  1756 ;; This function calls:
  1757 ;;		Nothing
  1758 ;; This function is called by:
  1759 ;;		_SYSTEM_Initialize
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           	psect	text12
  1764  000C8E                     __ptext12:
  1765                           	opt stack 0
  1766  000C8E                     _I2C1_Initialize:
  1767                           	opt stack 26
  1768                           
  1769                           ;i2c1.c: 201: i2c1_object.pTrHead = i2c1_tr_queue;
  1770                           
  1771                           ;incstack = 0
  1772  000C8E  0E23               	movlw	low _i2c1_tr_queue
  1773  000C90  6E03               	movwf	_i2c1_object+2,c
  1774  000C92  0E00               	movlw	high _i2c1_tr_queue
  1775  000C94  6E04               	movwf	_i2c1_object+3,c
  1776                           
  1777                           ;i2c1.c: 202: i2c1_object.pTrTail = i2c1_tr_queue;
  1778  000C96  0E23               	movlw	low _i2c1_tr_queue
  1779  000C98  6E01               	movwf	_i2c1_object,c
  1780  000C9A  0E00               	movlw	high _i2c1_tr_queue
  1781  000C9C  6E02               	movwf	_i2c1_object+1,c
  1782                           
  1783                           ;i2c1.c: 203: i2c1_object.trStatus.s.empty = 1;
  1784  000C9E  8205               	bsf	_i2c1_object+4,1,c
  1785                           
  1786                           ;i2c1.c: 204: i2c1_object.trStatus.s.full = 0;
  1787  000CA0  9005               	bcf	_i2c1_object+4,0,c
  1788                           
  1789                           ;i2c1.c: 206: i2c1_object.i2cErrors = 0;
  1790  000CA2  0E00               	movlw	0
  1791  000CA4  6E07               	movwf	_i2c1_object+6,c
  1792                           
  1793                           ;i2c1.c: 209: SSP1STAT = 0x80;
  1794  000CA6  0E80               	movlw	128
  1795  000CA8  6EC7               	movwf	4039,c	;volatile
  1796                           
  1797                           ;i2c1.c: 211: SSP1CON1 = 0x28;
  1798  000CAA  0E28               	movlw	40
  1799  000CAC  6EC6               	movwf	4038,c	;volatile
  1800                           
  1801                           ;i2c1.c: 213: SSP1CON3 = 0x00;
  1802  000CAE  0E00               	movlw	0
  1803  000CB0  6ECB               	movwf	4043,c	;volatile
  1804                           
  1805                           ;i2c1.c: 215: SSP1ADD = 0x03;
  1806  000CB2  0E03               	movlw	3
  1807  000CB4  6EC8               	movwf	4040,c	;volatile
  1808                           
  1809                           ;i2c1.c: 219: PIR1bits.SSP1IF = 0;
  1810  000CB6  969E               	bcf	3998,3,c	;volatile
  1811                           
  1812                           ;i2c1.c: 221: PIE1bits.SSP1IE = 1;
  1813  000CB8  869D               	bsf	3997,3,c	;volatile
  1814  000CBA  0012               	return		;funcret
  1815  000CBC                     __end_of_I2C1_Initialize:
  1816                           	opt stack 0
  1817                           tblptru	equ	0xFF8
  1818                           tblptrh	equ	0xFF7
  1819                           tblptrl	equ	0xFF6
  1820                           tablat	equ	0xFF5
  1821                           prodh	equ	0xFF4
  1822                           prodl	equ	0xFF3
  1823                           intcon	equ	0xFF2
  1824                           intcon2	equ	0xFF1
  1825                           postinc0	equ	0xFEE
  1826                           wreg	equ	0xFE8
  1827                           indf2	equ	0xFDF
  1828                           postinc2	equ	0xFDE
  1829                           postdec2	equ	0xFDD
  1830                           fsr2h	equ	0xFDA
  1831                           fsr2l	equ	0xFD9
  1832                           status	equ	0xFD8
  1833                           
  1834 ;; *************** function _EUSART1_Initialize *****************
  1835 ;; Defined at:
  1836 ;;		line 76 in file "mcc_generated_files/eusart1.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;		None
  1841 ;; Return value:  Size  Location     Type
  1842 ;;		None               void
  1843 ;; Registers used:
  1844 ;;		wreg, status,2
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1850 ;;      Params:         0       0       0       0       0       0       0
  1851 ;;      Locals:         0       0       0       0       0       0       0
  1852 ;;      Temps:          0       0       0       0       0       0       0
  1853 ;;      Totals:         0       0       0       0       0       0       0
  1854 ;;Total ram usage:        0 bytes
  1855 ;; Hardware stack levels used:    1
  1856 ;; Hardware stack levels required when called:    3
  1857 ;; This function calls:
  1858 ;;		Nothing
  1859 ;; This function is called by:
  1860 ;;		_SYSTEM_Initialize
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           	psect	text13
  1865  000BBC                     __ptext13:
  1866                           	opt stack 0
  1867  000BBC                     _EUSART1_Initialize:
  1868                           	opt stack 26
  1869                           
  1870                           ;eusart1.c: 79: PIE1bits.RC1IE = 0;
  1871                           
  1872                           ;incstack = 0
  1873  000BBC  9A9D               	bcf	3997,5,c	;volatile
  1874                           
  1875                           ;eusart1.c: 80: PIE1bits.TX1IE = 0;
  1876  000BBE  989D               	bcf	3997,4,c	;volatile
  1877                           
  1878                           ;eusart1.c: 85: BAUD1CON = 0x48;
  1879  000BC0  0E48               	movlw	72
  1880  000BC2  6EB8               	movwf	4024,c	;volatile
  1881                           
  1882                           ;eusart1.c: 88: RC1STA = 0x90;
  1883  000BC4  0E90               	movlw	144
  1884  000BC6  6EAB               	movwf	4011,c	;volatile
  1885                           
  1886                           ;eusart1.c: 91: TX1STA = 0x26;
  1887  000BC8  0E26               	movlw	38
  1888  000BCA  6EAC               	movwf	4012,c	;volatile
  1889                           
  1890                           ;eusart1.c: 94: SPBRG1 = 0xCF;
  1891  000BCC  0ECF               	movlw	207
  1892  000BCE  6EAF               	movwf	4015,c	;volatile
  1893                           
  1894                           ;eusart1.c: 97: SPBRGH1 = 0x00;
  1895  000BD0  0E00               	movlw	0
  1896  000BD2  6EB0               	movwf	4016,c	;volatile
  1897                           
  1898                           ;eusart1.c: 100: TXREG1 = 0x00;
  1899  000BD4  0E00               	movlw	0
  1900  000BD6  6EAD               	movwf	4013,c	;volatile
  1901                           
  1902                           ;eusart1.c: 103: RCREG1 = 0x00;
  1903  000BD8  0E00               	movlw	0
  1904  000BDA  6EAE               	movwf	4014,c	;volatile
  1905                           
  1906                           ;eusart1.c: 107: eusart1TxHead = 0;
  1907  000BDC  0E00               	movlw	0
  1908  000BDE  6E13               	movwf	_eusart1TxHead,c
  1909                           
  1910                           ;eusart1.c: 108: eusart1TxTail = 0;
  1911  000BE0  0E00               	movlw	0
  1912  000BE2  6E14               	movwf	_eusart1TxTail,c
  1913                           
  1914                           ;eusart1.c: 109: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  1915  000BE4  0E08               	movlw	8
  1916  000BE6  6E4C               	movwf	_eusart1TxBufferRemaining,c	;volatile
  1917                           
  1918                           ;eusart1.c: 111: eusart1RxHead = 0;
  1919  000BE8  0E00               	movlw	0
  1920  000BEA  6E11               	movwf	_eusart1RxHead,c
  1921                           
  1922                           ;eusart1.c: 112: eusart1RxTail = 0;
  1923  000BEC  0E00               	movlw	0
  1924  000BEE  6E12               	movwf	_eusart1RxTail,c
  1925                           
  1926                           ;eusart1.c: 113: eusart1RxCount = 0;
  1927  000BF0  0E00               	movlw	0
  1928  000BF2  6E10               	movwf	_eusart1RxCount,c	;volatile
  1929                           
  1930                           ;eusart1.c: 116: PIE1bits.RC1IE = 1;
  1931  000BF4  8A9D               	bsf	3997,5,c	;volatile
  1932  000BF6  0012               	return		;funcret
  1933  000BF8                     __end_of_EUSART1_Initialize:
  1934                           	opt stack 0
  1935                           tblptru	equ	0xFF8
  1936                           tblptrh	equ	0xFF7
  1937                           tblptrl	equ	0xFF6
  1938                           tablat	equ	0xFF5
  1939                           prodh	equ	0xFF4
  1940                           prodl	equ	0xFF3
  1941                           intcon	equ	0xFF2
  1942                           intcon2	equ	0xFF1
  1943                           postinc0	equ	0xFEE
  1944                           wreg	equ	0xFE8
  1945                           indf2	equ	0xFDF
  1946                           postinc2	equ	0xFDE
  1947                           postdec2	equ	0xFDD
  1948                           fsr2h	equ	0xFDA
  1949                           fsr2l	equ	0xFD9
  1950                           status	equ	0xFD8
  1951                           
  1952 ;; *************** function _ADC_Initialize *****************
  1953 ;; Defined at:
  1954 ;;		line 59 in file "mcc_generated_files/adc.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;		None
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;		None
  1959 ;; Return value:  Size  Location     Type
  1960 ;;		None               void
  1961 ;; Registers used:
  1962 ;;		wreg, status,2
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1968 ;;      Params:         0       0       0       0       0       0       0
  1969 ;;      Locals:         0       0       0       0       0       0       0
  1970 ;;      Temps:          0       0       0       0       0       0       0
  1971 ;;      Totals:         0       0       0       0       0       0       0
  1972 ;;Total ram usage:        0 bytes
  1973 ;; Hardware stack levels used:    1
  1974 ;; Hardware stack levels required when called:    3
  1975 ;; This function calls:
  1976 ;;		Nothing
  1977 ;; This function is called by:
  1978 ;;		_SYSTEM_Initialize
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text14
  1983  000D34                     __ptext14:
  1984                           	opt stack 0
  1985  000D34                     _ADC_Initialize:
  1986                           	opt stack 26
  1987                           
  1988                           ;adc.c: 64: ADCON0 = 0x01;
  1989                           
  1990                           ;incstack = 0
  1991  000D34  0E01               	movlw	1
  1992  000D36  6EC2               	movwf	4034,c	;volatile
  1993                           
  1994                           ;adc.c: 67: ADCON1 = 0x80;
  1995  000D38  0E80               	movlw	128
  1996  000D3A  6EC1               	movwf	4033,c	;volatile
  1997                           
  1998                           ;adc.c: 70: ADCON2 = 0x05;
  1999  000D3C  0E05               	movlw	5
  2000  000D3E  6EC0               	movwf	4032,c	;volatile
  2001                           
  2002                           ;adc.c: 73: ADRESL = 0x00;
  2003  000D40  0E00               	movlw	0
  2004  000D42  6EC3               	movwf	4035,c	;volatile
  2005                           
  2006                           ;adc.c: 76: ADRESH = 0x00;
  2007  000D44  0E00               	movlw	0
  2008  000D46  6EC4               	movwf	4036,c	;volatile
  2009                           
  2010                           ;adc.c: 79: PIE1bits.ADIE = 1;
  2011  000D48  8C9D               	bsf	3997,6,c	;volatile
  2012  000D4A  0012               	return		;funcret
  2013  000D4C                     __end_of_ADC_Initialize:
  2014                           	opt stack 0
  2015                           tblptru	equ	0xFF8
  2016                           tblptrh	equ	0xFF7
  2017                           tblptrl	equ	0xFF6
  2018                           tablat	equ	0xFF5
  2019                           prodh	equ	0xFF4
  2020                           prodl	equ	0xFF3
  2021                           intcon	equ	0xFF2
  2022                           intcon2	equ	0xFF1
  2023                           postinc0	equ	0xFEE
  2024                           wreg	equ	0xFE8
  2025                           indf2	equ	0xFDF
  2026                           postinc2	equ	0xFDE
  2027                           postdec2	equ	0xFDD
  2028                           fsr2h	equ	0xFDA
  2029                           fsr2l	equ	0xFD9
  2030                           status	equ	0xFD8
  2031                           
  2032 ;; *************** function _Delay *****************
  2033 ;; Defined at:
  2034 ;;		line 74 in file "main.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  wait            2   19[COMRAM] int 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;  x               2   22[COMRAM] int 
  2039 ;; Return value:  Size  Location     Type
  2040 ;;		None               void
  2041 ;; Registers used:
  2042 ;;		wreg, status,2, status,0
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2048 ;;      Params:         2       0       0       0       0       0       0
  2049 ;;      Locals:         2       0       0       0       0       0       0
  2050 ;;      Temps:          1       0       0       0       0       0       0
  2051 ;;      Totals:         5       0       0       0       0       0       0
  2052 ;;Total ram usage:        5 bytes
  2053 ;; Hardware stack levels used:    1
  2054 ;; Hardware stack levels required when called:    3
  2055 ;; This function calls:
  2056 ;;		Nothing
  2057 ;; This function is called by:
  2058 ;;		_main
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text15
  2063  000BF8                     __ptext15:
  2064                           	opt stack 0
  2065  000BF8                     _Delay:
  2066                           	opt stack 27
  2067                           
  2068                           ;main.c: 76: int x;
  2069                           ;main.c: 77: for(x = 0;x<wait;x++)
  2070                           
  2071                           ;incstack = 0
  2072  000BF8  0E00               	movlw	0
  2073  000BFA  6E42               	movwf	Delay@x+1,c
  2074  000BFC  0E00               	movlw	0
  2075  000BFE  6E41               	movwf	Delay@x,c
  2076  000C00  D00A               	goto	l438
  2077  000C02                     l1975:
  2078                           
  2079                           ;main.c: 78: {
  2080                           ;main.c: 79: _delay((unsigned long)((1)*(16000000/4000.0)));
  2081  000C02  0E06               	movlw	6
  2082  000C04  6E40               	movwf	??_Delay& (0+255),c
  2083  000C06  0E30               	movlw	48
  2084  000C08                     u1157:
  2085  000C08  2EE8               	decfsz	wreg,f,c
  2086  000C0A  D7FE               	goto	u1157
  2087  000C0C  2E40               	decfsz	??_Delay& (0+255),f,c
  2088  000C0E  D7FC               	goto	u1157
  2089  000C10  D000               	nop2	
  2090  000C12  4A41               	infsnz	Delay@x,f,c
  2091  000C14  2A42               	incf	Delay@x+1,f,c
  2092  000C16                     l438:
  2093  000C16  503E               	movf	Delay@wait,w,c
  2094  000C18  5C41               	subwf	Delay@x,w,c
  2095  000C1A  5042               	movf	Delay@x+1,w,c
  2096  000C1C  0A80               	xorlw	128
  2097  000C1E  6E40               	movwf	??_Delay& (0+255),c
  2098  000C20  503F               	movf	Delay@wait+1,w,c
  2099  000C22  0A80               	xorlw	128
  2100  000C24  5840               	subwfb	??_Delay& (0+255),w,c
  2101  000C26  A0D8               	btfss	status,0,c
  2102  000C28  D7EC               	goto	l1975
  2103  000C2A  0012               	return		;funcret
  2104  000C2C                     __end_of_Delay:
  2105                           	opt stack 0
  2106                           tblptru	equ	0xFF8
  2107                           tblptrh	equ	0xFF7
  2108                           tblptrl	equ	0xFF6
  2109                           tablat	equ	0xFF5
  2110                           prodh	equ	0xFF4
  2111                           prodl	equ	0xFF3
  2112                           intcon	equ	0xFF2
  2113                           intcon2	equ	0xFF1
  2114                           postinc0	equ	0xFEE
  2115                           wreg	equ	0xFE8
  2116                           indf2	equ	0xFDF
  2117                           postinc2	equ	0xFDE
  2118                           postdec2	equ	0xFDD
  2119                           fsr2h	equ	0xFDA
  2120                           fsr2l	equ	0xFD9
  2121                           status	equ	0xFD8
  2122                           
  2123 ;; *************** function _INTERRUPT_InterruptManager *****************
  2124 ;; Defined at:
  2125 ;;		line 73 in file "mcc_generated_files/interrupt_manager.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;		None               void
  2132 ;; Registers used:
  2133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2139 ;;      Params:         0       0       0       0       0       0       0
  2140 ;;      Locals:         0       0       0       0       0       0       0
  2141 ;;      Temps:         14       0       0       0       0       0       0
  2142 ;;      Totals:        14       0       0       0       0       0       0
  2143 ;;Total ram usage:       14 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    2
  2146 ;; This function calls:
  2147 ;;		_ADC_ISR
  2148 ;;		_EUSART1_Receive_ISR
  2149 ;;		_EUSART1_Transmit_ISR
  2150 ;;		_I2C1_BusCollisionISR
  2151 ;;		_I2C1_ISR
  2152 ;;		_TMR0_ISR
  2153 ;; This function is called by:
  2154 ;;		Interrupt level 2
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           	psect	intcode
  2159  000008                     __pintcode:
  2160                           	opt stack 0
  2161  000008                     _INTERRUPT_InterruptManager:
  2162                           	opt stack 25
  2163                           
  2164                           ;incstack = 0
  2165  000008  CFFA F030          	movff	pclath,??_INTERRUPT_InterruptManager
  2166  00000C  CFFB F031          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2167  000010  CFE9 F032          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2168  000014  CFEA F033          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2169  000018  CFE1 F034          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2170  00001C  CFE2 F035          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2171  000020  CFD9 F036          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2172  000024  CFDA F037          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2173  000028  CFF3 F038          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2174  00002C  CFF4 F039          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2175  000030  CFF6 F03A          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2176  000034  CFF7 F03B          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2177  000038  CFF8 F03C          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2178  00003C  CFF5 F03D          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2179                           
  2180                           ;interrupt_manager.c: 76: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  2181  000040  BA9D               	btfsc	3997,5,c	;volatile
  2182  000042  AA9E               	btfss	3998,5,c	;volatile
  2183  000044  D003               	goto	i2l375
  2184                           
  2185                           ;interrupt_manager.c: 77: {
  2186                           ;interrupt_manager.c: 78: EUSART1_Receive_ISR();
  2187  000046  EC2F  F006         	call	_EUSART1_Receive_ISR	;wreg free
  2188                           
  2189                           ;interrupt_manager.c: 79: }
  2190  00004A  D01E               	goto	i2l387
  2191  00004C                     i2l375:
  2192                           
  2193                           ;interrupt_manager.c: 80: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  2194  00004C  B89D               	btfsc	3997,4,c	;volatile
  2195  00004E  A89E               	btfss	3998,4,c	;volatile
  2196  000050  D003               	goto	i2l377
  2197                           
  2198                           ;interrupt_manager.c: 81: {
  2199                           ;interrupt_manager.c: 82: EUSART1_Transmit_ISR();
  2200  000052  EC16  F006         	call	_EUSART1_Transmit_ISR	;wreg free
  2201                           
  2202                           ;interrupt_manager.c: 83: }
  2203  000056  D018               	goto	i2l387
  2204  000058                     i2l377:
  2205                           
  2206                           ;interrupt_manager.c: 84: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  2207  000058  BAF2               	btfsc	intcon,5,c	;volatile
  2208  00005A  A4F2               	btfss	intcon,2,c	;volatile
  2209  00005C  D003               	goto	i2l379
  2210                           
  2211                           ;interrupt_manager.c: 85: {
  2212                           ;interrupt_manager.c: 86: TMR0_ISR();
  2213  00005E  ECAE  F006         	call	_TMR0_ISR	;wreg free
  2214                           
  2215                           ;interrupt_manager.c: 87: }
  2216  000062  D012               	goto	i2l387
  2217  000064                     i2l379:
  2218                           
  2219                           ;interrupt_manager.c: 88: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  2220  000064  BC9D               	btfsc	3997,6,c	;volatile
  2221  000066  AC9E               	btfss	3998,6,c	;volatile
  2222  000068  D003               	goto	i2l381
  2223                           
  2224                           ;interrupt_manager.c: 89: {
  2225                           ;interrupt_manager.c: 90: ADC_ISR();
  2226  00006A  ECC7  F006         	call	_ADC_ISR	;wreg free
  2227                           
  2228                           ;interrupt_manager.c: 91: }
  2229  00006E  D00C               	goto	i2l387
  2230  000070                     i2l381:
  2231                           
  2232                           ;interrupt_manager.c: 92: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
  2233  000070  B69D               	btfsc	3997,3,c	;volatile
  2234  000072  A69E               	btfss	3998,3,c	;volatile
  2235  000074  D003               	goto	i2l383
  2236                           
  2237                           ;interrupt_manager.c: 93: {
  2238                           ;interrupt_manager.c: 94: I2C1_ISR();
  2239  000076  EC0E  F003         	call	_I2C1_ISR	;wreg free
  2240                           
  2241                           ;interrupt_manager.c: 95: }
  2242  00007A  D006               	goto	i2l387
  2243  00007C                     i2l383:
  2244                           
  2245                           ;interrupt_manager.c: 96: else if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  2246  00007C  B6A0               	btfsc	4000,3,c	;volatile
  2247  00007E  A6A1               	btfss	4001,3,c	;volatile
  2248  000080  D003               	goto	i2l387
  2249                           
  2250                           ;interrupt_manager.c: 97: {
  2251                           ;interrupt_manager.c: 98: I2C1_BusCollisionISR();
  2252  000082  ECC9  F006         	call	_I2C1_BusCollisionISR	;wreg free
  2253                           
  2254                           ;interrupt_manager.c: 100: else
  2255                           ;interrupt_manager.c: 101: {
  2256                           
  2257                           ;interrupt_manager.c: 99: }
  2258  000086  D000               	goto	i2l387
  2259  000088                     i2l387:
  2260  000088  C03D  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  2261  00008C  C03C  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  2262  000090  C03B  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  2263  000094  C03A  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  2264  000098  C039  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  2265  00009C  C038  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  2266  0000A0  C037  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  2267  0000A4  C036  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  2268  0000A8  C035  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  2269  0000AC  C034  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  2270  0000B0  C033  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  2271  0000B4  C032  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  2272  0000B8  C031  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2273  0000BC  C030  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2274  0000C0  0011               	retfie		f
  2275  0000C2                     __end_of_INTERRUPT_InterruptManager:
  2276                           	opt stack 0
  2277                           pclatu	equ	0xFFB
  2278                           pclath	equ	0xFFA
  2279                           tblptru	equ	0xFF8
  2280                           tblptrh	equ	0xFF7
  2281                           tblptrl	equ	0xFF6
  2282                           tablat	equ	0xFF5
  2283                           prodh	equ	0xFF4
  2284                           prodl	equ	0xFF3
  2285                           intcon	equ	0xFF2
  2286                           intcon2	equ	0xFF1
  2287                           postinc0	equ	0xFEE
  2288                           fsr0h	equ	0xFEA
  2289                           fsr0l	equ	0xFE9
  2290                           wreg	equ	0xFE8
  2291                           fsr1h	equ	0xFE2
  2292                           fsr1l	equ	0xFE1
  2293                           indf2	equ	0xFDF
  2294                           postinc2	equ	0xFDE
  2295                           postdec2	equ	0xFDD
  2296                           fsr2h	equ	0xFDA
  2297                           fsr2l	equ	0xFD9
  2298                           status	equ	0xFD8
  2299                           
  2300 ;; *************** function _TMR0_ISR *****************
  2301 ;; Defined at:
  2302 ;;		line 132 in file "mcc_generated_files/tmr0.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;		None
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;		None
  2307 ;; Return value:  Size  Location     Type
  2308 ;;		None               void
  2309 ;; Registers used:
  2310 ;;		wreg, status,2, cstack
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2316 ;;      Params:         0       0       0       0       0       0       0
  2317 ;;      Locals:         0       0       0       0       0       0       0
  2318 ;;      Temps:          0       0       0       0       0       0       0
  2319 ;;      Totals:         0       0       0       0       0       0       0
  2320 ;;Total ram usage:        0 bytes
  2321 ;; Hardware stack levels used:    1
  2322 ;; Hardware stack levels required when called:    1
  2323 ;; This function calls:
  2324 ;;		_TMR0_CallBack
  2325 ;; This function is called by:
  2326 ;;		_INTERRUPT_InterruptManager
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text17
  2331  000D5C                     __ptext17:
  2332                           	opt stack 0
  2333  000D5C                     _TMR0_ISR:
  2334                           	opt stack 25
  2335                           
  2336                           ;tmr0.c: 136: INTCONbits.TMR0IF = 0;
  2337                           
  2338                           ;incstack = 0
  2339  000D5C  94F2               	bcf	intcon,2,c	;volatile
  2340                           
  2341                           ;tmr0.c: 140: TMR0H = timer0ReloadVal16bit >> 8;
  2342  000D5E  504B               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
  2343  000D60  6ED7               	movwf	4055,c	;volatile
  2344                           
  2345                           ;tmr0.c: 141: TMR0L = (uint8_t) timer0ReloadVal16bit;
  2346  000D62  C04A  FFD6         	movff	_timer0ReloadVal16bit,4054	;volatile
  2347                           
  2348                           ;tmr0.c: 145: TMR0_CallBack();
  2349  000D66  ECC2  F006         	call	_TMR0_CallBack	;wreg free
  2350  000D6A  0012               	return		;funcret
  2351  000D6C                     __end_of_TMR0_ISR:
  2352                           	opt stack 0
  2353                           pclatu	equ	0xFFB
  2354                           pclath	equ	0xFFA
  2355                           tblptru	equ	0xFF8
  2356                           tblptrh	equ	0xFF7
  2357                           tblptrl	equ	0xFF6
  2358                           tablat	equ	0xFF5
  2359                           prodh	equ	0xFF4
  2360                           prodl	equ	0xFF3
  2361                           intcon	equ	0xFF2
  2362                           intcon2	equ	0xFF1
  2363                           postinc0	equ	0xFEE
  2364                           fsr0h	equ	0xFEA
  2365                           fsr0l	equ	0xFE9
  2366                           wreg	equ	0xFE8
  2367                           fsr1h	equ	0xFE2
  2368                           fsr1l	equ	0xFE1
  2369                           indf2	equ	0xFDF
  2370                           postinc2	equ	0xFDE
  2371                           postdec2	equ	0xFDD
  2372                           fsr2h	equ	0xFDA
  2373                           fsr2l	equ	0xFD9
  2374                           status	equ	0xFD8
  2375                           
  2376 ;; *************** function _TMR0_CallBack *****************
  2377 ;; Defined at:
  2378 ;;		line 150 in file "mcc_generated_files/tmr0.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;		None
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;		None
  2383 ;; Return value:  Size  Location     Type
  2384 ;;		None               void
  2385 ;; Registers used:
  2386 ;;		None
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2392 ;;      Params:         0       0       0       0       0       0       0
  2393 ;;      Locals:         0       0       0       0       0       0       0
  2394 ;;      Temps:          0       0       0       0       0       0       0
  2395 ;;      Totals:         0       0       0       0       0       0       0
  2396 ;;Total ram usage:        0 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; This function calls:
  2399 ;;		Nothing
  2400 ;; This function is called by:
  2401 ;;		_TMR0_ISR
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           	psect	text18
  2406  000D84                     __ptext18:
  2407                           	opt stack 0
  2408  000D84                     _TMR0_CallBack:
  2409                           	opt stack 25
  2410                           
  2411                           ;incstack = 0
  2412                           ;tmr0.c: 152: do { LATA3 = ~LATA3; } while(0);
  2413  000D84  7689               	btg	3977,3,c	;volatile
  2414  000D86  0012               	return	
  2415  000D88  0012               	return		;funcret
  2416  000D8A                     __end_of_TMR0_CallBack:
  2417                           	opt stack 0
  2418                           pclatu	equ	0xFFB
  2419                           pclath	equ	0xFFA
  2420                           tblptru	equ	0xFF8
  2421                           tblptrh	equ	0xFF7
  2422                           tblptrl	equ	0xFF6
  2423                           tablat	equ	0xFF5
  2424                           prodh	equ	0xFF4
  2425                           prodl	equ	0xFF3
  2426                           intcon	equ	0xFF2
  2427                           intcon2	equ	0xFF1
  2428                           postinc0	equ	0xFEE
  2429                           fsr0h	equ	0xFEA
  2430                           fsr0l	equ	0xFE9
  2431                           wreg	equ	0xFE8
  2432                           fsr1h	equ	0xFE2
  2433                           fsr1l	equ	0xFE1
  2434                           indf2	equ	0xFDF
  2435                           postinc2	equ	0xFDE
  2436                           postdec2	equ	0xFDD
  2437                           fsr2h	equ	0xFDA
  2438                           fsr2l	equ	0xFD9
  2439                           status	equ	0xFD8
  2440                           
  2441 ;; *************** function _I2C1_ISR *****************
  2442 ;; Defined at:
  2443 ;;		line 234 in file "mcc_generated_files/i2c1.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;		None
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;		None
  2448 ;; Return value:  Size  Location     Type
  2449 ;;		None               void
  2450 ;; Registers used:
  2451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2457 ;;      Params:         0       0       0       0       0       0       0
  2458 ;;      Locals:         0       0       0       0       0       0       0
  2459 ;;      Temps:          2       0       0       0       0       0       0
  2460 ;;      Totals:         2       0       0       0       0       0       0
  2461 ;;Total ram usage:        2 bytes
  2462 ;; Hardware stack levels used:    1
  2463 ;; Hardware stack levels required when called:    1
  2464 ;; This function calls:
  2465 ;;		_I2C1_FunctionComplete
  2466 ;;		_I2C1_Stop
  2467 ;; This function is called by:
  2468 ;;		_INTERRUPT_InterruptManager
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           	psect	text19
  2473  00061C                     __ptext19:
  2474                           	opt stack 0
  2475  00061C                     _I2C1_ISR:
  2476                           	opt stack 25
  2477                           
  2478                           ;i2c1.c: 237: static uint8_t *pi2c_buf_ptr;
  2479                           ;i2c1.c: 238: static uint16_t i2c_address = 0;
  2480                           ;i2c1.c: 239: static uint8_t i2c_bytes_left = 0;
  2481                           ;i2c1.c: 240: static uint8_t i2c_10bit_address_restart = 0;
  2482                           ;i2c1.c: 242: PIR1bits.SSP1IF = 0;
  2483                           
  2484                           ;incstack = 0
  2485  00061C  969E               	bcf	3998,3,c	;volatile
  2486                           
  2487                           ;i2c1.c: 246: if(SSP1CON1bits.WCOL)
  2488  00061E  AEC6               	btfss	4038,7,c	;volatile
  2489  000620  D114               	goto	i2l1331
  2490                           
  2491                           ;i2c1.c: 247: {
  2492                           ;i2c1.c: 249: SSP1CON1bits.WCOL = 0;
  2493  000622  9EC6               	bcf	4038,7,c	;volatile
  2494                           
  2495                           ;i2c1.c: 250: i2c1_state = S_MASTER_IDLE;
  2496  000624  0E00               	movlw	0
  2497  000626  6E15               	movwf	_i2c1_state,c
  2498                           
  2499                           ;i2c1.c: 251: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
  2500  000628  EE20 F003          	lfsr	2,3
  2501  00062C  500A               	movf	_p_i2c1_current,w,c
  2502  00062E  26D9               	addwf	fsr2l,f,c
  2503  000630  500B               	movf	_p_i2c1_current+1,w,c
  2504  000632  22DA               	addwfc	fsr2h,f,c
  2505  000634  CFDE F02E          	movff	postinc2,??_I2C1_ISR
  2506  000638  CFDD F02F          	movff	postdec2,??_I2C1_ISR+1
  2507  00063C  C02E  FFD9         	movff	??_I2C1_ISR,fsr2l
  2508  000640  C02F  FFDA         	movff	??_I2C1_ISR+1,fsr2h
  2509  000644  0E01               	movlw	1
  2510  000646  6EDF               	movwf	indf2,c
  2511                           
  2512                           ;i2c1.c: 254: p_i2c1_current = (0);
  2513  000648  0E00               	movlw	0
  2514  00064A  6E0A               	movwf	_p_i2c1_current,c
  2515  00064C  0E00               	movlw	0
  2516  00064E  6E0B               	movwf	_p_i2c1_current+1,c
  2517                           
  2518                           ;i2c1.c: 256: return;
  2519  000650  0012               	return	
  2520                           
  2521                           ;i2c1.c: 257: }
  2522                           ;i2c1.c: 260: switch(i2c1_state)
  2523  000652  D0FB               	goto	i2l1331
  2524  000654                     i2l60:
  2525                           
  2526                           ;i2c1.c: 264: if(i2c1_object.trStatus.s.empty != 1)
  2527  000654  B205               	btfsc	_i2c1_object+4,1,c
  2528  000656  0012               	return	
  2529                           
  2530                           ;i2c1.c: 265: {
  2531                           ;i2c1.c: 267: p_i2c1_current = i2c1_object.pTrHead;
  2532  000658  C003  F00A         	movff	_i2c1_object+2,_p_i2c1_current
  2533  00065C  C004  F00B         	movff	_i2c1_object+3,_p_i2c1_current+1
  2534                           
  2535                           ;i2c1.c: 268: i2c1_trb_count = i2c1_object.pTrHead->count;
  2536  000660  C003  FFD9         	movff	_i2c1_object+2,fsr2l
  2537  000664  C004  FFDA         	movff	_i2c1_object+3,fsr2h
  2538  000668  50DF               	movf	indf2,w,c
  2539  00066A  6E16               	movwf	_i2c1_trb_count,c
  2540                           
  2541                           ;i2c1.c: 269: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
  2542  00066C  EE20 F001          	lfsr	2,1
  2543  000670  5003               	movf	_i2c1_object+2,w,c
  2544  000672  26D9               	addwf	fsr2l,f,c
  2545  000674  5004               	movf	_i2c1_object+3,w,c
  2546  000676  22DA               	addwfc	fsr2h,f,c
  2547  000678  CFDE F00C          	movff	postinc2,_p_i2c1_trb_current
  2548  00067C  CFDD F00D          	movff	postdec2,_p_i2c1_trb_current+1
  2549                           
  2550                           ;i2c1.c: 271: i2c1_object.pTrHead++;
  2551  000680  0E06               	movlw	6
  2552  000682  2603               	addwf	_i2c1_object+2,f,c
  2553  000684  0E00               	movlw	0
  2554  000686  2204               	addwfc	_i2c1_object+3,f,c
  2555                           
  2556                           ;i2c1.c: 274: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
  2557  000688  0E29               	movlw	low (_i2c1_tr_queue+6)
  2558  00068A  1803               	xorwf	_i2c1_object+2,w,c
  2559  00068C  E109               	bnz	i2l1223
  2560  00068E  0E00               	movlw	high (_i2c1_tr_queue+6)
  2561  000690  1804               	xorwf	_i2c1_object+3,w,c
  2562  000692  A4D8               	btfss	status,2,c
  2563  000694  D005               	goto	i2l1223
  2564                           
  2565                           ;i2c1.c: 275: {
  2566                           ;i2c1.c: 277: i2c1_object.pTrHead = i2c1_tr_queue;
  2567  000696  0E23               	movlw	low _i2c1_tr_queue
  2568  000698  6E03               	movwf	_i2c1_object+2,c
  2569  00069A  0E00               	movlw	high _i2c1_tr_queue
  2570  00069C  6E04               	movwf	_i2c1_object+3,c
  2571  00069E  D000               	goto	i2l1223
  2572  0006A0                     i2l1223:
  2573                           
  2574                           ;i2c1.c: 278: }
  2575                           ;i2c1.c: 282: i2c1_object.trStatus.s.full = 0;
  2576  0006A0  9005               	bcf	_i2c1_object+4,0,c
  2577                           
  2578                           ;i2c1.c: 285: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
  2579  0006A2  5001               	movf	_i2c1_object,w,c
  2580  0006A4  1803               	xorwf	_i2c1_object+2,w,c
  2581  0006A6  E105               	bnz	i2l63
  2582  0006A8  5002               	movf	_i2c1_object+1,w,c
  2583  0006AA  1804               	xorwf	_i2c1_object+3,w,c
  2584  0006AC  A4D8               	btfss	status,2,c
  2585  0006AE  D001               	goto	i2l63
  2586                           
  2587                           ;i2c1.c: 286: {
  2588                           ;i2c1.c: 288: i2c1_object.trStatus.s.empty = 1;
  2589  0006B0  8205               	bsf	_i2c1_object+4,1,c
  2590  0006B2                     i2l63:
  2591                           
  2592                           ;i2c1.c: 289: }
  2593                           ;i2c1.c: 292: SSP1CON2bits.SEN = 1;
  2594  0006B2  80C5               	bsf	4037,0,c	;volatile
  2595                           
  2596                           ;i2c1.c: 295: i2c1_state = S_MASTER_SEND_ADDR;
  2597  0006B4  0E02               	movlw	2
  2598  0006B6  6E15               	movwf	_i2c1_state,c
  2599                           
  2600                           ;i2c1.c: 296: }
  2601                           ;i2c1.c: 298: break;
  2602  0006B8  0012               	return	
  2603  0006BA                     i2l65:
  2604                           
  2605                           ;i2c1.c: 305: SSP1CON2bits.RSEN = 1;
  2606  0006BA  82C5               	bsf	4037,1,c	;volatile
  2607                           
  2608                           ;i2c1.c: 308: i2c1_state = S_MASTER_SEND_ADDR;
  2609  0006BC  0E02               	movlw	2
  2610  0006BE  6E15               	movwf	_i2c1_state,c
  2611                           
  2612                           ;i2c1.c: 310: break;
  2613  0006C0  0012               	return	
  2614  0006C2                     i2l66:
  2615                           
  2616                           ;i2c1.c: 314: if(SSP1CON2bits.ACKSTAT)
  2617  0006C2  ACC5               	btfss	4037,6,c	;volatile
  2618  0006C4  D005               	goto	i2l1235
  2619                           
  2620                           ;i2c1.c: 315: {
  2621                           ;i2c1.c: 316: i2c1_object.i2cErrors++;
  2622  0006C6  2A07               	incf	_i2c1_object+6,f,c
  2623                           
  2624                           ;i2c1.c: 317: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  2625  0006C8  0E04               	movlw	4
  2626  0006CA  ECBE  F005         	call	_I2C1_Stop
  2627                           
  2628                           ;i2c1.c: 318: }
  2629  0006CE  0012               	return	
  2630  0006D0                     i2l1235:
  2631                           
  2632                           ;i2c1.c: 319: else
  2633                           ;i2c1.c: 320: {
  2634                           ;i2c1.c: 322: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  2635  0006D0  90D8               	bcf	status,0,c
  2636  0006D2  302A               	rrcf	I2C1_ISR@i2c_address+1,w,c
  2637  0006D4  6E2F               	movwf	(??_I2C1_ISR+1)& (0+255),c
  2638  0006D6  3029               	rrcf	I2C1_ISR@i2c_address,w,c
  2639  0006D8  6E2E               	movwf	??_I2C1_ISR& (0+255),c
  2640  0006DA  502E               	movf	??_I2C1_ISR,w,c
  2641  0006DC  6EC9               	movwf	4041,c	;volatile
  2642                           
  2643                           ;i2c1.c: 325: if(i2c_address & 0x01)
  2644  0006DE  A029               	btfss	I2C1_ISR@i2c_address,0,c
  2645  0006E0  D003               	goto	i2l1241
  2646                           
  2647                           ;i2c1.c: 326: {
  2648                           ;i2c1.c: 329: i2c1_state = S_MASTER_10BIT_RESTART;
  2649  0006E2  0E0B               	movlw	11
  2650  0006E4  6E15               	movwf	_i2c1_state,c
  2651                           
  2652                           ;i2c1.c: 330: }
  2653  0006E6  0012               	return	
  2654  0006E8                     i2l1241:
  2655                           
  2656                           ;i2c1.c: 331: else
  2657                           ;i2c1.c: 332: {
  2658                           ;i2c1.c: 334: i2c1_state = S_MASTER_SEND_DATA;
  2659  0006E8  0E03               	movlw	3
  2660  0006EA  6E15               	movwf	_i2c1_state,c
  2661                           
  2662                           ;i2c1.c: 335: }
  2663                           ;i2c1.c: 336: }
  2664                           ;i2c1.c: 338: break;
  2665  0006EC  0012               	return	
  2666  0006EE                     i2l71:
  2667                           
  2668                           ;i2c1.c: 342: if(SSP1CON2bits.ACKSTAT)
  2669  0006EE  ACC5               	btfss	4037,6,c	;volatile
  2670  0006F0  D005               	goto	i2l72
  2671                           
  2672                           ;i2c1.c: 343: {
  2673                           ;i2c1.c: 344: i2c1_object.i2cErrors++;
  2674  0006F2  2A07               	incf	_i2c1_object+6,f,c
  2675                           
  2676                           ;i2c1.c: 345: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  2677  0006F4  0E04               	movlw	4
  2678  0006F6  ECBE  F005         	call	_I2C1_Stop
  2679                           
  2680                           ;i2c1.c: 346: }
  2681  0006FA  0012               	return	
  2682  0006FC                     i2l72:
  2683                           
  2684                           ;i2c1.c: 347: else
  2685                           ;i2c1.c: 348: {
  2686                           ;i2c1.c: 351: SSP1CON2bits.RSEN = 1;
  2687  0006FC  82C5               	bsf	4037,1,c	;volatile
  2688                           
  2689                           ;i2c1.c: 355: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  2690  0006FE  C029  F02E         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
  2691  000702  C02A  F02F         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
  2692  000706  C02F  F02E         	movff	??_I2C1_ISR+1,??_I2C1_ISR
  2693  00070A  6A2F               	clrf	??_I2C1_ISR+1,c
  2694  00070C  0E06               	movlw	6
  2695  00070E  162E               	andwf	??_I2C1_ISR,f,c
  2696  000710  0E00               	movlw	0
  2697  000712  162F               	andwf	??_I2C1_ISR+1,f,c
  2698  000714  0EF0               	movlw	240
  2699  000716  102E               	iorwf	??_I2C1_ISR,w,c
  2700  000718  6E29               	movwf	I2C1_ISR@i2c_address,c
  2701  00071A  502F               	movf	??_I2C1_ISR+1,w,c
  2702  00071C  6E2A               	movwf	I2C1_ISR@i2c_address+1,c
  2703                           
  2704                           ;i2c1.c: 358: i2c_address |= 0x0001;
  2705  00071E  8029               	bsf	I2C1_ISR@i2c_address,0,c
  2706                           
  2707                           ;i2c1.c: 361: i2c_10bit_address_restart = 1;
  2708  000720  0E01               	movlw	1
  2709  000722  6E0E               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
  2710                           
  2711                           ;i2c1.c: 364: i2c1_state = S_MASTER_SEND_ADDR;
  2712  000724  0E02               	movlw	2
  2713  000726  6E15               	movwf	_i2c1_state,c
  2714                           
  2715                           ;i2c1.c: 365: }
  2716                           ;i2c1.c: 367: break;
  2717  000728  0012               	return	
  2718  00072A                     i2l1255:
  2719                           
  2720                           ;i2c1.c: 382: if(i2c_10bit_address_restart != 1)
  2721  00072A  040E               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
  2722  00072C  B4D8               	btfsc	status,2,c
  2723  00072E  D030               	goto	i2l76
  2724                           
  2725                           ;i2c1.c: 383: {
  2726                           ;i2c1.c: 385: i2c_address = p_i2c1_trb_current->address;
  2727  000730  C00C  FFD9         	movff	_p_i2c1_trb_current,fsr2l
  2728  000734  C00D  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
  2729  000738  CFDE F029          	movff	postinc2,I2C1_ISR@i2c_address
  2730  00073C  CFDD F02A          	movff	postdec2,I2C1_ISR@i2c_address+1
  2731                           
  2732                           ;i2c1.c: 386: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
  2733  000740  EE20 F003          	lfsr	2,3
  2734  000744  500C               	movf	_p_i2c1_trb_current,w,c
  2735  000746  26D9               	addwf	fsr2l,f,c
  2736  000748  500D               	movf	_p_i2c1_trb_current+1,w,c
  2737  00074A  22DA               	addwfc	fsr2h,f,c
  2738  00074C  CFDE F008          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
  2739  000750  CFDD F009          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
  2740                           
  2741                           ;i2c1.c: 387: i2c_bytes_left = p_i2c1_trb_current->length;
  2742  000754  EE20 F002          	lfsr	2,2
  2743  000758  500C               	movf	_p_i2c1_trb_current,w,c
  2744  00075A  26D9               	addwf	fsr2l,f,c
  2745  00075C  500D               	movf	_p_i2c1_trb_current+1,w,c
  2746  00075E  22DA               	addwfc	fsr2h,f,c
  2747  000760  50DF               	movf	indf2,w,c
  2748  000762  6E0F               	movwf	I2C1_ISR@i2c_bytes_left,c
  2749                           
  2750                           ;i2c1.c: 388: }
  2751                           ;i2c1.c: 391: if(!1 && (0x0 != i2c_address))
  2752  000764  D015               	goto	i2l76
  2753  000766  5029               	movf	I2C1_ISR@i2c_address,w,c
  2754  000768  102A               	iorwf	I2C1_ISR@i2c_address+1,w,c
  2755  00076A  B4D8               	btfsc	status,2,c
  2756  00076C  D011               	goto	i2l76
  2757                           
  2758                           ;i2c1.c: 392: {
  2759                           ;i2c1.c: 393: if (0 == i2c_10bit_address_restart)
  2760  00076E  500E               	movf	I2C1_ISR@i2c_10bit_address_restart,w,c
  2761  000770  A4D8               	btfss	status,2,c
  2762  000772  D007               	goto	i2l77
  2763                           
  2764                           ;i2c1.c: 394: {
  2765                           ;i2c1.c: 398: SSP1BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  2766  000774  502A               	movf	I2C1_ISR@i2c_address+1,w,c
  2767  000776  0B06               	andlw	6
  2768  000778  09F0               	iorlw	240
  2769  00077A  6EC9               	movwf	4041,c	;volatile
  2770                           
  2771                           ;i2c1.c: 399: i2c1_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  2772  00077C  0E0A               	movlw	10
  2773  00077E  6E15               	movwf	_i2c1_state,c
  2774                           
  2775                           ;i2c1.c: 400: }
  2776  000780  0012               	return	
  2777  000782                     i2l77:
  2778                           
  2779                           ;i2c1.c: 401: else
  2780                           ;i2c1.c: 402: {
  2781                           ;i2c1.c: 404: SSP1BUF = i2c_address;
  2782  000782  C029  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
  2783                           
  2784                           ;i2c1.c: 405: i2c1_state = S_MASTER_ACK_ADDR;
  2785  000786  0E05               	movlw	5
  2786  000788  6E15               	movwf	_i2c1_state,c
  2787                           
  2788                           ;i2c1.c: 407: i2c_10bit_address_restart = 0;
  2789  00078A  0E00               	movlw	0
  2790  00078C  6E0E               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
  2791                           
  2792                           ;i2c1.c: 408: }
  2793                           ;i2c1.c: 409: }
  2794  00078E  0012               	return	
  2795  000790                     i2l76:
  2796                           
  2797                           ;i2c1.c: 410: else
  2798                           ;i2c1.c: 411: {
  2799                           ;i2c1.c: 413: SSP1BUF = i2c_address;
  2800  000790  C029  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
  2801                           
  2802                           ;i2c1.c: 414: if(i2c_address & 0x01)
  2803  000794  A029               	btfss	I2C1_ISR@i2c_address,0,c
  2804  000796  D003               	goto	i2l1275
  2805                           
  2806                           ;i2c1.c: 415: {
  2807                           ;i2c1.c: 417: i2c1_state = S_MASTER_ACK_ADDR;
  2808  000798  0E05               	movlw	5
  2809  00079A  6E15               	movwf	_i2c1_state,c
  2810                           
  2811                           ;i2c1.c: 418: }
  2812  00079C  0012               	return	
  2813  00079E                     i2l1275:
  2814                           
  2815                           ;i2c1.c: 419: else
  2816                           ;i2c1.c: 420: {
  2817                           ;i2c1.c: 422: i2c1_state = S_MASTER_SEND_DATA;
  2818  00079E  0E03               	movlw	3
  2819  0007A0  6E15               	movwf	_i2c1_state,c
  2820                           
  2821                           ;i2c1.c: 423: }
  2822                           ;i2c1.c: 424: }
  2823                           ;i2c1.c: 425: break;
  2824  0007A2  0012               	return	
  2825  0007A4                     i2l82:
  2826                           
  2827                           ;i2c1.c: 430: if(SSP1CON2bits.ACKSTAT)
  2828  0007A4  ACC5               	btfss	4037,6,c	;volatile
  2829  0007A6  D006               	goto	i2l1283
  2830                           
  2831                           ;i2c1.c: 431: {
  2832                           ;i2c1.c: 433: i2c1_object.i2cErrors++;
  2833  0007A8  2A07               	incf	_i2c1_object+6,f,c
  2834                           
  2835                           ;i2c1.c: 436: SSP1CON2bits.ACKSTAT = 0;
  2836  0007AA  9CC5               	bcf	4037,6,c	;volatile
  2837                           
  2838                           ;i2c1.c: 439: I2C1_Stop(I2C1_DATA_NO_ACK);
  2839  0007AC  0E05               	movlw	5
  2840  0007AE  ECBE  F005         	call	_I2C1_Stop
  2841                           
  2842                           ;i2c1.c: 441: }
  2843  0007B2  0012               	return	
  2844  0007B4                     i2l1283:
  2845                           
  2846                           ;i2c1.c: 442: else
  2847                           ;i2c1.c: 443: {
  2848                           ;i2c1.c: 445: if(i2c_bytes_left-- == 0U)
  2849  0007B4  060F               	decf	I2C1_ISR@i2c_bytes_left,f,c
  2850  0007B6  280F               	incf	I2C1_ISR@i2c_bytes_left,w,c
  2851  0007B8  A4D8               	btfss	status,2,c
  2852  0007BA  D00E               	goto	i2l1293
  2853                           
  2854                           ;i2c1.c: 446: {
  2855                           ;i2c1.c: 450: p_i2c1_trb_current++;
  2856  0007BC  0E06               	movlw	6
  2857  0007BE  260C               	addwf	_p_i2c1_trb_current,f,c
  2858  0007C0  0E00               	movlw	0
  2859  0007C2  220D               	addwfc	_p_i2c1_trb_current+1,f,c
  2860                           
  2861                           ;i2c1.c: 453: if(--i2c1_trb_count == 0)
  2862  0007C4  2E16               	decfsz	_i2c1_trb_count,f,c
  2863  0007C6  D004               	goto	i2l86
  2864                           
  2865                           ;i2c1.c: 454: {
  2866                           ;i2c1.c: 455: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  2867  0007C8  0E00               	movlw	0
  2868  0007CA  ECBE  F005         	call	_I2C1_Stop
  2869                           
  2870                           ;i2c1.c: 456: }
  2871  0007CE  0012               	return	
  2872  0007D0                     i2l86:
  2873                           
  2874                           ;i2c1.c: 457: else
  2875                           ;i2c1.c: 458: {
  2876                           ;i2c1.c: 465: SSP1CON2bits.RSEN = 1;
  2877  0007D0  82C5               	bsf	4037,1,c	;volatile
  2878                           
  2879                           ;i2c1.c: 468: i2c1_state = S_MASTER_SEND_ADDR;
  2880  0007D2  0E02               	movlw	2
  2881  0007D4  6E15               	movwf	_i2c1_state,c
  2882                           
  2883                           ;i2c1.c: 470: }
  2884                           ;i2c1.c: 471: }
  2885  0007D6  0012               	return	
  2886  0007D8                     i2l1293:
  2887                           
  2888                           ;i2c1.c: 472: else
  2889                           ;i2c1.c: 473: {
  2890                           ;i2c1.c: 475: SSP1BUF = *pi2c_buf_ptr++;
  2891  0007D8  C008  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  2892  0007DC  C009  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  2893  0007E0  50DF               	movf	indf2,w,c
  2894  0007E2  6EC9               	movwf	4041,c	;volatile
  2895  0007E4  4A08               	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
  2896  0007E6  2A09               	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
  2897                           
  2898                           ;i2c1.c: 476: }
  2899                           ;i2c1.c: 477: }
  2900                           ;i2c1.c: 478: break;
  2901  0007E8  0012               	return	
  2902  0007EA                     i2l89:
  2903                           
  2904                           ;i2c1.c: 483: if(SSP1CON2bits.ACKSTAT)
  2905  0007EA  ACC5               	btfss	4037,6,c	;volatile
  2906  0007EC  D006               	goto	i2l90
  2907                           
  2908                           ;i2c1.c: 484: {
  2909                           ;i2c1.c: 487: i2c1_object.i2cErrors++;
  2910  0007EE  2A07               	incf	_i2c1_object+6,f,c
  2911                           
  2912                           ;i2c1.c: 490: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  2913  0007F0  0E04               	movlw	4
  2914  0007F2  ECBE  F005         	call	_I2C1_Stop
  2915                           
  2916                           ;i2c1.c: 493: SSP1CON2bits.ACKSTAT = 0;
  2917  0007F6  9CC5               	bcf	4037,6,c	;volatile
  2918                           
  2919                           ;i2c1.c: 494: }
  2920  0007F8  0012               	return	
  2921  0007FA                     i2l90:
  2922                           
  2923                           ;i2c1.c: 495: else
  2924                           ;i2c1.c: 496: {
  2925                           ;i2c1.c: 497: SSP1CON2bits.RCEN = 1;
  2926  0007FA  86C5               	bsf	4037,3,c	;volatile
  2927                           
  2928                           ;i2c1.c: 498: i2c1_state = S_MASTER_ACK_RCV_DATA;
  2929  0007FC  0E08               	movlw	8
  2930  0007FE  6E15               	movwf	_i2c1_state,c
  2931                           
  2932                           ;i2c1.c: 499: }
  2933                           ;i2c1.c: 500: break;
  2934  000800  0012               	return	
  2935  000802                     i2l1305:
  2936                           
  2937                           ;i2c1.c: 507: i2c1_state = S_MASTER_ACK_RCV_DATA;
  2938  000802  0E08               	movlw	8
  2939  000804  6E15               	movwf	_i2c1_state,c
  2940                           
  2941                           ;i2c1.c: 510: SSP1CON2bits.RCEN = 1;
  2942  000806  86C5               	bsf	4037,3,c	;volatile
  2943                           
  2944                           ;i2c1.c: 512: break;
  2945  000808  0012               	return	
  2946  00080A                     i2l1309:
  2947                           
  2948                           ;i2c1.c: 517: *pi2c_buf_ptr++ = SSP1BUF;
  2949  00080A  C008  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  2950  00080E  C009  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  2951  000812  CFC9 FFDF          	movff	4041,indf2	;volatile
  2952  000816  4A08               	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
  2953  000818  2A09               	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
  2954                           
  2955                           ;i2c1.c: 520: if(--i2c_bytes_left)
  2956  00081A  0E01               	movlw	1
  2957  00081C  5E0F               	subwf	I2C1_ISR@i2c_bytes_left,f,c
  2958  00081E  B4D8               	btfsc	status,2,c
  2959  000820  D004               	goto	i2l94
  2960                           
  2961                           ;i2c1.c: 521: {
  2962                           ;i2c1.c: 527: SSP1CON2bits.ACKDT = 0;
  2963  000822  9AC5               	bcf	4037,5,c	;volatile
  2964                           
  2965                           ;i2c1.c: 530: i2c1_state = S_MASTER_RCV_DATA;
  2966  000824  0E06               	movlw	6
  2967  000826  6E15               	movwf	_i2c1_state,c
  2968                           
  2969                           ;i2c1.c: 531: }
  2970  000828  D004               	goto	i2l1321
  2971  00082A                     i2l94:
  2972                           
  2973                           ;i2c1.c: 532: else
  2974                           ;i2c1.c: 533: {
  2975                           ;i2c1.c: 537: SSP1CON2bits.ACKDT = 1;
  2976  00082A  8AC5               	bsf	4037,5,c	;volatile
  2977                           
  2978                           ;i2c1.c: 539: I2C1_FunctionComplete();
  2979  00082C  EC8D  F006         	call	_I2C1_FunctionComplete	;wreg free
  2980  000830  D000               	goto	i2l1321
  2981  000832                     i2l1321:
  2982                           
  2983                           ;i2c1.c: 540: }
  2984                           ;i2c1.c: 543: SSP1CON2bits.ACKEN = 1;
  2985  000832  88C5               	bsf	4037,4,c	;volatile
  2986                           
  2987                           ;i2c1.c: 544: break;
  2988  000834  0012               	return	
  2989                           
  2990                           ;i2c1.c: 546: case S_MASTER_RCV_STOP:
  2991  000836  D000               	goto	i2l1323
  2992  000838                     i2l1323:
  2993                           
  2994                           ;i2c1.c: 547: case S_MASTER_SEND_STOP:
  2995                           ;i2c1.c: 550: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  2996  000838  0E00               	movlw	0
  2997  00083A  ECBE  F005         	call	_I2C1_Stop
  2998                           
  2999                           ;i2c1.c: 551: break;
  3000  00083E  0012               	return	
  3001  000840                     i2l1325:
  3002                           
  3003                           ;i2c1.c: 557: i2c1_object.i2cErrors++;
  3004  000840  2A07               	incf	_i2c1_object+6,f,c
  3005                           
  3006                           ;i2c1.c: 558: I2C1_Stop(I2C1_LOST_STATE);
  3007  000842  0E06               	movlw	6
  3008  000844  ECBE  F005         	call	_I2C1_Stop
  3009                           
  3010                           ;i2c1.c: 561: }
  3011                           
  3012                           ;i2c1.c: 559: break;
  3013  000848  0012               	return	
  3014  00084A                     i2l1331:
  3015  00084A  5015               	movf	_i2c1_state,w,c
  3016                           
  3017                           ; Switch size 1, requested type "space"
  3018                           ; Number of cases is 11, Range of values is 0 to 11
  3019                           ; switch strategies available:
  3020                           ; Name         Instructions Cycles
  3021                           ; simple_byte           34    18 (average)
  3022                           ;	Chosen strategy is simple_byte
  3023  00084C  0A00               	xorlw	0	; case 0
  3024  00084E  B4D8               	btfsc	status,2,c
  3025  000850  D701               	goto	i2l60
  3026  000852  0A01               	xorlw	1	; case 1
  3027  000854  B4D8               	btfsc	status,2,c
  3028  000856  D731               	goto	i2l65
  3029  000858  0A03               	xorlw	3	; case 2
  3030  00085A  B4D8               	btfsc	status,2,c
  3031  00085C  D766               	goto	i2l1255
  3032  00085E  0A01               	xorlw	1	; case 3
  3033  000860  B4D8               	btfsc	status,2,c
  3034  000862  D7A0               	goto	i2l82
  3035  000864  0A07               	xorlw	7	; case 4
  3036  000866  B4D8               	btfsc	status,2,c
  3037  000868  D7E7               	goto	i2l1323
  3038  00086A  0A01               	xorlw	1	; case 5
  3039  00086C  B4D8               	btfsc	status,2,c
  3040  00086E  D7BD               	goto	i2l89
  3041  000870  0A03               	xorlw	3	; case 6
  3042  000872  B4D8               	btfsc	status,2,c
  3043  000874  D7C6               	goto	i2l1305
  3044  000876  0A01               	xorlw	1	; case 7
  3045  000878  B4D8               	btfsc	status,2,c
  3046  00087A  D7DE               	goto	i2l1323
  3047  00087C  0A0F               	xorlw	15	; case 8
  3048  00087E  B4D8               	btfsc	status,2,c
  3049  000880  D7C4               	goto	i2l1309
  3050  000882  0A02               	xorlw	2	; case 10
  3051  000884  B4D8               	btfsc	status,2,c
  3052  000886  D71D               	goto	i2l66
  3053  000888  0A01               	xorlw	1	; case 11
  3054  00088A  B4D8               	btfsc	status,2,c
  3055  00088C  D730               	goto	i2l71
  3056  00088E  D7D8               	goto	i2l1325
  3057  000890  0012               	return		;funcret
  3058  000892                     __end_of_I2C1_ISR:
  3059                           	opt stack 0
  3060                           pclatu	equ	0xFFB
  3061                           pclath	equ	0xFFA
  3062                           tblptru	equ	0xFF8
  3063                           tblptrh	equ	0xFF7
  3064                           tblptrl	equ	0xFF6
  3065                           tablat	equ	0xFF5
  3066                           prodh	equ	0xFF4
  3067                           prodl	equ	0xFF3
  3068                           intcon	equ	0xFF2
  3069                           intcon2	equ	0xFF1
  3070                           postinc0	equ	0xFEE
  3071                           fsr0h	equ	0xFEA
  3072                           fsr0l	equ	0xFE9
  3073                           wreg	equ	0xFE8
  3074                           fsr1h	equ	0xFE2
  3075                           fsr1l	equ	0xFE1
  3076                           indf2	equ	0xFDF
  3077                           postinc2	equ	0xFDE
  3078                           postdec2	equ	0xFDD
  3079                           fsr2h	equ	0xFDA
  3080                           fsr2l	equ	0xFD9
  3081                           status	equ	0xFD8
  3082                           
  3083 ;; *************** function _I2C1_Stop *****************
  3084 ;; Defined at:
  3085 ;;		line 582 in file "mcc_generated_files/i2c1.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  completion_c    1    wreg     enum E8836
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;  completion_c    1    2[COMRAM] enum E8836
  3090 ;; Return value:  Size  Location     Type
  3091 ;;		None               void
  3092 ;; Registers used:
  3093 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3099 ;;      Params:         0       0       0       0       0       0       0
  3100 ;;      Locals:         1       0       0       0       0       0       0
  3101 ;;      Temps:          2       0       0       0       0       0       0
  3102 ;;      Totals:         3       0       0       0       0       0       0
  3103 ;;Total ram usage:        3 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; This function calls:
  3106 ;;		Nothing
  3107 ;; This function is called by:
  3108 ;;		_I2C1_ISR
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text20
  3113  000B7C                     __ptext20:
  3114                           	opt stack 0
  3115  000B7C                     _I2C1_Stop:
  3116                           	opt stack 25
  3117                           
  3118                           ;incstack = 0
  3119                           ;I2C1_Stop@completion_code stored from wreg
  3120  000B7C  6E2D               	movwf	I2C1_Stop@completion_code,c
  3121                           
  3122                           ;i2c1.c: 585: SSP1CON2bits.PEN = 1;
  3123  000B7E  84C5               	bsf	4037,2,c	;volatile
  3124                           
  3125                           ;i2c1.c: 588: if (p_i2c1_current->pTrFlag != (0))
  3126  000B80  EE20 F003          	lfsr	2,3
  3127  000B84  500A               	movf	_p_i2c1_current,w,c
  3128  000B86  26D9               	addwf	fsr2l,f,c
  3129  000B88  500B               	movf	_p_i2c1_current+1,w,c
  3130  000B8A  22DA               	addwfc	fsr2h,f,c
  3131  000B8C  50DE               	movf	postinc2,w,c
  3132  000B8E  10DE               	iorwf	postinc2,w,c
  3133  000B90  B4D8               	btfsc	status,2,c
  3134  000B92  D011               	goto	i2l1121
  3135                           
  3136                           ;i2c1.c: 589: {
  3137                           ;i2c1.c: 591: *(p_i2c1_current->pTrFlag) = completion_code;
  3138  000B94  EE20 F003          	lfsr	2,3
  3139  000B98  500A               	movf	_p_i2c1_current,w,c
  3140  000B9A  26D9               	addwf	fsr2l,f,c
  3141  000B9C  500B               	movf	_p_i2c1_current+1,w,c
  3142  000B9E  22DA               	addwfc	fsr2h,f,c
  3143  000BA0  CFDE F02B          	movff	postinc2,??_I2C1_Stop
  3144  000BA4  CFDD F02C          	movff	postdec2,??_I2C1_Stop+1
  3145  000BA8  C02B  FFD9         	movff	??_I2C1_Stop,fsr2l
  3146  000BAC  C02C  FFDA         	movff	??_I2C1_Stop+1,fsr2h
  3147  000BB0  C02D  FFDF         	movff	I2C1_Stop@completion_code,indf2
  3148  000BB4  D000               	goto	i2l1121
  3149  000BB6                     i2l1121:
  3150                           
  3151                           ;i2c1.c: 592: }
  3152                           ;i2c1.c: 595: i2c1_state = S_MASTER_IDLE;
  3153  000BB6  0E00               	movlw	0
  3154  000BB8  6E15               	movwf	_i2c1_state,c
  3155  000BBA  0012               	return		;funcret
  3156  000BBC                     __end_of_I2C1_Stop:
  3157                           	opt stack 0
  3158                           pclatu	equ	0xFFB
  3159                           pclath	equ	0xFFA
  3160                           tblptru	equ	0xFF8
  3161                           tblptrh	equ	0xFF7
  3162                           tblptrl	equ	0xFF6
  3163                           tablat	equ	0xFF5
  3164                           prodh	equ	0xFF4
  3165                           prodl	equ	0xFF3
  3166                           intcon	equ	0xFF2
  3167                           intcon2	equ	0xFF1
  3168                           postinc0	equ	0xFEE
  3169                           fsr0h	equ	0xFEA
  3170                           fsr0l	equ	0xFE9
  3171                           wreg	equ	0xFE8
  3172                           fsr1h	equ	0xFE2
  3173                           fsr1l	equ	0xFE1
  3174                           indf2	equ	0xFDF
  3175                           postinc2	equ	0xFDE
  3176                           postdec2	equ	0xFDD
  3177                           fsr2h	equ	0xFDA
  3178                           fsr2l	equ	0xFD9
  3179                           status	equ	0xFD8
  3180                           
  3181 ;; *************** function _I2C1_FunctionComplete *****************
  3182 ;; Defined at:
  3183 ;;		line 564 in file "mcc_generated_files/i2c1.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;		None
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;		None
  3188 ;; Return value:  Size  Location     Type
  3189 ;;		None               void
  3190 ;; Registers used:
  3191 ;;		wreg, status,2, status,0
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3197 ;;      Params:         0       0       0       0       0       0       0
  3198 ;;      Locals:         0       0       0       0       0       0       0
  3199 ;;      Temps:          0       0       0       0       0       0       0
  3200 ;;      Totals:         0       0       0       0       0       0       0
  3201 ;;Total ram usage:        0 bytes
  3202 ;; Hardware stack levels used:    1
  3203 ;; This function calls:
  3204 ;;		Nothing
  3205 ;; This function is called by:
  3206 ;;		_I2C1_ISR
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           	psect	text21
  3211  000D1A                     __ptext21:
  3212                           	opt stack 0
  3213  000D1A                     _I2C1_FunctionComplete:
  3214                           	opt stack 25
  3215                           
  3216                           ;i2c1.c: 568: p_i2c1_trb_current++;
  3217                           
  3218                           ;incstack = 0
  3219  000D1A  0E06               	movlw	6
  3220  000D1C  260C               	addwf	_p_i2c1_trb_current,f,c
  3221  000D1E  0E00               	movlw	0
  3222  000D20  220D               	addwfc	_p_i2c1_trb_current+1,f,c
  3223                           
  3224                           ;i2c1.c: 571: if(--i2c1_trb_count == 0)
  3225  000D22  2E16               	decfsz	_i2c1_trb_count,f,c
  3226  000D24  D003               	goto	i2l1129
  3227                           
  3228                           ;i2c1.c: 572: {
  3229                           ;i2c1.c: 573: i2c1_state = S_MASTER_SEND_STOP;
  3230  000D26  0E04               	movlw	4
  3231  000D28  6E15               	movwf	_i2c1_state,c
  3232                           
  3233                           ;i2c1.c: 574: }
  3234  000D2A  0012               	return	
  3235  000D2C                     i2l1129:
  3236                           
  3237                           ;i2c1.c: 575: else
  3238                           ;i2c1.c: 576: {
  3239                           ;i2c1.c: 577: i2c1_state = S_MASTER_RESTART;
  3240  000D2C  0E01               	movlw	1
  3241  000D2E  6E15               	movwf	_i2c1_state,c
  3242  000D30  0012               	return	
  3243  000D32  0012               	return		;funcret
  3244  000D34                     __end_of_I2C1_FunctionComplete:
  3245                           	opt stack 0
  3246                           pclatu	equ	0xFFB
  3247                           pclath	equ	0xFFA
  3248                           tblptru	equ	0xFF8
  3249                           tblptrh	equ	0xFF7
  3250                           tblptrl	equ	0xFF6
  3251                           tablat	equ	0xFF5
  3252                           prodh	equ	0xFF4
  3253                           prodl	equ	0xFF3
  3254                           intcon	equ	0xFF2
  3255                           intcon2	equ	0xFF1
  3256                           postinc0	equ	0xFEE
  3257                           fsr0h	equ	0xFEA
  3258                           fsr0l	equ	0xFE9
  3259                           wreg	equ	0xFE8
  3260                           fsr1h	equ	0xFE2
  3261                           fsr1l	equ	0xFE1
  3262                           indf2	equ	0xFDF
  3263                           postinc2	equ	0xFDE
  3264                           postdec2	equ	0xFDD
  3265                           fsr2h	equ	0xFDA
  3266                           fsr2l	equ	0xFD9
  3267                           status	equ	0xFD8
  3268                           
  3269 ;; *************** function _I2C1_BusCollisionISR *****************
  3270 ;; Defined at:
  3271 ;;		line 729 in file "mcc_generated_files/i2c1.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;		None
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;		None
  3276 ;; Return value:  Size  Location     Type
  3277 ;;		None               void
  3278 ;; Registers used:
  3279 ;;		None
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3285 ;;      Params:         0       0       0       0       0       0       0
  3286 ;;      Locals:         0       0       0       0       0       0       0
  3287 ;;      Temps:          0       0       0       0       0       0       0
  3288 ;;      Totals:         0       0       0       0       0       0       0
  3289 ;;Total ram usage:        0 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; This function calls:
  3292 ;;		Nothing
  3293 ;; This function is called by:
  3294 ;;		_INTERRUPT_InterruptManager
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text22
  3299  000D92                     __ptext22:
  3300                           	opt stack 0
  3301  000D92                     _I2C1_BusCollisionISR:
  3302                           	opt stack 26
  3303                           
  3304                           ;incstack = 0
  3305  000D92  0012               	return		;funcret
  3306  000D94                     __end_of_I2C1_BusCollisionISR:
  3307                           	opt stack 0
  3308                           pclatu	equ	0xFFB
  3309                           pclath	equ	0xFFA
  3310                           tblptru	equ	0xFF8
  3311                           tblptrh	equ	0xFF7
  3312                           tblptrl	equ	0xFF6
  3313                           tablat	equ	0xFF5
  3314                           prodh	equ	0xFF4
  3315                           prodl	equ	0xFF3
  3316                           intcon	equ	0xFF2
  3317                           intcon2	equ	0xFF1
  3318                           postinc0	equ	0xFEE
  3319                           fsr0h	equ	0xFEA
  3320                           fsr0l	equ	0xFE9
  3321                           wreg	equ	0xFE8
  3322                           fsr1h	equ	0xFE2
  3323                           fsr1l	equ	0xFE1
  3324                           indf2	equ	0xFDF
  3325                           postinc2	equ	0xFDE
  3326                           postdec2	equ	0xFDD
  3327                           fsr2h	equ	0xFDA
  3328                           fsr2l	equ	0xFD9
  3329                           status	equ	0xFD8
  3330                           
  3331 ;; *************** function _EUSART1_Transmit_ISR *****************
  3332 ;; Defined at:
  3333 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;		None
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;		None
  3338 ;; Return value:  Size  Location     Type
  3339 ;;		None               void
  3340 ;; Registers used:
  3341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3347 ;;      Params:         0       0       0       0       0       0       0
  3348 ;;      Locals:         0       0       0       0       0       0       0
  3349 ;;      Temps:          0       0       0       0       0       0       0
  3350 ;;      Totals:         0       0       0       0       0       0       0
  3351 ;;Total ram usage:        0 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_INTERRUPT_InterruptManager
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           	psect	text23
  3361  000C2C                     __ptext23:
  3362                           	opt stack 0
  3363  000C2C                     _EUSART1_Transmit_ISR:
  3364                           	opt stack 26
  3365                           
  3366                           ;eusart1.c: 177: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  3367                           
  3368                           ;incstack = 0
  3369  000C2C  0E08               	movlw	8
  3370  000C2E  604C               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  3371  000C30  D013               	goto	i2l213
  3372                           
  3373                           ;eusart1.c: 178: {
  3374                           ;eusart1.c: 179: TX1REG = eusart1TxBuffer[eusart1TxTail++];
  3375  000C32  5014               	movf	_eusart1TxTail,w,c
  3376  000C34  0D01               	mullw	1
  3377  000C36  0E68               	movlw	low _eusart1TxBuffer
  3378  000C38  24F3               	addwf	prodl,w,c
  3379  000C3A  6ED9               	movwf	fsr2l,c
  3380  000C3C  0E00               	movlw	high _eusart1TxBuffer
  3381  000C3E  20F4               	addwfc	prodh,w,c
  3382  000C40  6EDA               	movwf	fsr2h,c
  3383  000C42  50DF               	movf	indf2,w,c
  3384  000C44  6EAD               	movwf	4013,c	;volatile
  3385  000C46  2A14               	incf	_eusart1TxTail,f,c
  3386                           
  3387                           ;eusart1.c: 180: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  3388  000C48  0E07               	movlw	7
  3389  000C4A  6414               	cpfsgt	_eusart1TxTail,c
  3390  000C4C  D003               	goto	i2l1685
  3391                           
  3392                           ;eusart1.c: 181: {
  3393                           ;eusart1.c: 182: eusart1TxTail = 0;
  3394  000C4E  0E00               	movlw	0
  3395  000C50  6E14               	movwf	_eusart1TxTail,c
  3396  000C52  D000               	goto	i2l1685
  3397  000C54                     i2l1685:
  3398                           
  3399                           ;eusart1.c: 183: }
  3400                           ;eusart1.c: 184: eusart1TxBufferRemaining++;
  3401  000C54  2A4C               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  3402                           
  3403                           ;eusart1.c: 185: }
  3404  000C56  0012               	return	
  3405  000C58                     i2l213:
  3406                           
  3407                           ;eusart1.c: 186: else
  3408                           ;eusart1.c: 187: {
  3409                           ;eusart1.c: 188: PIE1bits.TX1IE = 0;
  3410  000C58  989D               	bcf	3997,4,c	;volatile
  3411  000C5A  0012               	return	
  3412  000C5C  0012               	return		;funcret
  3413  000C5E                     __end_of_EUSART1_Transmit_ISR:
  3414                           	opt stack 0
  3415                           pclatu	equ	0xFFB
  3416                           pclath	equ	0xFFA
  3417                           tblptru	equ	0xFF8
  3418                           tblptrh	equ	0xFF7
  3419                           tblptrl	equ	0xFF6
  3420                           tablat	equ	0xFF5
  3421                           prodh	equ	0xFF4
  3422                           prodl	equ	0xFF3
  3423                           intcon	equ	0xFF2
  3424                           intcon2	equ	0xFF1
  3425                           postinc0	equ	0xFEE
  3426                           fsr0h	equ	0xFEA
  3427                           fsr0l	equ	0xFE9
  3428                           wreg	equ	0xFE8
  3429                           fsr1h	equ	0xFE2
  3430                           fsr1l	equ	0xFE1
  3431                           indf2	equ	0xFDF
  3432                           postinc2	equ	0xFDE
  3433                           postdec2	equ	0xFDD
  3434                           fsr2h	equ	0xFDA
  3435                           fsr2l	equ	0xFD9
  3436                           status	equ	0xFD8
  3437                           
  3438 ;; *************** function _EUSART1_Receive_ISR *****************
  3439 ;; Defined at:
  3440 ;;		line 192 in file "mcc_generated_files/eusart1.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;		None
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;		None               void
  3447 ;; Registers used:
  3448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3454 ;;      Params:         0       0       0       0       0       0       0
  3455 ;;      Locals:         0       0       0       0       0       0       0
  3456 ;;      Temps:          0       0       0       0       0       0       0
  3457 ;;      Totals:         0       0       0       0       0       0       0
  3458 ;;Total ram usage:        0 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; This function calls:
  3461 ;;		Nothing
  3462 ;; This function is called by:
  3463 ;;		_INTERRUPT_InterruptManager
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           	psect	text24
  3468  000C5E                     __ptext24:
  3469                           	opt stack 0
  3470  000C5E                     _EUSART1_Receive_ISR:
  3471                           	opt stack 26
  3472                           
  3473                           ;eusart1.c: 194: if(1 == RC1STAbits.OERR)
  3474                           
  3475                           ;incstack = 0
  3476  000C5E  A2AB               	btfss	4011,1,c	;volatile
  3477  000C60  D003               	goto	i2l1691
  3478                           
  3479                           ;eusart1.c: 195: {
  3480                           ;eusart1.c: 198: RC1STAbits.CREN = 0;
  3481  000C62  98AB               	bcf	4011,4,c	;volatile
  3482                           
  3483                           ;eusart1.c: 199: RC1STAbits.CREN = 1;
  3484  000C64  88AB               	bsf	4011,4,c	;volatile
  3485  000C66  D000               	goto	i2l1691
  3486  000C68                     i2l1691:
  3487                           
  3488                           ;eusart1.c: 200: }
  3489                           ;eusart1.c: 203: eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  3490  000C68  5011               	movf	_eusart1RxHead,w,c
  3491  000C6A  0D01               	mullw	1
  3492  000C6C  0E60               	movlw	low _eusart1RxBuffer
  3493  000C6E  24F3               	addwf	prodl,w,c
  3494  000C70  6ED9               	movwf	fsr2l,c
  3495  000C72  0E00               	movlw	high _eusart1RxBuffer
  3496  000C74  20F4               	addwfc	prodh,w,c
  3497  000C76  6EDA               	movwf	fsr2h,c
  3498  000C78  CFAE FFDF          	movff	4014,indf2	;volatile
  3499  000C7C  2A11               	incf	_eusart1RxHead,f,c
  3500                           
  3501                           ;eusart1.c: 204: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  3502  000C7E  0E07               	movlw	7
  3503  000C80  6411               	cpfsgt	_eusart1RxHead,c
  3504  000C82  D003               	goto	i2l1699
  3505                           
  3506                           ;eusart1.c: 205: {
  3507                           ;eusart1.c: 206: eusart1RxHead = 0;
  3508  000C84  0E00               	movlw	0
  3509  000C86  6E11               	movwf	_eusart1RxHead,c
  3510  000C88  D000               	goto	i2l1699
  3511  000C8A                     i2l1699:
  3512                           
  3513                           ;eusart1.c: 207: }
  3514                           ;eusart1.c: 208: eusart1RxCount++;
  3515  000C8A  2A10               	incf	_eusart1RxCount,f,c	;volatile
  3516  000C8C  0012               	return		;funcret
  3517  000C8E                     __end_of_EUSART1_Receive_ISR:
  3518                           	opt stack 0
  3519                           pclatu	equ	0xFFB
  3520                           pclath	equ	0xFFA
  3521                           tblptru	equ	0xFF8
  3522                           tblptrh	equ	0xFF7
  3523                           tblptrl	equ	0xFF6
  3524                           tablat	equ	0xFF5
  3525                           prodh	equ	0xFF4
  3526                           prodl	equ	0xFF3
  3527                           intcon	equ	0xFF2
  3528                           intcon2	equ	0xFF1
  3529                           postinc0	equ	0xFEE
  3530                           fsr0h	equ	0xFEA
  3531                           fsr0l	equ	0xFE9
  3532                           wreg	equ	0xFE8
  3533                           fsr1h	equ	0xFE2
  3534                           fsr1l	equ	0xFE1
  3535                           indf2	equ	0xFDF
  3536                           postinc2	equ	0xFDE
  3537                           postdec2	equ	0xFDD
  3538                           fsr2h	equ	0xFDA
  3539                           fsr2l	equ	0xFD9
  3540                           status	equ	0xFD8
  3541                           
  3542 ;; *************** function _ADC_ISR *****************
  3543 ;; Defined at:
  3544 ;;		line 128 in file "mcc_generated_files/adc.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;		None
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;		None
  3549 ;; Return value:  Size  Location     Type
  3550 ;;		None               void
  3551 ;; Registers used:
  3552 ;;		None
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3558 ;;      Params:         0       0       0       0       0       0       0
  3559 ;;      Locals:         0       0       0       0       0       0       0
  3560 ;;      Temps:          0       0       0       0       0       0       0
  3561 ;;      Totals:         0       0       0       0       0       0       0
  3562 ;;Total ram usage:        0 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_INTERRUPT_InterruptManager
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           	psect	text25
  3572  000D8E                     __ptext25:
  3573                           	opt stack 0
  3574  000D8E                     _ADC_ISR:
  3575                           	opt stack 26
  3576                           
  3577                           ;adc.c: 131: PIR1bits.ADIF = 0;
  3578                           
  3579                           ;incstack = 0
  3580  000D8E  9C9E               	bcf	3998,6,c	;volatile
  3581  000D90  0012               	return		;funcret
  3582  000D92                     __end_of_ADC_ISR:
  3583                           	opt stack 0
  3584                           pclatu	equ	0xFFB
  3585                           pclath	equ	0xFFA
  3586                           tblptru	equ	0xFF8
  3587                           tblptrh	equ	0xFF7
  3588                           tblptrl	equ	0xFF6
  3589                           tablat	equ	0xFF5
  3590                           prodh	equ	0xFF4
  3591                           prodl	equ	0xFF3
  3592                           intcon	equ	0xFF2
  3593                           intcon2	equ	0xFF1
  3594                           postinc0	equ	0xFEE
  3595                           fsr0h	equ	0xFEA
  3596                           fsr0l	equ	0xFE9
  3597                           wreg	equ	0xFE8
  3598                           fsr1h	equ	0xFE2
  3599                           fsr1l	equ	0xFE1
  3600                           indf2	equ	0xFDF
  3601                           postinc2	equ	0xFDE
  3602                           postdec2	equ	0xFDD
  3603                           fsr2h	equ	0xFDA
  3604                           fsr2l	equ	0xFD9
  3605                           status	equ	0xFD8
  3606                           pclatu	equ	0xFFB
  3607                           pclath	equ	0xFFA
  3608                           tblptru	equ	0xFF8
  3609                           tblptrh	equ	0xFF7
  3610                           tblptrl	equ	0xFF6
  3611                           tablat	equ	0xFF5
  3612                           prodh	equ	0xFF4
  3613                           prodl	equ	0xFF3
  3614                           intcon	equ	0xFF2
  3615                           intcon2	equ	0xFF1
  3616                           postinc0	equ	0xFEE
  3617                           fsr0h	equ	0xFEA
  3618                           fsr0l	equ	0xFE9
  3619                           wreg	equ	0xFE8
  3620                           fsr1h	equ	0xFE2
  3621                           fsr1l	equ	0xFE1
  3622                           indf2	equ	0xFDF
  3623                           postinc2	equ	0xFDE
  3624                           postdec2	equ	0xFDD
  3625                           fsr2h	equ	0xFDA
  3626                           fsr2l	equ	0xFD9
  3627                           status	equ	0xFD8
  3628                           
  3629                           	psect	rparam
  3630  0000                     pclatu	equ	0xFFB
  3631                           pclath	equ	0xFFA
  3632                           tblptru	equ	0xFF8
  3633                           tblptrh	equ	0xFF7
  3634                           tblptrl	equ	0xFF6
  3635                           tablat	equ	0xFF5
  3636                           prodh	equ	0xFF4
  3637                           prodl	equ	0xFF3
  3638                           intcon	equ	0xFF2
  3639                           intcon2	equ	0xFF1
  3640                           postinc0	equ	0xFEE
  3641                           fsr0h	equ	0xFEA
  3642                           fsr0l	equ	0xFE9
  3643                           wreg	equ	0xFE8
  3644                           fsr1h	equ	0xFE2
  3645                           fsr1l	equ	0xFE1
  3646                           indf2	equ	0xFDF
  3647                           postinc2	equ	0xFDE
  3648                           postdec2	equ	0xFDD
  3649                           fsr2h	equ	0xFDA
  3650                           fsr2l	equ	0xFD9
  3651                           status	equ	0xFD8


Data Sizes:
    Strings     16
    Constant    10
    Data        0
    BSS         58
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     31      76
    BANK0           160     14      30
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_tr_queue.pTrFlag	PTR enum E8836 size(2) Largest target is 0

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(COMRAM[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_object.pTrTail.pTrFlag	PTR enum E8836 size(2) Largest target is 0

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    F8948.pbuffer	PTR unsigned char  size(2) Largest target is 0

    F8943.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> I2C1_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), 

    S21$pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E8836 size(2) Largest target is 0

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    S33$pTrFlag	PTR enum E8836 size(2) Largest target is 0

    p_i2c1_current.pTrFlag	PTR enum E8836 size(2) Largest target is 0

    S33$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), NULL(NULL[0]), 

    S44$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), 

    S44$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _printf->___lwmod
    _putch->_EUSART1_Write
    ___lwmod->___lwdiv

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1693
                                             12 BANK0      2     2      0
                              _Delay
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              21    17      4    1514
                                              0 BANK0     12     8      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      93
                                             20 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      62
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     386
                                             26 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     395
                                             19 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delay                                                5     3      2     145
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0      15
                                              5 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_ISR                                             2     2      0      15
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C1_Stop                                            3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      E      1E       4       18.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1F      4C       1       80.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6A       9        0.0%
DATA                 0      0      6A      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat May 16 23:28:51 2015

           _eusart1TxBufferRemaining 004C                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                                  l201 0B50  
                                l438 0C16                                  l998 0A54  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                    __end_of_ADC_ISR 0D92                                  prod 000FF3  
                                wreg 000FE8                         __CFG_LVP$OFF 000000  
                   __end_of_I2C1_ISR 0892                                 l1008 0AA0  
                               l1901 0A76                                 l1805 0B40  
                               l1903 0A7E                                 l1817 0B74  
                               l1907 0A94                                 l1819 0B78  
                               l1933 08C4                                 l1925 08A0  
                               l1951 0934                                 l1935 08EE  
                               l1881 0A22                                 l1945 0920  
                               l1929 08B4                                 l1891 0A48  
                               l1883 0A2A                                 l1963 097A  
                               l1955 095E                                 l1947 0926  
                               l1971 09E0                                 l1965 0980  
                               l1975 0C02                                 l1879 0A18  
                               l1959 0964                                 l1969 09D0  
                               l1993 0B34                                 l1899 0A6C  
                               l1987 0B0A                                 l1989 0B0E  
                               STR_1 060B                                 u1157 0C08  
                               _LATA 000F89                                 _LATB 000F8A  
                               _LATC 000F8B                                 _LATD 000F8C  
                               _LATE 000F8D                                 i2l60 0654  
                               i2l71 06EE                                 i2l63 06B2  
                               i2l72 06FC                                 i2l65 06BA  
                               i2l90 07FA                                 i2l82 07A4  
                               i2l66 06C2                                 i2l76 0790  
                               i2l77 0782                                 i2l94 082A  
                               i2l86 07D0                                 i2l89 07EA  
                               _WPUB 000F61                        _EUSART1_Write 0B3C  
                               _main 0AF6                      _TMR0_StartTimer 0D8A  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                        __CFG_BORV$190 000000  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 00C2  
                      __CFG_IESO$OFF 000000                         ___param_bank 000010  
            __end_of_TMR0_Initialize 0D1A                           _i2c1_state 0015  
     __size_of_OSCILLATOR_Initialize 000E        __end_of_OSCILLATOR_Initialize 0D7A  
                              ?_main 002B                    __end_of_I2C1_Stop 0BBC  
                              _T0CON 000FD5                                _LATA3 007C4B  
                     __CFG_DEBUG$OFF 000000                      __end_of___lwdiv 0A5E  
                    __end_of___lwmod 0AAA                                i2l213 0C58  
                              i2l381 0070                                i2l383 007C  
                              i2l375 004C                                i2l377 0058  
                              i2l379 0064                                i2l387 0088  
                              _TMR0H 000FD7                                _TMR0L 000FD6  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                                _TRISD 000F95  
                              _TRISE 000F96                                _Delay 0BF8  
       __end_of_I2C1_BusCollisionISR 0D94                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                 _EUSART1_Transmit_ISR 0C2C  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                    ??_I2C1_Initialize 003E  
                   __end_of_TMR0_ISR 0D6C                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                      __end_of_dpowers 060B  
                 __CFG_MCLRE$EXTMCLR 000000                                _putch 0D7A  
                     ?_EUSART1_Write 002B                                tablat 000FF5  
                              status 000FD8                       __CFG_HFOFST$ON 000000  
                     __CFG_PBADEN$ON 000000                      __initialization 0CBC  
         __end_of_EUSART1_Initialize 0BF8                         __end_of_main 0B3C  
                          ??_ADC_ISR 002B          ?_INTERRUPT_InterruptManager 002B  
                        _i2c1_object 0001                               ??_main 004A  
                      __activetblptr 000002                               ?_Delay 003E  
              ?_EUSART1_Transmit_ISR 002B              __end_of_TMR0_StartTimer 0D8E  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               _ANSELA 000F38  
                             ?_putch 002B                               _ANSELB 000F39  
                             _ANSELC 000F3A                               _ANSELD 000F3B  
                             _ANSELE 000F3C                               _RC1REG 000FAE  
                             _RC1STA 000FAB                               i2l1121 0BB6  
                             i2l1223 06A0                               i2l1129 0D2C  
                             i2l1321 0832                               i2l1305 0802  
                             i2l1241 06E8                               i2l1323 0838  
                             i2l1235 06D0                               i2l1331 084A  
                             i2l1325 0840                               i2l1309 080A  
                             i2l1255 072A                               i2l1283 07B4  
                             i2l1275 079E                               i2l1293 07D8  
                     __CFG_WDTEN$OFF 000000                               i2l1691 0C68  
                             Delay@x 0041                               i2l1685 0C54  
                             i2l1699 0C8A                               _RCREG1 000FAE  
                             _OSCCON 000FD3                               _SPBRG1 000FAF  
                             _TX1REG 000FAD                               _TX1STA 000FAC  
                             _TXREG1 000FAD                       __CFG_XINST$OFF 000000  
                     _p_i2c1_current 000A                       __CFG_STVREN$ON 000000  
                          ??___lwdiv 0042                            ??___lwmod 0049  
                   ?_TMR0_Initialize 002B                            ?_I2C1_ISR 002B  
                             clear_0 0CC2                               clear_1 0CCE  
                             _printf 0892                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                __end_of_TMR0_CallBack 0D8A  
                    ??_EUSART1_Write 003E                      _eusart1RxBuffer 0060  
      __size_of_INTERRUPT_Initialize 0010                      _eusart1TxBuffer 0068  
                  _SYSTEM_Initialize 0CDE                           __accesstop 0060  
            __end_of__initialization 0CD4                   ?_SYSTEM_Initialize 002B  
                      ___rparam_used 000001                       _i2c1_trb_count 0016  
                      __end_of_Delay 0C2C                _I2C1_FunctionComplete 0D1A  
               _I2C1_BusCollisionISR 0D92                       __pcstackCOMRAM 002B  
                ??_SYSTEM_Initialize 003E                            ?_TMR0_ISR 002B  
                      __end_of_putch 0D84                           ??_I2C1_ISR 002E  
             ??_EUSART1_Transmit_ISR 002B                              ??_Delay 0040  
        __end_of_EUSART1_Receive_ISR 0C8E                     ?_TMR0_StartTimer 002B  
          __end_of_SYSTEM_Initialize 0CFC                              ??_putch 003F  
                      _eusart1RxHead 0011                        _eusart1TxHead 0013  
                      _eusart1RxTail 0012                           __pbssBANK0 0060  
                      _eusart1TxTail 0014                      __CFG_PLLCFG$OFF 000000  
                         __pnvCOMRAM 004A                ?_I2C1_BusCollisionISR 002B  
                 __CFG_CCP2MX$PORTC1 000000                           ??_TMR0_ISR 002B  
                 __CFG_CCP3MX$PORTB5 000000                      _I2C1_Initialize 0C8E  
                            _ADC_ISR 0D8E                              ?_printf 0070  
            __size_of_ADC_Initialize 0018                              _OSCCON2 000FD2  
                          _I2C1_Stop 0B7C                    __CFG_PRICLKEN$OFF 000000  
                            _OSCTUNE 000F9B                              _SPBRGH1 000FB0  
                            _SSP1ADD 000FC8                              _SSP1BUF 000FC9  
                    __CFG_PWRTEN$OFF 000000               ?_I2C1_FunctionComplete 002B  
                            __Hparam 0000                              __Lparam 0000  
                 _p_i2c1_trb_current 000C                              ___lwdiv 0A02  
                            ___lwmod 0A5E                         __psmallconst 0600  
                            __pcinit 0CBC                              __ramtop 0600  
                            __ptext0 0AF6                              __ptext1 0892  
                            __ptext2 0D7A                              __ptext3 0B3C  
                            __ptext4 0A5E                              __ptext5 0A02  
                            __ptext6 0CDE                              __ptext7 0CFC  
                            __ptext8 0D8A                              __ptext9 0AAA  
                    __size_of_printf 0170                            _T0CONbits 000FD5  
                            _dpowers 0601                _OSCILLATOR_Initialize 0D6C  
                 _EUSART1_Initialize 0BBC             ??_PIN_MANAGER_Initialize 003E  
                         ?_I2C1_Stop 002B           __size_of_SYSTEM_Initialize 001E  
               I2C1_ISR@pi2c_buf_ptr 0008                 end_of_initialization 0CD4  
                          Delay@wait 003E                  ?_EUSART1_Initialize 002B  
                      __Lmediumconst 0000               ??_I2C1_BusCollisionISR 002B  
            __end_of_I2C1_Initialize 0CBC                              printf@c 007B  
                            printf@f 0070                              postdec2 000FDD  
                            postinc0 000FEE                              postinc2 000FDE  
               ??_EUSART1_Initialize 003E                    __size_of_I2C1_ISR 0276  
                EUSART1_Write@txData 003E    I2C1_ISR@i2c_10bit_address_restart 000E  
               _timer0ReloadVal16bit 004A         __end_of_INTERRUPT_Initialize 0D5C  
            I2C1_MasterWrite@trBlock 001D                    __size_of_TMR0_ISR 0010  
           I2C1_Stop@completion_code 002D                       _ADC_Initialize 0D34  
             ?_OSCILLATOR_Initialize 002B                       __end_of_printf 0A02  
                start_initialization 0CBC                          ??_I2C1_Stop 002B  
           __size_of_TMR0_Initialize 001E      __size_of_PIN_MANAGER_Initialize 004C  
                        putch@txData 003F                __end_of_EUSART1_Write 0B7C  
                   ?_I2C1_Initialize 002B               __size_of_TMR0_CallBack 0006  
             __end_of_ADC_Initialize 0D4C                             ?_ADC_ISR 002B  
                           ??_printf 0074                       _eusart1RxCount 0010  
                        __pbssCOMRAM 0001        __size_of_EUSART1_Transmit_ISR 0032  
                      __pcstackBANK0 0070                        _i2c1_tr_queue 0023  
            ??_I2C1_FunctionComplete 002B         __size_of_EUSART1_Receive_ISR 0030  
           __size_of_TMR0_StartTimer 0004                     ___lwdiv@dividend 003E  
             _PIN_MANAGER_Initialize 0AAA                            __pintcode 0008  
                           ?___lwdiv 003E                             ?___lwmod 0045  
                    ?_ADC_Initialize 002B                             _I2C1_ISR 061C  
       ??_INTERRUPT_InterruptManager 0030                             _BAUD1CON 000FB8  
                        __smallconst 0600                       __size_of_Delay 0034  
                   ___lwdiv@quotient 0043                        _TMR0_CallBack 0D84  
                     __size_of_putch 000A                 _INTERRUPT_Initialize 0D4C  
             I2C1_MasterRead@trBlock 0017                    ??_TMR0_Initialize 003E  
                           _IPR1bits 000F9F                             _IPR2bits 000FA2  
                           _PIE1bits 000F9D                             _PIE2bits 000FA0  
__size_of_INTERRUPT_InterruptManager 00BA                             _PIR1bits 000F9E  
                           _PIR2bits 000FA1                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                             _SSP1CON1 000FC6  
                           _SSP1CON3 000FCB                             _TMR0_ISR 0D5C  
                          main@ADCNT 007C                             _SSP1STAT 000FC7  
                   __size_of_ADC_ISR 0004                           _ADCON0bits 000FC2  
                         printf@flag 0077                           printf@prec 0078  
                     ?_TMR0_CallBack 002B                          _INTCON2bits 000FF1  
              ?_INTERRUPT_Initialize 002B                             __Hrparam 0000  
      __size_of_I2C1_BusCollisionISR 0002                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000               I2C1_ISR@i2c_bytes_left 000F  
                  __CFG_P2BMX$PORTD2 000000              ??_OSCILLATOR_Initialize 003E  
                  ??_TMR0_StartTimer 003E          __size_of_EUSART1_Initialize 003C  
                   __size_of___lwdiv 005C                     __size_of___lwmod 004C  
                    ___lwdiv@divisor 0040                  I2C1_ISR@i2c_address 0029  
                    ___lwdiv@counter 0042                             __ptext10 0D6C  
                           __ptext11 0D4C                             __ptext20 0B7C  
                           __ptext12 0C8E                             __ptext21 0D1A  
                           __ptext13 0BBC                             __ptext22 0D92  
                           __ptext14 0D34                             __ptext23 0C2C  
                           __ptext15 0BF8                             __ptext24 0C5E  
                           __ptext25 0D8E                             __ptext17 0D5C  
                           __ptext18 0D84                             __ptext19 061C  
                       _SSP1CON1bits 000FC6                         _SSP1CON2bits 000FC5  
                      __size_of_main 0046                           _RC1STAbits 000FAB  
 __end_of_INTERRUPT_InterruptManager 00C2           _INTERRUPT_InterruptManager 0008  
                          printf@val 0079                  _EUSART1_Receive_ISR 0C5E  
                         _INTCONbits 000FF2                      ??_TMR0_CallBack 002B  
             ??_INTERRUPT_Initialize 003E                             intlevel2 0000  
               ?_EUSART1_Receive_ISR 002B                     ___lwmod@dividend 0045  
            ?_PIN_MANAGER_Initialize 002B       __size_of_I2C1_FunctionComplete 001A  
      __end_of_I2C1_FunctionComplete 0D34         __end_of_EUSART1_Transmit_ISR 0C5E  
                   ??_ADC_Initialize 003E                             printf@ap 0075  
           __size_of_I2C1_Initialize 002E               __size_of_EUSART1_Write 0040  
                    ___lwmod@divisor 0047                      _TMR0_Initialize 0CFC  
                    ___lwmod@counter 0049                    __CFG_T3CMX$PORTC0 000000  
              ??_EUSART1_Receive_ISR 002B       __end_of_PIN_MANAGER_Initialize 0AF6  
                 __size_of_I2C1_Stop 0040                    __CFG_FOSC$INTIO67 000000  
