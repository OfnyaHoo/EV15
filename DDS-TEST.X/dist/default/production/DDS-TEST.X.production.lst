

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Mar 06 01:41:19 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	smallconst
    42  000600                     __psmallconst:
    43                           	opt stack 0
    44  000600  00                 	db	0
    45  000601                     _dpowers:
    46                           	opt stack 0
    47  000601  0001               	dw	1
    48  000603  000A               	dw	10
    49  000605  0064               	dw	100
    50  000607  03E8               	dw	1000
    51  000609  2710               	dw	10000
    52  00060B                     __end_of_dpowers:
    53                           	opt stack 0
    54  0000                     _ADCON0	set	4034
    55  0000                     _ADCON0bits	set	4034
    56  0000                     _ADCON1	set	4033
    57  0000                     _ADCON2	set	4032
    58  0000                     _ADRESH	set	4036
    59  0000                     _ADRESL	set	4035
    60  0000                     _ANSELA	set	3896
    61  0000                     _ANSELB	set	3897
    62  0000                     _ANSELC	set	3898
    63  0000                     _ANSELD	set	3899
    64  0000                     _ANSELE	set	3900
    65  0000                     _BAUD1CON	set	4024
    66  0000                     _INTCON2bits	set	4081
    67  0000                     _INTCONbits	set	4082
    68  0000                     _IPR1bits	set	3999
    69  0000                     _IPR2bits	set	4002
    70  0000                     _LATA	set	3977
    71  0000                     _LATB	set	3978
    72  0000                     _LATC	set	3979
    73  0000                     _LATD	set	3980
    74  0000                     _LATE	set	3981
    75  0000                     _OSCCON	set	4051
    76  0000                     _OSCCON2	set	4050
    77  0000                     _OSCTUNE	set	3995
    78  0000                     _PIE1bits	set	3997
    79  0000                     _PIE2bits	set	4000
    80  0000                     _PIR1bits	set	3998
    81  0000                     _PIR2bits	set	4001
    82  0000                     _RC1REG	set	4014
    83  0000                     _RC1STA	set	4011
    84  0000                     _RC1STAbits	set	4011
    85  0000                     _RCONbits	set	4048
    86  0000                     _RCREG1	set	4014
    87  0000                     _SPBRG1	set	4015
    88  0000                     _SPBRGH1	set	4016
    89  0000                     _SSP1ADD	set	4040
    90  0000                     _SSP1BUF	set	4041
    91  0000                     _SSP1CON1	set	4038
    92  0000                     _SSP1CON1bits	set	4038
    93  0000                     _SSP1CON2bits	set	4037
    94  0000                     _SSP1CON3	set	4043
    95  0000                     _SSP1STAT	set	4039
    96  0000                     _T0CON	set	4053
    97  0000                     _T0CONbits	set	4053
    98  0000                     _TMR0H	set	4055
    99  0000                     _TMR0L	set	4054
   100  0000                     _TRISA	set	3986
   101  0000                     _TRISB	set	3987
   102  0000                     _TRISC	set	3988
   103  0000                     _TRISD	set	3989
   104  0000                     _TRISE	set	3990
   105  0000                     _TX1REG	set	4013
   106  0000                     _TX1STA	set	4012
   107  0000                     _TXREG1	set	4013
   108  0000                     _WPUB	set	3937
   109  0000                     _LATA3	set	31819
   110  00060B                     __stringdata:
   111                           	opt stack 0
   112  00060B                     STR_1:
   113  00060B  41                 	db	65	;'A'
   114  00060C  44                 	db	68	;'D'
   115  00060D  43                 	db	67	;'C'
   116  00060E  20                 	db	32
   117  00060F  56                 	db	86	;'V'
   118  000610  6F                 	db	111	;'o'
   119  000611  6C                 	db	108	;'l'
   120  000612  75                 	db	117	;'u'
   121  000613  6D                 	db	109	;'m'
   122  000614  65                 	db	101	;'e'
   123  000615  20                 	db	32
   124  000616  3D                 	db	61	;'='
   125  000617  20                 	db	32
   126  000618  25                 	db	37
   127  000619  64                 	db	100	;'d'
   128  00061A  00                 	db	0
   129  00061B                     __end_of__stringdata:
   130                           	opt stack 0
   131                           
   132                           ; #config settings
   133  00061B  00                 	db	0	; dummy byte at the end
   134  0000                     
   135                           	psect	nvCOMRAM
   136  000042                     __pnvCOMRAM:
   137                           	opt stack 0
   138  000042                     _i2c1_object:
   139                           	opt stack 0
   140  000042                     	ds	7
   141  000049                     _timer0ReloadVal16bit:
   142                           	opt stack 0
   143  000049                     	ds	2
   144  00004B                     _eusart1TxBufferRemaining:
   145                           	opt stack 0
   146  00004B                     	ds	1
   147                           
   148                           	psect	cinit
   149  000CAA                     __pcinit:
   150                           	opt stack 0
   151  000CAA                     start_initialization:
   152                           	opt stack 0
   153  000CAA                     __initialization:
   154                           	opt stack 0
   155                           
   156                           ; Clear objects allocated to BANK0 (22 bytes)
   157  000CAA  EE00  F060         	lfsr	0,__pbssBANK0
   158  000CAE  0E16               	movlw	22
   159  000CB0                     clear_0:
   160  000CB0  6AEE               	clrf	postinc0,c
   161  000CB2  06E8               	decf	wreg,f,c
   162  000CB4  E1FD               	bnz	clear_0
   163                           
   164                           ; Clear objects allocated to COMRAM (29 bytes)
   165  000CB6  EE00  F025         	lfsr	0,__pbssCOMRAM
   166  000CBA  0E1D               	movlw	29
   167  000CBC                     clear_1:
   168  000CBC  6AEE               	clrf	postinc0,c
   169  000CBE  06E8               	decf	wreg,f,c
   170  000CC0  E1FD               	bnz	clear_1
   171  000CC2                     end_of_initialization:
   172                           	opt stack 0
   173  000CC2                     __end_of__initialization:
   174                           	opt stack 0
   175  000CC2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   176  000CC4  6EF8               	movwf	tblptru,c
   177  000CC6  0100               	movlb	0
   178  000CC8  EFF0  F004         	goto	_main	;jump to C main() function
   179                           tblptru	equ	0xFF8
   180                           postinc0	equ	0xFEE
   181                           wreg	equ	0xFE8
   182                           
   183                           	psect	bssCOMRAM
   184  000025                     __pbssCOMRAM:
   185                           	opt stack 0
   186  000025                     I2C1_ISR@pi2c_buf_ptr:
   187                           	opt stack 0
   188  000025                     	ds	2
   189  000027                     _p_i2c1_current:
   190                           	opt stack 0
   191  000027                     	ds	2
   192  000029                     _p_i2c1_trb_current:
   193                           	opt stack 0
   194  000029                     	ds	2
   195  00002B                     I2C1_ISR@i2c_10bit_address_restart:
   196                           	opt stack 0
   197  00002B                     	ds	1
   198  00002C                     I2C1_ISR@i2c_bytes_left:
   199                           	opt stack 0
   200  00002C                     	ds	1
   201  00002D                     _eusart1RxCount:
   202                           	opt stack 0
   203  00002D                     	ds	1
   204  00002E                     _eusart1RxHead:
   205                           	opt stack 0
   206  00002E                     	ds	1
   207  00002F                     _eusart1RxTail:
   208                           	opt stack 0
   209  00002F                     	ds	1
   210  000030                     _eusart1TxHead:
   211                           	opt stack 0
   212  000030                     	ds	1
   213  000031                     _eusart1TxTail:
   214                           	opt stack 0
   215  000031                     	ds	1
   216  000032                     _i2c1_state:
   217                           	opt stack 0
   218  000032                     	ds	1
   219  000033                     _i2c1_trb_count:
   220                           	opt stack 0
   221  000033                     	ds	1
   222  000034                     I2C1_MasterWrite@trBlock:
   223                           	opt stack 0
   224  000034                     	ds	6
   225  00003A                     _i2c1_tr_queue:
   226                           	opt stack 0
   227  00003A                     	ds	6
   228  000040                     I2C1_ISR@i2c_address:
   229                           	opt stack 0
   230  000040                     	ds	2
   231                           tblptru	equ	0xFF8
   232                           postinc0	equ	0xFEE
   233                           wreg	equ	0xFE8
   234                           
   235                           	psect	bssBANK0
   236  000060                     __pbssBANK0:
   237                           	opt stack 0
   238  000060                     _eusart1RxBuffer:
   239                           	opt stack 0
   240  000060                     	ds	8
   241  000068                     _eusart1TxBuffer:
   242                           	opt stack 0
   243  000068                     	ds	8
   244  000070                     I2C1_MasterRead@trBlock:
   245                           	opt stack 0
   246  000070                     	ds	6
   247                           tblptru	equ	0xFF8
   248                           postinc0	equ	0xFEE
   249                           wreg	equ	0xFE8
   250                           
   251                           	psect	cstackBANK0
   252  000076                     __pcstackBANK0:
   253                           	opt stack 0
   254  000076                     ??_printf:
   255                           
   256                           ; 0 bytes @ 0x0
   257  000076                     	ds	2
   258  000078                     printf@ap:
   259                           	opt stack 0
   260                           
   261                           ; 2 bytes @ 0x2
   262  000078                     	ds	2
   263  00007A                     printf@flag:
   264                           	opt stack 0
   265                           
   266                           ; 1 bytes @ 0x4
   267  00007A                     	ds	1
   268  00007B                     printf@prec:
   269                           	opt stack 0
   270                           
   271                           ; 1 bytes @ 0x5
   272  00007B                     	ds	1
   273  00007C                     printf@_val:
   274                           	opt stack 0
   275                           
   276                           ; 5 bytes @ 0x6
   277  00007C                     	ds	5
   278  000081                     printf@c:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0xB
   282  000081                     	ds	1
   283  000082                     ??_main:
   284                           
   285                           ; 0 bytes @ 0xC
   286  000082                     	ds	1
   287  000083                     main@ADCNT:
   288                           	opt stack 0
   289                           
   290                           ; 2 bytes @ 0xD
   291  000083                     	ds	2
   292  000085                     main@i:
   293                           	opt stack 0
   294                           
   295                           ; 2 bytes @ 0xF
   296  000085                     	ds	2
   297                           tblptru	equ	0xFF8
   298                           postinc0	equ	0xFEE
   299                           wreg	equ	0xFE8
   300                           
   301                           	psect	cstackCOMRAM
   302  000001                     __pcstackCOMRAM:
   303                           	opt stack 0
   304  000001                     ??_I2C1_Stop:
   305  000001                     ??_TMR0_ISR:
   306  000001                     
   307                           ; 0 bytes @ 0x0
   308  000001                     	ds	2
   309  000003                     I2C1_Stop@completion_code:
   310                           	opt stack 0
   311                           
   312                           ; 1 bytes @ 0x2
   313  000003                     	ds	1
   314  000004                     ??_I2C1_ISR:
   315                           
   316                           ; 0 bytes @ 0x3
   317  000004                     	ds	3
   318  000007                     ??_INTERRUPT_InterruptManager:
   319                           
   320                           ; 0 bytes @ 0x6
   321  000007                     	ds	14
   322  000015                     ?_ADC_GetConversion:
   323                           	opt stack 0
   324  000015                     ?___lwdiv:
   325                           	opt stack 0
   326  000015                     EUSART1_Write@txData:
   327                           	opt stack 0
   328  000015                     ___lwdiv@dividend:
   329                           	opt stack 0
   330                           
   331                           ; 2 bytes @ 0x14
   332  000015                     	ds	1
   333  000016                     putch@txData:
   334                           	opt stack 0
   335                           
   336                           ; 1 bytes @ 0x15
   337  000016                     	ds	1
   338  000017                     ??_ADC_GetConversion:
   339  000017                     ___lwdiv@divisor:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0x16
   343  000017                     	ds	2
   344  000019                     ADC_GetConversion@channel:
   345                           	opt stack 0
   346  000019                     ___lwdiv@quotient:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0x18
   350  000019                     	ds	2
   351  00001B                     ___lwdiv@counter:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0x1A
   355  00001B                     	ds	1
   356  00001C                     ?___lwmod:
   357                           	opt stack 0
   358  00001C                     ___lwmod@dividend:
   359                           	opt stack 0
   360                           
   361                           ; 2 bytes @ 0x1B
   362  00001C                     	ds	2
   363  00001E                     ___lwmod@divisor:
   364                           	opt stack 0
   365                           
   366                           ; 2 bytes @ 0x1D
   367  00001E                     	ds	2
   368  000020                     ___lwmod@counter:
   369                           	opt stack 0
   370                           
   371                           ; 1 bytes @ 0x1F
   372  000020                     	ds	1
   373  000021                     ?_printf:
   374                           	opt stack 0
   375  000021                     printf@f:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x20
   379  000021                     	ds	4
   380                           tblptru	equ	0xFF8
   381                           postinc0	equ	0xFEE
   382                           wreg	equ	0xFE8
   383                           
   384 ;;
   385 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   386 ;;
   387 ;; *************** function _main *****************
   388 ;; Defined at:
   389 ;;		line 52 in file "main.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;  i               2   15[BANK0 ] int 
   394 ;;  ADCNT           2   13[BANK0 ] int 
   395 ;; Return value:  Size  Location     Type
   396 ;;		None               void
   397 ;; Registers used:
   398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   399 ;; Tracked objects:
   400 ;;		On entry : 0/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   404 ;;      Params:         0       0       0       0       0       0       0
   405 ;;      Locals:         0       4       0       0       0       0       0
   406 ;;      Temps:          0       1       0       0       0       0       0
   407 ;;      Totals:         0       5       0       0       0       0       0
   408 ;;Total ram usage:        5 bytes
   409 ;; Hardware stack levels required when called:    6
   410 ;; This function calls:
   411 ;;		_ADC_GetConversion
   412 ;;		_SYSTEM_Initialize
   413 ;;		_printf
   414 ;; This function is called by:
   415 ;;		Startup code after reset
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           	psect	text0
   420  0009E0                     __ptext0:
   421                           	opt stack 0
   422  0009E0                     _main:
   423                           	opt stack 25
   424                           
   425                           ;main.c: 55: SYSTEM_Initialize();
   426                           
   427                           ;incstack = 0
   428  0009E0  EC66  F006         	call	_SYSTEM_Initialize	;wreg free
   429                           
   430                           ;main.c: 74: (INTCONbits.GIE = 1);
   431  0009E4  8EF2               	bsf	intcon,7,c	;volatile
   432                           
   433                           ;main.c: 77: (INTCONbits.PEIE = 1);
   434  0009E6  8CF2               	bsf	intcon,6,c	;volatile
   435                           
   436                           ;main.c: 84: int ADCNT = 0;
   437  0009E8  0E00               	movlw	0
   438  0009EA  0100               	movlb	0	; () banked
   439  0009EC  6F84               	movwf	(main@ADCNT+1)& (0+255),b
   440  0009EE  0E00               	movlw	0
   441  0009F0  0100               	movlb	0	; () banked
   442  0009F2  6F83               	movwf	main@ADCNT& (0+255),b
   443                           
   444                           ; BSR set to: 0
   445                           
   446                           ; BSR set to: 0
   447                           
   448                           ;main.c: 85: do { LATA3 = 1; } while(0);
   449  0009F4  8689               	bsf	3977,3,c	;volatile
   450  0009F6                     l2128:
   451                           
   452                           ; BSR set to: 0
   453                           ;main.c: 87: {
   454                           ;main.c: 88: ADCNT = ADC_GetConversion(Volume);
   455  0009F6  0E04               	movlw	4
   456  0009F8  EC0E  F006         	call	_ADC_GetConversion
   457  0009FC  C015  F083         	movff	?_ADC_GetConversion,main@ADCNT
   458  000A00  C016  F084         	movff	?_ADC_GetConversion+1,main@ADCNT+1
   459                           
   460                           ;main.c: 90: printf("ADC Volume = %d",ADCNT);
   461  000A04  0E06               	movlw	high STR_1
   462  000A06  6E22               	movwf	printf@f+1,c
   463  000A08  0E0B               	movlw	low STR_1
   464  000A0A  6E21               	movwf	printf@f,c
   465  000A0C  C083  F023         	movff	main@ADCNT,?_printf+2
   466  000A10  C084  F024         	movff	main@ADCNT+1,?_printf+3
   467  000A14  EC37  F004         	call	_printf	;wreg free
   468                           
   469                           ;main.c: 91: for(int i = 0; 50 > i ; i++)
   470  000A18  0E00               	movlw	0
   471  000A1A  0100               	movlb	0	; () banked
   472  000A1C  6F86               	movwf	(main@i+1)& (0+255),b
   473  000A1E  0E00               	movlw	0
   474  000A20  0100               	movlb	0	; () banked
   475  000A22  6F85               	movwf	main@i& (0+255),b
   476  000A24  D00B               	goto	l431
   477  000A26                     l2134:
   478                           
   479                           ; BSR set to: 0
   480                           ;main.c: 92: {
   481                           ;main.c: 93: _delay((unsigned long)((10)*(16000000/4000.0)));
   482  000A26  0E34               	movlw	52
   483  000A28  0100               	movlb	0	; () banked
   484  000A2A  6F82               	movwf	??_main& (0+255),b
   485  000A2C  0EF2               	movlw	242
   486  000A2E                     u1337:
   487  000A2E  2EE8               	decfsz	wreg,f,c
   488  000A30  D7FE               	goto	u1337
   489  000A32  2F82               	decfsz	??_main& (0+255),f,b
   490  000A34  D7FC               	goto	u1337
   491  000A36  0100               	movlb	0	; () banked
   492  000A38  4B85               	infsnz	main@i& (0+255),f,b
   493  000A3A  2B86               	incf	(main@i+1)& (0+255),f,b
   494  000A3C                     l431:
   495                           
   496                           ; BSR set to: 0
   497  000A3C  0100               	movlb	0	; () banked
   498  000A3E  5186               	movf	(main@i+1)& (0+255),w,b
   499  000A40  0A80               	xorlw	128
   500  000A42  0F80               	addlw	-128
   501  000A44  0E32               	movlw	50
   502  000A46  B4D8               	btfsc	status,2,c
   503  000A48  5D85               	subwf	main@i& (0+255),w,b
   504  000A4A  B0D8               	btfsc	status,0,c
   505  000A4C  D7D4               	goto	l2128
   506  000A4E  D7EB               	goto	l2134
   507  000A50                     __end_of_main:
   508                           	opt stack 0
   509                           tblptru	equ	0xFF8
   510                           intcon	equ	0xFF2
   511                           postinc0	equ	0xFEE
   512                           wreg	equ	0xFE8
   513                           status	equ	0xFD8
   514                           
   515 ;; *************** function _printf *****************
   516 ;; Defined at:
   517 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;  f               2   32[COMRAM] PTR const unsigned char 
   520 ;;		 -> STR_1(16), 
   521 ;; Auto vars:     Size  Location     Type
   522 ;;  _val            5    6[BANK0 ] struct .
   523 ;;  ap              2    2[BANK0 ] PTR void [1]
   524 ;;		 -> ?_printf(2), 
   525 ;;  c               1   11[BANK0 ] char 
   526 ;;  prec            1    5[BANK0 ] char 
   527 ;;  flag            1    4[BANK0 ] unsigned char 
   528 ;; Return value:  Size  Location     Type
   529 ;;                  2   32[COMRAM] int 
   530 ;; Registers used:
   531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   537 ;;      Params:         4       0       0       0       0       0       0
   538 ;;      Locals:         0      10       0       0       0       0       0
   539 ;;      Temps:          0       2       0       0       0       0       0
   540 ;;      Totals:         4      12       0       0       0       0       0
   541 ;;Total ram usage:       16 bytes
   542 ;; Hardware stack levels used:    1
   543 ;; Hardware stack levels required when called:    5
   544 ;; This function calls:
   545 ;;		___lwdiv
   546 ;;		___lwmod
   547 ;;		_putch
   548 ;; This function is called by:
   549 ;;		_main
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           	psect	text1
   554  00086E                     __ptext1:
   555                           	opt stack 0
   556  00086E                     _printf:
   557                           	opt stack 25
   558                           
   559                           ;doprnt.c: 466: va_list ap;
   560                           ;doprnt.c: 499: signed char c;
   561                           ;doprnt.c: 506: signed char prec;
   562                           ;doprnt.c: 508: unsigned char flag;
   563                           ;doprnt.c: 527: union {
   564                           ;doprnt.c: 528: unsigned int _val;
   565                           ;doprnt.c: 529: struct {
   566                           ;doprnt.c: 530: const char * _cp;
   567                           ;doprnt.c: 531: unsigned _len;
   568                           ;doprnt.c: 532: } _str;
   569                           ;doprnt.c: 533: } _val;
   570                           ;doprnt.c: 542: *ap = __va_start();
   571                           
   572                           ; BSR set to: 0
   573                           ;incstack = 0
   574  00086E  0E00               	movlw	high (?_printf+2)
   575  000870  0100               	movlb	0	; () banked
   576  000872  6F79               	movwf	(printf@ap+1)& (0+255),b
   577  000874  0E23               	movlw	low (?_printf+2)
   578  000876  0100               	movlb	0	; () banked
   579  000878  6F78               	movwf	printf@ap& (0+255),b
   580                           
   581                           ;doprnt.c: 545: while(c = *f++) {
   582  00087A  D0A4               	goto	l2116
   583  00087C                     l2070:
   584                           
   585                           ; BSR set to: 0
   586                           ;doprnt.c: 547: if(c != '%')
   587  00087C  0100               	movlb	0	; () banked
   588  00087E  5181               	movf	printf@c& (0+255),w,b
   589  000880  0A25               	xorlw	37
   590  000882  B4D8               	btfsc	status,2,c
   591  000884  D005               	goto	l2074
   592                           
   593                           ; BSR set to: 0
   594                           ;doprnt.c: 549: {
   595                           ;doprnt.c: 550: (putch(c) );
   596  000886  0100               	movlb	0	; () banked
   597  000888  5181               	movf	printf@c& (0+255),w,b
   598  00088A  ECB8  F006         	call	_putch
   599                           
   600                           ;doprnt.c: 551: continue;
   601  00088E  D09A               	goto	l2116
   602  000890                     l2074:
   603                           
   604                           ;doprnt.c: 552: }
   605                           ;doprnt.c: 557: flag = 0;
   606  000890  0E00               	movlw	0
   607  000892  0100               	movlb	0	; () banked
   608  000894  6F7A               	movwf	printf@flag& (0+255),b
   609                           
   610                           ; BSR set to: 0
   611                           
   612                           ; BSR set to: 0
   613                           
   614                           ; BSR set to: 0
   615                           ;doprnt.c: 831: }
   616                           
   617                           ; BSR set to: 0
   618                           ;doprnt.c: 822: continue;
   619                           
   620                           ;doprnt.c: 811: default:
   621                           
   622                           ; BSR set to: 0
   623                           ;doprnt.c: 707: case 'i':
   624                           ;doprnt.c: 708: break;
   625                           
   626                           ; BSR set to: 0
   627                           
   628                           ;doprnt.c: 706: case 'd':
   629                           
   630                           ; BSR set to: 0
   631                           ;doprnt.c: 647: goto alldone;
   632                           
   633                           ;doprnt.c: 646: case 0:
   634                           
   635                           ;doprnt.c: 644: switch(c = *f++) {
   636  000896  C021  FFF6         	movff	printf@f,tblptrl
   637  00089A  C022  FFF7         	movff	printf@f+1,tblptrh
   638  00089E  4A21               	infsnz	printf@f,f,c
   639  0008A0  2A22               	incf	printf@f+1,f,c
   640  0008A2                     	if	0	;tblptru may be non-zero
   641  0008A2                     	endif
   642  0008A2                     	if	0	;tblptru may be non-zero
   643  0008A2                     	endif
   644  0008A2  0008               	tblrd		*
   645  0008A4  0100               	movlb	0	; () banked
   646  0008A6  CFF5 F081          	movff	tablat,printf@c
   647  0008AA  0100               	movlb	0	; () banked
   648  0008AC  5181               	movf	printf@c& (0+255),w,b
   649                           
   650                           ; Switch size 1, requested type "space"
   651                           ; Number of cases is 3, Range of values is 0 to 105
   652                           ; switch strategies available:
   653                           ; Name         Instructions Cycles
   654                           ; simple_byte           10     6 (average)
   655                           ;	Chosen strategy is simple_byte
   656  0008AE  0A00               	xorlw	0	; case 0
   657  0008B0  B4D8               	btfsc	status,2,c
   658  0008B2  0012               	return	
   659  0008B4  0A64               	xorlw	100	; case 100
   660  0008B6  B4D8               	btfsc	status,2,c
   661  0008B8  D003               	goto	l2080
   662  0008BA  0A0D               	xorlw	13	; case 105
   663  0008BC  A4D8               	btfss	status,2,c
   664  0008BE  D082               	goto	l2116
   665  0008C0                     l2080:
   666                           
   667                           ; BSR set to: 0
   668                           ;doprnt.c: 1262: {
   669                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   670  0008C0  C078  FFD9         	movff	printf@ap,fsr2l
   671  0008C4  C079  FFDA         	movff	printf@ap+1,fsr2h
   672  0008C8  0100               	movlb	0	; () banked
   673  0008CA  CFDE F07C          	movff	postinc2,printf@_val
   674  0008CE  0100               	movlb	0	; () banked
   675  0008D0  CFDD F07D          	movff	postdec2,printf@_val+1
   676                           
   677                           ; BSR set to: 0
   678  0008D4  0E02               	movlw	2
   679  0008D6  0100               	movlb	0	; () banked
   680  0008D8  2778               	addwf	printf@ap& (0+255),f,b
   681  0008DA  0E00               	movlw	0
   682  0008DC  0100               	movlb	0	; () banked
   683  0008DE  2379               	addwfc	(printf@ap+1)& (0+255),f,b
   684                           
   685                           ; BSR set to: 0
   686                           ;doprnt.c: 1270: if((int)_val._val < 0) {
   687  0008E0  0100               	movlb	0	; () banked
   688  0008E2  517D               	movf	(printf@_val+1)& (0+255),w,b
   689  0008E4  0A80               	xorlw	128
   690  0008E6  6EF3               	movwf	prodl,c
   691  0008E8  0E80               	movlw	128
   692  0008EA  5CF3               	subwf	prodl,w,c
   693  0008EC  0E00               	movlw	0
   694  0008EE  B4D8               	btfsc	status,2,c
   695  0008F0  5D7C               	subwf	printf@_val& (0+255),w,b
   696  0008F2  B0D8               	btfsc	status,0,c
   697  0008F4  D009               	goto	l2090
   698                           
   699                           ; BSR set to: 0
   700                           ;doprnt.c: 1271: flag |= 0x03;
   701  0008F6  0E03               	movlw	3
   702  0008F8  0100               	movlb	0	; () banked
   703  0008FA  137A               	iorwf	printf@flag& (0+255),f,b
   704                           
   705                           ; BSR set to: 0
   706                           ;doprnt.c: 1272: _val._val = -_val._val;
   707  0008FC  0100               	movlb	0	; () banked
   708  0008FE  6D7C               	negf	printf@_val& (0+255),b
   709  000900  0100               	movlb	0	; () banked
   710  000902  1F7D               	comf	(printf@_val+1)& (0+255),f,b
   711  000904  B0D8               	btfsc	status,0,c
   712  000906  2B7D               	incf	(printf@_val+1)& (0+255),f,b
   713  000908                     l2090:
   714                           
   715                           ; BSR set to: 0
   716                           ;doprnt.c: 1273: }
   717                           ;doprnt.c: 1275: }
   718                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   719  000908  0E01               	movlw	1
   720  00090A  0100               	movlb	0	; () banked
   721  00090C  6F81               	movwf	printf@c& (0+255),b
   722  00090E                     
   723                           ; BSR set to: 0
   724  00090E  0100               	movlb	0	; () banked
   725  000910  5181               	movf	printf@c& (0+255),w,b
   726  000912  0A05               	xorlw	5
   727  000914  B4D8               	btfsc	status,2,c
   728  000916  D01C               	goto	l2104
   729                           
   730                           ; BSR set to: 0
   731                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
   732                           
   733                           ; BSR set to: 0
   734                           
   735                           ; BSR set to: 0
   736  000918  0100               	movlb	0	; () banked
   737  00091A  5181               	movf	printf@c& (0+255),w,b
   738  00091C  0D02               	mullw	2
   739  00091E  0E01               	movlw	low _dpowers
   740  000920  24F3               	addwf	prodl,w,c
   741  000922  6EF6               	movwf	tblptrl,c
   742  000924  0E06               	movlw	high _dpowers
   743  000926  20F4               	addwfc	prodh,w,c
   744  000928  6EF7               	movwf	tblptrh,c
   745  00092A                     	if	0	;There are less than 3 active tblptr bytes
   746  00092A                     	endif
   747  00092A  0009               	tblrd		*+
   748  00092C  CFF5 F076          	movff	tablat,??_printf
   749  000930  0009               	tblrd		*+
   750  000932  CFF5 F077          	movff	tablat,??_printf+1
   751  000936  0100               	movlb	0	; () banked
   752  000938  5176               	movf	??_printf& (0+255),w,b
   753  00093A  0100               	movlb	0	; () banked
   754  00093C  5D7C               	subwf	printf@_val& (0+255),w,b
   755  00093E  0100               	movlb	0	; () banked
   756  000940  5177               	movf	(??_printf+1)& (0+255),w,b
   757  000942  0100               	movlb	0	; () banked
   758  000944  597D               	subwfb	(printf@_val+1)& (0+255),w,b
   759  000946  A0D8               	btfss	status,0,c
   760  000948  D003               	goto	l2104
   761                           
   762                           ; BSR set to: 0
   763                           
   764                           ; BSR set to: 0
   765                           
   766                           ; BSR set to: 0
   767                           ;doprnt.c: 1316: break;
   768  00094A  0100               	movlb	0	; () banked
   769  00094C  2B81               	incf	printf@c& (0+255),f,b
   770  00094E  D7DF               	goto	L1
   771  000950                     l2104:
   772                           
   773                           ; BSR set to: 0
   774                           ;doprnt.c: 1431: {
   775                           ;doprnt.c: 1447: if(flag & 0x03)
   776  000950  C07A  F076         	movff	printf@flag,??_printf
   777  000954  0E03               	movlw	3
   778  000956  0100               	movlb	0	; () banked
   779  000958  1776               	andwf	??_printf& (0+255),f,b
   780  00095A  B4D8               	btfsc	status,2,c
   781  00095C  D003               	goto	l2108
   782                           
   783                           ; BSR set to: 0
   784                           ;doprnt.c: 1448: (putch('-') );
   785  00095E  0E2D               	movlw	45
   786  000960  ECB8  F006         	call	_putch
   787  000964                     l2108:
   788                           
   789                           ;doprnt.c: 1478: }
   790                           ;doprnt.c: 1481: prec = c;
   791  000964  C081  F07B         	movff	printf@c,printf@prec
   792                           
   793                           ;doprnt.c: 1483: while(prec--) {
   794  000968  D027               	goto	l2114
   795  00096A                     l2110:
   796                           
   797                           ;doprnt.c: 1487: {
   798                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
   799  00096A  0100               	movlb	0	; () banked
   800  00096C  517B               	movf	printf@prec& (0+255),w,b
   801  00096E  0D02               	mullw	2
   802  000970  0E01               	movlw	low _dpowers
   803  000972  24F3               	addwf	prodl,w,c
   804  000974  6EF6               	movwf	tblptrl,c
   805  000976  0E06               	movlw	high _dpowers
   806  000978  20F4               	addwfc	prodh,w,c
   807  00097A  6EF7               	movwf	tblptrh,c
   808  00097C                     	if	0	;There are less than 3 active tblptr bytes
   809  00097C                     	endif
   810  00097C  0009               	tblrd		*+
   811  00097E  CFF5 F017          	movff	tablat,___lwdiv@divisor
   812  000982  000A               	tblrd		*-
   813  000984  CFF5 F018          	movff	tablat,___lwdiv@divisor+1
   814  000988  C07C  F015         	movff	printf@_val,___lwdiv@dividend
   815  00098C  C07D  F016         	movff	printf@_val+1,___lwdiv@dividend+1
   816  000990  EC28  F005         	call	___lwdiv	;wreg free
   817  000994  C015  F01C         	movff	?___lwdiv,___lwmod@dividend
   818  000998  C016  F01D         	movff	?___lwdiv+1,___lwmod@dividend+1
   819  00099C  0E00               	movlw	0
   820  00099E  6E1F               	movwf	___lwmod@divisor+1,c
   821  0009A0  0E0A               	movlw	10
   822  0009A2  6E1E               	movwf	___lwmod@divisor,c
   823  0009A4  EC77  F005         	call	___lwmod	;wreg free
   824  0009A8  501C               	movf	?___lwmod,w,c
   825  0009AA  0F30               	addlw	48
   826  0009AC  0100               	movlb	0	; () banked
   827  0009AE  6F81               	movwf	printf@c& (0+255),b
   828                           
   829                           ; BSR set to: 0
   830                           ;doprnt.c: 1532: }
   831                           ;doprnt.c: 1533: (putch(c) );
   832  0009B0  0100               	movlb	0	; () banked
   833  0009B2  5181               	movf	printf@c& (0+255),w,b
   834  0009B4  ECB8  F006         	call	_putch
   835  0009B8                     l2114:
   836  0009B8  0100               	movlb	0	; () banked
   837  0009BA  077B               	decf	printf@prec& (0+255),f,b
   838  0009BC  0100               	movlb	0	; () banked
   839  0009BE  297B               	incf	printf@prec& (0+255),w,b
   840  0009C0  A4D8               	btfss	status,2,c
   841  0009C2  D7D3               	goto	l2110
   842  0009C4                     l2116:
   843  0009C4  C021  FFF6         	movff	printf@f,tblptrl
   844  0009C8  C022  FFF7         	movff	printf@f+1,tblptrh
   845  0009CC  4A21               	infsnz	printf@f,f,c
   846  0009CE  2A22               	incf	printf@f+1,f,c
   847  0009D0                     	if	0	;tblptru may be non-zero
   848  0009D0                     	endif
   849  0009D0                     	if	0	;tblptru may be non-zero
   850  0009D0                     	endif
   851  0009D0  0008               	tblrd		*
   852  0009D2  0100               	movlb	0	; () banked
   853  0009D4  CFF5 F081          	movff	tablat,printf@c
   854  0009D8  0100               	movlb	0	; () banked
   855  0009DA  6781               	tstfsz	printf@c& (0+255),b
   856  0009DC  D74F               	goto	l2070
   857  0009DE  0012               	return	
   858  0009E0                     __end_of_printf:
   859                           	opt stack 0
   860                           tblptru	equ	0xFF8
   861                           tblptrh	equ	0xFF7
   862                           tblptrl	equ	0xFF6
   863                           tablat	equ	0xFF5
   864                           prodh	equ	0xFF4
   865                           prodl	equ	0xFF3
   866                           intcon	equ	0xFF2
   867                           postinc0	equ	0xFEE
   868                           wreg	equ	0xFE8
   869                           postinc2	equ	0xFDE
   870                           postdec2	equ	0xFDD
   871                           fsr2h	equ	0xFDA
   872                           fsr2l	equ	0xFD9
   873                           status	equ	0xFD8
   874                           
   875 ;; *************** function _putch *****************
   876 ;; Defined at:
   877 ;;		line 168 in file "mcc_generated_files/eusart1.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;  txData          1    wreg     unsigned char 
   880 ;; Auto vars:     Size  Location     Type
   881 ;;  txData          1   21[COMRAM] unsigned char 
   882 ;; Return value:  Size  Location     Type
   883 ;;		None               void
   884 ;; Registers used:
   885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   891 ;;      Params:         0       0       0       0       0       0       0
   892 ;;      Locals:         1       0       0       0       0       0       0
   893 ;;      Temps:          0       0       0       0       0       0       0
   894 ;;      Totals:         1       0       0       0       0       0       0
   895 ;;Total ram usage:        1 bytes
   896 ;; Hardware stack levels used:    1
   897 ;; Hardware stack levels required when called:    4
   898 ;; This function calls:
   899 ;;		_EUSART1_Write
   900 ;; This function is called by:
   901 ;;		_printf
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           	psect	text2
   906  000D70                     __ptext2:
   907                           	opt stack 0
   908  000D70                     _putch:
   909                           	opt stack 25
   910                           
   911                           ; BSR set to: 0
   912                           ;incstack = 0
   913                           ;putch@txData stored from wreg
   914  000D70  6E16               	movwf	putch@txData,c
   915                           
   916                           ;eusart1.c: 170: EUSART1_Write(txData);
   917  000D72  5016               	movf	putch@txData,w,c
   918  000D74  EC98  F005         	call	_EUSART1_Write
   919  000D78  0012               	return	
   920  000D7A                     __end_of_putch:
   921                           	opt stack 0
   922                           tblptru	equ	0xFF8
   923                           tblptrh	equ	0xFF7
   924                           tblptrl	equ	0xFF6
   925                           tablat	equ	0xFF5
   926                           prodh	equ	0xFF4
   927                           prodl	equ	0xFF3
   928                           intcon	equ	0xFF2
   929                           postinc0	equ	0xFEE
   930                           wreg	equ	0xFE8
   931                           postinc2	equ	0xFDE
   932                           postdec2	equ	0xFDD
   933                           fsr2h	equ	0xFDA
   934                           fsr2l	equ	0xFD9
   935                           status	equ	0xFD8
   936                           
   937 ;; *************** function _EUSART1_Write *****************
   938 ;; Defined at:
   939 ;;		line 140 in file "mcc_generated_files/eusart1.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  txData          1    wreg     unsigned char 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  txData          1   20[COMRAM] unsigned char 
   944 ;; Return value:  Size  Location     Type
   945 ;;		None               void
   946 ;; Registers used:
   947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   953 ;;      Params:         0       0       0       0       0       0       0
   954 ;;      Locals:         1       0       0       0       0       0       0
   955 ;;      Temps:          0       0       0       0       0       0       0
   956 ;;      Totals:         1       0       0       0       0       0       0
   957 ;;Total ram usage:        1 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; Hardware stack levels required when called:    3
   960 ;; This function calls:
   961 ;;		Nothing
   962 ;; This function is called by:
   963 ;;		_putch
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text3
   968  000B30                     __ptext3:
   969                           	opt stack 0
   970  000B30                     _EUSART1_Write:
   971                           	opt stack 25
   972                           
   973                           ;incstack = 0
   974                           ;EUSART1_Write@txData stored from wreg
   975  000B30  6E15               	movwf	EUSART1_Write@txData,c
   976  000B32                     l1940:
   977  000B32  504B               	movf	_eusart1TxBufferRemaining,w,c	;volatile
   978  000B34  B4D8               	btfsc	status,2,c
   979  000B36  D7FD               	goto	l1940
   980                           
   981                           ;eusart1.c: 144: }
   982                           ;eusart1.c: 146: if(0 == PIE1bits.TX1IE)
   983  000B38  B89D               	btfsc	3997,4,c	;volatile
   984  000B3A  D003               	goto	l201
   985                           
   986                           ;eusart1.c: 147: {
   987                           ;eusart1.c: 148: TX1REG = txData;
   988  000B3C  C015  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
   989                           
   990                           ;eusart1.c: 149: }
   991  000B40  D014               	goto	l1954
   992  000B42                     l201:
   993                           
   994                           ;eusart1.c: 150: else
   995                           ;eusart1.c: 151: {
   996                           ;eusart1.c: 152: PIE1bits.TX1IE = 0;
   997  000B42  989D               	bcf	3997,4,c	;volatile
   998                           
   999                           ;eusart1.c: 153: eusart1TxBuffer[eusart1TxHead++] = txData;
  1000  000B44  5030               	movf	_eusart1TxHead,w,c
  1001  000B46  0D01               	mullw	1
  1002  000B48  0100               	movlb	0	; () banked
  1003  000B4A  0E68               	movlw	low _eusart1TxBuffer
  1004  000B4C  24F3               	addwf	prodl,w,c
  1005  000B4E  6ED9               	movwf	fsr2l,c
  1006  000B50  0100               	movlb	0	; () banked
  1007  000B52  0E00               	movlw	high _eusart1TxBuffer
  1008  000B54  20F4               	addwfc	prodh,w,c
  1009  000B56  6EDA               	movwf	fsr2h,c
  1010  000B58  C015  FFDF         	movff	EUSART1_Write@txData,indf2
  1011                           
  1012                           ; BSR set to: 0
  1013  000B5C  2A30               	incf	_eusart1TxHead,f,c
  1014                           
  1015                           ; BSR set to: 0
  1016                           ;eusart1.c: 154: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  1017  000B5E  0E07               	movlw	7
  1018  000B60  6430               	cpfsgt	_eusart1TxHead,c
  1019  000B62  D002               	goto	l1952
  1020                           
  1021                           ; BSR set to: 0
  1022                           ;eusart1.c: 155: {
  1023                           ;eusart1.c: 156: eusart1TxHead = 0;
  1024  000B64  0E00               	movlw	0
  1025  000B66  6E30               	movwf	_eusart1TxHead,c
  1026  000B68                     l1952:
  1027                           
  1028                           ; BSR set to: 0
  1029                           ;eusart1.c: 157: }
  1030                           ;eusart1.c: 158: eusart1TxBufferRemaining--;
  1031  000B68  064B               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  1032  000B6A                     l1954:
  1033                           
  1034                           ;eusart1.c: 159: }
  1035                           ;eusart1.c: 160: PIE1bits.TX1IE = 1;
  1036  000B6A  889D               	bsf	3997,4,c	;volatile
  1037  000B6C  0012               	return	
  1038  000B6E                     __end_of_EUSART1_Write:
  1039                           	opt stack 0
  1040                           tblptru	equ	0xFF8
  1041                           tblptrh	equ	0xFF7
  1042                           tblptrl	equ	0xFF6
  1043                           tablat	equ	0xFF5
  1044                           prodh	equ	0xFF4
  1045                           prodl	equ	0xFF3
  1046                           intcon	equ	0xFF2
  1047                           postinc0	equ	0xFEE
  1048                           wreg	equ	0xFE8
  1049                           indf2	equ	0xFDF
  1050                           postinc2	equ	0xFDE
  1051                           postdec2	equ	0xFDD
  1052                           fsr2h	equ	0xFDA
  1053                           fsr2l	equ	0xFD9
  1054                           status	equ	0xFD8
  1055                           
  1056 ;; *************** function ___lwmod *****************
  1057 ;; Defined at:
  1058 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  dividend        2   27[COMRAM] unsigned int 
  1061 ;;  divisor         2   29[COMRAM] unsigned int 
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;  counter         1   31[COMRAM] unsigned char 
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  2   27[COMRAM] unsigned int 
  1066 ;; Registers used:
  1067 ;;		wreg, status,2, status,0
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1073 ;;      Params:         4       0       0       0       0       0       0
  1074 ;;      Locals:         1       0       0       0       0       0       0
  1075 ;;      Temps:          0       0       0       0       0       0       0
  1076 ;;      Totals:         5       0       0       0       0       0       0
  1077 ;;Total ram usage:        5 bytes
  1078 ;; Hardware stack levels used:    1
  1079 ;; Hardware stack levels required when called:    3
  1080 ;; This function calls:
  1081 ;;		Nothing
  1082 ;; This function is called by:
  1083 ;;		_printf
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           	psect	text4
  1088  000AEE                     __ptext4:
  1089                           	opt stack 0
  1090  000AEE                     ___lwmod:
  1091                           	opt stack 26
  1092                           
  1093                           ;incstack = 0
  1094  000AEE  501F               	movf	___lwmod@divisor+1,w,c
  1095  000AF0  101E               	iorwf	___lwmod@divisor,w,c
  1096  000AF2  B4D8               	btfsc	status,2,c
  1097  000AF4  D018               	goto	l991
  1098  000AF6  0E01               	movlw	1
  1099  000AF8  6E20               	movwf	___lwmod@counter,c
  1100  000AFA  D004               	goto	l2036
  1101  000AFC                     l2034:
  1102  000AFC  90D8               	bcf	status,0,c
  1103  000AFE  361E               	rlcf	___lwmod@divisor,f,c
  1104  000B00  361F               	rlcf	___lwmod@divisor+1,f,c
  1105  000B02  2A20               	incf	___lwmod@counter,f,c
  1106  000B04                     l2036:
  1107  000B04  AE1F               	btfss	___lwmod@divisor+1,7,c
  1108  000B06  D7FA               	goto	l2034
  1109  000B08                     l2038:
  1110  000B08  501E               	movf	___lwmod@divisor,w,c
  1111  000B0A  5C1C               	subwf	___lwmod@dividend,w,c
  1112  000B0C  501F               	movf	___lwmod@divisor+1,w,c
  1113  000B0E  581D               	subwfb	___lwmod@dividend+1,w,c
  1114  000B10  A0D8               	btfss	status,0,c
  1115  000B12  D004               	goto	l2042
  1116  000B14  501E               	movf	___lwmod@divisor,w,c
  1117  000B16  5E1C               	subwf	___lwmod@dividend,f,c
  1118  000B18  501F               	movf	___lwmod@divisor+1,w,c
  1119  000B1A  5A1D               	subwfb	___lwmod@dividend+1,f,c
  1120  000B1C                     l2042:
  1121  000B1C  90D8               	bcf	status,0,c
  1122  000B1E  321F               	rrcf	___lwmod@divisor+1,f,c
  1123  000B20  321E               	rrcf	___lwmod@divisor,f,c
  1124  000B22  2E20               	decfsz	___lwmod@counter,f,c
  1125  000B24  D7F1               	goto	l2038
  1126  000B26                     l991:
  1127  000B26  C01C  F01C         	movff	___lwmod@dividend,?___lwmod
  1128  000B2A  C01D  F01D         	movff	___lwmod@dividend+1,?___lwmod+1
  1129  000B2E  0012               	return	
  1130  000B30                     __end_of___lwmod:
  1131                           	opt stack 0
  1132                           tblptru	equ	0xFF8
  1133                           tblptrh	equ	0xFF7
  1134                           tblptrl	equ	0xFF6
  1135                           tablat	equ	0xFF5
  1136                           prodh	equ	0xFF4
  1137                           prodl	equ	0xFF3
  1138                           intcon	equ	0xFF2
  1139                           postinc0	equ	0xFEE
  1140                           wreg	equ	0xFE8
  1141                           indf2	equ	0xFDF
  1142                           postinc2	equ	0xFDE
  1143                           postdec2	equ	0xFDD
  1144                           fsr2h	equ	0xFDA
  1145                           fsr2l	equ	0xFD9
  1146                           status	equ	0xFD8
  1147                           
  1148 ;; *************** function ___lwdiv *****************
  1149 ;; Defined at:
  1150 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;  dividend        2   20[COMRAM] unsigned int 
  1153 ;;  divisor         2   22[COMRAM] unsigned int 
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;  quotient        2   24[COMRAM] unsigned int 
  1156 ;;  counter         1   26[COMRAM] unsigned char 
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  2   20[COMRAM] unsigned int 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2, status,0
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1166 ;;      Params:         4       0       0       0       0       0       0
  1167 ;;      Locals:         3       0       0       0       0       0       0
  1168 ;;      Temps:          0       0       0       0       0       0       0
  1169 ;;      Totals:         7       0       0       0       0       0       0
  1170 ;;Total ram usage:        7 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:    3
  1173 ;; This function calls:
  1174 ;;		Nothing
  1175 ;; This function is called by:
  1176 ;;		_printf
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text5
  1181  000A50                     __ptext5:
  1182                           	opt stack 0
  1183  000A50                     ___lwdiv:
  1184                           	opt stack 26
  1185                           
  1186                           ;incstack = 0
  1187  000A50  0E00               	movlw	0
  1188  000A52  6E1A               	movwf	___lwdiv@quotient+1,c
  1189  000A54  0E00               	movlw	0
  1190  000A56  6E19               	movwf	___lwdiv@quotient,c
  1191  000A58  5018               	movf	___lwdiv@divisor+1,w,c
  1192  000A5A  1017               	iorwf	___lwdiv@divisor,w,c
  1193  000A5C  B4D8               	btfsc	status,2,c
  1194  000A5E  D01C               	goto	l981
  1195  000A60  0E01               	movlw	1
  1196  000A62  6E1B               	movwf	___lwdiv@counter,c
  1197  000A64  D004               	goto	l2016
  1198  000A66                     l2014:
  1199  000A66  90D8               	bcf	status,0,c
  1200  000A68  3617               	rlcf	___lwdiv@divisor,f,c
  1201  000A6A  3618               	rlcf	___lwdiv@divisor+1,f,c
  1202  000A6C  2A1B               	incf	___lwdiv@counter,f,c
  1203  000A6E                     l2016:
  1204  000A6E  AE18               	btfss	___lwdiv@divisor+1,7,c
  1205  000A70  D7FA               	goto	l2014
  1206  000A72                     l2018:
  1207  000A72  90D8               	bcf	status,0,c
  1208  000A74  3619               	rlcf	___lwdiv@quotient,f,c
  1209  000A76  361A               	rlcf	___lwdiv@quotient+1,f,c
  1210  000A78  5017               	movf	___lwdiv@divisor,w,c
  1211  000A7A  5C15               	subwf	___lwdiv@dividend,w,c
  1212  000A7C  5018               	movf	___lwdiv@divisor+1,w,c
  1213  000A7E  5816               	subwfb	___lwdiv@dividend+1,w,c
  1214  000A80  A0D8               	btfss	status,0,c
  1215  000A82  D005               	goto	l2026
  1216  000A84  5017               	movf	___lwdiv@divisor,w,c
  1217  000A86  5E15               	subwf	___lwdiv@dividend,f,c
  1218  000A88  5018               	movf	___lwdiv@divisor+1,w,c
  1219  000A8A  5A16               	subwfb	___lwdiv@dividend+1,f,c
  1220  000A8C  8019               	bsf	___lwdiv@quotient,0,c
  1221  000A8E                     l2026:
  1222  000A8E  90D8               	bcf	status,0,c
  1223  000A90  3218               	rrcf	___lwdiv@divisor+1,f,c
  1224  000A92  3217               	rrcf	___lwdiv@divisor,f,c
  1225  000A94  2E1B               	decfsz	___lwdiv@counter,f,c
  1226  000A96  D7ED               	goto	l2018
  1227  000A98                     l981:
  1228  000A98  C019  F015         	movff	___lwdiv@quotient,?___lwdiv
  1229  000A9C  C01A  F016         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1230  000AA0  0012               	return	
  1231  000AA2                     __end_of___lwdiv:
  1232                           	opt stack 0
  1233                           tblptru	equ	0xFF8
  1234                           tblptrh	equ	0xFF7
  1235                           tblptrl	equ	0xFF6
  1236                           tablat	equ	0xFF5
  1237                           prodh	equ	0xFF4
  1238                           prodl	equ	0xFF3
  1239                           intcon	equ	0xFF2
  1240                           postinc0	equ	0xFEE
  1241                           wreg	equ	0xFE8
  1242                           indf2	equ	0xFDF
  1243                           postinc2	equ	0xFDE
  1244                           postdec2	equ	0xFDD
  1245                           fsr2h	equ	0xFDA
  1246                           fsr2l	equ	0xFD9
  1247                           status	equ	0xFD8
  1248                           
  1249 ;; *************** function _SYSTEM_Initialize *****************
  1250 ;; Defined at:
  1251 ;;		line 112 in file "mcc_generated_files/mcc.c"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;		None
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;		None
  1256 ;; Return value:  Size  Location     Type
  1257 ;;		None               void
  1258 ;; Registers used:
  1259 ;;		wreg, status,2, status,0, cstack
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1265 ;;      Params:         0       0       0       0       0       0       0
  1266 ;;      Locals:         0       0       0       0       0       0       0
  1267 ;;      Temps:          0       0       0       0       0       0       0
  1268 ;;      Totals:         0       0       0       0       0       0       0
  1269 ;;Total ram usage:        0 bytes
  1270 ;; Hardware stack levels used:    1
  1271 ;; Hardware stack levels required when called:    5
  1272 ;; This function calls:
  1273 ;;		_ADC_Initialize
  1274 ;;		_EUSART1_Initialize
  1275 ;;		_I2C1_Initialize
  1276 ;;		_INTERRUPT_Initialize
  1277 ;;		_OSCILLATOR_Initialize
  1278 ;;		_PIN_MANAGER_Initialize
  1279 ;;		_TMR0_Initialize
  1280 ;; This function is called by:
  1281 ;;		_main
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text6
  1286  000CCC                     __ptext6:
  1287                           	opt stack 0
  1288  000CCC                     _SYSTEM_Initialize:
  1289                           	opt stack 25
  1290                           
  1291                           ;mcc.c: 114: OSCILLATOR_Initialize();
  1292                           
  1293                           ;incstack = 0
  1294  000CCC  ECB1  F006         	call	_OSCILLATOR_Initialize	;wreg free
  1295                           
  1296                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1297  000CD0  EC51  F005         	call	_PIN_MANAGER_Initialize	;wreg free
  1298                           
  1299                           ;mcc.c: 116: INTERRUPT_Initialize();
  1300  000CD4  ECA9  F006         	call	_INTERRUPT_Initialize	;wreg free
  1301                           
  1302                           ;mcc.c: 117: ADC_Initialize();
  1303  000CD8  EC91  F006         	call	_ADC_Initialize	;wreg free
  1304                           
  1305                           ;mcc.c: 118: TMR0_Initialize();
  1306  000CDC  EC75  F006         	call	_TMR0_Initialize	;wreg free
  1307                           
  1308                           ;mcc.c: 119: EUSART1_Initialize();
  1309  000CE0  ECD6  F005         	call	_EUSART1_Initialize	;wreg free
  1310                           
  1311                           ;mcc.c: 120: I2C1_Initialize();
  1312  000CE4  EC3E  F006         	call	_I2C1_Initialize	;wreg free
  1313  000CE8  0012               	return	
  1314  000CEA                     __end_of_SYSTEM_Initialize:
  1315                           	opt stack 0
  1316                           tblptru	equ	0xFF8
  1317                           tblptrh	equ	0xFF7
  1318                           tblptrl	equ	0xFF6
  1319                           tablat	equ	0xFF5
  1320                           prodh	equ	0xFF4
  1321                           prodl	equ	0xFF3
  1322                           intcon	equ	0xFF2
  1323                           postinc0	equ	0xFEE
  1324                           wreg	equ	0xFE8
  1325                           indf2	equ	0xFDF
  1326                           postinc2	equ	0xFDE
  1327                           postdec2	equ	0xFDD
  1328                           fsr2h	equ	0xFDA
  1329                           fsr2l	equ	0xFD9
  1330                           status	equ	0xFD8
  1331                           
  1332 ;; *************** function _TMR0_Initialize *****************
  1333 ;; Defined at:
  1334 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;		None
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;		None               void
  1341 ;; Registers used:
  1342 ;;		wreg, status,2, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1348 ;;      Params:         0       0       0       0       0       0       0
  1349 ;;      Locals:         0       0       0       0       0       0       0
  1350 ;;      Temps:          0       0       0       0       0       0       0
  1351 ;;      Totals:         0       0       0       0       0       0       0
  1352 ;;Total ram usage:        0 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; Hardware stack levels required when called:    4
  1355 ;; This function calls:
  1356 ;;		_TMR0_StartTimer
  1357 ;; This function is called by:
  1358 ;;		_SYSTEM_Initialize
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text7
  1363  000CEA                     __ptext7:
  1364                           	opt stack 0
  1365  000CEA                     _TMR0_Initialize:
  1366                           	opt stack 25
  1367                           
  1368                           ;tmr0.c: 70: T0CON = 0x94;
  1369                           
  1370                           ;incstack = 0
  1371  000CEA  0E94               	movlw	148
  1372  000CEC  6ED5               	movwf	4053,c	;volatile
  1373                           
  1374                           ;tmr0.c: 73: TMR0H = 0x00;
  1375  000CEE  0E00               	movlw	0
  1376  000CF0  6ED7               	movwf	4055,c	;volatile
  1377                           
  1378                           ;tmr0.c: 76: TMR0L = 0x64;
  1379  000CF2  0E64               	movlw	100
  1380  000CF4  6ED6               	movwf	4054,c	;volatile
  1381                           
  1382                           ;tmr0.c: 79: timer0ReloadVal16bit = 100;
  1383  000CF6  0E00               	movlw	0
  1384  000CF8  6E4A               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  1385  000CFA  0E64               	movlw	100
  1386  000CFC  6E49               	movwf	_timer0ReloadVal16bit,c	;volatile
  1387                           
  1388                           ;tmr0.c: 82: INTCONbits.TMR0IF = 0;
  1389  000CFE  94F2               	bcf	intcon,2,c	;volatile
  1390                           
  1391                           ;tmr0.c: 85: INTCONbits.TMR0IE = 1;
  1392  000D00  8AF2               	bsf	intcon,5,c	;volatile
  1393                           
  1394                           ;tmr0.c: 88: TMR0_StartTimer();
  1395  000D02  ECBD  F006         	call	_TMR0_StartTimer	;wreg free
  1396  000D06  0012               	return	
  1397  000D08                     __end_of_TMR0_Initialize:
  1398                           	opt stack 0
  1399                           tblptru	equ	0xFF8
  1400                           tblptrh	equ	0xFF7
  1401                           tblptrl	equ	0xFF6
  1402                           tablat	equ	0xFF5
  1403                           prodh	equ	0xFF4
  1404                           prodl	equ	0xFF3
  1405                           intcon	equ	0xFF2
  1406                           postinc0	equ	0xFEE
  1407                           wreg	equ	0xFE8
  1408                           indf2	equ	0xFDF
  1409                           postinc2	equ	0xFDE
  1410                           postdec2	equ	0xFDD
  1411                           fsr2h	equ	0xFDA
  1412                           fsr2l	equ	0xFD9
  1413                           status	equ	0xFD8
  1414                           
  1415 ;; *************** function _TMR0_StartTimer *****************
  1416 ;; Defined at:
  1417 ;;		line 91 in file "mcc_generated_files/tmr0.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;		None
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;		None
  1422 ;; Return value:  Size  Location     Type
  1423 ;;		None               void
  1424 ;; Registers used:
  1425 ;;		None
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1431 ;;      Params:         0       0       0       0       0       0       0
  1432 ;;      Locals:         0       0       0       0       0       0       0
  1433 ;;      Temps:          0       0       0       0       0       0       0
  1434 ;;      Totals:         0       0       0       0       0       0       0
  1435 ;;Total ram usage:        0 bytes
  1436 ;; Hardware stack levels used:    1
  1437 ;; Hardware stack levels required when called:    3
  1438 ;; This function calls:
  1439 ;;		Nothing
  1440 ;; This function is called by:
  1441 ;;		_TMR0_Initialize
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           	psect	text8
  1446  000D7A                     __ptext8:
  1447                           	opt stack 0
  1448  000D7A                     _TMR0_StartTimer:
  1449                           	opt stack 25
  1450                           
  1451                           ;tmr0.c: 94: T0CONbits.TMR0ON = 1;
  1452                           
  1453                           ;incstack = 0
  1454  000D7A  8ED5               	bsf	4053,7,c	;volatile
  1455  000D7C  0012               	return	
  1456  000D7E                     __end_of_TMR0_StartTimer:
  1457                           	opt stack 0
  1458                           tblptru	equ	0xFF8
  1459                           tblptrh	equ	0xFF7
  1460                           tblptrl	equ	0xFF6
  1461                           tablat	equ	0xFF5
  1462                           prodh	equ	0xFF4
  1463                           prodl	equ	0xFF3
  1464                           intcon	equ	0xFF2
  1465                           postinc0	equ	0xFEE
  1466                           wreg	equ	0xFE8
  1467                           indf2	equ	0xFDF
  1468                           postinc2	equ	0xFDE
  1469                           postdec2	equ	0xFDD
  1470                           fsr2h	equ	0xFDA
  1471                           fsr2l	equ	0xFD9
  1472                           status	equ	0xFD8
  1473                           
  1474 ;; *************** function _PIN_MANAGER_Initialize *****************
  1475 ;; Defined at:
  1476 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;		None
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;		None               void
  1483 ;; Registers used:
  1484 ;;		wreg, status,2
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1490 ;;      Params:         0       0       0       0       0       0       0
  1491 ;;      Locals:         0       0       0       0       0       0       0
  1492 ;;      Temps:          0       0       0       0       0       0       0
  1493 ;;      Totals:         0       0       0       0       0       0       0
  1494 ;;Total ram usage:        0 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    3
  1497 ;; This function calls:
  1498 ;;		Nothing
  1499 ;; This function is called by:
  1500 ;;		_SYSTEM_Initialize
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text9
  1505  000AA2                     __ptext9:
  1506                           	opt stack 0
  1507  000AA2                     _PIN_MANAGER_Initialize:
  1508                           	opt stack 26
  1509                           
  1510                           ;pin_manager.c: 52: LATA = 0x00;
  1511                           
  1512                           ;incstack = 0
  1513  000AA2  0E00               	movlw	0
  1514  000AA4  6E89               	movwf	3977,c	;volatile
  1515                           
  1516                           ;pin_manager.c: 53: TRISA = 0xF7;
  1517  000AA6  0EF7               	movlw	247
  1518  000AA8  6E92               	movwf	3986,c	;volatile
  1519                           
  1520                           ;pin_manager.c: 54: ANSELA = 0x20;
  1521  000AAA  0E20               	movlw	32
  1522  000AAC  010F               	movlb	15	; () banked
  1523  000AAE  6F38               	movwf	56,b	;volatile
  1524                           
  1525                           ;pin_manager.c: 56: LATB = 0x00;
  1526  000AB0  0E00               	movlw	0
  1527  000AB2  6E8A               	movwf	3978,c	;volatile
  1528                           
  1529                           ;pin_manager.c: 57: TRISB = 0xD7;
  1530  000AB4  0ED7               	movlw	215
  1531  000AB6  6E93               	movwf	3987,c	;volatile
  1532                           
  1533                           ;pin_manager.c: 58: ANSELB = 0x00;
  1534  000AB8  0E00               	movlw	0
  1535  000ABA  010F               	movlb	15	; () banked
  1536  000ABC  6F39               	movwf	57,b	;volatile
  1537                           
  1538                           ;pin_manager.c: 59: WPUB = 0x00;
  1539  000ABE  0E00               	movlw	0
  1540  000AC0  6E61               	movwf	3937,c	;volatile
  1541                           
  1542                           ;pin_manager.c: 61: LATC = 0x18;
  1543  000AC2  0E18               	movlw	24
  1544  000AC4  6E8B               	movwf	3979,c	;volatile
  1545                           
  1546                           ; BSR set to: 15
  1547                           ;pin_manager.c: 62: TRISC = 0xFF;
  1548  000AC6  6894               	setf	3988,c	;volatile
  1549                           
  1550                           ;pin_manager.c: 63: ANSELC = 0x04;
  1551  000AC8  0E04               	movlw	4
  1552  000ACA  010F               	movlb	15	; () banked
  1553  000ACC  6F3A               	movwf	58,b	;volatile
  1554                           
  1555                           ;pin_manager.c: 65: LATD = 0x00;
  1556  000ACE  0E00               	movlw	0
  1557  000AD0  6E8C               	movwf	3980,c	;volatile
  1558                           
  1559                           ;pin_manager.c: 66: TRISD = 0xFD;
  1560  000AD2  0EFD               	movlw	253
  1561  000AD4  6E95               	movwf	3989,c	;volatile
  1562                           
  1563                           ;pin_manager.c: 67: ANSELD = 0xDD;
  1564  000AD6  0EDD               	movlw	221
  1565  000AD8  010F               	movlb	15	; () banked
  1566  000ADA  6F3B               	movwf	59,b	;volatile
  1567                           
  1568                           ;pin_manager.c: 69: LATE = 0x00;
  1569  000ADC  0E00               	movlw	0
  1570  000ADE  6E8D               	movwf	3981,c	;volatile
  1571                           
  1572                           ;pin_manager.c: 70: TRISE = 0x00;
  1573  000AE0  0E00               	movlw	0
  1574  000AE2  6E96               	movwf	3990,c	;volatile
  1575                           
  1576                           ;pin_manager.c: 71: ANSELE = 0x00;
  1577  000AE4  0E00               	movlw	0
  1578  000AE6  010F               	movlb	15	; () banked
  1579  000AE8  6F3C               	movwf	60,b	;volatile
  1580                           
  1581                           ; BSR set to: 15
  1582                           ;pin_manager.c: 73: INTCON2bits.nRBPU = 0x01;
  1583  000AEA  8EF1               	bsf	intcon2,7,c	;volatile
  1584                           
  1585                           ; BSR set to: 15
  1586  000AEC  0012               	return	
  1587  000AEE                     __end_of_PIN_MANAGER_Initialize:
  1588                           	opt stack 0
  1589                           tblptru	equ	0xFF8
  1590                           tblptrh	equ	0xFF7
  1591                           tblptrl	equ	0xFF6
  1592                           tablat	equ	0xFF5
  1593                           prodh	equ	0xFF4
  1594                           prodl	equ	0xFF3
  1595                           intcon	equ	0xFF2
  1596                           intcon2	equ	0xFF1
  1597                           postinc0	equ	0xFEE
  1598                           wreg	equ	0xFE8
  1599                           indf2	equ	0xFDF
  1600                           postinc2	equ	0xFDE
  1601                           postdec2	equ	0xFDD
  1602                           fsr2h	equ	0xFDA
  1603                           fsr2l	equ	0xFD9
  1604                           status	equ	0xFD8
  1605                           
  1606 ;; *************** function _OSCILLATOR_Initialize *****************
  1607 ;; Defined at:
  1608 ;;		line 123 in file "mcc_generated_files/mcc.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;		None
  1613 ;; Return value:  Size  Location     Type
  1614 ;;		None               void
  1615 ;; Registers used:
  1616 ;;		wreg, status,2
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1622 ;;      Params:         0       0       0       0       0       0       0
  1623 ;;      Locals:         0       0       0       0       0       0       0
  1624 ;;      Temps:          0       0       0       0       0       0       0
  1625 ;;      Totals:         0       0       0       0       0       0       0
  1626 ;;Total ram usage:        0 bytes
  1627 ;; Hardware stack levels used:    1
  1628 ;; Hardware stack levels required when called:    3
  1629 ;; This function calls:
  1630 ;;		Nothing
  1631 ;; This function is called by:
  1632 ;;		_SYSTEM_Initialize
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           	psect	text10
  1637  000D62                     __ptext10:
  1638                           	opt stack 0
  1639  000D62                     _OSCILLATOR_Initialize:
  1640                           	opt stack 26
  1641                           
  1642                           ;mcc.c: 126: OSCCON = 0x72;
  1643                           
  1644                           ; BSR set to: 15
  1645                           ;incstack = 0
  1646  000D62  0E72               	movlw	114
  1647  000D64  6ED3               	movwf	4051,c	;volatile
  1648                           
  1649                           ;mcc.c: 128: OSCCON2 = 0x04;
  1650  000D66  0E04               	movlw	4
  1651  000D68  6ED2               	movwf	4050,c	;volatile
  1652                           
  1653                           ;mcc.c: 130: OSCTUNE = 0x00;
  1654  000D6A  0E00               	movlw	0
  1655  000D6C  6E9B               	movwf	3995,c	;volatile
  1656  000D6E  0012               	return	
  1657  000D70                     __end_of_OSCILLATOR_Initialize:
  1658                           	opt stack 0
  1659                           tblptru	equ	0xFF8
  1660                           tblptrh	equ	0xFF7
  1661                           tblptrl	equ	0xFF6
  1662                           tablat	equ	0xFF5
  1663                           prodh	equ	0xFF4
  1664                           prodl	equ	0xFF3
  1665                           intcon	equ	0xFF2
  1666                           intcon2	equ	0xFF1
  1667                           postinc0	equ	0xFEE
  1668                           wreg	equ	0xFE8
  1669                           indf2	equ	0xFDF
  1670                           postinc2	equ	0xFDE
  1671                           postdec2	equ	0xFDD
  1672                           fsr2h	equ	0xFDA
  1673                           fsr2l	equ	0xFD9
  1674                           status	equ	0xFD8
  1675                           
  1676 ;; *************** function _INTERRUPT_Initialize *****************
  1677 ;; Defined at:
  1678 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;		None
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;		None
  1683 ;; Return value:  Size  Location     Type
  1684 ;;		None               void
  1685 ;; Registers used:
  1686 ;;		None
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1692 ;;      Params:         0       0       0       0       0       0       0
  1693 ;;      Locals:         0       0       0       0       0       0       0
  1694 ;;      Temps:          0       0       0       0       0       0       0
  1695 ;;      Totals:         0       0       0       0       0       0       0
  1696 ;;Total ram usage:        0 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    3
  1699 ;; This function calls:
  1700 ;;		Nothing
  1701 ;; This function is called by:
  1702 ;;		_SYSTEM_Initialize
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text11
  1707  000D52                     __ptext11:
  1708                           	opt stack 0
  1709  000D52                     _INTERRUPT_Initialize:
  1710                           	opt stack 26
  1711                           
  1712                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  1713                           
  1714                           ;incstack = 0
  1715  000D52  9ED0               	bcf	4048,7,c	;volatile
  1716                           
  1717                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
  1718  000D54  9A9F               	bcf	3999,5,c	;volatile
  1719                           
  1720                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  1721  000D56  989F               	bcf	3999,4,c	;volatile
  1722                           
  1723                           ;interrupt_manager.c: 64: INTCON2bits.TMR0IP = 0;
  1724  000D58  94F1               	bcf	intcon2,2,c	;volatile
  1725                           
  1726                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 0;
  1727  000D5A  9C9F               	bcf	3999,6,c	;volatile
  1728                           
  1729                           ;interrupt_manager.c: 68: IPR1bits.SSP1IP = 0;
  1730  000D5C  969F               	bcf	3999,3,c	;volatile
  1731                           
  1732                           ;interrupt_manager.c: 70: IPR2bits.BCL1IP = 0;
  1733  000D5E  96A2               	bcf	4002,3,c	;volatile
  1734  000D60  0012               	return	
  1735  000D62                     __end_of_INTERRUPT_Initialize:
  1736                           	opt stack 0
  1737                           tblptru	equ	0xFF8
  1738                           tblptrh	equ	0xFF7
  1739                           tblptrl	equ	0xFF6
  1740                           tablat	equ	0xFF5
  1741                           prodh	equ	0xFF4
  1742                           prodl	equ	0xFF3
  1743                           intcon	equ	0xFF2
  1744                           intcon2	equ	0xFF1
  1745                           postinc0	equ	0xFEE
  1746                           wreg	equ	0xFE8
  1747                           indf2	equ	0xFDF
  1748                           postinc2	equ	0xFDE
  1749                           postdec2	equ	0xFDD
  1750                           fsr2h	equ	0xFDA
  1751                           fsr2l	equ	0xFD9
  1752                           status	equ	0xFD8
  1753                           
  1754 ;; *************** function _I2C1_Initialize *****************
  1755 ;; Defined at:
  1756 ;;		line 199 in file "mcc_generated_files/i2c1.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;		None
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;		None
  1761 ;; Return value:  Size  Location     Type
  1762 ;;		None               void
  1763 ;; Registers used:
  1764 ;;		wreg, status,2, status,0
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1770 ;;      Params:         0       0       0       0       0       0       0
  1771 ;;      Locals:         0       0       0       0       0       0       0
  1772 ;;      Temps:          0       0       0       0       0       0       0
  1773 ;;      Totals:         0       0       0       0       0       0       0
  1774 ;;Total ram usage:        0 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; Hardware stack levels required when called:    3
  1777 ;; This function calls:
  1778 ;;		Nothing
  1779 ;; This function is called by:
  1780 ;;		_SYSTEM_Initialize
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text12
  1785  000C7C                     __ptext12:
  1786                           	opt stack 0
  1787  000C7C                     _I2C1_Initialize:
  1788                           	opt stack 26
  1789                           
  1790                           ;i2c1.c: 201: i2c1_object.pTrHead = i2c1_tr_queue;
  1791                           
  1792                           ;incstack = 0
  1793  000C7C  0E00               	movlw	high _i2c1_tr_queue
  1794  000C7E  6E45               	movwf	_i2c1_object+3,c
  1795  000C80  0E3A               	movlw	low _i2c1_tr_queue
  1796  000C82  6E44               	movwf	_i2c1_object+2,c
  1797                           
  1798                           ;i2c1.c: 202: i2c1_object.pTrTail = i2c1_tr_queue;
  1799  000C84  0E00               	movlw	high _i2c1_tr_queue
  1800  000C86  6E43               	movwf	_i2c1_object+1,c
  1801  000C88  0E3A               	movlw	low _i2c1_tr_queue
  1802  000C8A  6E42               	movwf	_i2c1_object,c
  1803                           
  1804                           ;i2c1.c: 203: i2c1_object.trStatus.s.empty = 1;
  1805  000C8C  8246               	bsf	_i2c1_object+4,1,c
  1806                           
  1807                           ;i2c1.c: 204: i2c1_object.trStatus.s.full = 0;
  1808  000C8E  9046               	bcf	_i2c1_object+4,0,c
  1809                           
  1810                           ;i2c1.c: 206: i2c1_object.i2cErrors = 0;
  1811  000C90  0E00               	movlw	0
  1812  000C92  6E48               	movwf	_i2c1_object+6,c
  1813                           
  1814                           ;i2c1.c: 209: SSP1STAT = 0x80;
  1815  000C94  0E80               	movlw	128
  1816  000C96  6EC7               	movwf	4039,c	;volatile
  1817                           
  1818                           ;i2c1.c: 211: SSP1CON1 = 0x28;
  1819  000C98  0E28               	movlw	40
  1820  000C9A  6EC6               	movwf	4038,c	;volatile
  1821                           
  1822                           ;i2c1.c: 213: SSP1CON3 = 0x00;
  1823  000C9C  0E00               	movlw	0
  1824  000C9E  6ECB               	movwf	4043,c	;volatile
  1825                           
  1826                           ;i2c1.c: 215: SSP1ADD = 0x03;
  1827  000CA0  0E03               	movlw	3
  1828  000CA2  6EC8               	movwf	4040,c	;volatile
  1829                           
  1830                           ;i2c1.c: 219: PIR1bits.SSP1IF = 0;
  1831  000CA4  969E               	bcf	3998,3,c	;volatile
  1832                           
  1833                           ;i2c1.c: 221: PIE1bits.SSP1IE = 1;
  1834  000CA6  869D               	bsf	3997,3,c	;volatile
  1835  000CA8  0012               	return	
  1836  000CAA                     __end_of_I2C1_Initialize:
  1837                           	opt stack 0
  1838                           tblptru	equ	0xFF8
  1839                           tblptrh	equ	0xFF7
  1840                           tblptrl	equ	0xFF6
  1841                           tablat	equ	0xFF5
  1842                           prodh	equ	0xFF4
  1843                           prodl	equ	0xFF3
  1844                           intcon	equ	0xFF2
  1845                           intcon2	equ	0xFF1
  1846                           postinc0	equ	0xFEE
  1847                           wreg	equ	0xFE8
  1848                           indf2	equ	0xFDF
  1849                           postinc2	equ	0xFDE
  1850                           postdec2	equ	0xFDD
  1851                           fsr2h	equ	0xFDA
  1852                           fsr2l	equ	0xFD9
  1853                           status	equ	0xFD8
  1854                           
  1855 ;; *************** function _EUSART1_Initialize *****************
  1856 ;; Defined at:
  1857 ;;		line 76 in file "mcc_generated_files/eusart1.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;		None
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;		None
  1862 ;; Return value:  Size  Location     Type
  1863 ;;		None               void
  1864 ;; Registers used:
  1865 ;;		wreg, status,2
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1871 ;;      Params:         0       0       0       0       0       0       0
  1872 ;;      Locals:         0       0       0       0       0       0       0
  1873 ;;      Temps:          0       0       0       0       0       0       0
  1874 ;;      Totals:         0       0       0       0       0       0       0
  1875 ;;Total ram usage:        0 bytes
  1876 ;; Hardware stack levels used:    1
  1877 ;; Hardware stack levels required when called:    3
  1878 ;; This function calls:
  1879 ;;		Nothing
  1880 ;; This function is called by:
  1881 ;;		_SYSTEM_Initialize
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           	psect	text13
  1886  000BAC                     __ptext13:
  1887                           	opt stack 0
  1888  000BAC                     _EUSART1_Initialize:
  1889                           	opt stack 26
  1890                           
  1891                           ;eusart1.c: 79: PIE1bits.RC1IE = 0;
  1892                           
  1893                           ;incstack = 0
  1894  000BAC  9A9D               	bcf	3997,5,c	;volatile
  1895                           
  1896                           ;eusart1.c: 80: PIE1bits.TX1IE = 0;
  1897  000BAE  989D               	bcf	3997,4,c	;volatile
  1898                           
  1899                           ;eusart1.c: 85: BAUD1CON = 0x48;
  1900  000BB0  0E48               	movlw	72
  1901  000BB2  6EB8               	movwf	4024,c	;volatile
  1902                           
  1903                           ;eusart1.c: 88: RC1STA = 0x90;
  1904  000BB4  0E90               	movlw	144
  1905  000BB6  6EAB               	movwf	4011,c	;volatile
  1906                           
  1907                           ;eusart1.c: 91: TX1STA = 0x26;
  1908  000BB8  0E26               	movlw	38
  1909  000BBA  6EAC               	movwf	4012,c	;volatile
  1910                           
  1911                           ;eusart1.c: 94: SPBRG1 = 0xCF;
  1912  000BBC  0ECF               	movlw	207
  1913  000BBE  6EAF               	movwf	4015,c	;volatile
  1914                           
  1915                           ;eusart1.c: 97: SPBRGH1 = 0x00;
  1916  000BC0  0E00               	movlw	0
  1917  000BC2  6EB0               	movwf	4016,c	;volatile
  1918                           
  1919                           ;eusart1.c: 100: TXREG1 = 0x00;
  1920  000BC4  0E00               	movlw	0
  1921  000BC6  6EAD               	movwf	4013,c	;volatile
  1922                           
  1923                           ;eusart1.c: 103: RCREG1 = 0x00;
  1924  000BC8  0E00               	movlw	0
  1925  000BCA  6EAE               	movwf	4014,c	;volatile
  1926                           
  1927                           ;eusart1.c: 107: eusart1TxHead = 0;
  1928  000BCC  0E00               	movlw	0
  1929  000BCE  6E30               	movwf	_eusart1TxHead,c
  1930                           
  1931                           ;eusart1.c: 108: eusart1TxTail = 0;
  1932  000BD0  0E00               	movlw	0
  1933  000BD2  6E31               	movwf	_eusart1TxTail,c
  1934                           
  1935                           ;eusart1.c: 109: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  1936  000BD4  0E08               	movlw	8
  1937  000BD6  6E4B               	movwf	_eusart1TxBufferRemaining,c	;volatile
  1938                           
  1939                           ;eusart1.c: 111: eusart1RxHead = 0;
  1940  000BD8  0E00               	movlw	0
  1941  000BDA  6E2E               	movwf	_eusart1RxHead,c
  1942                           
  1943                           ;eusart1.c: 112: eusart1RxTail = 0;
  1944  000BDC  0E00               	movlw	0
  1945  000BDE  6E2F               	movwf	_eusart1RxTail,c
  1946                           
  1947                           ;eusart1.c: 113: eusart1RxCount = 0;
  1948  000BE0  0E00               	movlw	0
  1949  000BE2  6E2D               	movwf	_eusart1RxCount,c	;volatile
  1950                           
  1951                           ;eusart1.c: 116: PIE1bits.RC1IE = 1;
  1952  000BE4  8A9D               	bsf	3997,5,c	;volatile
  1953  000BE6  0012               	return	
  1954  000BE8                     __end_of_EUSART1_Initialize:
  1955                           	opt stack 0
  1956                           tblptru	equ	0xFF8
  1957                           tblptrh	equ	0xFF7
  1958                           tblptrl	equ	0xFF6
  1959                           tablat	equ	0xFF5
  1960                           prodh	equ	0xFF4
  1961                           prodl	equ	0xFF3
  1962                           intcon	equ	0xFF2
  1963                           intcon2	equ	0xFF1
  1964                           postinc0	equ	0xFEE
  1965                           wreg	equ	0xFE8
  1966                           indf2	equ	0xFDF
  1967                           postinc2	equ	0xFDE
  1968                           postdec2	equ	0xFDD
  1969                           fsr2h	equ	0xFDA
  1970                           fsr2l	equ	0xFD9
  1971                           status	equ	0xFD8
  1972                           
  1973 ;; *************** function _ADC_Initialize *****************
  1974 ;; Defined at:
  1975 ;;		line 59 in file "mcc_generated_files/adc.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;		None
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;		None               void
  1982 ;; Registers used:
  1983 ;;		wreg, status,2
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1989 ;;      Params:         0       0       0       0       0       0       0
  1990 ;;      Locals:         0       0       0       0       0       0       0
  1991 ;;      Temps:          0       0       0       0       0       0       0
  1992 ;;      Totals:         0       0       0       0       0       0       0
  1993 ;;Total ram usage:        0 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; Hardware stack levels required when called:    3
  1996 ;; This function calls:
  1997 ;;		Nothing
  1998 ;; This function is called by:
  1999 ;;		_SYSTEM_Initialize
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text14
  2004  000D22                     __ptext14:
  2005                           	opt stack 0
  2006  000D22                     _ADC_Initialize:
  2007                           	opt stack 26
  2008                           
  2009                           ;adc.c: 64: ADCON0 = 0x01;
  2010                           
  2011                           ;incstack = 0
  2012  000D22  0E01               	movlw	1
  2013  000D24  6EC2               	movwf	4034,c	;volatile
  2014                           
  2015                           ;adc.c: 67: ADCON1 = 0x80;
  2016  000D26  0E80               	movlw	128
  2017  000D28  6EC1               	movwf	4033,c	;volatile
  2018                           
  2019                           ;adc.c: 70: ADCON2 = 0x05;
  2020  000D2A  0E05               	movlw	5
  2021  000D2C  6EC0               	movwf	4032,c	;volatile
  2022                           
  2023                           ;adc.c: 73: ADRESL = 0x00;
  2024  000D2E  0E00               	movlw	0
  2025  000D30  6EC3               	movwf	4035,c	;volatile
  2026                           
  2027                           ;adc.c: 76: ADRESH = 0x00;
  2028  000D32  0E00               	movlw	0
  2029  000D34  6EC4               	movwf	4036,c	;volatile
  2030                           
  2031                           ;adc.c: 79: PIE1bits.ADIE = 1;
  2032  000D36  8C9D               	bsf	3997,6,c	;volatile
  2033  000D38  0012               	return	
  2034  000D3A                     __end_of_ADC_Initialize:
  2035                           	opt stack 0
  2036                           tblptru	equ	0xFF8
  2037                           tblptrh	equ	0xFF7
  2038                           tblptrl	equ	0xFF6
  2039                           tablat	equ	0xFF5
  2040                           prodh	equ	0xFF4
  2041                           prodl	equ	0xFF3
  2042                           intcon	equ	0xFF2
  2043                           intcon2	equ	0xFF1
  2044                           postinc0	equ	0xFEE
  2045                           wreg	equ	0xFE8
  2046                           indf2	equ	0xFDF
  2047                           postinc2	equ	0xFDE
  2048                           postdec2	equ	0xFDD
  2049                           fsr2h	equ	0xFDA
  2050                           fsr2l	equ	0xFD9
  2051                           status	equ	0xFD8
  2052                           
  2053 ;; *************** function _ADC_GetConversion *****************
  2054 ;; Defined at:
  2055 ;;		line 107 in file "mcc_generated_files/adc.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;  channel         1    wreg     enum E8837
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;  channel         1   24[COMRAM] enum E8837
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  2   20[COMRAM] unsigned int 
  2062 ;; Registers used:
  2063 ;;		wreg, status,2, status,0
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2069 ;;      Params:         2       0       0       0       0       0       0
  2070 ;;      Locals:         1       0       0       0       0       0       0
  2071 ;;      Temps:          2       0       0       0       0       0       0
  2072 ;;      Totals:         5       0       0       0       0       0       0
  2073 ;;Total ram usage:        5 bytes
  2074 ;; Hardware stack levels used:    1
  2075 ;; Hardware stack levels required when called:    3
  2076 ;; This function calls:
  2077 ;;		Nothing
  2078 ;; This function is called by:
  2079 ;;		_main
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           	psect	text15
  2084  000C1C                     __ptext15:
  2085                           	opt stack 0
  2086  000C1C                     _ADC_GetConversion:
  2087                           	opt stack 27
  2088                           
  2089                           ;incstack = 0
  2090                           ;ADC_GetConversion@channel stored from wreg
  2091  000C1C  6E19               	movwf	ADC_GetConversion@channel,c
  2092                           
  2093                           ;adc.c: 110: ADCON0bits.CHS = channel;
  2094  000C1E  C019  F017         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  2095  000C22  4617               	rlncf	??_ADC_GetConversion,f,c
  2096  000C24  4617               	rlncf	??_ADC_GetConversion,f,c
  2097  000C26  50C2               	movf	4034,w,c	;volatile
  2098  000C28  1817               	xorwf	??_ADC_GetConversion,w,c
  2099  000C2A  0B83               	andlw	-125
  2100  000C2C  1817               	xorwf	??_ADC_GetConversion,w,c
  2101  000C2E  6EC2               	movwf	4034,c	;volatile
  2102                           
  2103                           ;adc.c: 113: ADCON0bits.ADON = 1;
  2104  000C30  80C2               	bsf	4034,0,c	;volatile
  2105                           
  2106                           ;adc.c: 117: ADCON0bits.GO_nDONE = 1;
  2107  000C32  82C2               	bsf	4034,1,c	;volatile
  2108  000C34                     l296:
  2109  000C34  B2C2               	btfsc	4034,1,c	;volatile
  2110  000C36  D7FE               	goto	l296
  2111                           
  2112                           ;adc.c: 122: }
  2113                           ;adc.c: 125: return ((ADRESH << 8) + ADRESL);
  2114  000C38  50C4               	movf	4036,w,c	;volatile
  2115  000C3A  6E18               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  2116  000C3C  6A17               	clrf	??_ADC_GetConversion& (0+255),c
  2117  000C3E  50C3               	movf	4035,w,c	;volatile
  2118  000C40  2417               	addwf	??_ADC_GetConversion,w,c
  2119  000C42  6E15               	movwf	?_ADC_GetConversion,c
  2120  000C44  0E00               	movlw	0
  2121  000C46  2018               	addwfc	??_ADC_GetConversion+1,w,c
  2122  000C48  6E16               	movwf	?_ADC_GetConversion+1,c
  2123  000C4A  0012               	return	
  2124  000C4C                     __end_of_ADC_GetConversion:
  2125                           	opt stack 0
  2126                           tblptru	equ	0xFF8
  2127                           tblptrh	equ	0xFF7
  2128                           tblptrl	equ	0xFF6
  2129                           tablat	equ	0xFF5
  2130                           prodh	equ	0xFF4
  2131                           prodl	equ	0xFF3
  2132                           intcon	equ	0xFF2
  2133                           intcon2	equ	0xFF1
  2134                           postinc0	equ	0xFEE
  2135                           wreg	equ	0xFE8
  2136                           indf2	equ	0xFDF
  2137                           postinc2	equ	0xFDE
  2138                           postdec2	equ	0xFDD
  2139                           fsr2h	equ	0xFDA
  2140                           fsr2l	equ	0xFD9
  2141                           status	equ	0xFD8
  2142                           
  2143 ;; *************** function _INTERRUPT_InterruptManager *****************
  2144 ;; Defined at:
  2145 ;;		line 73 in file "mcc_generated_files/interrupt_manager.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;		None
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;		None
  2150 ;; Return value:  Size  Location     Type
  2151 ;;		None               void
  2152 ;; Registers used:
  2153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2159 ;;      Params:         0       0       0       0       0       0       0
  2160 ;;      Locals:         0       0       0       0       0       0       0
  2161 ;;      Temps:         14       0       0       0       0       0       0
  2162 ;;      Totals:        14       0       0       0       0       0       0
  2163 ;;Total ram usage:       14 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    2
  2166 ;; This function calls:
  2167 ;;		_ADC_ISR
  2168 ;;		_EUSART1_Receive_ISR
  2169 ;;		_EUSART1_Transmit_ISR
  2170 ;;		_I2C1_BusCollisionISR
  2171 ;;		_I2C1_ISR
  2172 ;;		_TMR0_ISR
  2173 ;; This function is called by:
  2174 ;;		Interrupt level 2
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	intcode
  2179  000008                     __pintcode:
  2180                           	opt stack 0
  2181  000008                     _INTERRUPT_InterruptManager:
  2182                           	opt stack 25
  2183                           
  2184                           ;incstack = 0
  2185  000008  CFFA F007          	movff	pclath,??_INTERRUPT_InterruptManager
  2186  00000C  CFFB F008          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2187  000010  CFE9 F009          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2188  000014  CFEA F00A          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2189  000018  CFE1 F00B          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2190  00001C  CFE2 F00C          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2191  000020  CFD9 F00D          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2192  000024  CFDA F00E          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2193  000028  CFF3 F00F          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2194  00002C  CFF4 F010          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2195  000030  CFF6 F011          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2196  000034  CFF7 F012          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2197  000038  CFF8 F013          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2198  00003C  CFF5 F014          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2199                           
  2200                           ;interrupt_manager.c: 76: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  2201  000040  BA9D               	btfsc	3997,5,c	;volatile
  2202  000042  AA9E               	btfss	3998,5,c	;volatile
  2203  000044  D003               	goto	i2l375
  2204                           
  2205                           ;interrupt_manager.c: 77: {
  2206                           ;interrupt_manager.c: 78: EUSART1_Receive_ISR();
  2207  000046  EC26  F006         	call	_EUSART1_Receive_ISR	;wreg free
  2208                           
  2209                           ;interrupt_manager.c: 79: }
  2210  00004A  D01D               	goto	i2l387
  2211  00004C                     i2l375:
  2212                           
  2213                           ;interrupt_manager.c: 80: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  2214  00004C  B89D               	btfsc	3997,4,c	;volatile
  2215  00004E  A89E               	btfss	3998,4,c	;volatile
  2216  000050  D003               	goto	i2l377
  2217                           
  2218                           ;interrupt_manager.c: 81: {
  2219                           ;interrupt_manager.c: 82: EUSART1_Transmit_ISR();
  2220  000052  ECF4  F005         	call	_EUSART1_Transmit_ISR	;wreg free
  2221                           
  2222                           ;interrupt_manager.c: 83: }
  2223  000056  D017               	goto	i2l387
  2224  000058                     i2l377:
  2225                           
  2226                           ;interrupt_manager.c: 84: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  2227  000058  BAF2               	btfsc	intcon,5,c	;volatile
  2228  00005A  A4F2               	btfss	intcon,2,c	;volatile
  2229  00005C  D003               	goto	i2l379
  2230                           
  2231                           ;interrupt_manager.c: 85: {
  2232                           ;interrupt_manager.c: 86: TMR0_ISR();
  2233  00005E  EC84  F006         	call	_TMR0_ISR	;wreg free
  2234                           
  2235                           ;interrupt_manager.c: 87: }
  2236  000062  D011               	goto	i2l387
  2237  000064                     i2l379:
  2238                           
  2239                           ;interrupt_manager.c: 88: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  2240  000064  BC9D               	btfsc	3997,6,c	;volatile
  2241  000066  AC9E               	btfss	3998,6,c	;volatile
  2242  000068  D003               	goto	i2l381
  2243                           
  2244                           ;interrupt_manager.c: 89: {
  2245                           ;interrupt_manager.c: 90: ADC_ISR();
  2246  00006A  ECC1  F006         	call	_ADC_ISR	;wreg free
  2247                           
  2248                           ;interrupt_manager.c: 91: }
  2249  00006E  D00B               	goto	i2l387
  2250  000070                     i2l381:
  2251                           
  2252                           ;interrupt_manager.c: 92: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
  2253  000070  B69D               	btfsc	3997,3,c	;volatile
  2254  000072  A69E               	btfss	3998,3,c	;volatile
  2255  000074  D003               	goto	i2l383
  2256                           
  2257                           ;interrupt_manager.c: 93: {
  2258                           ;interrupt_manager.c: 94: I2C1_ISR();
  2259  000076  EC0E  F003         	call	_I2C1_ISR	;wreg free
  2260                           
  2261                           ;interrupt_manager.c: 95: }
  2262  00007A  D005               	goto	i2l387
  2263  00007C                     i2l383:
  2264                           
  2265                           ;interrupt_manager.c: 96: else if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  2266  00007C  B6A0               	btfsc	4000,3,c	;volatile
  2267  00007E  A6A1               	btfss	4001,3,c	;volatile
  2268  000080  D002               	goto	i2l387
  2269                           
  2270                           ;interrupt_manager.c: 97: {
  2271                           ;interrupt_manager.c: 98: I2C1_BusCollisionISR();
  2272  000082  ECC3  F006         	call	_I2C1_BusCollisionISR	;wreg free
  2273  000086                     i2l387:
  2274  000086  C014  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  2275  00008A  C013  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  2276  00008E  C012  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  2277  000092  C011  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  2278  000096  C010  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  2279  00009A  C00F  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  2280  00009E  C00E  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  2281  0000A2  C00D  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  2282  0000A6  C00C  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  2283  0000AA  C00B  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  2284  0000AE  C00A  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  2285  0000B2  C009  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  2286  0000B6  C008  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2287  0000BA  C007  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2288  0000BE  0011               	retfie		f
  2289  0000C0                     __end_of_INTERRUPT_InterruptManager:
  2290                           	opt stack 0
  2291                           pclatu	equ	0xFFB
  2292                           pclath	equ	0xFFA
  2293                           tblptru	equ	0xFF8
  2294                           tblptrh	equ	0xFF7
  2295                           tblptrl	equ	0xFF6
  2296                           tablat	equ	0xFF5
  2297                           prodh	equ	0xFF4
  2298                           prodl	equ	0xFF3
  2299                           intcon	equ	0xFF2
  2300                           intcon2	equ	0xFF1
  2301                           postinc0	equ	0xFEE
  2302                           fsr0h	equ	0xFEA
  2303                           fsr0l	equ	0xFE9
  2304                           wreg	equ	0xFE8
  2305                           fsr1h	equ	0xFE2
  2306                           fsr1l	equ	0xFE1
  2307                           indf2	equ	0xFDF
  2308                           postinc2	equ	0xFDE
  2309                           postdec2	equ	0xFDD
  2310                           fsr2h	equ	0xFDA
  2311                           fsr2l	equ	0xFD9
  2312                           status	equ	0xFD8
  2313                           
  2314 ;; *************** function _TMR0_ISR *****************
  2315 ;; Defined at:
  2316 ;;		line 132 in file "mcc_generated_files/tmr0.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;		None
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;		None
  2321 ;; Return value:  Size  Location     Type
  2322 ;;		None               void
  2323 ;; Registers used:
  2324 ;;		wreg, status,2, cstack
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2330 ;;      Params:         0       0       0       0       0       0       0
  2331 ;;      Locals:         0       0       0       0       0       0       0
  2332 ;;      Temps:          3       0       0       0       0       0       0
  2333 ;;      Totals:         3       0       0       0       0       0       0
  2334 ;;Total ram usage:        3 bytes
  2335 ;; Hardware stack levels used:    1
  2336 ;; Hardware stack levels required when called:    1
  2337 ;; This function calls:
  2338 ;;		_TMR0_CallBack
  2339 ;; This function is called by:
  2340 ;;		_INTERRUPT_InterruptManager
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           	psect	text17
  2345  000D08                     __ptext17:
  2346                           	opt stack 0
  2347  000D08                     _TMR0_ISR:
  2348                           	opt stack 25
  2349                           
  2350                           ;tmr0.c: 136: INTCONbits.TMR0IF = 0;
  2351                           
  2352                           ;incstack = 0
  2353  000D08  94F2               	bcf	intcon,2,c	;volatile
  2354                           
  2355                           ;tmr0.c: 140: TMR0H = timer0ReloadVal16bit >> 8;
  2356  000D0A  C04A  F001         	movff	_timer0ReloadVal16bit+1,??_TMR0_ISR	;volatile
  2357  000D0E  C001  F002         	movff	??_TMR0_ISR,??_TMR0_ISR+1
  2358  000D12  6A03               	clrf	(??_TMR0_ISR+2)& (0+255),c
  2359  000D14  5002               	movf	??_TMR0_ISR+1,w,c
  2360  000D16  6ED7               	movwf	4055,c	;volatile
  2361                           
  2362                           ;tmr0.c: 141: TMR0L = (uint8_t) timer0ReloadVal16bit;
  2363  000D18  C049  FFD6         	movff	_timer0ReloadVal16bit,4054	;volatile
  2364                           
  2365                           ;tmr0.c: 145: TMR0_CallBack();
  2366  000D1C  ECBF  F006         	call	_TMR0_CallBack	;wreg free
  2367  000D20  0012               	return	
  2368  000D22                     __end_of_TMR0_ISR:
  2369                           	opt stack 0
  2370                           pclatu	equ	0xFFB
  2371                           pclath	equ	0xFFA
  2372                           tblptru	equ	0xFF8
  2373                           tblptrh	equ	0xFF7
  2374                           tblptrl	equ	0xFF6
  2375                           tablat	equ	0xFF5
  2376                           prodh	equ	0xFF4
  2377                           prodl	equ	0xFF3
  2378                           intcon	equ	0xFF2
  2379                           intcon2	equ	0xFF1
  2380                           postinc0	equ	0xFEE
  2381                           fsr0h	equ	0xFEA
  2382                           fsr0l	equ	0xFE9
  2383                           wreg	equ	0xFE8
  2384                           fsr1h	equ	0xFE2
  2385                           fsr1l	equ	0xFE1
  2386                           indf2	equ	0xFDF
  2387                           postinc2	equ	0xFDE
  2388                           postdec2	equ	0xFDD
  2389                           fsr2h	equ	0xFDA
  2390                           fsr2l	equ	0xFD9
  2391                           status	equ	0xFD8
  2392                           
  2393 ;; *************** function _TMR0_CallBack *****************
  2394 ;; Defined at:
  2395 ;;		line 150 in file "mcc_generated_files/tmr0.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;		None
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;		None
  2400 ;; Return value:  Size  Location     Type
  2401 ;;		None               void
  2402 ;; Registers used:
  2403 ;;		None
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2409 ;;      Params:         0       0       0       0       0       0       0
  2410 ;;      Locals:         0       0       0       0       0       0       0
  2411 ;;      Temps:          0       0       0       0       0       0       0
  2412 ;;      Totals:         0       0       0       0       0       0       0
  2413 ;;Total ram usage:        0 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; This function calls:
  2416 ;;		Nothing
  2417 ;; This function is called by:
  2418 ;;		_TMR0_ISR
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           	psect	text18
  2423  000D7E                     __ptext18:
  2424                           	opt stack 0
  2425  000D7E                     _TMR0_CallBack:
  2426                           	opt stack 25
  2427                           
  2428                           ;incstack = 0
  2429                           ;tmr0.c: 152: do { LATA3 = ~LATA3; } while(0);
  2430  000D7E  7689               	btg	3977,3,c	;volatile
  2431  000D80  0012               	return	
  2432  000D82                     __end_of_TMR0_CallBack:
  2433                           	opt stack 0
  2434                           pclatu	equ	0xFFB
  2435                           pclath	equ	0xFFA
  2436                           tblptru	equ	0xFF8
  2437                           tblptrh	equ	0xFF7
  2438                           tblptrl	equ	0xFF6
  2439                           tablat	equ	0xFF5
  2440                           prodh	equ	0xFF4
  2441                           prodl	equ	0xFF3
  2442                           intcon	equ	0xFF2
  2443                           intcon2	equ	0xFF1
  2444                           postinc0	equ	0xFEE
  2445                           fsr0h	equ	0xFEA
  2446                           fsr0l	equ	0xFE9
  2447                           wreg	equ	0xFE8
  2448                           fsr1h	equ	0xFE2
  2449                           fsr1l	equ	0xFE1
  2450                           indf2	equ	0xFDF
  2451                           postinc2	equ	0xFDE
  2452                           postdec2	equ	0xFDD
  2453                           fsr2h	equ	0xFDA
  2454                           fsr2l	equ	0xFD9
  2455                           status	equ	0xFD8
  2456                           
  2457 ;; *************** function _I2C1_ISR *****************
  2458 ;; Defined at:
  2459 ;;		line 234 in file "mcc_generated_files/i2c1.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;		None
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;		None
  2464 ;; Return value:  Size  Location     Type
  2465 ;;		None               void
  2466 ;; Registers used:
  2467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2473 ;;      Params:         0       0       0       0       0       0       0
  2474 ;;      Locals:         0       0       0       0       0       0       0
  2475 ;;      Temps:          3       0       0       0       0       0       0
  2476 ;;      Totals:         3       0       0       0       0       0       0
  2477 ;;Total ram usage:        3 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:    1
  2480 ;; This function calls:
  2481 ;;		_I2C1_FunctionComplete
  2482 ;;		_I2C1_Stop
  2483 ;; This function is called by:
  2484 ;;		_INTERRUPT_InterruptManager
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text19
  2489  00061C                     __ptext19:
  2490                           	opt stack 0
  2491  00061C                     _I2C1_ISR:
  2492                           	opt stack 25
  2493                           
  2494                           ;i2c1.c: 237: static uint8_t *pi2c_buf_ptr;
  2495                           ;i2c1.c: 238: static uint16_t i2c_address = 0;
  2496                           ;i2c1.c: 239: static uint8_t i2c_bytes_left = 0;
  2497                           ;i2c1.c: 240: static uint8_t i2c_10bit_address_restart = 0;
  2498                           ;i2c1.c: 242: PIR1bits.SSP1IF = 0;
  2499                           
  2500                           ;incstack = 0
  2501  00061C  969E               	bcf	3998,3,c	;volatile
  2502                           
  2503                           ;i2c1.c: 246: if(SSP1CON1bits.WCOL)
  2504  00061E  AEC6               	btfss	4038,7,c	;volatile
  2505  000620  D103               	goto	i2l1750
  2506                           
  2507                           ;i2c1.c: 247: {
  2508                           ;i2c1.c: 249: SSP1CON1bits.WCOL = 0;
  2509  000622  9EC6               	bcf	4038,7,c	;volatile
  2510                           
  2511                           ;i2c1.c: 250: i2c1_state = S_MASTER_IDLE;
  2512  000624  0E00               	movlw	0
  2513  000626  6E32               	movwf	_i2c1_state,c
  2514                           
  2515                           ;i2c1.c: 251: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
  2516  000628  EE20 F003          	lfsr	2,3
  2517  00062C  5027               	movf	_p_i2c1_current,w,c
  2518  00062E  26D9               	addwf	fsr2l,f,c
  2519  000630  5028               	movf	_p_i2c1_current+1,w,c
  2520  000632  22DA               	addwfc	fsr2h,f,c
  2521  000634  CFDE F004          	movff	postinc2,??_I2C1_ISR
  2522  000638  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
  2523  00063C  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
  2524  000640  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
  2525  000644  0E01               	movlw	1
  2526  000646  6EDF               	movwf	indf2,c
  2527                           
  2528                           ;i2c1.c: 254: p_i2c1_current = (0);
  2529  000648  0E00               	movlw	0
  2530  00064A  6E28               	movwf	_p_i2c1_current+1,c
  2531  00064C  0E00               	movlw	0
  2532  00064E  6E27               	movwf	_p_i2c1_current,c
  2533  000650  0012               	return	
  2534  000652                     i2l60:
  2535                           
  2536                           ;i2c1.c: 264: if(i2c1_object.trStatus.s.empty != 1)
  2537  000652  B246               	btfsc	_i2c1_object+4,1,c
  2538  000654  0012               	return	
  2539                           
  2540                           ;i2c1.c: 265: {
  2541                           ;i2c1.c: 267: p_i2c1_current = i2c1_object.pTrHead;
  2542  000656  C045  F028         	movff	_i2c1_object+3,_p_i2c1_current+1
  2543  00065A  C044  F027         	movff	_i2c1_object+2,_p_i2c1_current
  2544                           
  2545                           ;i2c1.c: 268: i2c1_trb_count = i2c1_object.pTrHead->count;
  2546  00065E  C044  FFD9         	movff	_i2c1_object+2,fsr2l
  2547  000662  C045  FFDA         	movff	_i2c1_object+3,fsr2h
  2548  000666  50DF               	movf	indf2,w,c
  2549  000668  6E33               	movwf	_i2c1_trb_count,c
  2550                           
  2551                           ;i2c1.c: 269: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
  2552  00066A  EE20 F001          	lfsr	2,1
  2553  00066E  5044               	movf	_i2c1_object+2,w,c
  2554  000670  26D9               	addwf	fsr2l,f,c
  2555  000672  5045               	movf	_i2c1_object+3,w,c
  2556  000674  22DA               	addwfc	fsr2h,f,c
  2557  000676  CFDE F029          	movff	postinc2,_p_i2c1_trb_current
  2558  00067A  CFDD F02A          	movff	postdec2,_p_i2c1_trb_current+1
  2559                           
  2560                           ;i2c1.c: 271: i2c1_object.pTrHead++;
  2561  00067E  0E06               	movlw	6
  2562  000680  2644               	addwf	_i2c1_object+2,f,c
  2563  000682  0E00               	movlw	0
  2564  000684  2245               	addwfc	_i2c1_object+3,f,c
  2565                           
  2566                           ;i2c1.c: 274: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
  2567  000686  0E40               	movlw	low (_i2c1_tr_queue+6)
  2568  000688  6E04               	movwf	??_I2C1_ISR& (0+255),c
  2569  00068A  0E00               	movlw	high (_i2c1_tr_queue+6)
  2570  00068C  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
  2571  00068E  EE20  F044         	lfsr	2,_i2c1_object+2
  2572  000692  52DE               	movf	postinc2,f,c
  2573  000694  5005               	movf	??_I2C1_ISR+1,w,c
  2574  000696  18DD               	xorwf	postdec2,w,c
  2575  000698  C004  FFE8         	movff	??_I2C1_ISR,wreg
  2576  00069C  B4D8               	btfsc	status,2,c
  2577  00069E  18DF               	xorwf	indf2,w,c
  2578  0006A0  A4D8               	btfss	status,2,c
  2579  0006A2  D004               	goto	i2l1640
  2580                           
  2581                           ;i2c1.c: 275: {
  2582                           ;i2c1.c: 277: i2c1_object.pTrHead = i2c1_tr_queue;
  2583  0006A4  0E00               	movlw	high _i2c1_tr_queue
  2584  0006A6  6E45               	movwf	_i2c1_object+3,c
  2585  0006A8  0E3A               	movlw	low _i2c1_tr_queue
  2586  0006AA  6E44               	movwf	_i2c1_object+2,c
  2587  0006AC                     i2l1640:
  2588                           
  2589                           ;i2c1.c: 278: }
  2590                           ;i2c1.c: 282: i2c1_object.trStatus.s.full = 0;
  2591  0006AC  9046               	bcf	_i2c1_object+4,0,c
  2592                           
  2593                           ;i2c1.c: 285: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
  2594  0006AE  EE20  F044         	lfsr	2,_i2c1_object+2
  2595  0006B2  52DE               	movf	postinc2,f,c
  2596  0006B4  5043               	movf	_i2c1_object+1,w,c
  2597  0006B6  18DD               	xorwf	postdec2,w,c
  2598  0006B8  C042  FFE8         	movff	_i2c1_object,wreg
  2599  0006BC  B4D8               	btfsc	status,2,c
  2600  0006BE  18DF               	xorwf	indf2,w,c
  2601  0006C0  B4D8               	btfsc	status,2,c
  2602                           
  2603                           ;i2c1.c: 286: {
  2604                           ;i2c1.c: 288: i2c1_object.trStatus.s.empty = 1;
  2605  0006C2  8246               	bsf	_i2c1_object+4,1,c
  2606                           
  2607                           ;i2c1.c: 289: }
  2608                           ;i2c1.c: 292: SSP1CON2bits.SEN = 1;
  2609  0006C4  80C5               	bsf	4037,0,c	;volatile
  2610                           
  2611                           ;i2c1.c: 295: i2c1_state = S_MASTER_SEND_ADDR;
  2612  0006C6  0E02               	movlw	2
  2613  0006C8  6E32               	movwf	_i2c1_state,c
  2614  0006CA  0012               	return	
  2615  0006CC                     i2l65:
  2616                           
  2617                           ;i2c1.c: 305: SSP1CON2bits.RSEN = 1;
  2618  0006CC  82C5               	bsf	4037,1,c	;volatile
  2619                           
  2620                           ;i2c1.c: 308: i2c1_state = S_MASTER_SEND_ADDR;
  2621  0006CE  0E02               	movlw	2
  2622  0006D0  6E32               	movwf	_i2c1_state,c
  2623                           
  2624                           ;i2c1.c: 310: break;
  2625  0006D2  0012               	return	
  2626  0006D4                     i2l66:
  2627                           
  2628                           ;i2c1.c: 314: if(SSP1CON2bits.ACKSTAT)
  2629  0006D4  ACC5               	btfss	4037,6,c	;volatile
  2630  0006D6  D005               	goto	i2l1654
  2631                           
  2632                           ;i2c1.c: 315: {
  2633                           ;i2c1.c: 316: i2c1_object.i2cErrors++;
  2634  0006D8  2A48               	incf	_i2c1_object+6,f,c
  2635                           
  2636                           ;i2c1.c: 317: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  2637  0006DA  0E04               	movlw	4
  2638  0006DC  ECB7  F005         	call	_I2C1_Stop
  2639                           
  2640                           ;i2c1.c: 318: }
  2641  0006E0  0012               	return	
  2642  0006E2                     i2l1654:
  2643                           
  2644                           ;i2c1.c: 319: else
  2645                           ;i2c1.c: 320: {
  2646                           ;i2c1.c: 322: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  2647  0006E2  90D8               	bcf	status,0,c
  2648  0006E4  3041               	rrcf	I2C1_ISR@i2c_address+1,w,c
  2649  0006E6  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
  2650  0006E8  3040               	rrcf	I2C1_ISR@i2c_address,w,c
  2651  0006EA  6E04               	movwf	??_I2C1_ISR& (0+255),c
  2652  0006EC  5004               	movf	??_I2C1_ISR,w,c
  2653  0006EE  6EC9               	movwf	4041,c	;volatile
  2654                           
  2655                           ;i2c1.c: 325: if(i2c_address & 0x01)
  2656  0006F0  A040               	btfss	I2C1_ISR@i2c_address,0,c
  2657  0006F2  D003               	goto	i2l1660
  2658                           
  2659                           ;i2c1.c: 326: {
  2660                           ;i2c1.c: 329: i2c1_state = S_MASTER_10BIT_RESTART;
  2661  0006F4  0E0B               	movlw	11
  2662  0006F6  6E32               	movwf	_i2c1_state,c
  2663                           
  2664                           ;i2c1.c: 330: }
  2665  0006F8  0012               	return	
  2666  0006FA                     i2l1660:
  2667                           
  2668                           ;i2c1.c: 331: else
  2669                           ;i2c1.c: 332: {
  2670                           ;i2c1.c: 334: i2c1_state = S_MASTER_SEND_DATA;
  2671  0006FA  0E03               	movlw	3
  2672  0006FC  6E32               	movwf	_i2c1_state,c
  2673  0006FE  0012               	return	
  2674  000700                     i2l71:
  2675                           
  2676                           ;i2c1.c: 342: if(SSP1CON2bits.ACKSTAT)
  2677  000700  ACC5               	btfss	4037,6,c	;volatile
  2678  000702  D005               	goto	i2l72
  2679                           
  2680                           ;i2c1.c: 343: {
  2681                           ;i2c1.c: 344: i2c1_object.i2cErrors++;
  2682  000704  2A48               	incf	_i2c1_object+6,f,c
  2683                           
  2684                           ;i2c1.c: 345: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  2685  000706  0E04               	movlw	4
  2686  000708  ECB7  F005         	call	_I2C1_Stop
  2687                           
  2688                           ;i2c1.c: 346: }
  2689  00070C  0012               	return	
  2690  00070E                     i2l72:
  2691                           
  2692                           ;i2c1.c: 347: else
  2693                           ;i2c1.c: 348: {
  2694                           ;i2c1.c: 351: SSP1CON2bits.RSEN = 1;
  2695  00070E  82C5               	bsf	4037,1,c	;volatile
  2696                           
  2697                           ;i2c1.c: 355: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  2698  000710  C041  F004         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR
  2699  000714  C004  F005         	movff	??_I2C1_ISR,??_I2C1_ISR+1
  2700  000718  6A06               	clrf	(??_I2C1_ISR+2)& (0+255),c
  2701  00071A  0E06               	movlw	6
  2702  00071C  1605               	andwf	??_I2C1_ISR+1,f,c
  2703  00071E  0E00               	movlw	0
  2704  000720  1606               	andwf	??_I2C1_ISR+2,f,c
  2705  000722  0EF0               	movlw	240
  2706  000724  1005               	iorwf	??_I2C1_ISR+1,w,c
  2707  000726  6E40               	movwf	I2C1_ISR@i2c_address,c
  2708  000728  5006               	movf	??_I2C1_ISR+2,w,c
  2709  00072A  6E41               	movwf	I2C1_ISR@i2c_address+1,c
  2710                           
  2711                           ;i2c1.c: 358: i2c_address |= 0x0001;
  2712  00072C  8040               	bsf	I2C1_ISR@i2c_address,0,c
  2713                           
  2714                           ;i2c1.c: 361: i2c_10bit_address_restart = 1;
  2715  00072E  0E01               	movlw	1
  2716  000730  6E2B               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
  2717                           
  2718                           ;i2c1.c: 364: i2c1_state = S_MASTER_SEND_ADDR;
  2719  000732  0E02               	movlw	2
  2720  000734  6E32               	movwf	_i2c1_state,c
  2721  000736  0012               	return	
  2722  000738                     i2l1674:
  2723                           
  2724                           ;i2c1.c: 382: if(i2c_10bit_address_restart != 1)
  2725  000738  042B               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
  2726  00073A  B4D8               	btfsc	status,2,c
  2727  00073C  D01A               	goto	i2l76
  2728                           
  2729                           ;i2c1.c: 383: {
  2730                           ;i2c1.c: 385: i2c_address = p_i2c1_trb_current->address;
  2731  00073E  C029  FFD9         	movff	_p_i2c1_trb_current,fsr2l
  2732  000742  C02A  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
  2733  000746  CFDE F040          	movff	postinc2,I2C1_ISR@i2c_address
  2734  00074A  CFDD F041          	movff	postdec2,I2C1_ISR@i2c_address+1
  2735                           
  2736                           ;i2c1.c: 386: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
  2737  00074E  EE20 F003          	lfsr	2,3
  2738  000752  5029               	movf	_p_i2c1_trb_current,w,c
  2739  000754  26D9               	addwf	fsr2l,f,c
  2740  000756  502A               	movf	_p_i2c1_trb_current+1,w,c
  2741  000758  22DA               	addwfc	fsr2h,f,c
  2742  00075A  CFDE F025          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
  2743  00075E  CFDD F026          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
  2744                           
  2745                           ;i2c1.c: 387: i2c_bytes_left = p_i2c1_trb_current->length;
  2746  000762  EE20 F002          	lfsr	2,2
  2747  000766  5029               	movf	_p_i2c1_trb_current,w,c
  2748  000768  26D9               	addwf	fsr2l,f,c
  2749  00076A  502A               	movf	_p_i2c1_trb_current+1,w,c
  2750  00076C  22DA               	addwfc	fsr2h,f,c
  2751  00076E  50DF               	movf	indf2,w,c
  2752  000770  6E2C               	movwf	I2C1_ISR@i2c_bytes_left,c
  2753  000772                     i2l76:
  2754                           
  2755                           ;i2c1.c: 410: else
  2756                           ;i2c1.c: 411: {
  2757                           ;i2c1.c: 413: SSP1BUF = i2c_address;
  2758  000772  C040  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
  2759                           
  2760                           ;i2c1.c: 414: if(i2c_address & 0x01)
  2761  000776  A040               	btfss	I2C1_ISR@i2c_address,0,c
  2762  000778  D003               	goto	i2l1694
  2763                           
  2764                           ;i2c1.c: 415: {
  2765                           ;i2c1.c: 417: i2c1_state = S_MASTER_ACK_ADDR;
  2766  00077A  0E05               	movlw	5
  2767  00077C  6E32               	movwf	_i2c1_state,c
  2768                           
  2769                           ;i2c1.c: 418: }
  2770  00077E  0012               	return	
  2771  000780                     i2l1694:
  2772                           
  2773                           ;i2c1.c: 419: else
  2774                           ;i2c1.c: 420: {
  2775                           ;i2c1.c: 422: i2c1_state = S_MASTER_SEND_DATA;
  2776  000780  0E03               	movlw	3
  2777  000782  6E32               	movwf	_i2c1_state,c
  2778  000784  0012               	return	
  2779  000786                     i2l82:
  2780                           
  2781                           ;i2c1.c: 430: if(SSP1CON2bits.ACKSTAT)
  2782  000786  ACC5               	btfss	4037,6,c	;volatile
  2783  000788  D006               	goto	i2l1702
  2784                           
  2785                           ;i2c1.c: 431: {
  2786                           ;i2c1.c: 433: i2c1_object.i2cErrors++;
  2787  00078A  2A48               	incf	_i2c1_object+6,f,c
  2788                           
  2789                           ;i2c1.c: 436: SSP1CON2bits.ACKSTAT = 0;
  2790  00078C  9CC5               	bcf	4037,6,c	;volatile
  2791                           
  2792                           ;i2c1.c: 439: I2C1_Stop(I2C1_DATA_NO_ACK);
  2793  00078E  0E05               	movlw	5
  2794  000790  ECB7  F005         	call	_I2C1_Stop
  2795                           
  2796                           ;i2c1.c: 441: }
  2797  000794  0012               	return	
  2798  000796                     i2l1702:
  2799                           
  2800                           ;i2c1.c: 442: else
  2801                           ;i2c1.c: 443: {
  2802                           ;i2c1.c: 445: if(i2c_bytes_left-- == 0U)
  2803  000796  062C               	decf	I2C1_ISR@i2c_bytes_left,f,c
  2804  000798  282C               	incf	I2C1_ISR@i2c_bytes_left& (0+255),w,c
  2805  00079A  A4D8               	btfss	status,2,c
  2806  00079C  D00E               	goto	i2l1712
  2807                           
  2808                           ;i2c1.c: 446: {
  2809                           ;i2c1.c: 450: p_i2c1_trb_current++;
  2810  00079E  0E06               	movlw	6
  2811  0007A0  2629               	addwf	_p_i2c1_trb_current,f,c
  2812  0007A2  0E00               	movlw	0
  2813  0007A4  222A               	addwfc	_p_i2c1_trb_current+1,f,c
  2814                           
  2815                           ;i2c1.c: 453: if(--i2c1_trb_count == 0)
  2816  0007A6  2E33               	decfsz	_i2c1_trb_count,f,c
  2817  0007A8  D004               	goto	i2l86
  2818                           
  2819                           ;i2c1.c: 454: {
  2820                           ;i2c1.c: 455: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  2821  0007AA  0E00               	movlw	0
  2822  0007AC  ECB7  F005         	call	_I2C1_Stop
  2823                           
  2824                           ;i2c1.c: 456: }
  2825  0007B0  0012               	return	
  2826  0007B2                     i2l86:
  2827                           
  2828                           ;i2c1.c: 457: else
  2829                           ;i2c1.c: 458: {
  2830                           ;i2c1.c: 465: SSP1CON2bits.RSEN = 1;
  2831  0007B2  82C5               	bsf	4037,1,c	;volatile
  2832                           
  2833                           ;i2c1.c: 468: i2c1_state = S_MASTER_SEND_ADDR;
  2834  0007B4  0E02               	movlw	2
  2835  0007B6  6E32               	movwf	_i2c1_state,c
  2836  0007B8  0012               	return	
  2837  0007BA                     i2l1712:
  2838                           
  2839                           ;i2c1.c: 472: else
  2840                           ;i2c1.c: 473: {
  2841                           ;i2c1.c: 475: SSP1BUF = *pi2c_buf_ptr++;
  2842  0007BA  C025  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  2843  0007BE  C026  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  2844  0007C2  50DF               	movf	indf2,w,c
  2845  0007C4  6EC9               	movwf	4041,c	;volatile
  2846  0007C6  4A25               	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
  2847  0007C8  2A26               	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
  2848  0007CA  0012               	return	
  2849  0007CC                     i2l89:
  2850                           
  2851                           ;i2c1.c: 483: if(SSP1CON2bits.ACKSTAT)
  2852  0007CC  ACC5               	btfss	4037,6,c	;volatile
  2853  0007CE  D006               	goto	i2l90
  2854                           
  2855                           ;i2c1.c: 484: {
  2856                           ;i2c1.c: 487: i2c1_object.i2cErrors++;
  2857  0007D0  2A48               	incf	_i2c1_object+6,f,c
  2858                           
  2859                           ;i2c1.c: 490: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  2860  0007D2  0E04               	movlw	4
  2861  0007D4  ECB7  F005         	call	_I2C1_Stop
  2862                           
  2863                           ;i2c1.c: 493: SSP1CON2bits.ACKSTAT = 0;
  2864  0007D8  9CC5               	bcf	4037,6,c	;volatile
  2865                           
  2866                           ;i2c1.c: 494: }
  2867  0007DA  0012               	return	
  2868  0007DC                     i2l90:
  2869                           
  2870                           ;i2c1.c: 495: else
  2871                           ;i2c1.c: 496: {
  2872                           ;i2c1.c: 497: SSP1CON2bits.RCEN = 1;
  2873  0007DC  86C5               	bsf	4037,3,c	;volatile
  2874                           
  2875                           ;i2c1.c: 498: i2c1_state = S_MASTER_ACK_RCV_DATA;
  2876  0007DE  0E08               	movlw	8
  2877  0007E0  6E32               	movwf	_i2c1_state,c
  2878  0007E2  0012               	return	
  2879  0007E4                     i2l1724:
  2880                           
  2881                           ;i2c1.c: 507: i2c1_state = S_MASTER_ACK_RCV_DATA;
  2882  0007E4  0E08               	movlw	8
  2883  0007E6  6E32               	movwf	_i2c1_state,c
  2884                           
  2885                           ;i2c1.c: 510: SSP1CON2bits.RCEN = 1;
  2886  0007E8  86C5               	bsf	4037,3,c	;volatile
  2887                           
  2888                           ;i2c1.c: 512: break;
  2889  0007EA  0012               	return	
  2890  0007EC                     i2l1728:
  2891                           
  2892                           ;i2c1.c: 517: *pi2c_buf_ptr++ = SSP1BUF;
  2893  0007EC  C025  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  2894  0007F0  C026  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  2895  0007F4  CFC9 FFDF          	movff	4041,indf2	;volatile
  2896  0007F8  4A25               	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
  2897  0007FA  2A26               	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
  2898                           
  2899                           ;i2c1.c: 520: if(--i2c_bytes_left)
  2900  0007FC  0E01               	movlw	1
  2901  0007FE  5E2C               	subwf	I2C1_ISR@i2c_bytes_left,f,c
  2902  000800  B4D8               	btfsc	status,2,c
  2903  000802  D004               	goto	i2l94
  2904                           
  2905                           ;i2c1.c: 521: {
  2906                           ;i2c1.c: 527: SSP1CON2bits.ACKDT = 0;
  2907  000804  9AC5               	bcf	4037,5,c	;volatile
  2908                           
  2909                           ;i2c1.c: 530: i2c1_state = S_MASTER_RCV_DATA;
  2910  000806  0E06               	movlw	6
  2911  000808  6E32               	movwf	_i2c1_state,c
  2912                           
  2913                           ;i2c1.c: 531: }
  2914  00080A  D003               	goto	i2l1740
  2915  00080C                     i2l94:
  2916                           
  2917                           ;i2c1.c: 532: else
  2918                           ;i2c1.c: 533: {
  2919                           ;i2c1.c: 537: SSP1CON2bits.ACKDT = 1;
  2920  00080C  8AC5               	bsf	4037,5,c	;volatile
  2921                           
  2922                           ;i2c1.c: 539: I2C1_FunctionComplete();
  2923  00080E  EC9D  F006         	call	_I2C1_FunctionComplete	;wreg free
  2924  000812                     i2l1740:
  2925                           
  2926                           ;i2c1.c: 540: }
  2927                           ;i2c1.c: 543: SSP1CON2bits.ACKEN = 1;
  2928  000812  88C5               	bsf	4037,4,c	;volatile
  2929                           
  2930                           ;i2c1.c: 544: break;
  2931  000814  0012               	return	
  2932  000816                     i2l1742:
  2933                           
  2934                           ;i2c1.c: 547: case S_MASTER_SEND_STOP:
  2935                           ;i2c1.c: 550: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  2936  000816  0E00               	movlw	0
  2937  000818  ECB7  F005         	call	_I2C1_Stop
  2938                           
  2939                           ;i2c1.c: 551: break;
  2940  00081C  0012               	return	
  2941  00081E                     i2l1744:
  2942                           
  2943                           ;i2c1.c: 557: i2c1_object.i2cErrors++;
  2944  00081E  2A48               	incf	_i2c1_object+6,f,c
  2945                           
  2946                           ;i2c1.c: 558: I2C1_Stop(I2C1_LOST_STATE);
  2947  000820  0E06               	movlw	6
  2948  000822  ECB7  F005         	call	_I2C1_Stop
  2949                           
  2950                           ;i2c1.c: 559: break;
  2951  000826  0012               	return	
  2952  000828                     i2l1750:
  2953  000828  5032               	movf	_i2c1_state,w,c
  2954                           
  2955                           ; Switch size 1, requested type "space"
  2956                           ; Number of cases is 11, Range of values is 0 to 11
  2957                           ; switch strategies available:
  2958                           ; Name         Instructions Cycles
  2959                           ; simple_byte           34    18 (average)
  2960                           ;	Chosen strategy is simple_byte
  2961  00082A  0A00               	xorlw	0	; case 0
  2962  00082C  B4D8               	btfsc	status,2,c
  2963  00082E  D711               	goto	i2l60
  2964  000830  0A01               	xorlw	1	; case 1
  2965  000832  B4D8               	btfsc	status,2,c
  2966  000834  D74B               	goto	i2l65
  2967  000836  0A03               	xorlw	3	; case 2
  2968  000838  B4D8               	btfsc	status,2,c
  2969  00083A  D77E               	goto	i2l1674
  2970  00083C  0A01               	xorlw	1	; case 3
  2971  00083E  B4D8               	btfsc	status,2,c
  2972  000840  D7A2               	goto	i2l82
  2973  000842  0A07               	xorlw	7	; case 4
  2974  000844  B4D8               	btfsc	status,2,c
  2975  000846  D7E7               	goto	i2l1742
  2976  000848  0A01               	xorlw	1	; case 5
  2977  00084A  B4D8               	btfsc	status,2,c
  2978  00084C  D7BF               	goto	i2l89
  2979  00084E  0A03               	xorlw	3	; case 6
  2980  000850  B4D8               	btfsc	status,2,c
  2981  000852  D7C8               	goto	i2l1724
  2982  000854  0A01               	xorlw	1	; case 7
  2983  000856  B4D8               	btfsc	status,2,c
  2984  000858  D7DE               	goto	i2l1742
  2985  00085A  0A0F               	xorlw	15	; case 8
  2986  00085C  B4D8               	btfsc	status,2,c
  2987  00085E  D7C6               	goto	i2l1728
  2988  000860  0A02               	xorlw	2	; case 10
  2989  000862  B4D8               	btfsc	status,2,c
  2990  000864  D737               	goto	i2l66
  2991  000866  0A01               	xorlw	1	; case 11
  2992  000868  B4D8               	btfsc	status,2,c
  2993  00086A  D74A               	goto	i2l71
  2994  00086C  D7D8               	goto	i2l1744
  2995  00086E                     __end_of_I2C1_ISR:
  2996                           	opt stack 0
  2997                           pclatu	equ	0xFFB
  2998                           pclath	equ	0xFFA
  2999                           tblptru	equ	0xFF8
  3000                           tblptrh	equ	0xFF7
  3001                           tblptrl	equ	0xFF6
  3002                           tablat	equ	0xFF5
  3003                           prodh	equ	0xFF4
  3004                           prodl	equ	0xFF3
  3005                           intcon	equ	0xFF2
  3006                           intcon2	equ	0xFF1
  3007                           postinc0	equ	0xFEE
  3008                           fsr0h	equ	0xFEA
  3009                           fsr0l	equ	0xFE9
  3010                           wreg	equ	0xFE8
  3011                           fsr1h	equ	0xFE2
  3012                           fsr1l	equ	0xFE1
  3013                           indf2	equ	0xFDF
  3014                           postinc2	equ	0xFDE
  3015                           postdec2	equ	0xFDD
  3016                           fsr2h	equ	0xFDA
  3017                           fsr2l	equ	0xFD9
  3018                           status	equ	0xFD8
  3019                           
  3020 ;; *************** function _I2C1_Stop *****************
  3021 ;; Defined at:
  3022 ;;		line 582 in file "mcc_generated_files/i2c1.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  completion_c    1    wreg     enum E8836
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;  completion_c    1    2[COMRAM] enum E8836
  3027 ;; Return value:  Size  Location     Type
  3028 ;;		None               void
  3029 ;; Registers used:
  3030 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3036 ;;      Params:         0       0       0       0       0       0       0
  3037 ;;      Locals:         1       0       0       0       0       0       0
  3038 ;;      Temps:          2       0       0       0       0       0       0
  3039 ;;      Totals:         3       0       0       0       0       0       0
  3040 ;;Total ram usage:        3 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; This function calls:
  3043 ;;		Nothing
  3044 ;; This function is called by:
  3045 ;;		_I2C1_ISR
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           	psect	text20
  3050  000B6E                     __ptext20:
  3051                           	opt stack 0
  3052  000B6E                     _I2C1_Stop:
  3053                           	opt stack 25
  3054                           
  3055                           ;incstack = 0
  3056                           ;I2C1_Stop@completion_code stored from wreg
  3057  000B6E  6E03               	movwf	I2C1_Stop@completion_code,c
  3058                           
  3059                           ;i2c1.c: 585: SSP1CON2bits.PEN = 1;
  3060  000B70  84C5               	bsf	4037,2,c	;volatile
  3061                           
  3062                           ;i2c1.c: 588: if (p_i2c1_current->pTrFlag != (0))
  3063  000B72  EE20 F003          	lfsr	2,3
  3064  000B76  5027               	movf	_p_i2c1_current,w,c
  3065  000B78  26D9               	addwf	fsr2l,f,c
  3066  000B7A  5028               	movf	_p_i2c1_current+1,w,c
  3067  000B7C  22DA               	addwfc	fsr2h,f,c
  3068  000B7E  50DE               	movf	postinc2,w,c
  3069  000B80  10DD               	iorwf	postdec2,w,c
  3070  000B82  B4D8               	btfsc	status,2,c
  3071  000B84  D010               	goto	i2l1604
  3072                           
  3073                           ;i2c1.c: 589: {
  3074                           ;i2c1.c: 591: *(p_i2c1_current->pTrFlag) = completion_code;
  3075  000B86  EE20 F003          	lfsr	2,3
  3076  000B8A  5027               	movf	_p_i2c1_current,w,c
  3077  000B8C  26D9               	addwf	fsr2l,f,c
  3078  000B8E  5028               	movf	_p_i2c1_current+1,w,c
  3079  000B90  22DA               	addwfc	fsr2h,f,c
  3080  000B92  CFDE F001          	movff	postinc2,??_I2C1_Stop
  3081  000B96  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
  3082  000B9A  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
  3083  000B9E  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
  3084  000BA2  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
  3085  000BA6                     i2l1604:
  3086                           
  3087                           ;i2c1.c: 592: }
  3088                           ;i2c1.c: 595: i2c1_state = S_MASTER_IDLE;
  3089  000BA6  0E00               	movlw	0
  3090  000BA8  6E32               	movwf	_i2c1_state,c
  3091  000BAA  0012               	return	
  3092  000BAC                     __end_of_I2C1_Stop:
  3093                           	opt stack 0
  3094                           pclatu	equ	0xFFB
  3095                           pclath	equ	0xFFA
  3096                           tblptru	equ	0xFF8
  3097                           tblptrh	equ	0xFF7
  3098                           tblptrl	equ	0xFF6
  3099                           tablat	equ	0xFF5
  3100                           prodh	equ	0xFF4
  3101                           prodl	equ	0xFF3
  3102                           intcon	equ	0xFF2
  3103                           intcon2	equ	0xFF1
  3104                           postinc0	equ	0xFEE
  3105                           fsr0h	equ	0xFEA
  3106                           fsr0l	equ	0xFE9
  3107                           wreg	equ	0xFE8
  3108                           fsr1h	equ	0xFE2
  3109                           fsr1l	equ	0xFE1
  3110                           indf2	equ	0xFDF
  3111                           postinc2	equ	0xFDE
  3112                           postdec2	equ	0xFDD
  3113                           fsr2h	equ	0xFDA
  3114                           fsr2l	equ	0xFD9
  3115                           status	equ	0xFD8
  3116                           
  3117 ;; *************** function _I2C1_FunctionComplete *****************
  3118 ;; Defined at:
  3119 ;;		line 564 in file "mcc_generated_files/i2c1.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;		None
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;		None
  3124 ;; Return value:  Size  Location     Type
  3125 ;;		None               void
  3126 ;; Registers used:
  3127 ;;		wreg, status,2, status,0
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3133 ;;      Params:         0       0       0       0       0       0       0
  3134 ;;      Locals:         0       0       0       0       0       0       0
  3135 ;;      Temps:          0       0       0       0       0       0       0
  3136 ;;      Totals:         0       0       0       0       0       0       0
  3137 ;;Total ram usage:        0 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; This function calls:
  3140 ;;		Nothing
  3141 ;; This function is called by:
  3142 ;;		_I2C1_ISR
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           	psect	text21
  3147  000D3A                     __ptext21:
  3148                           	opt stack 0
  3149  000D3A                     _I2C1_FunctionComplete:
  3150                           	opt stack 25
  3151                           
  3152                           ;i2c1.c: 568: p_i2c1_trb_current++;
  3153                           
  3154                           ;incstack = 0
  3155  000D3A  0E06               	movlw	6
  3156  000D3C  2629               	addwf	_p_i2c1_trb_current,f,c
  3157  000D3E  0E00               	movlw	0
  3158  000D40  222A               	addwfc	_p_i2c1_trb_current+1,f,c
  3159                           
  3160                           ;i2c1.c: 571: if(--i2c1_trb_count == 0)
  3161  000D42  2E33               	decfsz	_i2c1_trb_count,f,c
  3162  000D44  D003               	goto	i2l1612
  3163                           
  3164                           ;i2c1.c: 572: {
  3165                           ;i2c1.c: 573: i2c1_state = S_MASTER_SEND_STOP;
  3166  000D46  0E04               	movlw	4
  3167  000D48  6E32               	movwf	_i2c1_state,c
  3168                           
  3169                           ;i2c1.c: 574: }
  3170  000D4A  0012               	return	
  3171  000D4C                     i2l1612:
  3172                           
  3173                           ;i2c1.c: 575: else
  3174                           ;i2c1.c: 576: {
  3175                           ;i2c1.c: 577: i2c1_state = S_MASTER_RESTART;
  3176  000D4C  0E01               	movlw	1
  3177  000D4E  6E32               	movwf	_i2c1_state,c
  3178  000D50  0012               	return	
  3179  000D52                     __end_of_I2C1_FunctionComplete:
  3180                           	opt stack 0
  3181                           pclatu	equ	0xFFB
  3182                           pclath	equ	0xFFA
  3183                           tblptru	equ	0xFF8
  3184                           tblptrh	equ	0xFF7
  3185                           tblptrl	equ	0xFF6
  3186                           tablat	equ	0xFF5
  3187                           prodh	equ	0xFF4
  3188                           prodl	equ	0xFF3
  3189                           intcon	equ	0xFF2
  3190                           intcon2	equ	0xFF1
  3191                           postinc0	equ	0xFEE
  3192                           fsr0h	equ	0xFEA
  3193                           fsr0l	equ	0xFE9
  3194                           wreg	equ	0xFE8
  3195                           fsr1h	equ	0xFE2
  3196                           fsr1l	equ	0xFE1
  3197                           indf2	equ	0xFDF
  3198                           postinc2	equ	0xFDE
  3199                           postdec2	equ	0xFDD
  3200                           fsr2h	equ	0xFDA
  3201                           fsr2l	equ	0xFD9
  3202                           status	equ	0xFD8
  3203                           
  3204 ;; *************** function _I2C1_BusCollisionISR *****************
  3205 ;; Defined at:
  3206 ;;		line 729 in file "mcc_generated_files/i2c1.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;		None
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;		None
  3211 ;; Return value:  Size  Location     Type
  3212 ;;		None               void
  3213 ;; Registers used:
  3214 ;;		None
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3220 ;;      Params:         0       0       0       0       0       0       0
  3221 ;;      Locals:         0       0       0       0       0       0       0
  3222 ;;      Temps:          0       0       0       0       0       0       0
  3223 ;;      Totals:         0       0       0       0       0       0       0
  3224 ;;Total ram usage:        0 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_INTERRUPT_InterruptManager
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text22
  3234  000D86                     __ptext22:
  3235                           	opt stack 0
  3236  000D86                     _I2C1_BusCollisionISR:
  3237                           	opt stack 26
  3238                           
  3239                           ;incstack = 0
  3240  000D86  0012               	return	
  3241  000D88                     __end_of_I2C1_BusCollisionISR:
  3242                           	opt stack 0
  3243                           pclatu	equ	0xFFB
  3244                           pclath	equ	0xFFA
  3245                           tblptru	equ	0xFF8
  3246                           tblptrh	equ	0xFF7
  3247                           tblptrl	equ	0xFF6
  3248                           tablat	equ	0xFF5
  3249                           prodh	equ	0xFF4
  3250                           prodl	equ	0xFF3
  3251                           intcon	equ	0xFF2
  3252                           intcon2	equ	0xFF1
  3253                           postinc0	equ	0xFEE
  3254                           fsr0h	equ	0xFEA
  3255                           fsr0l	equ	0xFE9
  3256                           wreg	equ	0xFE8
  3257                           fsr1h	equ	0xFE2
  3258                           fsr1l	equ	0xFE1
  3259                           indf2	equ	0xFDF
  3260                           postinc2	equ	0xFDE
  3261                           postdec2	equ	0xFDD
  3262                           fsr2h	equ	0xFDA
  3263                           fsr2l	equ	0xFD9
  3264                           status	equ	0xFD8
  3265                           
  3266 ;; *************** function _EUSART1_Transmit_ISR *****************
  3267 ;; Defined at:
  3268 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;		None
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;		None
  3273 ;; Return value:  Size  Location     Type
  3274 ;;		None               void
  3275 ;; Registers used:
  3276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3282 ;;      Params:         0       0       0       0       0       0       0
  3283 ;;      Locals:         0       0       0       0       0       0       0
  3284 ;;      Temps:          0       0       0       0       0       0       0
  3285 ;;      Totals:         0       0       0       0       0       0       0
  3286 ;;Total ram usage:        0 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; This function calls:
  3289 ;;		Nothing
  3290 ;; This function is called by:
  3291 ;;		_INTERRUPT_InterruptManager
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text23
  3296  000BE8                     __ptext23:
  3297                           	opt stack 0
  3298  000BE8                     _EUSART1_Transmit_ISR:
  3299                           	opt stack 26
  3300                           
  3301                           ;eusart1.c: 177: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  3302                           
  3303                           ;incstack = 0
  3304  000BE8  0E08               	movlw	8
  3305  000BEA  5C4B               	subwf	_eusart1TxBufferRemaining,w,c	;volatile
  3306  000BEC  B0D8               	btfsc	status,0,c
  3307  000BEE  D014               	goto	i2l213
  3308                           
  3309                           ;eusart1.c: 178: {
  3310                           ;eusart1.c: 179: TX1REG = eusart1TxBuffer[eusart1TxTail++];
  3311  000BF0  5031               	movf	_eusart1TxTail,w,c
  3312  000BF2  0D01               	mullw	1
  3313  000BF4  0100               	movlb	0	; () banked
  3314  000BF6  0E68               	movlw	low _eusart1TxBuffer
  3315  000BF8  24F3               	addwf	prodl,w,c
  3316  000BFA  6ED9               	movwf	fsr2l,c
  3317  000BFC  0100               	movlb	0	; () banked
  3318  000BFE  0E00               	movlw	high _eusart1TxBuffer
  3319  000C00  20F4               	addwfc	prodh,w,c
  3320  000C02  6EDA               	movwf	fsr2h,c
  3321  000C04  50DF               	movf	indf2,w,c
  3322  000C06  6EAD               	movwf	4013,c	;volatile
  3323                           
  3324                           ; BSR set to: 0
  3325  000C08  2A31               	incf	_eusart1TxTail,f,c
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;eusart1.c: 180: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  3329  000C0A  0E07               	movlw	7
  3330  000C0C  6431               	cpfsgt	_eusart1TxTail,c
  3331  000C0E  D002               	goto	i2l1782
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;eusart1.c: 181: {
  3335                           ;eusart1.c: 182: eusart1TxTail = 0;
  3336  000C10  0E00               	movlw	0
  3337  000C12  6E31               	movwf	_eusart1TxTail,c
  3338  000C14                     i2l1782:
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;eusart1.c: 183: }
  3342                           ;eusart1.c: 184: eusart1TxBufferRemaining++;
  3343  000C14  2A4B               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  3344                           
  3345                           ;eusart1.c: 185: }
  3346  000C16  0012               	return	
  3347  000C18                     i2l213:
  3348                           
  3349                           ;eusart1.c: 186: else
  3350                           ;eusart1.c: 187: {
  3351                           ;eusart1.c: 188: PIE1bits.TX1IE = 0;
  3352  000C18  989D               	bcf	3997,4,c	;volatile
  3353  000C1A  0012               	return	
  3354  000C1C                     __end_of_EUSART1_Transmit_ISR:
  3355                           	opt stack 0
  3356                           pclatu	equ	0xFFB
  3357                           pclath	equ	0xFFA
  3358                           tblptru	equ	0xFF8
  3359                           tblptrh	equ	0xFF7
  3360                           tblptrl	equ	0xFF6
  3361                           tablat	equ	0xFF5
  3362                           prodh	equ	0xFF4
  3363                           prodl	equ	0xFF3
  3364                           intcon	equ	0xFF2
  3365                           intcon2	equ	0xFF1
  3366                           postinc0	equ	0xFEE
  3367                           fsr0h	equ	0xFEA
  3368                           fsr0l	equ	0xFE9
  3369                           wreg	equ	0xFE8
  3370                           fsr1h	equ	0xFE2
  3371                           fsr1l	equ	0xFE1
  3372                           indf2	equ	0xFDF
  3373                           postinc2	equ	0xFDE
  3374                           postdec2	equ	0xFDD
  3375                           fsr2h	equ	0xFDA
  3376                           fsr2l	equ	0xFD9
  3377                           status	equ	0xFD8
  3378                           
  3379 ;; *************** function _EUSART1_Receive_ISR *****************
  3380 ;; Defined at:
  3381 ;;		line 192 in file "mcc_generated_files/eusart1.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;		None
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;		None
  3386 ;; Return value:  Size  Location     Type
  3387 ;;		None               void
  3388 ;; Registers used:
  3389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3395 ;;      Params:         0       0       0       0       0       0       0
  3396 ;;      Locals:         0       0       0       0       0       0       0
  3397 ;;      Temps:          0       0       0       0       0       0       0
  3398 ;;      Totals:         0       0       0       0       0       0       0
  3399 ;;Total ram usage:        0 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; This function calls:
  3402 ;;		Nothing
  3403 ;; This function is called by:
  3404 ;;		_INTERRUPT_InterruptManager
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text24
  3409  000C4C                     __ptext24:
  3410                           	opt stack 0
  3411  000C4C                     _EUSART1_Receive_ISR:
  3412                           	opt stack 26
  3413                           
  3414                           ;eusart1.c: 194: if(1 == RC1STAbits.OERR)
  3415                           
  3416                           ;incstack = 0
  3417  000C4C  A2AB               	btfss	4011,1,c	;volatile
  3418  000C4E  D002               	goto	i2l1788
  3419                           
  3420                           ;eusart1.c: 195: {
  3421                           ;eusart1.c: 198: RC1STAbits.CREN = 0;
  3422  000C50  98AB               	bcf	4011,4,c	;volatile
  3423                           
  3424                           ;eusart1.c: 199: RC1STAbits.CREN = 1;
  3425  000C52  88AB               	bsf	4011,4,c	;volatile
  3426  000C54                     i2l1788:
  3427                           
  3428                           ;eusart1.c: 200: }
  3429                           ;eusart1.c: 203: eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  3430  000C54  502E               	movf	_eusart1RxHead,w,c
  3431  000C56  0D01               	mullw	1
  3432  000C58  0100               	movlb	0	; () banked
  3433  000C5A  0E60               	movlw	low _eusart1RxBuffer
  3434  000C5C  24F3               	addwf	prodl,w,c
  3435  000C5E  6ED9               	movwf	fsr2l,c
  3436  000C60  0100               	movlb	0	; () banked
  3437  000C62  0E00               	movlw	high _eusart1RxBuffer
  3438  000C64  20F4               	addwfc	prodh,w,c
  3439  000C66  6EDA               	movwf	fsr2h,c
  3440  000C68  CFAE FFDF          	movff	4014,indf2	;volatile
  3441                           
  3442                           ; BSR set to: 0
  3443  000C6C  2A2E               	incf	_eusart1RxHead,f,c
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;eusart1.c: 204: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  3447  000C6E  0E07               	movlw	7
  3448  000C70  642E               	cpfsgt	_eusart1RxHead,c
  3449  000C72  D002               	goto	i2l1796
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;eusart1.c: 205: {
  3453                           ;eusart1.c: 206: eusart1RxHead = 0;
  3454  000C74  0E00               	movlw	0
  3455  000C76  6E2E               	movwf	_eusart1RxHead,c
  3456  000C78                     i2l1796:
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;eusart1.c: 207: }
  3460                           ;eusart1.c: 208: eusart1RxCount++;
  3461  000C78  2A2D               	incf	_eusart1RxCount,f,c	;volatile
  3462                           
  3463                           ; BSR set to: 0
  3464  000C7A  0012               	return	
  3465  000C7C                     __end_of_EUSART1_Receive_ISR:
  3466                           	opt stack 0
  3467                           pclatu	equ	0xFFB
  3468                           pclath	equ	0xFFA
  3469                           tblptru	equ	0xFF8
  3470                           tblptrh	equ	0xFF7
  3471                           tblptrl	equ	0xFF6
  3472                           tablat	equ	0xFF5
  3473                           prodh	equ	0xFF4
  3474                           prodl	equ	0xFF3
  3475                           intcon	equ	0xFF2
  3476                           intcon2	equ	0xFF1
  3477                           postinc0	equ	0xFEE
  3478                           fsr0h	equ	0xFEA
  3479                           fsr0l	equ	0xFE9
  3480                           wreg	equ	0xFE8
  3481                           fsr1h	equ	0xFE2
  3482                           fsr1l	equ	0xFE1
  3483                           indf2	equ	0xFDF
  3484                           postinc2	equ	0xFDE
  3485                           postdec2	equ	0xFDD
  3486                           fsr2h	equ	0xFDA
  3487                           fsr2l	equ	0xFD9
  3488                           status	equ	0xFD8
  3489                           
  3490 ;; *************** function _ADC_ISR *****************
  3491 ;; Defined at:
  3492 ;;		line 128 in file "mcc_generated_files/adc.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;		None
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;		None
  3497 ;; Return value:  Size  Location     Type
  3498 ;;		None               void
  3499 ;; Registers used:
  3500 ;;		None
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3506 ;;      Params:         0       0       0       0       0       0       0
  3507 ;;      Locals:         0       0       0       0       0       0       0
  3508 ;;      Temps:          0       0       0       0       0       0       0
  3509 ;;      Totals:         0       0       0       0       0       0       0
  3510 ;;Total ram usage:        0 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; This function calls:
  3513 ;;		Nothing
  3514 ;; This function is called by:
  3515 ;;		_INTERRUPT_InterruptManager
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           	psect	text25
  3520  000D82                     __ptext25:
  3521                           	opt stack 0
  3522  000D82                     _ADC_ISR:
  3523                           	opt stack 26
  3524                           
  3525                           ;adc.c: 131: PIR1bits.ADIF = 0;
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;incstack = 0
  3529  000D82  9C9E               	bcf	3998,6,c	;volatile
  3530  000D84  0012               	return	
  3531  000D86                     __end_of_ADC_ISR:
  3532                           	opt stack 0
  3533                           pclatu	equ	0xFFB
  3534                           pclath	equ	0xFFA
  3535                           tblptru	equ	0xFF8
  3536                           tblptrh	equ	0xFF7
  3537                           tblptrl	equ	0xFF6
  3538                           tablat	equ	0xFF5
  3539                           prodh	equ	0xFF4
  3540                           prodl	equ	0xFF3
  3541                           intcon	equ	0xFF2
  3542                           intcon2	equ	0xFF1
  3543                           postinc0	equ	0xFEE
  3544                           fsr0h	equ	0xFEA
  3545                           fsr0l	equ	0xFE9
  3546                           wreg	equ	0xFE8
  3547                           fsr1h	equ	0xFE2
  3548                           fsr1l	equ	0xFE1
  3549                           indf2	equ	0xFDF
  3550                           postinc2	equ	0xFDE
  3551                           postdec2	equ	0xFDD
  3552                           fsr2h	equ	0xFDA
  3553                           fsr2l	equ	0xFD9
  3554                           status	equ	0xFD8
  3555                           pclatu	equ	0xFFB
  3556                           pclath	equ	0xFFA
  3557                           tblptru	equ	0xFF8
  3558                           tblptrh	equ	0xFF7
  3559                           tblptrl	equ	0xFF6
  3560                           tablat	equ	0xFF5
  3561                           prodh	equ	0xFF4
  3562                           prodl	equ	0xFF3
  3563                           intcon	equ	0xFF2
  3564                           intcon2	equ	0xFF1
  3565                           postinc0	equ	0xFEE
  3566                           fsr0h	equ	0xFEA
  3567                           fsr0l	equ	0xFE9
  3568                           wreg	equ	0xFE8
  3569                           fsr1h	equ	0xFE2
  3570                           fsr1l	equ	0xFE1
  3571                           indf2	equ	0xFDF
  3572                           postinc2	equ	0xFDE
  3573                           postdec2	equ	0xFDD
  3574                           fsr2h	equ	0xFDA
  3575                           fsr2l	equ	0xFD9
  3576                           status	equ	0xFD8
  3577                           
  3578                           	psect	rparam
  3579  0000                     pclatu	equ	0xFFB
  3580                           pclath	equ	0xFFA
  3581                           tblptru	equ	0xFF8
  3582                           tblptrh	equ	0xFF7
  3583                           tblptrl	equ	0xFF6
  3584                           tablat	equ	0xFF5
  3585                           prodh	equ	0xFF4
  3586                           prodl	equ	0xFF3
  3587                           intcon	equ	0xFF2
  3588                           intcon2	equ	0xFF1
  3589                           postinc0	equ	0xFEE
  3590                           fsr0h	equ	0xFEA
  3591                           fsr0l	equ	0xFE9
  3592                           wreg	equ	0xFE8
  3593                           fsr1h	equ	0xFE2
  3594                           fsr1l	equ	0xFE1
  3595                           indf2	equ	0xFDF
  3596                           postinc2	equ	0xFDE
  3597                           postdec2	equ	0xFDD
  3598                           fsr2h	equ	0xFDA
  3599                           fsr2l	equ	0xFD9
  3600                           status	equ	0xFD8


Data Sizes:
    Strings     16
    Constant    10
    Data        0
    BSS         51
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      75
    BANK0           160     17      39
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_tr_queue.pTrFlag	PTR enum E8836 size(2) Largest target is 0

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK0[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    S1424$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_object.pTrTail.pTrFlag	PTR enum E8836 size(2) Largest target is 0

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    F8948.pbuffer	PTR unsigned char  size(2) Largest target is 0

    F8943.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> I2C1_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), 

    S21$pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E8836 size(2) Largest target is 0

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    S33$pTrFlag	PTR enum E8836 size(2) Largest target is 0

    p_i2c1_current.pTrFlag	PTR enum E8836 size(2) Largest target is 0

    S33$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), NULL(NULL[0]), 

    S44$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), 

    S44$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___lwmod
    _putch->_EUSART1_Write
    ___lwmod->___lwdiv

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1414
                                             12 BANK0      5     5      0
                  _ADC_GetConversion
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              16    12      4    1318
                                             32 COMRAM     4     0      4
                                              0 BANK0     12    12      0
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      93
                                             21 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      62
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     291
                                             27 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     294
                                             20 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                             20 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0      22
                                              6 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             3     3      0       0
                                              0 COMRAM     3     3      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_ISR                                             3     3      0      22
                                              3 COMRAM     3     3      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C1_Stop                                            3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     11      27       4       24.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     24      4B       1       78.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      72       9        0.0%
DATA                 0      0      72      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Mar 06 01:41:19 2015

           _eusart1TxBufferRemaining 004B                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                                  l201 0B42  
                                l431 0A3C                                  l296 0C34  
                                l981 0A98                                  l991 0B26  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                    __end_of_ADC_ISR 0D86                                  prod 000FF3  
                                wreg 000FE8                         __CFG_LVP$OFF 000000  
                   __end_of_I2C1_ISR 086E                                 l2014 0A66  
                               l2110 096A                                 l2016 0A6E  
                               l2104 0950                                 l2026 0A8E  
                               l2018 0A72                                 l2042 0B1C  
                               l2034 0AFC                                 l2114 09B8  
                               l2036 0B04                                 l2108 0964  
                               l2116 09C4                                 l2038 0B08  
                               l2070 087C                                 l2134 0A26  
                               l2080 08C0                                 l2128 09F6  
                               l2090 0908                                 l2074 0890  
                               l1940 0B32                                 l1952 0B68  
                               l1954 0B6A                                 STR_1 060B  
                               _LATA 000F89                                 _LATB 000F8A  
                               _LATC 000F8B                                 _LATD 000F8C  
                               u1337 0A2E                                 _LATE 000F8D  
                               i2l60 0652                                 i2l71 0700  
                               i2l72 070E                                 i2l65 06CC  
                               i2l90 07DC                                 i2l82 0786  
                               i2l66 06D4                                 i2l76 0772  
                               i2l94 080C                                 i2l86 07B2  
                               i2l89 07CC                                 _WPUB 000F61  
                      _EUSART1_Write 0B30                                 _main 09E0  
                    _TMR0_StartTimer 0D7A                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                      __CFG_BORV$190 000000                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 00C0                        __CFG_IESO$OFF 000000  
            __end_of_TMR0_Initialize 0D08                           _i2c1_state 0032  
     __size_of_OSCILLATOR_Initialize 000E        __end_of_OSCILLATOR_Initialize 0D70  
                              ?_main 0001                    __end_of_I2C1_Stop 0BAC  
                              _T0CON 000FD5                                _LATA3 007C4B  
                     __CFG_DEBUG$OFF 000000                      __end_of___lwdiv 0AA2  
                    __end_of___lwmod 0B30                                i2l213 0C18  
                              i2l381 0070                                i2l383 007C  
                              i2l375 004C                                i2l377 0058  
                              i2l379 0064                                i2l387 0086  
                              _TMR0H 000FD7                                _TMR0L 000FD6  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                                _TRISD 000F95  
                              _TRISE 000F96         __end_of_I2C1_BusCollisionISR 0D88  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
               _EUSART1_Transmit_ISR 0BE8                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                  ??_I2C1_Initialize 0015                     __end_of_TMR0_ISR 0D22  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                    __end_of_dpowers 060B                   __CFG_MCLRE$EXTMCLR 000000  
                              _putch 0D70                                main@i 0085  
                     ?_EUSART1_Write 0001                                tablat 000FF5  
                              status 000FD8                       __CFG_HFOFST$ON 000000  
                     __CFG_PBADEN$ON 000000                      __initialization 0CAA  
         __end_of_EUSART1_Initialize 0BE8                         __end_of_main 0A50  
                          ??_ADC_ISR 0001          ?_INTERRUPT_InterruptManager 0001  
                        _i2c1_object 0042                               ??_main 0082  
                      __activetblptr 000002                ?_EUSART1_Transmit_ISR 0001  
            __end_of_TMR0_StartTimer 0D7E                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
                             _ANSELA 000F38                               ?_putch 0001  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             _ANSELD 000F3B                               _ANSELE 000F3C  
                             _RC1REG 000FAE                               _RC1STA 000FAB  
                             i2l1612 0D4C                               i2l1604 0BA6  
                             i2l1702 0796                               i2l1712 07BA  
                             i2l1640 06AC                               i2l1740 0812  
                             i2l1724 07E4                               i2l1660 06FA  
                             i2l1742 0816                               i2l1654 06E2  
                             i2l1750 0828                       __CFG_WDTEN$OFF 000000  
                             i2l1744 081E                               i2l1728 07EC  
                             i2l1674 0738                               i2l1782 0C14  
                             i2l1694 0780                               i2l1796 0C78  
                             i2l1788 0C54                               _RCREG1 000FAE  
                             _OSCCON 000FD3                               _SPBRG1 000FAF  
                             _TX1REG 000FAD                               _TX1STA 000FAC  
                             _TXREG1 000FAD                       __CFG_XINST$OFF 000000  
                     _p_i2c1_current 0027                       __CFG_STVREN$ON 000000  
                          ??___lwdiv 0019                            ??___lwmod 0020  
                   ?_TMR0_Initialize 0001                            ?_I2C1_ISR 0001  
                             clear_0 0CB0                               clear_1 0CBC  
                             _printf 086E                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8             ADC_GetConversion@channel 0019  
              __end_of_TMR0_CallBack 0D82                      ??_EUSART1_Write 0015  
                    _eusart1RxBuffer 0060        __size_of_INTERRUPT_Initialize 0010  
                    _eusart1TxBuffer 0068                    _SYSTEM_Initialize 0CCC  
                         __accesstop 0060              __end_of__initialization 0CC2  
                 ?_SYSTEM_Initialize 0001                       _i2c1_trb_count 0033  
              _I2C1_FunctionComplete 0D3A                 _I2C1_BusCollisionISR 0D86  
                     __pcstackCOMRAM 0001                  ??_SYSTEM_Initialize 0015  
                          ?_TMR0_ISR 0001                        __end_of_putch 0D7A  
                         ??_I2C1_ISR 0004               ??_EUSART1_Transmit_ISR 0001  
        __end_of_EUSART1_Receive_ISR 0C7C                     ?_TMR0_StartTimer 0001  
          __end_of_SYSTEM_Initialize 0CEA                              ??_putch 0016  
                      _eusart1RxHead 002E                        _eusart1TxHead 0030  
                      _eusart1RxTail 002F                           __pbssBANK0 0060  
                      _eusart1TxTail 0031                      __CFG_PLLCFG$OFF 000000  
                         __pnvCOMRAM 0042                ?_I2C1_BusCollisionISR 0001  
                 __CFG_CCP2MX$PORTC1 000000                           ??_TMR0_ISR 0001  
                 __CFG_CCP3MX$PORTB5 000000                      _I2C1_Initialize 0C7C  
                            _ADC_ISR 0D82                              ?_printf 0021  
            __size_of_ADC_Initialize 0018                              _OSCCON2 000FD2  
                          _I2C1_Stop 0B6E                    __CFG_PRICLKEN$OFF 000000  
                            _OSCTUNE 000F9B                              _SPBRGH1 000FB0  
                            _SSP1ADD 000FC8                              _SSP1BUF 000FC9  
                    __CFG_PWRTEN$OFF 000000               ?_I2C1_FunctionComplete 0001  
                            __Hparam 0000                              __Lparam 0000  
                 _p_i2c1_trb_current 0029                              ___lwdiv 0A50  
                            ___lwmod 0AEE                         __psmallconst 0600  
                            __pcinit 0CAA                              __ramtop 0600  
                            __ptext0 09E0                              __ptext1 086E  
                            __ptext2 0D70                              __ptext3 0B30  
                            __ptext4 0AEE                              __ptext5 0A50  
                            __ptext6 0CCC                              __ptext7 0CEA  
                            __ptext8 0D7A                              __ptext9 0AA2  
                    __size_of_printf 0172                            _T0CONbits 000FD5  
                            _dpowers 0601                _OSCILLATOR_Initialize 0D62  
                 _EUSART1_Initialize 0BAC             ??_PIN_MANAGER_Initialize 0015  
                         ?_I2C1_Stop 0001           __size_of_SYSTEM_Initialize 001E  
               I2C1_ISR@pi2c_buf_ptr 0025                 end_of_initialization 0CC2  
                ?_EUSART1_Initialize 0001                        __Lmediumconst 0000  
             ??_I2C1_BusCollisionISR 0001              __end_of_I2C1_Initialize 0CAA  
                            printf@c 0081                              printf@f 0021  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc2 000FDE                 ??_EUSART1_Initialize 0015  
                  __size_of_I2C1_ISR 0252                  EUSART1_Write@txData 0015  
  I2C1_ISR@i2c_10bit_address_restart 002B                 _timer0ReloadVal16bit 0049  
       __end_of_INTERRUPT_Initialize 0D62              I2C1_MasterWrite@trBlock 0034  
                  __size_of_TMR0_ISR 001A             I2C1_Stop@completion_code 0003  
                     _ADC_Initialize 0D22               ?_OSCILLATOR_Initialize 0001  
                     __end_of_printf 09E0                  start_initialization 0CAA  
                        ??_I2C1_Stop 0001             __size_of_TMR0_Initialize 001E  
    __size_of_PIN_MANAGER_Initialize 004C                          putch@txData 0016  
              __end_of_EUSART1_Write 0B6E                     ?_I2C1_Initialize 0001  
             __size_of_TMR0_CallBack 0004               __end_of_ADC_Initialize 0D3A  
                           ?_ADC_ISR 0001                             ??_printf 0076  
                     _eusart1RxCount 002D                          __pbssCOMRAM 0025  
      __size_of_EUSART1_Transmit_ISR 0034                        __pcstackBANK0 0076  
                __end_of__stringdata 061B                        _i2c1_tr_queue 003A  
            ??_I2C1_FunctionComplete 0001         __size_of_EUSART1_Receive_ISR 0030  
           __size_of_TMR0_StartTimer 0004                     ___lwdiv@dividend 0015  
             _PIN_MANAGER_Initialize 0AA2                            __pintcode 0008  
                           ?___lwdiv 0015                             ?___lwmod 001C  
                    ?_ADC_Initialize 0001                             _I2C1_ISR 061C  
       ??_INTERRUPT_InterruptManager 0007                             _BAUD1CON 000FB8  
                        __smallconst 0600                     ___lwdiv@quotient 0019  
                      _TMR0_CallBack 0D7E                       __size_of_putch 000A  
               _INTERRUPT_Initialize 0D52               I2C1_MasterRead@trBlock 0070  
                  ??_TMR0_Initialize 0015                             _IPR1bits 000F9F  
                           _IPR2bits 000FA2                             _PIE1bits 000F9D  
                           _PIE2bits 000FA0  __size_of_INTERRUPT_InterruptManager 00B8  
                           _PIR1bits 000F9E                             _PIR2bits 000FA1  
                           _RCONbits 000FD0                     __CFG_WDTPS$32768 000000  
                           _SSP1CON1 000FC6                             _SSP1CON3 000FCB  
                           _TMR0_ISR 0D08                            main@ADCNT 0083  
                           _SSP1STAT 000FC7                     __size_of_ADC_ISR 0004  
                         _ADCON0bits 000FC2                          __stringdata 060B  
                         printf@_val 007C                           printf@flag 007A  
                         printf@prec 007B                       ?_TMR0_CallBack 0001  
                        _INTCON2bits 000FF1                ?_INTERRUPT_Initialize 0001  
                           __Hrparam 0000        __size_of_I2C1_BusCollisionISR 0002  
                           __Lrparam 0000                    _ADC_GetConversion 0C1C  
                 __CFG_BOREN$SBORDIS 000000               I2C1_ISR@i2c_bytes_left 002C  
                  __CFG_P2BMX$PORTD2 000000              ??_OSCILLATOR_Initialize 0015  
                 ?_ADC_GetConversion 0015                    ??_TMR0_StartTimer 0015  
        __size_of_EUSART1_Initialize 003C                     __size_of___lwdiv 0052  
                   __size_of___lwmod 0042                  ??_ADC_GetConversion 0017  
                    ___lwdiv@divisor 0017                  I2C1_ISR@i2c_address 0040  
                    ___lwdiv@counter 001B                             __ptext10 0D62  
                           __ptext11 0D52                             __ptext20 0B6E  
                           __ptext12 0C7C                             __ptext21 0D3A  
                           __ptext13 0BAC                             __ptext22 0D86  
                           __ptext14 0D22                             __ptext23 0BE8  
                           __ptext15 0C1C                             __ptext24 0C4C  
                           __ptext25 0D82                             __ptext17 0D08  
                           __ptext18 0D7E                             __ptext19 061C  
                       _SSP1CON1bits 000FC6                         _SSP1CON2bits 000FC5  
                      __size_of_main 0070            __end_of_ADC_GetConversion 0C4C  
                         _RC1STAbits 000FAB   __end_of_INTERRUPT_InterruptManager 00C0  
         _INTERRUPT_InterruptManager 0008                  _EUSART1_Receive_ISR 0C4C  
                         _INTCONbits 000FF2                      ??_TMR0_CallBack 0001  
             ??_INTERRUPT_Initialize 0015                             intlevel2 0000  
               ?_EUSART1_Receive_ISR 0001                     ___lwmod@dividend 001C  
            ?_PIN_MANAGER_Initialize 0001       __size_of_I2C1_FunctionComplete 0018  
      __end_of_I2C1_FunctionComplete 0D52         __end_of_EUSART1_Transmit_ISR 0C1C  
                   ??_ADC_Initialize 0015                             printf@ap 0078  
           __size_of_I2C1_Initialize 002E               __size_of_EUSART1_Write 003E  
                    ___lwmod@divisor 001E                      _TMR0_Initialize 0CEA  
                    ___lwmod@counter 0020                    __CFG_T3CMX$PORTC0 000000  
              ??_EUSART1_Receive_ISR 0001       __end_of_PIN_MANAGER_Initialize 0AEE  
                 __size_of_I2C1_Stop 003E                    __CFG_FOSC$INTIO67 000000  
         __size_of_ADC_GetConversion 0030  
