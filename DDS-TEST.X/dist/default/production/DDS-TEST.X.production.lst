

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Apr 04 00:03:48 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	smallconst
    42  000600                     __psmallconst:
    43                           	opt stack 0
    44  000600  00                 	db	0
    45  000601                     _dpowers:
    46                           	opt stack 0
    47  000601  0001               	dw	1
    48  000603  000A               	dw	10
    49  000605  0064               	dw	100
    50  000607  03E8               	dw	1000
    51  000609  2710               	dw	10000
    52  00060B                     __end_of_dpowers:
    53                           	opt stack 0
    54  00060B                     STR_1:
    55  00060B  41                 	db	65	;'A'
    56  00060C  44                 	db	68	;'D'
    57  00060D  43                 	db	67	;'C'
    58  00060E  20                 	db	32
    59  00060F  56                 	db	86	;'V'
    60  000610  6F                 	db	111	;'o'
    61  000611  6C                 	db	108	;'l'
    62  000612  75                 	db	117	;'u'
    63  000613  6D                 	db	109	;'m'
    64  000614  65                 	db	101	;'e'
    65  000615  20                 	db	32
    66  000616  3D                 	db	61	;'='
    67  000617  20                 	db	32
    68  000618  25                 	db	37
    69  000619  64                 	db	100	;'d'
    70  00061A  00                 	db	0
    71                           
    72                           ; #config settings
    73  00061B  00                 	db	0	; dummy byte at the end
    74  0000                     
    75                           	psect	nvCOMRAM
    76  00004A                     __pnvCOMRAM:
    77                           	opt stack 0
    78  00004A                     _timer0ReloadVal16bit:
    79                           	opt stack 0
    80  00004A                     	ds	2
    81  00004C                     _eusart1TxBufferRemaining:
    82                           	opt stack 0
    83  00004C                     	ds	1
    84  0000                     _ANSELA	set	3896
    85  0000                     _ANSELB	set	3897
    86  0000                     _ANSELC	set	3898
    87  0000                     _ANSELD	set	3899
    88  0000                     _ANSELE	set	3900
    89  0000                     _ADCON0	set	4034
    90  0000                     _ADCON0bits	set	4034
    91  0000                     _ADCON1	set	4033
    92  0000                     _ADCON2	set	4032
    93  0000                     _ADRESH	set	4036
    94  0000                     _ADRESL	set	4035
    95  0000                     _BAUD1CON	set	4024
    96  0000                     _INTCON2bits	set	4081
    97  0000                     _INTCONbits	set	4082
    98  0000                     _IPR1bits	set	3999
    99  0000                     _IPR2bits	set	4002
   100  0000                     _LATA	set	3977
   101  0000                     _LATB	set	3978
   102  0000                     _LATC	set	3979
   103  0000                     _LATD	set	3980
   104  0000                     _LATE	set	3981
   105  0000                     _OSCCON	set	4051
   106  0000                     _OSCCON2	set	4050
   107  0000                     _OSCTUNE	set	3995
   108  0000                     _PIE1bits	set	3997
   109  0000                     _PIE2bits	set	4000
   110  0000                     _PIR1bits	set	3998
   111  0000                     _PIR2bits	set	4001
   112  0000                     _PORTAbits	set	3968
   113  0000                     _PORTBbits	set	3969
   114  0000                     _PORTDbits	set	3971
   115  0000                     _RC1REG	set	4014
   116  0000                     _RC1STA	set	4011
   117  0000                     _RC1STAbits	set	4011
   118  0000                     _RCONbits	set	4048
   119  0000                     _RCREG1	set	4014
   120  0000                     _SPBRG1	set	4015
   121  0000                     _SPBRGH1	set	4016
   122  0000                     _SSP1ADD	set	4040
   123  0000                     _SSP1BUF	set	4041
   124  0000                     _SSP1CON1	set	4038
   125  0000                     _SSP1CON1bits	set	4038
   126  0000                     _SSP1CON2bits	set	4037
   127  0000                     _SSP1CON3	set	4043
   128  0000                     _SSP1STAT	set	4039
   129  0000                     _T0CON	set	4053
   130  0000                     _T0CONbits	set	4053
   131  0000                     _TMR0H	set	4055
   132  0000                     _TMR0L	set	4054
   133  0000                     _TRISA	set	3986
   134  0000                     _TRISB	set	3987
   135  0000                     _TRISC	set	3988
   136  0000                     _TRISD	set	3989
   137  0000                     _TRISE	set	3990
   138  0000                     _TX1REG	set	4013
   139  0000                     _TX1STA	set	4012
   140  0000                     _TXREG1	set	4013
   141  0000                     _WPUB	set	3937
   142  0000                     _LATA3	set	31819
   143  0000                     _LATB3	set	31827
   144  0000                     _LATB5	set	31829
   145  0000                     _LATD1	set	31841
   146  0000                     _LATE0	set	31848
   147  0000                     _LATE1	set	31849
   148  0000                     _LATE2	set	31850
   149                           
   150                           	psect	cinit
   151  000CF4                     __pcinit:
   152                           	opt stack 0
   153  000CF4                     start_initialization:
   154                           	opt stack 0
   155  000CF4                     __initialization:
   156                           	opt stack 0
   157                           
   158                           ; Clear objects allocated to BANK0 (36 bytes)
   159  000CF4  EE00  F060         	lfsr	0,__pbssBANK0
   160  000CF8  0E24               	movlw	36
   161  000CFA                     clear_0:
   162  000CFA  6AEE               	clrf	postinc0,c
   163  000CFC  06E8               	decf	wreg,f,c
   164  000CFE  E1FD               	bnz	clear_0
   165                           
   166                           ; Clear objects allocated to COMRAM (42 bytes)
   167  000D00  EE00  F001         	lfsr	0,__pbssCOMRAM
   168  000D04  0E2A               	movlw	42
   169  000D06                     clear_1:
   170  000D06  6AEE               	clrf	postinc0,c
   171  000D08  06E8               	decf	wreg,f,c
   172  000D0A  E1FD               	bnz	clear_1
   173  000D0C                     end_of_initialization:
   174                           	opt stack 0
   175  000D0C                     __end_of__initialization:
   176                           	opt stack 0
   177  000D0C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   178  000D0E  6EF8               	movwf	tblptru,c
   179  000D10  0100               	movlb	0
   180  000D12  EF01  F005         	goto	_main	;jump to C main() function
   181                           tblptru	equ	0xFF8
   182                           postinc0	equ	0xFEE
   183                           wreg	equ	0xFE8
   184                           
   185                           	psect	bssCOMRAM
   186  000001                     __pbssCOMRAM:
   187                           	opt stack 0
   188  000001                     _i2c1_object:
   189                           	opt stack 0
   190  000001                     	ds	7
   191  000008                     I2C1_ISR@pi2c_buf_ptr:
   192                           	opt stack 0
   193  000008                     	ds	2
   194  00000A                     _p_i2c1_current:
   195                           	opt stack 0
   196  00000A                     	ds	2
   197  00000C                     _p_i2c1_trb_current:
   198                           	opt stack 0
   199  00000C                     	ds	2
   200  00000E                     I2C1_ISR@i2c_10bit_address_restart:
   201                           	opt stack 0
   202  00000E                     	ds	1
   203  00000F                     I2C1_ISR@i2c_bytes_left:
   204                           	opt stack 0
   205  00000F                     	ds	1
   206  000010                     _eusart1RxCount:
   207                           	opt stack 0
   208  000010                     	ds	1
   209  000011                     _eusart1RxHead:
   210                           	opt stack 0
   211  000011                     	ds	1
   212  000012                     _eusart1RxTail:
   213                           	opt stack 0
   214  000012                     	ds	1
   215  000013                     _eusart1TxHead:
   216                           	opt stack 0
   217  000013                     	ds	1
   218  000014                     _eusart1TxTail:
   219                           	opt stack 0
   220  000014                     	ds	1
   221  000015                     _i2c1_state:
   222                           	opt stack 0
   223  000015                     	ds	1
   224  000016                     _i2c1_trb_count:
   225                           	opt stack 0
   226  000016                     	ds	1
   227  000017                     I2C1_MasterRead@trBlock:
   228                           	opt stack 0
   229  000017                     	ds	6
   230  00001D                     I2C1_MasterWrite@trBlock:
   231                           	opt stack 0
   232  00001D                     	ds	6
   233  000023                     _i2c1_tr_queue:
   234                           	opt stack 0
   235  000023                     	ds	6
   236  000029                     I2C1_ISR@i2c_address:
   237                           	opt stack 0
   238  000029                     	ds	2
   239                           tblptru	equ	0xFF8
   240                           postinc0	equ	0xFEE
   241                           wreg	equ	0xFE8
   242                           
   243                           	psect	bssBANK0
   244  000060                     __pbssBANK0:
   245                           	opt stack 0
   246  000060                     _button_value_array:
   247                           	opt stack 0
   248  000060                     	ds	20
   249  000074                     _eusart1RxBuffer:
   250                           	opt stack 0
   251  000074                     	ds	8
   252  00007C                     _eusart1TxBuffer:
   253                           	opt stack 0
   254  00007C                     	ds	8
   255                           tblptru	equ	0xFF8
   256                           postinc0	equ	0xFEE
   257                           wreg	equ	0xFE8
   258                           
   259                           	psect	cstackBANK0
   260  000084                     __pcstackBANK0:
   261                           	opt stack 0
   262  000084                     ?_printf:
   263                           	opt stack 0
   264  000084                     printf@f:
   265                           	opt stack 0
   266                           
   267                           ; 2 bytes @ 0x0
   268  000084                     	ds	4
   269  000088                     ??_printf:
   270                           
   271                           ; 0 bytes @ 0x4
   272  000088                     	ds	1
   273  000089                     printf@ap:
   274                           	opt stack 0
   275                           
   276                           ; 2 bytes @ 0x5
   277  000089                     	ds	2
   278  00008B                     printf@flag:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0x7
   282  00008B                     	ds	1
   283  00008C                     printf@prec:
   284                           	opt stack 0
   285                           
   286                           ; 1 bytes @ 0x8
   287  00008C                     	ds	1
   288  00008D                     printf@val:
   289                           	opt stack 0
   290                           
   291                           ; 2 bytes @ 0x9
   292  00008D                     	ds	2
   293  00008F                     printf@c:
   294                           	opt stack 0
   295                           
   296                           ; 1 bytes @ 0xB
   297  00008F                     	ds	1
   298  000090                     ??_main:
   299                           
   300                           ; 0 bytes @ 0xC
   301  000090                     	ds	1
   302  000091                     main@ADCNT:
   303                           	opt stack 0
   304                           
   305                           ; 2 bytes @ 0xD
   306  000091                     	ds	2
   307  000093                     main@i:
   308                           	opt stack 0
   309                           
   310                           ; 2 bytes @ 0xF
   311  000093                     	ds	2
   312                           tblptru	equ	0xFF8
   313                           postinc0	equ	0xFEE
   314                           wreg	equ	0xFE8
   315                           
   316                           	psect	cstackCOMRAM
   317  00002B                     __pcstackCOMRAM:
   318                           	opt stack 0
   319  00002B                     ??_I2C1_Stop:
   320  00002B                     
   321                           ; 0 bytes @ 0x0
   322  00002B                     	ds	2
   323  00002D                     I2C1_Stop@completion_code:
   324                           	opt stack 0
   325                           
   326                           ; 1 bytes @ 0x2
   327  00002D                     	ds	1
   328  00002E                     ??_I2C1_ISR:
   329                           
   330                           ; 0 bytes @ 0x3
   331  00002E                     	ds	2
   332  000030                     ??_INTERRUPT_InterruptManager:
   333                           
   334                           ; 0 bytes @ 0x5
   335  000030                     	ds	14
   336  00003E                     ?_ADC_GetConversion:
   337                           	opt stack 0
   338  00003E                     ?___lwdiv:
   339                           	opt stack 0
   340  00003E                     EUSART1_Write@txData:
   341                           	opt stack 0
   342  00003E                     ___lwdiv@dividend:
   343                           	opt stack 0
   344                           
   345                           ; 2 bytes @ 0x13
   346  00003E                     	ds	1
   347  00003F                     putch@txData:
   348                           	opt stack 0
   349                           
   350                           ; 1 bytes @ 0x14
   351  00003F                     	ds	1
   352  000040                     ??_ADC_GetConversion:
   353  000040                     ___lwdiv@divisor:
   354                           	opt stack 0
   355                           
   356                           ; 2 bytes @ 0x15
   357  000040                     	ds	2
   358  000042                     ADC_GetConversion@channel:
   359                           	opt stack 0
   360  000042                     ___lwdiv@counter:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x17
   364  000042                     	ds	1
   365  000043                     ___lwdiv@quotient:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x18
   369  000043                     	ds	2
   370  000045                     ?___lwmod:
   371                           	opt stack 0
   372  000045                     ___lwmod@dividend:
   373                           	opt stack 0
   374                           
   375                           ; 2 bytes @ 0x1A
   376  000045                     	ds	2
   377  000047                     ___lwmod@divisor:
   378                           	opt stack 0
   379                           
   380                           ; 2 bytes @ 0x1C
   381  000047                     	ds	2
   382  000049                     ___lwmod@counter:
   383                           	opt stack 0
   384                           
   385                           ; 1 bytes @ 0x1E
   386  000049                     	ds	1
   387                           tblptru	equ	0xFF8
   388                           postinc0	equ	0xFEE
   389                           wreg	equ	0xFE8
   390                           
   391 ;;
   392 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   393 ;;
   394 ;; *************** function _main *****************
   395 ;; Defined at:
   396 ;;		line 27 in file "main.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;  i               2   15[BANK0 ] int 
   401 ;;  ADCNT           2   13[BANK0 ] int 
   402 ;; Return value:  Size  Location     Type
   403 ;;		None               void
   404 ;; Registers used:
   405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   406 ;; Tracked objects:
   407 ;;		On entry : 0/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   411 ;;      Params:         0       0       0       0       0       0       0
   412 ;;      Locals:         0       4       0       0       0       0       0
   413 ;;      Temps:          0       1       0       0       0       0       0
   414 ;;      Totals:         0       5       0       0       0       0       0
   415 ;;Total ram usage:        5 bytes
   416 ;; Hardware stack levels required when called:    6
   417 ;; This function calls:
   418 ;;		_ADC_GetConversion
   419 ;;		_SYSTEM_Initialize
   420 ;;		_printf
   421 ;; This function is called by:
   422 ;;		Startup code after reset
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426                           	psect	text0
   427  000A02                     __ptext0:
   428                           	opt stack 0
   429  000A02                     _main:
   430                           	opt stack 25
   431                           
   432                           ;main.c: 30: SYSTEM_Initialize();
   433                           
   434                           ;incstack = 0
   435  000A02  EC8B  F006         	call	_SYSTEM_Initialize	;wreg free
   436                           
   437                           ;main.c: 49: (INTCONbits.GIE = 1);
   438  000A06  8EF2               	bsf	intcon,7,c	;volatile
   439                           
   440                           ;main.c: 52: (INTCONbits.PEIE = 1);
   441  000A08  8CF2               	bsf	intcon,6,c	;volatile
   442                           
   443                           ;main.c: 59: int ADCNT = 0;
   444  000A0A  0E00               	movlw	0
   445  000A0C  0100               	movlb	0	; () banked
   446  000A0E  6F92               	movwf	(main@ADCNT+1)& (0+255),b
   447  000A10  0E00               	movlw	0
   448  000A12  6F91               	movwf	main@ADCNT& (0+255),b
   449  000A14  D000               	goto	l2218
   450  000A16                     l2218:
   451                           
   452                           ; BSR set to: 0
   453  000A16  8689               	bsf	3977,3,c	;volatile
   454                           
   455                           ; BSR set to: 0
   456  000A18  D000               	goto	l2220
   457  000A1A                     l2220:
   458                           
   459                           ; BSR set to: 0
   460                           ;main.c: 62: {
   461                           ;main.c: 63: ADCNT = ADC_GetConversion(Volume);
   462  000A1A  0E04               	movlw	4
   463  000A1C  EC18  F006         	call	_ADC_GetConversion
   464  000A20  C03E  F091         	movff	?_ADC_GetConversion,main@ADCNT
   465  000A24  C03F  F092         	movff	?_ADC_GetConversion+1,main@ADCNT+1
   466                           
   467                           ;main.c: 65: printf("ADC Volume = %d",ADCNT);
   468  000A28  0E0B               	movlw	low STR_1
   469  000A2A  0100               	movlb	0	; () banked
   470  000A2C  6F84               	movwf	printf@f& (0+255),b
   471  000A2E  0E06               	movlw	high STR_1
   472  000A30  0100               	movlb	0	; () banked
   473  000A32  6F85               	movwf	(printf@f+1)& (0+255),b
   474  000A34  C091  F086         	movff	main@ADCNT,?_printf+2
   475  000A38  C092  F087         	movff	main@ADCNT+1,?_printf+3
   476  000A3C  EC49  F004         	call	_printf	;wreg free
   477                           
   478                           ;main.c: 66: for(int i = 0; 50 > i ; i++)
   479  000A40  0E00               	movlw	0
   480  000A42  0100               	movlb	0	; () banked
   481  000A44  6F94               	movwf	(main@i+1)& (0+255),b
   482  000A46  0E00               	movlw	0
   483  000A48  6F93               	movwf	main@i& (0+255),b
   484  000A4A  D00B               	goto	l431
   485  000A4C                     l2226:
   486                           
   487                           ; BSR set to: 0
   488                           ;main.c: 67: {
   489                           ;main.c: 68: _delay((unsigned long)((10)*(16000000/4000.0)));
   490  000A4C  0E34               	movlw	52
   491  000A4E  0100               	movlb	0	; () banked
   492  000A50  6F90               	movwf	??_main& (0+255),b
   493  000A52  0EF2               	movlw	242
   494  000A54                     u1517:
   495  000A54  2EE8               	decfsz	wreg,f,c
   496  000A56  D7FE               	goto	u1517
   497  000A58  2F90               	decfsz	??_main& (0+255),f,b
   498  000A5A  D7FC               	goto	u1517
   499  000A5C  0100               	movlb	0	; () banked
   500  000A5E  4B93               	infsnz	main@i& (0+255),f,b
   501  000A60  2B94               	incf	(main@i+1)& (0+255),f,b
   502  000A62                     l431:
   503                           
   504                           ; BSR set to: 0
   505  000A62  0100               	movlb	0	; () banked
   506  000A64  BF94               	btfsc	(main@i+1)& (0+255),7,b
   507  000A66  D7F2               	goto	l2226
   508  000A68  0100               	movlb	0	; () banked
   509  000A6A  5194               	movf	(main@i+1)& (0+255),w,b
   510  000A6C  E1D6               	bnz	l2220
   511  000A6E  0E32               	movlw	50
   512  000A70  0100               	movlb	0	; () banked
   513  000A72  5D93               	subwf	main@i& (0+255),w,b
   514  000A74  B0D8               	btfsc	status,0,c
   515  000A76  D7D1               	goto	l2220
   516  000A78  D7E9               	goto	l2226
   517                           
   518                           ; BSR set to: 0
   519                           
   520                           ; BSR set to: 0
   521  000A7A  D7CF               	goto	l2220
   522                           
   523                           ; BSR set to: 0
   524                           
   525                           ; BSR set to: 0
   526  000A7C  EF61  F000         	goto	start
   527  000A80                     __end_of_main:
   528                           	opt stack 0
   529                           tblptru	equ	0xFF8
   530                           intcon	equ	0xFF2
   531                           postinc0	equ	0xFEE
   532                           wreg	equ	0xFE8
   533                           status	equ	0xFD8
   534                           
   535 ;; *************** function _printf *****************
   536 ;; Defined at:
   537 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
   538 ;; Parameters:    Size  Location     Type
   539 ;;  f               2    0[BANK0 ] PTR const unsigned char 
   540 ;;		 -> STR_1(16), 
   541 ;; Auto vars:     Size  Location     Type
   542 ;;  tmpval          4    0        struct .
   543 ;;  cp              3    0        PTR const unsigned char 
   544 ;;  val             2    9[BANK0 ] unsigned int 
   545 ;;  ap              2    5[BANK0 ] PTR void [1]
   546 ;;		 -> ?_printf(2), 
   547 ;;  len             2    0        unsigned int 
   548 ;;  c               1   11[BANK0 ] char 
   549 ;;  prec            1    8[BANK0 ] char 
   550 ;;  flag            1    7[BANK0 ] unsigned char 
   551 ;; Return value:  Size  Location     Type
   552 ;;                  2    0[BANK0 ] int 
   553 ;; Registers used:
   554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   555 ;; Tracked objects:
   556 ;;		On entry : 0/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   560 ;;      Params:         0       4       0       0       0       0       0
   561 ;;      Locals:         0       7       0       0       0       0       0
   562 ;;      Temps:          0       1       0       0       0       0       0
   563 ;;      Totals:         0      12       0       0       0       0       0
   564 ;;Total ram usage:       12 bytes
   565 ;; Hardware stack levels used:    1
   566 ;; Hardware stack levels required when called:    5
   567 ;; This function calls:
   568 ;;		___lwdiv
   569 ;;		___lwmod
   570 ;;		_putch
   571 ;; This function is called by:
   572 ;;		_main
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           	psect	text1
   577  000892                     __ptext1:
   578                           	opt stack 0
   579  000892                     _printf:
   580                           	opt stack 25
   581                           
   582                           ;doprnt.c: 466: va_list ap;
   583                           ;doprnt.c: 499: signed char c;
   584                           ;doprnt.c: 506: signed char prec;
   585                           ;doprnt.c: 508: unsigned char flag;
   586                           ;doprnt.c: 523: union {
   587                           ;doprnt.c: 524: unsigned long vd;
   588                           ;doprnt.c: 525: double integ;
   589                           ;doprnt.c: 526: } tmpval;
   590                           ;doprnt.c: 528: unsigned int val;
   591                           ;doprnt.c: 529: unsigned len;
   592                           ;doprnt.c: 530: const char * cp;
   593                           ;doprnt.c: 533: *ap = __va_start();
   594                           
   595                           ; BSR set to: 0
   596                           ;incstack = 0
   597  000892  0E86               	movlw	low (?_printf+2)
   598  000894  0100               	movlb	0	; () banked
   599  000896  6F89               	movwf	printf@ap& (0+255),b
   600  000898  0E00               	movlw	high (?_printf+2)
   601  00089A  0100               	movlb	0	; () banked
   602  00089C  6F8A               	movwf	(printf@ap+1)& (0+255),b
   603                           
   604                           ;doprnt.c: 536: while(c = *f++) {
   605  00089E  D0A0               	goto	l2208
   606  0008A0                     l2162:
   607                           
   608                           ; BSR set to: 0
   609                           ;doprnt.c: 538: if(c != '%')
   610  0008A0  0E25               	movlw	37
   611  0008A2  0100               	movlb	0	; () banked
   612  0008A4  198F               	xorwf	printf@c& (0+255),w,b
   613  0008A6  B4D8               	btfsc	status,2,c
   614  0008A8  D005               	goto	l2166
   615                           
   616                           ; BSR set to: 0
   617                           ;doprnt.c: 540: {
   618                           ;doprnt.c: 541: (putch(c) );
   619  0008AA  0100               	movlb	0	; () banked
   620  0008AC  518F               	movf	printf@c& (0+255),w,b
   621  0008AE  ECD9  F006         	call	_putch
   622                           
   623                           ;doprnt.c: 542: continue;
   624  0008B2  D096               	goto	l2208
   625  0008B4                     l2166:
   626                           
   627                           ;doprnt.c: 543: }
   628                           ;doprnt.c: 548: flag = 0;
   629  0008B4  0E00               	movlw	0
   630  0008B6  0100               	movlb	0	; () banked
   631  0008B8  6F8B               	movwf	printf@flag& (0+255),b
   632                           
   633                           ;doprnt.c: 635: switch(c = *f++) {
   634  0008BA  D004               	goto	l2170
   635                           
   636                           ; BSR set to: 0
   637                           ;doprnt.c: 638: goto alldone;
   638                           
   639                           ;doprnt.c: 637: case 0:
   640  0008BC  0012               	return	
   641                           
   642                           ; BSR set to: 0
   643                           ;doprnt.c: 698: case 'i':
   644                           ;doprnt.c: 699: break;
   645                           
   646                           ; BSR set to: 0
   647                           
   648                           ;doprnt.c: 697: case 'd':
   649  0008BE  D017               	goto	l2172
   650                           
   651                           ; BSR set to: 0
   652                           ;doprnt.c: 813: continue;
   653                           
   654                           ;doprnt.c: 802: default:
   655  0008C0  D08F               	goto	l2208
   656                           
   657                           ; BSR set to: 0
   658                           ;doprnt.c: 822: }
   659  0008C2  D015               	goto	l2172
   660  0008C4                     l2170:
   661                           
   662                           ; BSR set to: 0
   663  0008C4  C084  FFF6         	movff	printf@f,tblptrl
   664  0008C8  C085  FFF7         	movff	printf@f+1,tblptrh
   665  0008CC  0100               	movlb	0	; () banked
   666  0008CE  4B84               	infsnz	printf@f& (0+255),f,b
   667  0008D0  2B85               	incf	(printf@f+1)& (0+255),f,b
   668  0008D2                     	if	0	;tblptru may be non-zero
   669  0008D2                     	endif
   670  0008D2                     	if	0	;tblptru may be non-zero
   671  0008D2                     	endif
   672  0008D2  0008               	tblrd		*
   673  0008D4  CFF5 F08F          	movff	tablat,printf@c
   674  0008D8  0100               	movlb	0	; () banked
   675  0008DA  518F               	movf	printf@c& (0+255),w,b
   676                           
   677                           ; Switch size 1, requested type "space"
   678                           ; Number of cases is 3, Range of values is 0 to 105
   679                           ; switch strategies available:
   680                           ; Name         Instructions Cycles
   681                           ; simple_byte           10     6 (average)
   682                           ;	Chosen strategy is simple_byte
   683  0008DC  0A00               	xorlw	0	; case 0
   684  0008DE  B4D8               	btfsc	status,2,c
   685  0008E0  0012               	return	
   686  0008E2  0A64               	xorlw	100	; case 100
   687  0008E4  B4D8               	btfsc	status,2,c
   688  0008E6  D003               	goto	l2172
   689  0008E8  0A0D               	xorlw	13	; case 105
   690  0008EA  A4D8               	btfss	status,2,c
   691  0008EC  D079               	goto	l2208
   692  0008EE                     l2172:
   693                           
   694                           ; BSR set to: 0
   695                           ;doprnt.c: 1253: {
   696                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   697  0008EE  C089  FFD9         	movff	printf@ap,fsr2l
   698  0008F2  C08A  FFDA         	movff	printf@ap+1,fsr2h
   699  0008F6  CFDE F08D          	movff	postinc2,printf@val
   700  0008FA  CFDD F08E          	movff	postdec2,printf@val+1
   701                           
   702                           ; BSR set to: 0
   703  0008FE  0E02               	movlw	2
   704  000900  0100               	movlb	0	; () banked
   705  000902  2789               	addwf	printf@ap& (0+255),f,b
   706  000904  0E00               	movlw	0
   707  000906  238A               	addwfc	(printf@ap+1)& (0+255),f,b
   708                           
   709                           ; BSR set to: 0
   710                           ;doprnt.c: 1261: if((int)val < 0) {
   711  000908  0100               	movlb	0	; () banked
   712  00090A  AF8E               	btfss	(printf@val+1)& (0+255),7,b
   713  00090C  D009               	goto	l2182
   714                           
   715                           ; BSR set to: 0
   716                           ;doprnt.c: 1262: flag |= 0x03;
   717  00090E  0E03               	movlw	3
   718  000910  0100               	movlb	0	; () banked
   719  000912  138B               	iorwf	printf@flag& (0+255),f,b
   720                           
   721                           ; BSR set to: 0
   722                           ;doprnt.c: 1263: val = -val;
   723  000914  0100               	movlb	0	; () banked
   724  000916  6D8D               	negf	printf@val& (0+255),b
   725  000918  1F8E               	comf	(printf@val+1)& (0+255),f,b
   726  00091A  B0D8               	btfsc	status,0,c
   727  00091C  2B8E               	incf	(printf@val+1)& (0+255),f,b
   728  00091E  D000               	goto	l2182
   729  000920                     l2182:
   730                           
   731                           ; BSR set to: 0
   732                           ;doprnt.c: 1264: }
   733                           ;doprnt.c: 1266: }
   734                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   735  000920  0E01               	movlw	1
   736  000922  0100               	movlb	0	; () banked
   737  000924  6F8F               	movwf	printf@c& (0+255),b
   738  000926                     l2184:
   739                           
   740                           ; BSR set to: 0
   741  000926  0E05               	movlw	5
   742  000928  0100               	movlb	0	; () banked
   743  00092A  198F               	xorwf	printf@c& (0+255),w,b
   744  00092C  B4D8               	btfsc	status,2,c
   745  00092E  D01A               	goto	l2196
   746  000930  D001               	goto	l2188
   747                           
   748                           ; BSR set to: 0
   749  000932  D018               	goto	l2196
   750  000934                     l2188:
   751                           
   752                           ; BSR set to: 0
   753                           ;doprnt.c: 1306: if(val < dpowers[c])
   754  000934  0100               	movlb	0	; () banked
   755  000936  518F               	movf	printf@c& (0+255),w,b
   756  000938  0D02               	mullw	2
   757  00093A  0E01               	movlw	low _dpowers
   758  00093C  24F3               	addwf	prodl,w,c
   759  00093E  6EF6               	movwf	tblptrl,c
   760  000940  0E06               	movlw	high _dpowers
   761  000942  20F4               	addwfc	prodh,w,c
   762  000944  6EF7               	movwf	tblptrh,c
   763  000946                     	if	0	;There are less than 3 active tblptr bytes
   764  000946                     	endif
   765  000946  0009               	tblrd		*+
   766  000948  50F5               	movf	tablat,w,c
   767  00094A  0100               	movlb	0	; () banked
   768  00094C  5D8D               	subwf	printf@val& (0+255),w,b
   769  00094E  0009               	tblrd		*+
   770  000950  50F5               	movf	tablat,w,c
   771  000952  0100               	movlb	0	; () banked
   772  000954  598E               	subwfb	(printf@val+1)& (0+255),w,b
   773  000956  A0D8               	btfss	status,0,c
   774  000958  D005               	goto	l2196
   775  00095A  D001               	goto	l2192
   776                           
   777                           ; BSR set to: 0
   778                           ;doprnt.c: 1307: break;
   779  00095C  D003               	goto	l2196
   780  00095E                     l2192:
   781                           
   782                           ; BSR set to: 0
   783  00095E  0100               	movlb	0	; () banked
   784  000960  2B8F               	incf	printf@c& (0+255),f,b
   785  000962  D7E1               	goto	l2184
   786  000964                     l2196:
   787                           
   788                           ; BSR set to: 0
   789                           ;doprnt.c: 1422: {
   790                           ;doprnt.c: 1438: if(flag & 0x03)
   791  000964  C08B  F088         	movff	printf@flag,??_printf
   792  000968  0E03               	movlw	3
   793  00096A  0100               	movlb	0	; () banked
   794  00096C  1788               	andwf	??_printf& (0+255),f,b
   795  00096E  B4D8               	btfsc	status,2,c
   796  000970  D004               	goto	l2200
   797                           
   798                           ; BSR set to: 0
   799                           ;doprnt.c: 1439: (putch('-') );
   800  000972  0E2D               	movlw	45
   801  000974  ECD9  F006         	call	_putch
   802  000978  D000               	goto	l2200
   803  00097A                     l2200:
   804                           
   805                           ;doprnt.c: 1469: }
   806                           ;doprnt.c: 1472: prec = c;
   807  00097A  C08F  F08C         	movff	printf@c,printf@prec
   808                           
   809                           ;doprnt.c: 1474: while(prec--) {
   810  00097E  D028               	goto	l2206
   811  000980                     l2202:
   812                           
   813                           ;doprnt.c: 1478: {
   814                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
   815  000980  0100               	movlb	0	; () banked
   816  000982  518C               	movf	printf@prec& (0+255),w,b
   817  000984  0D02               	mullw	2
   818  000986  0E01               	movlw	low _dpowers
   819  000988  24F3               	addwf	prodl,w,c
   820  00098A  6EF6               	movwf	tblptrl,c
   821  00098C  0E06               	movlw	high _dpowers
   822  00098E  20F4               	addwfc	prodh,w,c
   823  000990  6EF7               	movwf	tblptrh,c
   824  000992                     	if	0	;There are less than 3 active tblptr bytes
   825  000992                     	endif
   826  000992  0009               	tblrd		*+
   827  000994  CFF5 F040          	movff	tablat,___lwdiv@divisor
   828  000998  000A               	tblrd		*-
   829  00099A  CFF5 F041          	movff	tablat,___lwdiv@divisor+1
   830  00099E  C08D  F03E         	movff	printf@val,___lwdiv@dividend
   831  0009A2  C08E  F03F         	movff	printf@val+1,___lwdiv@dividend+1
   832  0009A6  EC40  F005         	call	___lwdiv	;wreg free
   833  0009AA  C03E  F045         	movff	?___lwdiv,___lwmod@dividend
   834  0009AE  C03F  F046         	movff	?___lwdiv+1,___lwmod@dividend+1
   835  0009B2  0E00               	movlw	0
   836  0009B4  6E48               	movwf	___lwmod@divisor+1,c
   837  0009B6  0E0A               	movlw	10
   838  0009B8  6E47               	movwf	___lwmod@divisor,c
   839  0009BA  EC6E  F005         	call	___lwmod	;wreg free
   840  0009BE  5045               	movf	?___lwmod,w,c
   841  0009C0  0F30               	addlw	48
   842  0009C2  0100               	movlb	0	; () banked
   843  0009C4  6F8F               	movwf	printf@c& (0+255),b
   844                           
   845                           ; BSR set to: 0
   846                           ;doprnt.c: 1523: }
   847                           ;doprnt.c: 1524: (putch(c) );
   848  0009C6  0100               	movlb	0	; () banked
   849  0009C8  518F               	movf	printf@c& (0+255),w,b
   850  0009CA  ECD9  F006         	call	_putch
   851  0009CE  D000               	goto	l2206
   852  0009D0                     l2206:
   853  0009D0  0100               	movlb	0	; () banked
   854  0009D2  078C               	decf	printf@prec& (0+255),f,b
   855  0009D4  0100               	movlb	0	; () banked
   856  0009D6  298C               	incf	printf@prec& (0+255),w,b
   857  0009D8  B4D8               	btfsc	status,2,c
   858  0009DA  D002               	goto	l2208
   859  0009DC  D7D1               	goto	l2202
   860                           
   861                           ; BSR set to: 0
   862  0009DE  D000               	goto	l2208
   863  0009E0                     l2208:
   864  0009E0  C084  FFF6         	movff	printf@f,tblptrl
   865  0009E4  C085  FFF7         	movff	printf@f+1,tblptrh
   866  0009E8  0100               	movlb	0	; () banked
   867  0009EA  4B84               	infsnz	printf@f& (0+255),f,b
   868  0009EC  2B85               	incf	(printf@f+1)& (0+255),f,b
   869  0009EE                     	if	0	;tblptru may be non-zero
   870  0009EE                     	endif
   871  0009EE                     	if	0	;tblptru may be non-zero
   872  0009EE                     	endif
   873  0009EE  0008               	tblrd		*
   874  0009F0  CFF5 F08F          	movff	tablat,printf@c
   875  0009F4  0100               	movlb	0	; () banked
   876  0009F6  518F               	movf	printf@c& (0+255),w,b
   877  0009F8  B4D8               	btfsc	status,2,c
   878  0009FA  0012               	return	
   879  0009FC  D751               	goto	l2162
   880                           
   881                           ; BSR set to: 0
   882  0009FE  0012               	return	
   883                           
   884                           ; BSR set to: 0
   885                           
   886                           ; BSR set to: 0
   887                           ;doprnt.c: 1540: return 0;
   888                           ;	Return value of _printf is never used
   889                           
   890                           ;doprnt.c: 1525: }
   891                           ;doprnt.c: 1533: }
   892                           ;doprnt.c: 1535: alldone:
   893  000A00  0012               	return		;funcret
   894  000A02                     __end_of_printf:
   895                           	opt stack 0
   896                           tblptru	equ	0xFF8
   897                           tblptrh	equ	0xFF7
   898                           tblptrl	equ	0xFF6
   899                           tablat	equ	0xFF5
   900                           prodh	equ	0xFF4
   901                           prodl	equ	0xFF3
   902                           intcon	equ	0xFF2
   903                           postinc0	equ	0xFEE
   904                           wreg	equ	0xFE8
   905                           postinc2	equ	0xFDE
   906                           postdec2	equ	0xFDD
   907                           fsr2h	equ	0xFDA
   908                           fsr2l	equ	0xFD9
   909                           status	equ	0xFD8
   910                           
   911 ;; *************** function _putch *****************
   912 ;; Defined at:
   913 ;;		line 168 in file "mcc_generated_files/eusart1.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;  txData          1    wreg     unsigned char 
   916 ;; Auto vars:     Size  Location     Type
   917 ;;  txData          1   20[COMRAM] unsigned char 
   918 ;; Return value:  Size  Location     Type
   919 ;;		None               void
   920 ;; Registers used:
   921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   927 ;;      Params:         0       0       0       0       0       0       0
   928 ;;      Locals:         1       0       0       0       0       0       0
   929 ;;      Temps:          0       0       0       0       0       0       0
   930 ;;      Totals:         1       0       0       0       0       0       0
   931 ;;Total ram usage:        1 bytes
   932 ;; Hardware stack levels used:    1
   933 ;; Hardware stack levels required when called:    4
   934 ;; This function calls:
   935 ;;		_EUSART1_Write
   936 ;; This function is called by:
   937 ;;		_printf
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text2
   942  000DB2                     __ptext2:
   943                           	opt stack 0
   944  000DB2                     _putch:
   945                           	opt stack 25
   946                           
   947                           ; BSR set to: 0
   948                           ;incstack = 0
   949                           ;putch@txData stored from wreg
   950  000DB2  6E3F               	movwf	putch@txData,c
   951                           
   952                           ;eusart1.c: 170: EUSART1_Write(txData);
   953  000DB4  503F               	movf	putch@txData,w,c
   954  000DB6  ECBA  F005         	call	_EUSART1_Write
   955  000DBA  0012               	return		;funcret
   956  000DBC                     __end_of_putch:
   957                           	opt stack 0
   958                           tblptru	equ	0xFF8
   959                           tblptrh	equ	0xFF7
   960                           tblptrl	equ	0xFF6
   961                           tablat	equ	0xFF5
   962                           prodh	equ	0xFF4
   963                           prodl	equ	0xFF3
   964                           intcon	equ	0xFF2
   965                           postinc0	equ	0xFEE
   966                           wreg	equ	0xFE8
   967                           postinc2	equ	0xFDE
   968                           postdec2	equ	0xFDD
   969                           fsr2h	equ	0xFDA
   970                           fsr2l	equ	0xFD9
   971                           status	equ	0xFD8
   972                           
   973 ;; *************** function _EUSART1_Write *****************
   974 ;; Defined at:
   975 ;;		line 140 in file "mcc_generated_files/eusart1.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;  txData          1    wreg     unsigned char 
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  txData          1   19[COMRAM] unsigned char 
   980 ;; Return value:  Size  Location     Type
   981 ;;		None               void
   982 ;; Registers used:
   983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   989 ;;      Params:         0       0       0       0       0       0       0
   990 ;;      Locals:         1       0       0       0       0       0       0
   991 ;;      Temps:          0       0       0       0       0       0       0
   992 ;;      Totals:         1       0       0       0       0       0       0
   993 ;;Total ram usage:        1 bytes
   994 ;; Hardware stack levels used:    1
   995 ;; Hardware stack levels required when called:    3
   996 ;; This function calls:
   997 ;;		Nothing
   998 ;; This function is called by:
   999 ;;		_putch
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           	psect	text3
  1004  000B74                     __ptext3:
  1005                           	opt stack 0
  1006  000B74                     _EUSART1_Write:
  1007                           	opt stack 25
  1008                           
  1009                           ;incstack = 0
  1010                           ;EUSART1_Write@txData stored from wreg
  1011  000B74  6E3E               	movwf	EUSART1_Write@txData,c
  1012                           
  1013                           ;eusart1.c: 142: while(0 == eusart1TxBufferRemaining)
  1014  000B76  D000               	goto	l2032
  1015  000B78                     l2032:
  1016  000B78  504C               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  1017  000B7A  B4D8               	btfsc	status,2,c
  1018  000B7C  D7FD               	goto	l2032
  1019                           
  1020                           ;eusart1.c: 144: }
  1021                           ;eusart1.c: 146: if(0 == PIE1bits.TX1IE)
  1022  000B7E  B89D               	btfsc	3997,4,c	;volatile
  1023  000B80  D003               	goto	l201
  1024                           
  1025                           ;eusart1.c: 147: {
  1026                           ;eusart1.c: 148: TX1REG = txData;
  1027  000B82  C03E  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1028                           
  1029                           ;eusart1.c: 149: }
  1030  000B86  D014               	goto	l2046
  1031  000B88                     l201:
  1032                           
  1033                           ;eusart1.c: 150: else
  1034                           ;eusart1.c: 151: {
  1035                           ;eusart1.c: 152: PIE1bits.TX1IE = 0;
  1036  000B88  989D               	bcf	3997,4,c	;volatile
  1037                           
  1038                           ;eusart1.c: 153: eusart1TxBuffer[eusart1TxHead++] = txData;
  1039  000B8A  5013               	movf	_eusart1TxHead,w,c
  1040  000B8C  0D01               	mullw	1
  1041  000B8E  0E7C               	movlw	low _eusart1TxBuffer
  1042  000B90  24F3               	addwf	prodl,w,c
  1043  000B92  6ED9               	movwf	fsr2l,c
  1044  000B94  0E00               	movlw	high _eusart1TxBuffer
  1045  000B96  20F4               	addwfc	prodh,w,c
  1046  000B98  6EDA               	movwf	fsr2h,c
  1047  000B9A  C03E  FFDF         	movff	EUSART1_Write@txData,indf2
  1048  000B9E  2A13               	incf	_eusart1TxHead,f,c
  1049                           
  1050                           ;eusart1.c: 154: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  1051  000BA0  0E07               	movlw	7
  1052  000BA2  6413               	cpfsgt	_eusart1TxHead,c
  1053  000BA4  D003               	goto	l2044
  1054                           
  1055                           ;eusart1.c: 155: {
  1056                           ;eusart1.c: 156: eusart1TxHead = 0;
  1057  000BA6  0E00               	movlw	0
  1058  000BA8  6E13               	movwf	_eusart1TxHead,c
  1059  000BAA  D000               	goto	l2044
  1060  000BAC                     l2044:
  1061                           
  1062                           ;eusart1.c: 157: }
  1063                           ;eusart1.c: 158: eusart1TxBufferRemaining--;
  1064  000BAC  064C               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  1065  000BAE  D000               	goto	l2046
  1066  000BB0                     l2046:
  1067                           
  1068                           ;eusart1.c: 159: }
  1069                           ;eusart1.c: 160: PIE1bits.TX1IE = 1;
  1070  000BB0  889D               	bsf	3997,4,c	;volatile
  1071  000BB2  0012               	return		;funcret
  1072  000BB4                     __end_of_EUSART1_Write:
  1073                           	opt stack 0
  1074                           tblptru	equ	0xFF8
  1075                           tblptrh	equ	0xFF7
  1076                           tblptrl	equ	0xFF6
  1077                           tablat	equ	0xFF5
  1078                           prodh	equ	0xFF4
  1079                           prodl	equ	0xFF3
  1080                           intcon	equ	0xFF2
  1081                           postinc0	equ	0xFEE
  1082                           wreg	equ	0xFE8
  1083                           indf2	equ	0xFDF
  1084                           postinc2	equ	0xFDE
  1085                           postdec2	equ	0xFDD
  1086                           fsr2h	equ	0xFDA
  1087                           fsr2l	equ	0xFD9
  1088                           status	equ	0xFD8
  1089                           
  1090 ;; *************** function ___lwmod *****************
  1091 ;; Defined at:
  1092 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;  dividend        2   26[COMRAM] unsigned int 
  1095 ;;  divisor         2   28[COMRAM] unsigned int 
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;  counter         1   30[COMRAM] unsigned char 
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  2   26[COMRAM] unsigned int 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2, status,0
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1107 ;;      Params:         4       0       0       0       0       0       0
  1108 ;;      Locals:         1       0       0       0       0       0       0
  1109 ;;      Temps:          0       0       0       0       0       0       0
  1110 ;;      Totals:         5       0       0       0       0       0       0
  1111 ;;Total ram usage:        5 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; Hardware stack levels required when called:    3
  1114 ;; This function calls:
  1115 ;;		Nothing
  1116 ;; This function is called by:
  1117 ;;		_printf
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text4
  1122  000ADC                     __ptext4:
  1123                           	opt stack 0
  1124  000ADC                     ___lwmod:
  1125                           	opt stack 26
  1126                           
  1127                           ;incstack = 0
  1128  000ADC  5047               	movf	___lwmod@divisor,w,c
  1129  000ADE  1048               	iorwf	___lwmod@divisor+1,w,c
  1130  000AE0  B4D8               	btfsc	status,2,c
  1131  000AE2  D01D               	goto	l1127
  1132  000AE4  0E01               	movlw	1
  1133  000AE6  6E49               	movwf	___lwmod@counter,c
  1134  000AE8  D005               	goto	l2128
  1135  000AEA                     l2126:
  1136  000AEA  90D8               	bcf	status,0,c
  1137  000AEC  3647               	rlcf	___lwmod@divisor,f,c
  1138  000AEE  3648               	rlcf	___lwmod@divisor+1,f,c
  1139  000AF0  2A49               	incf	___lwmod@counter,f,c
  1140  000AF2  D000               	goto	l2128
  1141  000AF4                     l2128:
  1142  000AF4  BE48               	btfsc	___lwmod@divisor+1,7,c
  1143  000AF6  D002               	goto	l2130
  1144  000AF8  D7F8               	goto	l2126
  1145  000AFA  D000               	goto	l2130
  1146  000AFC                     l2130:
  1147  000AFC  5047               	movf	___lwmod@divisor,w,c
  1148  000AFE  5C45               	subwf	___lwmod@dividend,w,c
  1149  000B00  5048               	movf	___lwmod@divisor+1,w,c
  1150  000B02  5846               	subwfb	___lwmod@dividend+1,w,c
  1151  000B04  A0D8               	btfss	status,0,c
  1152  000B06  D005               	goto	l2134
  1153  000B08  5047               	movf	___lwmod@divisor,w,c
  1154  000B0A  5E45               	subwf	___lwmod@dividend,f,c
  1155  000B0C  5048               	movf	___lwmod@divisor+1,w,c
  1156  000B0E  5A46               	subwfb	___lwmod@dividend+1,f,c
  1157  000B10  D000               	goto	l2134
  1158  000B12                     l2134:
  1159  000B12  90D8               	bcf	status,0,c
  1160  000B14  3248               	rrcf	___lwmod@divisor+1,f,c
  1161  000B16  3247               	rrcf	___lwmod@divisor,f,c
  1162  000B18  2E49               	decfsz	___lwmod@counter,f,c
  1163  000B1A  D7F0               	goto	l2130
  1164  000B1C  D000               	goto	l1127
  1165  000B1E                     l1127:
  1166  000B1E  C045  F045         	movff	___lwmod@dividend,?___lwmod
  1167  000B22  C046  F046         	movff	___lwmod@dividend+1,?___lwmod+1
  1168  000B26  0012               	return		;funcret
  1169  000B28                     __end_of___lwmod:
  1170                           	opt stack 0
  1171                           tblptru	equ	0xFF8
  1172                           tblptrh	equ	0xFF7
  1173                           tblptrl	equ	0xFF6
  1174                           tablat	equ	0xFF5
  1175                           prodh	equ	0xFF4
  1176                           prodl	equ	0xFF3
  1177                           intcon	equ	0xFF2
  1178                           postinc0	equ	0xFEE
  1179                           wreg	equ	0xFE8
  1180                           indf2	equ	0xFDF
  1181                           postinc2	equ	0xFDE
  1182                           postdec2	equ	0xFDD
  1183                           fsr2h	equ	0xFDA
  1184                           fsr2l	equ	0xFD9
  1185                           status	equ	0xFD8
  1186                           
  1187 ;; *************** function ___lwdiv *****************
  1188 ;; Defined at:
  1189 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;  dividend        2   19[COMRAM] unsigned int 
  1192 ;;  divisor         2   21[COMRAM] unsigned int 
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;  quotient        2   24[COMRAM] unsigned int 
  1195 ;;  counter         1   23[COMRAM] unsigned char 
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  2   19[COMRAM] unsigned int 
  1198 ;; Registers used:
  1199 ;;		wreg, status,2, status,0
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1205 ;;      Params:         4       0       0       0       0       0       0
  1206 ;;      Locals:         3       0       0       0       0       0       0
  1207 ;;      Temps:          0       0       0       0       0       0       0
  1208 ;;      Totals:         7       0       0       0       0       0       0
  1209 ;;Total ram usage:        7 bytes
  1210 ;; Hardware stack levels used:    1
  1211 ;; Hardware stack levels required when called:    3
  1212 ;; This function calls:
  1213 ;;		Nothing
  1214 ;; This function is called by:
  1215 ;;		_printf
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           	psect	text5
  1220  000A80                     __ptext5:
  1221                           	opt stack 0
  1222  000A80                     ___lwdiv:
  1223                           	opt stack 26
  1224                           
  1225                           ;incstack = 0
  1226  000A80  0E00               	movlw	0
  1227  000A82  6E44               	movwf	___lwdiv@quotient+1,c
  1228  000A84  0E00               	movlw	0
  1229  000A86  6E43               	movwf	___lwdiv@quotient,c
  1230  000A88  5040               	movf	___lwdiv@divisor,w,c
  1231  000A8A  1041               	iorwf	___lwdiv@divisor+1,w,c
  1232  000A8C  B4D8               	btfsc	status,2,c
  1233  000A8E  D021               	goto	l1117
  1234  000A90  0E01               	movlw	1
  1235  000A92  6E42               	movwf	___lwdiv@counter,c
  1236  000A94  D005               	goto	l2108
  1237  000A96                     l2106:
  1238  000A96  90D8               	bcf	status,0,c
  1239  000A98  3640               	rlcf	___lwdiv@divisor,f,c
  1240  000A9A  3641               	rlcf	___lwdiv@divisor+1,f,c
  1241  000A9C  2A42               	incf	___lwdiv@counter,f,c
  1242  000A9E  D000               	goto	l2108
  1243  000AA0                     l2108:
  1244  000AA0  BE41               	btfsc	___lwdiv@divisor+1,7,c
  1245  000AA2  D002               	goto	l2110
  1246  000AA4  D7F8               	goto	l2106
  1247  000AA6  D000               	goto	l2110
  1248  000AA8                     l2110:
  1249  000AA8  90D8               	bcf	status,0,c
  1250  000AAA  3643               	rlcf	___lwdiv@quotient,f,c
  1251  000AAC  3644               	rlcf	___lwdiv@quotient+1,f,c
  1252  000AAE  5040               	movf	___lwdiv@divisor,w,c
  1253  000AB0  5C3E               	subwf	___lwdiv@dividend,w,c
  1254  000AB2  5041               	movf	___lwdiv@divisor+1,w,c
  1255  000AB4  583F               	subwfb	___lwdiv@dividend+1,w,c
  1256  000AB6  A0D8               	btfss	status,0,c
  1257  000AB8  D006               	goto	l2118
  1258  000ABA  5040               	movf	___lwdiv@divisor,w,c
  1259  000ABC  5E3E               	subwf	___lwdiv@dividend,f,c
  1260  000ABE  5041               	movf	___lwdiv@divisor+1,w,c
  1261  000AC0  5A3F               	subwfb	___lwdiv@dividend+1,f,c
  1262  000AC2  8043               	bsf	___lwdiv@quotient,0,c
  1263  000AC4  D000               	goto	l2118
  1264  000AC6                     l2118:
  1265  000AC6  90D8               	bcf	status,0,c
  1266  000AC8  3241               	rrcf	___lwdiv@divisor+1,f,c
  1267  000ACA  3240               	rrcf	___lwdiv@divisor,f,c
  1268  000ACC  2E42               	decfsz	___lwdiv@counter,f,c
  1269  000ACE  D7EC               	goto	l2110
  1270  000AD0  D000               	goto	l1117
  1271  000AD2                     l1117:
  1272  000AD2  C043  F03E         	movff	___lwdiv@quotient,?___lwdiv
  1273  000AD6  C044  F03F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1274  000ADA  0012               	return		;funcret
  1275  000ADC                     __end_of___lwdiv:
  1276                           	opt stack 0
  1277                           tblptru	equ	0xFF8
  1278                           tblptrh	equ	0xFF7
  1279                           tblptrl	equ	0xFF6
  1280                           tablat	equ	0xFF5
  1281                           prodh	equ	0xFF4
  1282                           prodl	equ	0xFF3
  1283                           intcon	equ	0xFF2
  1284                           postinc0	equ	0xFEE
  1285                           wreg	equ	0xFE8
  1286                           indf2	equ	0xFDF
  1287                           postinc2	equ	0xFDE
  1288                           postdec2	equ	0xFDD
  1289                           fsr2h	equ	0xFDA
  1290                           fsr2l	equ	0xFD9
  1291                           status	equ	0xFD8
  1292                           
  1293 ;; *************** function _SYSTEM_Initialize *****************
  1294 ;; Defined at:
  1295 ;;		line 112 in file "mcc_generated_files/mcc.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;		None
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;		None
  1300 ;; Return value:  Size  Location     Type
  1301 ;;		None               void
  1302 ;; Registers used:
  1303 ;;		wreg, status,2, status,0, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1309 ;;      Params:         0       0       0       0       0       0       0
  1310 ;;      Locals:         0       0       0       0       0       0       0
  1311 ;;      Temps:          0       0       0       0       0       0       0
  1312 ;;      Totals:         0       0       0       0       0       0       0
  1313 ;;Total ram usage:        0 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; Hardware stack levels required when called:    5
  1316 ;; This function calls:
  1317 ;;		_ADC_Initialize
  1318 ;;		_EUSART1_Initialize
  1319 ;;		_I2C1_Initialize
  1320 ;;		_INTERRUPT_Initialize
  1321 ;;		_OSCILLATOR_Initialize
  1322 ;;		_PIN_MANAGER_Initialize
  1323 ;;		_TMR0_Initialize
  1324 ;; This function is called by:
  1325 ;;		_main
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text6
  1330  000D16                     __ptext6:
  1331                           	opt stack 0
  1332  000D16                     _SYSTEM_Initialize:
  1333                           	opt stack 25
  1334                           
  1335                           ;mcc.c: 114: OSCILLATOR_Initialize();
  1336                           
  1337                           ;incstack = 0
  1338  000D16  ECD2  F006         	call	_OSCILLATOR_Initialize	;wreg free
  1339                           
  1340                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1341  000D1A  EC94  F005         	call	_PIN_MANAGER_Initialize	;wreg free
  1342                           
  1343                           ;mcc.c: 116: INTERRUPT_Initialize();
  1344  000D1E  ECC2  F006         	call	_INTERRUPT_Initialize	;wreg free
  1345                           
  1346                           ;mcc.c: 117: ADC_Initialize();
  1347  000D22  ECB6  F006         	call	_ADC_Initialize	;wreg free
  1348                           
  1349                           ;mcc.c: 118: TMR0_Initialize();
  1350  000D26  EC9A  F006         	call	_TMR0_Initialize	;wreg free
  1351                           
  1352                           ;mcc.c: 119: EUSART1_Initialize();
  1353  000D2A  ECFA  F005         	call	_EUSART1_Initialize	;wreg free
  1354                           
  1355                           ;mcc.c: 120: I2C1_Initialize();
  1356  000D2E  EC63  F006         	call	_I2C1_Initialize	;wreg free
  1357  000D32  0012               	return		;funcret
  1358  000D34                     __end_of_SYSTEM_Initialize:
  1359                           	opt stack 0
  1360                           tblptru	equ	0xFF8
  1361                           tblptrh	equ	0xFF7
  1362                           tblptrl	equ	0xFF6
  1363                           tablat	equ	0xFF5
  1364                           prodh	equ	0xFF4
  1365                           prodl	equ	0xFF3
  1366                           intcon	equ	0xFF2
  1367                           postinc0	equ	0xFEE
  1368                           wreg	equ	0xFE8
  1369                           indf2	equ	0xFDF
  1370                           postinc2	equ	0xFDE
  1371                           postdec2	equ	0xFDD
  1372                           fsr2h	equ	0xFDA
  1373                           fsr2l	equ	0xFD9
  1374                           status	equ	0xFD8
  1375                           
  1376 ;; *************** function _TMR0_Initialize *****************
  1377 ;; Defined at:
  1378 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;		None
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;		None
  1383 ;; Return value:  Size  Location     Type
  1384 ;;		None               void
  1385 ;; Registers used:
  1386 ;;		wreg, status,2, cstack
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1392 ;;      Params:         0       0       0       0       0       0       0
  1393 ;;      Locals:         0       0       0       0       0       0       0
  1394 ;;      Temps:          0       0       0       0       0       0       0
  1395 ;;      Totals:         0       0       0       0       0       0       0
  1396 ;;Total ram usage:        0 bytes
  1397 ;; Hardware stack levels used:    1
  1398 ;; Hardware stack levels required when called:    4
  1399 ;; This function calls:
  1400 ;;		_TMR0_StartTimer
  1401 ;; This function is called by:
  1402 ;;		_SYSTEM_Initialize
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           	psect	text7
  1407  000D34                     __ptext7:
  1408                           	opt stack 0
  1409  000D34                     _TMR0_Initialize:
  1410                           	opt stack 25
  1411                           
  1412                           ;tmr0.c: 70: T0CON = 0x94;
  1413                           
  1414                           ;incstack = 0
  1415  000D34  0E94               	movlw	148
  1416  000D36  6ED5               	movwf	4053,c	;volatile
  1417                           
  1418                           ;tmr0.c: 73: TMR0H = 0x00;
  1419  000D38  0E00               	movlw	0
  1420  000D3A  6ED7               	movwf	4055,c	;volatile
  1421                           
  1422                           ;tmr0.c: 76: TMR0L = 0x64;
  1423  000D3C  0E64               	movlw	100
  1424  000D3E  6ED6               	movwf	4054,c	;volatile
  1425                           
  1426                           ;tmr0.c: 79: timer0ReloadVal16bit = 100;
  1427  000D40  0E00               	movlw	0
  1428  000D42  6E4B               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  1429  000D44  0E64               	movlw	100
  1430  000D46  6E4A               	movwf	_timer0ReloadVal16bit,c	;volatile
  1431                           
  1432                           ;tmr0.c: 82: INTCONbits.TMR0IF = 0;
  1433  000D48  94F2               	bcf	intcon,2,c	;volatile
  1434                           
  1435                           ;tmr0.c: 85: INTCONbits.TMR0IE = 1;
  1436  000D4A  8AF2               	bsf	intcon,5,c	;volatile
  1437                           
  1438                           ;tmr0.c: 88: TMR0_StartTimer();
  1439  000D4C  ECE1  F006         	call	_TMR0_StartTimer	;wreg free
  1440  000D50  0012               	return		;funcret
  1441  000D52                     __end_of_TMR0_Initialize:
  1442                           	opt stack 0
  1443                           tblptru	equ	0xFF8
  1444                           tblptrh	equ	0xFF7
  1445                           tblptrl	equ	0xFF6
  1446                           tablat	equ	0xFF5
  1447                           prodh	equ	0xFF4
  1448                           prodl	equ	0xFF3
  1449                           intcon	equ	0xFF2
  1450                           postinc0	equ	0xFEE
  1451                           wreg	equ	0xFE8
  1452                           indf2	equ	0xFDF
  1453                           postinc2	equ	0xFDE
  1454                           postdec2	equ	0xFDD
  1455                           fsr2h	equ	0xFDA
  1456                           fsr2l	equ	0xFD9
  1457                           status	equ	0xFD8
  1458                           
  1459 ;; *************** function _TMR0_StartTimer *****************
  1460 ;; Defined at:
  1461 ;;		line 91 in file "mcc_generated_files/tmr0.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;		None
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;		None
  1466 ;; Return value:  Size  Location     Type
  1467 ;;		None               void
  1468 ;; Registers used:
  1469 ;;		None
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1475 ;;      Params:         0       0       0       0       0       0       0
  1476 ;;      Locals:         0       0       0       0       0       0       0
  1477 ;;      Temps:          0       0       0       0       0       0       0
  1478 ;;      Totals:         0       0       0       0       0       0       0
  1479 ;;Total ram usage:        0 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    3
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_TMR0_Initialize
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text8
  1490  000DC2                     __ptext8:
  1491                           	opt stack 0
  1492  000DC2                     _TMR0_StartTimer:
  1493                           	opt stack 25
  1494                           
  1495                           ;tmr0.c: 94: T0CONbits.TMR0ON = 1;
  1496                           
  1497                           ;incstack = 0
  1498  000DC2  8ED5               	bsf	4053,7,c	;volatile
  1499  000DC4  0012               	return		;funcret
  1500  000DC6                     __end_of_TMR0_StartTimer:
  1501                           	opt stack 0
  1502                           tblptru	equ	0xFF8
  1503                           tblptrh	equ	0xFF7
  1504                           tblptrl	equ	0xFF6
  1505                           tablat	equ	0xFF5
  1506                           prodh	equ	0xFF4
  1507                           prodl	equ	0xFF3
  1508                           intcon	equ	0xFF2
  1509                           postinc0	equ	0xFEE
  1510                           wreg	equ	0xFE8
  1511                           indf2	equ	0xFDF
  1512                           postinc2	equ	0xFDE
  1513                           postdec2	equ	0xFDD
  1514                           fsr2h	equ	0xFDA
  1515                           fsr2l	equ	0xFD9
  1516                           status	equ	0xFD8
  1517                           
  1518 ;; *************** function _PIN_MANAGER_Initialize *****************
  1519 ;; Defined at:
  1520 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;		None
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;		None
  1525 ;; Return value:  Size  Location     Type
  1526 ;;		None               void
  1527 ;; Registers used:
  1528 ;;		wreg, status,2
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1534 ;;      Params:         0       0       0       0       0       0       0
  1535 ;;      Locals:         0       0       0       0       0       0       0
  1536 ;;      Temps:          0       0       0       0       0       0       0
  1537 ;;      Totals:         0       0       0       0       0       0       0
  1538 ;;Total ram usage:        0 bytes
  1539 ;; Hardware stack levels used:    1
  1540 ;; Hardware stack levels required when called:    3
  1541 ;; This function calls:
  1542 ;;		Nothing
  1543 ;; This function is called by:
  1544 ;;		_SYSTEM_Initialize
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text9
  1549  000B28                     __ptext9:
  1550                           	opt stack 0
  1551  000B28                     _PIN_MANAGER_Initialize:
  1552                           	opt stack 26
  1553                           
  1554                           ;pin_manager.c: 52: LATA = 0x00;
  1555                           
  1556                           ;incstack = 0
  1557  000B28  0E00               	movlw	0
  1558  000B2A  6E89               	movwf	3977,c	;volatile
  1559                           
  1560                           ;pin_manager.c: 53: TRISA = 0xF7;
  1561  000B2C  0EF7               	movlw	247
  1562  000B2E  6E92               	movwf	3986,c	;volatile
  1563                           
  1564                           ;pin_manager.c: 54: ANSELA = 0x20;
  1565  000B30  0E20               	movlw	32
  1566  000B32  010F               	movlb	15	; () banked
  1567  000B34  6F38               	movwf	56,b	;volatile
  1568                           
  1569                           ;pin_manager.c: 56: LATB = 0x00;
  1570  000B36  0E00               	movlw	0
  1571  000B38  6E8A               	movwf	3978,c	;volatile
  1572                           
  1573                           ;pin_manager.c: 57: TRISB = 0xD7;
  1574  000B3A  0ED7               	movlw	215
  1575  000B3C  6E93               	movwf	3987,c	;volatile
  1576                           
  1577                           ;pin_manager.c: 58: ANSELB = 0x00;
  1578  000B3E  0E00               	movlw	0
  1579  000B40  010F               	movlb	15	; () banked
  1580  000B42  6F39               	movwf	57,b	;volatile
  1581                           
  1582                           ;pin_manager.c: 59: WPUB = 0x00;
  1583  000B44  0E00               	movlw	0
  1584  000B46  6E61               	movwf	3937,c	;volatile
  1585                           
  1586                           ;pin_manager.c: 61: LATC = 0x18;
  1587  000B48  0E18               	movlw	24
  1588  000B4A  6E8B               	movwf	3979,c	;volatile
  1589                           
  1590                           ; BSR set to: 15
  1591                           ;pin_manager.c: 62: TRISC = 0xFF;
  1592  000B4C  6894               	setf	3988,c	;volatile
  1593                           
  1594                           ;pin_manager.c: 63: ANSELC = 0x04;
  1595  000B4E  0E04               	movlw	4
  1596  000B50  010F               	movlb	15	; () banked
  1597  000B52  6F3A               	movwf	58,b	;volatile
  1598                           
  1599                           ;pin_manager.c: 65: LATD = 0x00;
  1600  000B54  0E00               	movlw	0
  1601  000B56  6E8C               	movwf	3980,c	;volatile
  1602                           
  1603                           ;pin_manager.c: 66: TRISD = 0xFD;
  1604  000B58  0EFD               	movlw	253
  1605  000B5A  6E95               	movwf	3989,c	;volatile
  1606                           
  1607                           ;pin_manager.c: 67: ANSELD = 0xDD;
  1608  000B5C  0EDD               	movlw	221
  1609  000B5E  010F               	movlb	15	; () banked
  1610  000B60  6F3B               	movwf	59,b	;volatile
  1611                           
  1612                           ;pin_manager.c: 69: LATE = 0x00;
  1613  000B62  0E00               	movlw	0
  1614  000B64  6E8D               	movwf	3981,c	;volatile
  1615                           
  1616                           ;pin_manager.c: 70: TRISE = 0x00;
  1617  000B66  0E00               	movlw	0
  1618  000B68  6E96               	movwf	3990,c	;volatile
  1619                           
  1620                           ;pin_manager.c: 71: ANSELE = 0x00;
  1621  000B6A  0E00               	movlw	0
  1622  000B6C  010F               	movlb	15	; () banked
  1623  000B6E  6F3C               	movwf	60,b	;volatile
  1624                           
  1625                           ; BSR set to: 15
  1626                           ;pin_manager.c: 73: INTCON2bits.nRBPU = 0x01;
  1627  000B70  8EF1               	bsf	intcon2,7,c	;volatile
  1628                           
  1629                           ; BSR set to: 15
  1630  000B72  0012               	return		;funcret
  1631  000B74                     __end_of_PIN_MANAGER_Initialize:
  1632                           	opt stack 0
  1633                           tblptru	equ	0xFF8
  1634                           tblptrh	equ	0xFF7
  1635                           tblptrl	equ	0xFF6
  1636                           tablat	equ	0xFF5
  1637                           prodh	equ	0xFF4
  1638                           prodl	equ	0xFF3
  1639                           intcon	equ	0xFF2
  1640                           intcon2	equ	0xFF1
  1641                           postinc0	equ	0xFEE
  1642                           wreg	equ	0xFE8
  1643                           indf2	equ	0xFDF
  1644                           postinc2	equ	0xFDE
  1645                           postdec2	equ	0xFDD
  1646                           fsr2h	equ	0xFDA
  1647                           fsr2l	equ	0xFD9
  1648                           status	equ	0xFD8
  1649                           
  1650 ;; *************** function _OSCILLATOR_Initialize *****************
  1651 ;; Defined at:
  1652 ;;		line 123 in file "mcc_generated_files/mcc.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;		None
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;		None
  1657 ;; Return value:  Size  Location     Type
  1658 ;;		None               void
  1659 ;; Registers used:
  1660 ;;		wreg, status,2
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1666 ;;      Params:         0       0       0       0       0       0       0
  1667 ;;      Locals:         0       0       0       0       0       0       0
  1668 ;;      Temps:          0       0       0       0       0       0       0
  1669 ;;      Totals:         0       0       0       0       0       0       0
  1670 ;;Total ram usage:        0 bytes
  1671 ;; Hardware stack levels used:    1
  1672 ;; Hardware stack levels required when called:    3
  1673 ;; This function calls:
  1674 ;;		Nothing
  1675 ;; This function is called by:
  1676 ;;		_SYSTEM_Initialize
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           	psect	text10
  1681  000DA4                     __ptext10:
  1682                           	opt stack 0
  1683  000DA4                     _OSCILLATOR_Initialize:
  1684                           	opt stack 26
  1685                           
  1686                           ;mcc.c: 126: OSCCON = 0x72;
  1687                           
  1688                           ; BSR set to: 15
  1689                           ;incstack = 0
  1690  000DA4  0E72               	movlw	114
  1691  000DA6  6ED3               	movwf	4051,c	;volatile
  1692                           
  1693                           ;mcc.c: 128: OSCCON2 = 0x04;
  1694  000DA8  0E04               	movlw	4
  1695  000DAA  6ED2               	movwf	4050,c	;volatile
  1696                           
  1697                           ;mcc.c: 130: OSCTUNE = 0x00;
  1698  000DAC  0E00               	movlw	0
  1699  000DAE  6E9B               	movwf	3995,c	;volatile
  1700  000DB0  0012               	return		;funcret
  1701  000DB2                     __end_of_OSCILLATOR_Initialize:
  1702                           	opt stack 0
  1703                           tblptru	equ	0xFF8
  1704                           tblptrh	equ	0xFF7
  1705                           tblptrl	equ	0xFF6
  1706                           tablat	equ	0xFF5
  1707                           prodh	equ	0xFF4
  1708                           prodl	equ	0xFF3
  1709                           intcon	equ	0xFF2
  1710                           intcon2	equ	0xFF1
  1711                           postinc0	equ	0xFEE
  1712                           wreg	equ	0xFE8
  1713                           indf2	equ	0xFDF
  1714                           postinc2	equ	0xFDE
  1715                           postdec2	equ	0xFDD
  1716                           fsr2h	equ	0xFDA
  1717                           fsr2l	equ	0xFD9
  1718                           status	equ	0xFD8
  1719                           
  1720 ;; *************** function _INTERRUPT_Initialize *****************
  1721 ;; Defined at:
  1722 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;		None
  1727 ;; Return value:  Size  Location     Type
  1728 ;;		None               void
  1729 ;; Registers used:
  1730 ;;		None
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1736 ;;      Params:         0       0       0       0       0       0       0
  1737 ;;      Locals:         0       0       0       0       0       0       0
  1738 ;;      Temps:          0       0       0       0       0       0       0
  1739 ;;      Totals:         0       0       0       0       0       0       0
  1740 ;;Total ram usage:        0 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:    3
  1743 ;; This function calls:
  1744 ;;		Nothing
  1745 ;; This function is called by:
  1746 ;;		_SYSTEM_Initialize
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text11
  1751  000D84                     __ptext11:
  1752                           	opt stack 0
  1753  000D84                     _INTERRUPT_Initialize:
  1754                           	opt stack 26
  1755                           
  1756                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  1757                           
  1758                           ;incstack = 0
  1759  000D84  9ED0               	bcf	4048,7,c	;volatile
  1760                           
  1761                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
  1762  000D86  9A9F               	bcf	3999,5,c	;volatile
  1763                           
  1764                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  1765  000D88  989F               	bcf	3999,4,c	;volatile
  1766                           
  1767                           ;interrupt_manager.c: 64: INTCON2bits.TMR0IP = 0;
  1768  000D8A  94F1               	bcf	intcon2,2,c	;volatile
  1769                           
  1770                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 0;
  1771  000D8C  9C9F               	bcf	3999,6,c	;volatile
  1772                           
  1773                           ;interrupt_manager.c: 68: IPR1bits.SSP1IP = 0;
  1774  000D8E  969F               	bcf	3999,3,c	;volatile
  1775                           
  1776                           ;interrupt_manager.c: 70: IPR2bits.BCL1IP = 0;
  1777  000D90  96A2               	bcf	4002,3,c	;volatile
  1778  000D92  0012               	return		;funcret
  1779  000D94                     __end_of_INTERRUPT_Initialize:
  1780                           	opt stack 0
  1781                           tblptru	equ	0xFF8
  1782                           tblptrh	equ	0xFF7
  1783                           tblptrl	equ	0xFF6
  1784                           tablat	equ	0xFF5
  1785                           prodh	equ	0xFF4
  1786                           prodl	equ	0xFF3
  1787                           intcon	equ	0xFF2
  1788                           intcon2	equ	0xFF1
  1789                           postinc0	equ	0xFEE
  1790                           wreg	equ	0xFE8
  1791                           indf2	equ	0xFDF
  1792                           postinc2	equ	0xFDE
  1793                           postdec2	equ	0xFDD
  1794                           fsr2h	equ	0xFDA
  1795                           fsr2l	equ	0xFD9
  1796                           status	equ	0xFD8
  1797                           
  1798 ;; *************** function _I2C1_Initialize *****************
  1799 ;; Defined at:
  1800 ;;		line 199 in file "mcc_generated_files/i2c1.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;		None
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;		None
  1805 ;; Return value:  Size  Location     Type
  1806 ;;		None               void
  1807 ;; Registers used:
  1808 ;;		wreg, status,2, status,0
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1814 ;;      Params:         0       0       0       0       0       0       0
  1815 ;;      Locals:         0       0       0       0       0       0       0
  1816 ;;      Temps:          0       0       0       0       0       0       0
  1817 ;;      Totals:         0       0       0       0       0       0       0
  1818 ;;Total ram usage:        0 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:    3
  1821 ;; This function calls:
  1822 ;;		Nothing
  1823 ;; This function is called by:
  1824 ;;		_SYSTEM_Initialize
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           	psect	text12
  1829  000CC6                     __ptext12:
  1830                           	opt stack 0
  1831  000CC6                     _I2C1_Initialize:
  1832                           	opt stack 26
  1833                           
  1834                           ;i2c1.c: 201: i2c1_object.pTrHead = i2c1_tr_queue;
  1835                           
  1836                           ;incstack = 0
  1837  000CC6  0E23               	movlw	low _i2c1_tr_queue
  1838  000CC8  6E03               	movwf	_i2c1_object+2,c
  1839  000CCA  0E00               	movlw	high _i2c1_tr_queue
  1840  000CCC  6E04               	movwf	_i2c1_object+3,c
  1841                           
  1842                           ;i2c1.c: 202: i2c1_object.pTrTail = i2c1_tr_queue;
  1843  000CCE  0E23               	movlw	low _i2c1_tr_queue
  1844  000CD0  6E01               	movwf	_i2c1_object,c
  1845  000CD2  0E00               	movlw	high _i2c1_tr_queue
  1846  000CD4  6E02               	movwf	_i2c1_object+1,c
  1847                           
  1848                           ;i2c1.c: 203: i2c1_object.trStatus.s.empty = 1;
  1849  000CD6  8205               	bsf	_i2c1_object+4,1,c
  1850                           
  1851                           ;i2c1.c: 204: i2c1_object.trStatus.s.full = 0;
  1852  000CD8  9005               	bcf	_i2c1_object+4,0,c
  1853                           
  1854                           ;i2c1.c: 206: i2c1_object.i2cErrors = 0;
  1855  000CDA  0E00               	movlw	0
  1856  000CDC  6E07               	movwf	_i2c1_object+6,c
  1857                           
  1858                           ;i2c1.c: 209: SSP1STAT = 0x80;
  1859  000CDE  0E80               	movlw	128
  1860  000CE0  6EC7               	movwf	4039,c	;volatile
  1861                           
  1862                           ;i2c1.c: 211: SSP1CON1 = 0x28;
  1863  000CE2  0E28               	movlw	40
  1864  000CE4  6EC6               	movwf	4038,c	;volatile
  1865                           
  1866                           ;i2c1.c: 213: SSP1CON3 = 0x00;
  1867  000CE6  0E00               	movlw	0
  1868  000CE8  6ECB               	movwf	4043,c	;volatile
  1869                           
  1870                           ;i2c1.c: 215: SSP1ADD = 0x03;
  1871  000CEA  0E03               	movlw	3
  1872  000CEC  6EC8               	movwf	4040,c	;volatile
  1873                           
  1874                           ;i2c1.c: 219: PIR1bits.SSP1IF = 0;
  1875  000CEE  969E               	bcf	3998,3,c	;volatile
  1876                           
  1877                           ;i2c1.c: 221: PIE1bits.SSP1IE = 1;
  1878  000CF0  869D               	bsf	3997,3,c	;volatile
  1879  000CF2  0012               	return		;funcret
  1880  000CF4                     __end_of_I2C1_Initialize:
  1881                           	opt stack 0
  1882                           tblptru	equ	0xFF8
  1883                           tblptrh	equ	0xFF7
  1884                           tblptrl	equ	0xFF6
  1885                           tablat	equ	0xFF5
  1886                           prodh	equ	0xFF4
  1887                           prodl	equ	0xFF3
  1888                           intcon	equ	0xFF2
  1889                           intcon2	equ	0xFF1
  1890                           postinc0	equ	0xFEE
  1891                           wreg	equ	0xFE8
  1892                           indf2	equ	0xFDF
  1893                           postinc2	equ	0xFDE
  1894                           postdec2	equ	0xFDD
  1895                           fsr2h	equ	0xFDA
  1896                           fsr2l	equ	0xFD9
  1897                           status	equ	0xFD8
  1898                           
  1899 ;; *************** function _EUSART1_Initialize *****************
  1900 ;; Defined at:
  1901 ;;		line 76 in file "mcc_generated_files/eusart1.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;		None
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;		None
  1906 ;; Return value:  Size  Location     Type
  1907 ;;		None               void
  1908 ;; Registers used:
  1909 ;;		wreg, status,2
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1915 ;;      Params:         0       0       0       0       0       0       0
  1916 ;;      Locals:         0       0       0       0       0       0       0
  1917 ;;      Temps:          0       0       0       0       0       0       0
  1918 ;;      Totals:         0       0       0       0       0       0       0
  1919 ;;Total ram usage:        0 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:    3
  1922 ;; This function calls:
  1923 ;;		Nothing
  1924 ;; This function is called by:
  1925 ;;		_SYSTEM_Initialize
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text13
  1930  000BF4                     __ptext13:
  1931                           	opt stack 0
  1932  000BF4                     _EUSART1_Initialize:
  1933                           	opt stack 26
  1934                           
  1935                           ;eusart1.c: 79: PIE1bits.RC1IE = 0;
  1936                           
  1937                           ;incstack = 0
  1938  000BF4  9A9D               	bcf	3997,5,c	;volatile
  1939                           
  1940                           ;eusart1.c: 80: PIE1bits.TX1IE = 0;
  1941  000BF6  989D               	bcf	3997,4,c	;volatile
  1942                           
  1943                           ;eusart1.c: 85: BAUD1CON = 0x48;
  1944  000BF8  0E48               	movlw	72
  1945  000BFA  6EB8               	movwf	4024,c	;volatile
  1946                           
  1947                           ;eusart1.c: 88: RC1STA = 0x90;
  1948  000BFC  0E90               	movlw	144
  1949  000BFE  6EAB               	movwf	4011,c	;volatile
  1950                           
  1951                           ;eusart1.c: 91: TX1STA = 0x26;
  1952  000C00  0E26               	movlw	38
  1953  000C02  6EAC               	movwf	4012,c	;volatile
  1954                           
  1955                           ;eusart1.c: 94: SPBRG1 = 0xCF;
  1956  000C04  0ECF               	movlw	207
  1957  000C06  6EAF               	movwf	4015,c	;volatile
  1958                           
  1959                           ;eusart1.c: 97: SPBRGH1 = 0x00;
  1960  000C08  0E00               	movlw	0
  1961  000C0A  6EB0               	movwf	4016,c	;volatile
  1962                           
  1963                           ;eusart1.c: 100: TXREG1 = 0x00;
  1964  000C0C  0E00               	movlw	0
  1965  000C0E  6EAD               	movwf	4013,c	;volatile
  1966                           
  1967                           ;eusart1.c: 103: RCREG1 = 0x00;
  1968  000C10  0E00               	movlw	0
  1969  000C12  6EAE               	movwf	4014,c	;volatile
  1970                           
  1971                           ;eusart1.c: 107: eusart1TxHead = 0;
  1972  000C14  0E00               	movlw	0
  1973  000C16  6E13               	movwf	_eusart1TxHead,c
  1974                           
  1975                           ;eusart1.c: 108: eusart1TxTail = 0;
  1976  000C18  0E00               	movlw	0
  1977  000C1A  6E14               	movwf	_eusart1TxTail,c
  1978                           
  1979                           ;eusart1.c: 109: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  1980  000C1C  0E08               	movlw	8
  1981  000C1E  6E4C               	movwf	_eusart1TxBufferRemaining,c	;volatile
  1982                           
  1983                           ;eusart1.c: 111: eusart1RxHead = 0;
  1984  000C20  0E00               	movlw	0
  1985  000C22  6E11               	movwf	_eusart1RxHead,c
  1986                           
  1987                           ;eusart1.c: 112: eusart1RxTail = 0;
  1988  000C24  0E00               	movlw	0
  1989  000C26  6E12               	movwf	_eusart1RxTail,c
  1990                           
  1991                           ;eusart1.c: 113: eusart1RxCount = 0;
  1992  000C28  0E00               	movlw	0
  1993  000C2A  6E10               	movwf	_eusart1RxCount,c	;volatile
  1994                           
  1995                           ;eusart1.c: 116: PIE1bits.RC1IE = 1;
  1996  000C2C  8A9D               	bsf	3997,5,c	;volatile
  1997  000C2E  0012               	return		;funcret
  1998  000C30                     __end_of_EUSART1_Initialize:
  1999                           	opt stack 0
  2000                           tblptru	equ	0xFF8
  2001                           tblptrh	equ	0xFF7
  2002                           tblptrl	equ	0xFF6
  2003                           tablat	equ	0xFF5
  2004                           prodh	equ	0xFF4
  2005                           prodl	equ	0xFF3
  2006                           intcon	equ	0xFF2
  2007                           intcon2	equ	0xFF1
  2008                           postinc0	equ	0xFEE
  2009                           wreg	equ	0xFE8
  2010                           indf2	equ	0xFDF
  2011                           postinc2	equ	0xFDE
  2012                           postdec2	equ	0xFDD
  2013                           fsr2h	equ	0xFDA
  2014                           fsr2l	equ	0xFD9
  2015                           status	equ	0xFD8
  2016                           
  2017 ;; *************** function _ADC_Initialize *****************
  2018 ;; Defined at:
  2019 ;;		line 59 in file "mcc_generated_files/adc.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;		None
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;		None
  2024 ;; Return value:  Size  Location     Type
  2025 ;;		None               void
  2026 ;; Registers used:
  2027 ;;		wreg, status,2
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2033 ;;      Params:         0       0       0       0       0       0       0
  2034 ;;      Locals:         0       0       0       0       0       0       0
  2035 ;;      Temps:          0       0       0       0       0       0       0
  2036 ;;      Totals:         0       0       0       0       0       0       0
  2037 ;;Total ram usage:        0 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; Hardware stack levels required when called:    3
  2040 ;; This function calls:
  2041 ;;		Nothing
  2042 ;; This function is called by:
  2043 ;;		_SYSTEM_Initialize
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text14
  2048  000D6C                     __ptext14:
  2049                           	opt stack 0
  2050  000D6C                     _ADC_Initialize:
  2051                           	opt stack 26
  2052                           
  2053                           ;adc.c: 64: ADCON0 = 0x01;
  2054                           
  2055                           ;incstack = 0
  2056  000D6C  0E01               	movlw	1
  2057  000D6E  6EC2               	movwf	4034,c	;volatile
  2058                           
  2059                           ;adc.c: 67: ADCON1 = 0x80;
  2060  000D70  0E80               	movlw	128
  2061  000D72  6EC1               	movwf	4033,c	;volatile
  2062                           
  2063                           ;adc.c: 70: ADCON2 = 0x05;
  2064  000D74  0E05               	movlw	5
  2065  000D76  6EC0               	movwf	4032,c	;volatile
  2066                           
  2067                           ;adc.c: 73: ADRESL = 0x00;
  2068  000D78  0E00               	movlw	0
  2069  000D7A  6EC3               	movwf	4035,c	;volatile
  2070                           
  2071                           ;adc.c: 76: ADRESH = 0x00;
  2072  000D7C  0E00               	movlw	0
  2073  000D7E  6EC4               	movwf	4036,c	;volatile
  2074                           
  2075                           ;adc.c: 79: PIE1bits.ADIE = 1;
  2076  000D80  8C9D               	bsf	3997,6,c	;volatile
  2077  000D82  0012               	return		;funcret
  2078  000D84                     __end_of_ADC_Initialize:
  2079                           	opt stack 0
  2080                           tblptru	equ	0xFF8
  2081                           tblptrh	equ	0xFF7
  2082                           tblptrl	equ	0xFF6
  2083                           tablat	equ	0xFF5
  2084                           prodh	equ	0xFF4
  2085                           prodl	equ	0xFF3
  2086                           intcon	equ	0xFF2
  2087                           intcon2	equ	0xFF1
  2088                           postinc0	equ	0xFEE
  2089                           wreg	equ	0xFE8
  2090                           indf2	equ	0xFDF
  2091                           postinc2	equ	0xFDE
  2092                           postdec2	equ	0xFDD
  2093                           fsr2h	equ	0xFDA
  2094                           fsr2l	equ	0xFD9
  2095                           status	equ	0xFD8
  2096                           
  2097 ;; *************** function _ADC_GetConversion *****************
  2098 ;; Defined at:
  2099 ;;		line 107 in file "mcc_generated_files/adc.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  channel         1    wreg     enum E8837
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  channel         1   23[COMRAM] enum E8837
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  2   19[COMRAM] unsigned int 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2113 ;;      Params:         2       0       0       0       0       0       0
  2114 ;;      Locals:         1       0       0       0       0       0       0
  2115 ;;      Temps:          2       0       0       0       0       0       0
  2116 ;;      Totals:         5       0       0       0       0       0       0
  2117 ;;Total ram usage:        5 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:    3
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_main
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text15
  2128  000C30                     __ptext15:
  2129                           	opt stack 0
  2130  000C30                     _ADC_GetConversion:
  2131                           	opt stack 27
  2132                           
  2133                           ;incstack = 0
  2134                           ;ADC_GetConversion@channel stored from wreg
  2135  000C30  6E42               	movwf	ADC_GetConversion@channel,c
  2136                           
  2137                           ;adc.c: 110: ADCON0bits.CHS = channel;
  2138  000C32  C042  F040         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  2139  000C36  4640               	rlncf	??_ADC_GetConversion,f,c
  2140  000C38  4640               	rlncf	??_ADC_GetConversion,f,c
  2141  000C3A  50C2               	movf	4034,w,c	;volatile
  2142  000C3C  1840               	xorwf	??_ADC_GetConversion,w,c
  2143  000C3E  0B83               	andlw	-125
  2144  000C40  1840               	xorwf	??_ADC_GetConversion,w,c
  2145  000C42  6EC2               	movwf	4034,c	;volatile
  2146                           
  2147                           ;adc.c: 113: ADCON0bits.ADON = 1;
  2148  000C44  80C2               	bsf	4034,0,c	;volatile
  2149                           
  2150                           ;adc.c: 117: ADCON0bits.GO_nDONE = 1;
  2151  000C46  82C2               	bsf	4034,1,c	;volatile
  2152                           
  2153                           ;adc.c: 120: while (ADCON0bits.GO_nDONE)
  2154  000C48  D000               	goto	l296
  2155  000C4A                     l296:
  2156  000C4A  B2C2               	btfsc	4034,1,c	;volatile
  2157  000C4C  D7FE               	goto	l296
  2158                           
  2159                           ;adc.c: 122: }
  2160                           ;adc.c: 125: return ((ADRESH << 8) + ADRESL);
  2161  000C4E  50C4               	movf	4036,w,c	;volatile
  2162  000C50  6E41               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  2163  000C52  6A40               	clrf	??_ADC_GetConversion& (0+255),c
  2164  000C54  50C3               	movf	4035,w,c	;volatile
  2165  000C56  2440               	addwf	??_ADC_GetConversion,w,c
  2166  000C58  6E3E               	movwf	?_ADC_GetConversion,c
  2167  000C5A  0E00               	movlw	0
  2168  000C5C  2041               	addwfc	??_ADC_GetConversion+1,w,c
  2169  000C5E  6E3F               	movwf	?_ADC_GetConversion+1,c
  2170  000C60  0012               	return	
  2171  000C62  0012               	return		;funcret
  2172  000C64                     __end_of_ADC_GetConversion:
  2173                           	opt stack 0
  2174                           tblptru	equ	0xFF8
  2175                           tblptrh	equ	0xFF7
  2176                           tblptrl	equ	0xFF6
  2177                           tablat	equ	0xFF5
  2178                           prodh	equ	0xFF4
  2179                           prodl	equ	0xFF3
  2180                           intcon	equ	0xFF2
  2181                           intcon2	equ	0xFF1
  2182                           postinc0	equ	0xFEE
  2183                           wreg	equ	0xFE8
  2184                           indf2	equ	0xFDF
  2185                           postinc2	equ	0xFDE
  2186                           postdec2	equ	0xFDD
  2187                           fsr2h	equ	0xFDA
  2188                           fsr2l	equ	0xFD9
  2189                           status	equ	0xFD8
  2190                           
  2191 ;; *************** function _INTERRUPT_InterruptManager *****************
  2192 ;; Defined at:
  2193 ;;		line 73 in file "mcc_generated_files/interrupt_manager.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;		None
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;		None
  2198 ;; Return value:  Size  Location     Type
  2199 ;;		None               void
  2200 ;; Registers used:
  2201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2207 ;;      Params:         0       0       0       0       0       0       0
  2208 ;;      Locals:         0       0       0       0       0       0       0
  2209 ;;      Temps:         14       0       0       0       0       0       0
  2210 ;;      Totals:        14       0       0       0       0       0       0
  2211 ;;Total ram usage:       14 bytes
  2212 ;; Hardware stack levels used:    1
  2213 ;; Hardware stack levels required when called:    2
  2214 ;; This function calls:
  2215 ;;		_ADC_ISR
  2216 ;;		_EUSART1_Receive_ISR
  2217 ;;		_EUSART1_Transmit_ISR
  2218 ;;		_I2C1_BusCollisionISR
  2219 ;;		_I2C1_ISR
  2220 ;;		_TMR0_ISR
  2221 ;; This function is called by:
  2222 ;;		Interrupt level 2
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           	psect	intcode
  2227  000008                     __pintcode:
  2228                           	opt stack 0
  2229  000008                     _INTERRUPT_InterruptManager:
  2230                           	opt stack 25
  2231                           
  2232                           ;incstack = 0
  2233  000008  CFFA F030          	movff	pclath,??_INTERRUPT_InterruptManager
  2234  00000C  CFFB F031          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2235  000010  CFE9 F032          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2236  000014  CFEA F033          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2237  000018  CFE1 F034          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2238  00001C  CFE2 F035          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2239  000020  CFD9 F036          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2240  000024  CFDA F037          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2241  000028  CFF3 F038          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2242  00002C  CFF4 F039          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2243  000030  CFF6 F03A          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2244  000034  CFF7 F03B          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2245  000038  CFF8 F03C          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2246  00003C  CFF5 F03D          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2247                           
  2248                           ;interrupt_manager.c: 76: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  2249  000040  BA9D               	btfsc	3997,5,c	;volatile
  2250  000042  AA9E               	btfss	3998,5,c	;volatile
  2251  000044  D003               	goto	i2l375
  2252                           
  2253                           ;interrupt_manager.c: 77: {
  2254                           ;interrupt_manager.c: 78: EUSART1_Receive_ISR();
  2255  000046  EC4B  F006         	call	_EUSART1_Receive_ISR	;wreg free
  2256                           
  2257                           ;interrupt_manager.c: 79: }
  2258  00004A  D01E               	goto	i2l387
  2259  00004C                     i2l375:
  2260                           
  2261                           ;interrupt_manager.c: 80: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  2262  00004C  B89D               	btfsc	3997,4,c	;volatile
  2263  00004E  A89E               	btfss	3998,4,c	;volatile
  2264  000050  D003               	goto	i2l377
  2265                           
  2266                           ;interrupt_manager.c: 81: {
  2267                           ;interrupt_manager.c: 82: EUSART1_Transmit_ISR();
  2268  000052  EC32  F006         	call	_EUSART1_Transmit_ISR	;wreg free
  2269                           
  2270                           ;interrupt_manager.c: 83: }
  2271  000056  D018               	goto	i2l387
  2272  000058                     i2l377:
  2273                           
  2274                           ;interrupt_manager.c: 84: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  2275  000058  BAF2               	btfsc	intcon,5,c	;volatile
  2276  00005A  A4F2               	btfss	intcon,2,c	;volatile
  2277  00005C  D003               	goto	i2l379
  2278                           
  2279                           ;interrupt_manager.c: 85: {
  2280                           ;interrupt_manager.c: 86: TMR0_ISR();
  2281  00005E  ECCA  F006         	call	_TMR0_ISR	;wreg free
  2282                           
  2283                           ;interrupt_manager.c: 87: }
  2284  000062  D012               	goto	i2l387
  2285  000064                     i2l379:
  2286                           
  2287                           ;interrupt_manager.c: 88: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  2288  000064  BC9D               	btfsc	3997,6,c	;volatile
  2289  000066  AC9E               	btfss	3998,6,c	;volatile
  2290  000068  D003               	goto	i2l381
  2291                           
  2292                           ;interrupt_manager.c: 89: {
  2293                           ;interrupt_manager.c: 90: ADC_ISR();
  2294  00006A  ECE3  F006         	call	_ADC_ISR	;wreg free
  2295                           
  2296                           ;interrupt_manager.c: 91: }
  2297  00006E  D00C               	goto	i2l387
  2298  000070                     i2l381:
  2299                           
  2300                           ;interrupt_manager.c: 92: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
  2301  000070  B69D               	btfsc	3997,3,c	;volatile
  2302  000072  A69E               	btfss	3998,3,c	;volatile
  2303  000074  D003               	goto	i2l383
  2304                           
  2305                           ;interrupt_manager.c: 93: {
  2306                           ;interrupt_manager.c: 94: I2C1_ISR();
  2307  000076  EC0E  F003         	call	_I2C1_ISR	;wreg free
  2308                           
  2309                           ;interrupt_manager.c: 95: }
  2310  00007A  D006               	goto	i2l387
  2311  00007C                     i2l383:
  2312                           
  2313                           ;interrupt_manager.c: 96: else if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  2314  00007C  B6A0               	btfsc	4000,3,c	;volatile
  2315  00007E  A6A1               	btfss	4001,3,c	;volatile
  2316  000080  D003               	goto	i2l387
  2317                           
  2318                           ;interrupt_manager.c: 97: {
  2319                           ;interrupt_manager.c: 98: I2C1_BusCollisionISR();
  2320  000082  ECE5  F006         	call	_I2C1_BusCollisionISR	;wreg free
  2321                           
  2322                           ;interrupt_manager.c: 100: else
  2323                           ;interrupt_manager.c: 101: {
  2324                           
  2325                           ;interrupt_manager.c: 99: }
  2326  000086  D000               	goto	i2l387
  2327  000088                     i2l387:
  2328  000088  C03D  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  2329  00008C  C03C  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  2330  000090  C03B  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  2331  000094  C03A  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  2332  000098  C039  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  2333  00009C  C038  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  2334  0000A0  C037  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  2335  0000A4  C036  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  2336  0000A8  C035  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  2337  0000AC  C034  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  2338  0000B0  C033  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  2339  0000B4  C032  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  2340  0000B8  C031  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2341  0000BC  C030  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2342  0000C0  0011               	retfie		f
  2343  0000C2                     __end_of_INTERRUPT_InterruptManager:
  2344                           	opt stack 0
  2345                           pclatu	equ	0xFFB
  2346                           pclath	equ	0xFFA
  2347                           tblptru	equ	0xFF8
  2348                           tblptrh	equ	0xFF7
  2349                           tblptrl	equ	0xFF6
  2350                           tablat	equ	0xFF5
  2351                           prodh	equ	0xFF4
  2352                           prodl	equ	0xFF3
  2353                           intcon	equ	0xFF2
  2354                           intcon2	equ	0xFF1
  2355                           postinc0	equ	0xFEE
  2356                           fsr0h	equ	0xFEA
  2357                           fsr0l	equ	0xFE9
  2358                           wreg	equ	0xFE8
  2359                           fsr1h	equ	0xFE2
  2360                           fsr1l	equ	0xFE1
  2361                           indf2	equ	0xFDF
  2362                           postinc2	equ	0xFDE
  2363                           postdec2	equ	0xFDD
  2364                           fsr2h	equ	0xFDA
  2365                           fsr2l	equ	0xFD9
  2366                           status	equ	0xFD8
  2367                           
  2368 ;; *************** function _TMR0_ISR *****************
  2369 ;; Defined at:
  2370 ;;		line 132 in file "mcc_generated_files/tmr0.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;		None
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;		None
  2375 ;; Return value:  Size  Location     Type
  2376 ;;		None               void
  2377 ;; Registers used:
  2378 ;;		wreg, status,2, cstack
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2384 ;;      Params:         0       0       0       0       0       0       0
  2385 ;;      Locals:         0       0       0       0       0       0       0
  2386 ;;      Temps:          0       0       0       0       0       0       0
  2387 ;;      Totals:         0       0       0       0       0       0       0
  2388 ;;Total ram usage:        0 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    1
  2391 ;; This function calls:
  2392 ;;		_TMR0_CallBack
  2393 ;; This function is called by:
  2394 ;;		_INTERRUPT_InterruptManager
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text17
  2399  000D94                     __ptext17:
  2400                           	opt stack 0
  2401  000D94                     _TMR0_ISR:
  2402                           	opt stack 25
  2403                           
  2404                           ;tmr0.c: 136: INTCONbits.TMR0IF = 0;
  2405                           
  2406                           ;incstack = 0
  2407  000D94  94F2               	bcf	intcon,2,c	;volatile
  2408                           
  2409                           ;tmr0.c: 140: TMR0H = timer0ReloadVal16bit >> 8;
  2410  000D96  504B               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
  2411  000D98  6ED7               	movwf	4055,c	;volatile
  2412                           
  2413                           ;tmr0.c: 141: TMR0L = (uint8_t) timer0ReloadVal16bit;
  2414  000D9A  C04A  FFD6         	movff	_timer0ReloadVal16bit,4054	;volatile
  2415                           
  2416                           ;tmr0.c: 145: TMR0_CallBack();
  2417  000D9E  ECDE  F006         	call	_TMR0_CallBack	;wreg free
  2418  000DA2  0012               	return		;funcret
  2419  000DA4                     __end_of_TMR0_ISR:
  2420                           	opt stack 0
  2421                           pclatu	equ	0xFFB
  2422                           pclath	equ	0xFFA
  2423                           tblptru	equ	0xFF8
  2424                           tblptrh	equ	0xFF7
  2425                           tblptrl	equ	0xFF6
  2426                           tablat	equ	0xFF5
  2427                           prodh	equ	0xFF4
  2428                           prodl	equ	0xFF3
  2429                           intcon	equ	0xFF2
  2430                           intcon2	equ	0xFF1
  2431                           postinc0	equ	0xFEE
  2432                           fsr0h	equ	0xFEA
  2433                           fsr0l	equ	0xFE9
  2434                           wreg	equ	0xFE8
  2435                           fsr1h	equ	0xFE2
  2436                           fsr1l	equ	0xFE1
  2437                           indf2	equ	0xFDF
  2438                           postinc2	equ	0xFDE
  2439                           postdec2	equ	0xFDD
  2440                           fsr2h	equ	0xFDA
  2441                           fsr2l	equ	0xFD9
  2442                           status	equ	0xFD8
  2443                           
  2444 ;; *************** function _TMR0_CallBack *****************
  2445 ;; Defined at:
  2446 ;;		line 150 in file "mcc_generated_files/tmr0.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;		None
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;		None
  2451 ;; Return value:  Size  Location     Type
  2452 ;;		None               void
  2453 ;; Registers used:
  2454 ;;		None
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2460 ;;      Params:         0       0       0       0       0       0       0
  2461 ;;      Locals:         0       0       0       0       0       0       0
  2462 ;;      Temps:          0       0       0       0       0       0       0
  2463 ;;      Totals:         0       0       0       0       0       0       0
  2464 ;;Total ram usage:        0 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; This function calls:
  2467 ;;		Nothing
  2468 ;; This function is called by:
  2469 ;;		_TMR0_ISR
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           	psect	text18
  2474  000DBC                     __ptext18:
  2475                           	opt stack 0
  2476  000DBC                     _TMR0_CallBack:
  2477                           	opt stack 25
  2478                           
  2479                           ;incstack = 0
  2480                           ;tmr0.c: 152: do { LATA3 = ~LATA3; } while(0);
  2481  000DBC  7689               	btg	3977,3,c	;volatile
  2482  000DBE  0012               	return	
  2483  000DC0  0012               	return		;funcret
  2484  000DC2                     __end_of_TMR0_CallBack:
  2485                           	opt stack 0
  2486                           pclatu	equ	0xFFB
  2487                           pclath	equ	0xFFA
  2488                           tblptru	equ	0xFF8
  2489                           tblptrh	equ	0xFF7
  2490                           tblptrl	equ	0xFF6
  2491                           tablat	equ	0xFF5
  2492                           prodh	equ	0xFF4
  2493                           prodl	equ	0xFF3
  2494                           intcon	equ	0xFF2
  2495                           intcon2	equ	0xFF1
  2496                           postinc0	equ	0xFEE
  2497                           fsr0h	equ	0xFEA
  2498                           fsr0l	equ	0xFE9
  2499                           wreg	equ	0xFE8
  2500                           fsr1h	equ	0xFE2
  2501                           fsr1l	equ	0xFE1
  2502                           indf2	equ	0xFDF
  2503                           postinc2	equ	0xFDE
  2504                           postdec2	equ	0xFDD
  2505                           fsr2h	equ	0xFDA
  2506                           fsr2l	equ	0xFD9
  2507                           status	equ	0xFD8
  2508                           
  2509 ;; *************** function _I2C1_ISR *****************
  2510 ;; Defined at:
  2511 ;;		line 234 in file "mcc_generated_files/i2c1.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;		None
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;		None
  2516 ;; Return value:  Size  Location     Type
  2517 ;;		None               void
  2518 ;; Registers used:
  2519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2525 ;;      Params:         0       0       0       0       0       0       0
  2526 ;;      Locals:         0       0       0       0       0       0       0
  2527 ;;      Temps:          2       0       0       0       0       0       0
  2528 ;;      Totals:         2       0       0       0       0       0       0
  2529 ;;Total ram usage:        2 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; Hardware stack levels required when called:    1
  2532 ;; This function calls:
  2533 ;;		_I2C1_FunctionComplete
  2534 ;;		_I2C1_Stop
  2535 ;; This function is called by:
  2536 ;;		_INTERRUPT_InterruptManager
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           	psect	text19
  2541  00061C                     __ptext19:
  2542                           	opt stack 0
  2543  00061C                     _I2C1_ISR:
  2544                           	opt stack 25
  2545                           
  2546                           ;i2c1.c: 237: static uint8_t *pi2c_buf_ptr;
  2547                           ;i2c1.c: 238: static uint16_t i2c_address = 0;
  2548                           ;i2c1.c: 239: static uint8_t i2c_bytes_left = 0;
  2549                           ;i2c1.c: 240: static uint8_t i2c_10bit_address_restart = 0;
  2550                           ;i2c1.c: 242: PIR1bits.SSP1IF = 0;
  2551                           
  2552                           ;incstack = 0
  2553  00061C  969E               	bcf	3998,3,c	;volatile
  2554                           
  2555                           ;i2c1.c: 246: if(SSP1CON1bits.WCOL)
  2556  00061E  AEC6               	btfss	4038,7,c	;volatile
  2557  000620  D114               	goto	i2l1450
  2558                           
  2559                           ;i2c1.c: 247: {
  2560                           ;i2c1.c: 249: SSP1CON1bits.WCOL = 0;
  2561  000622  9EC6               	bcf	4038,7,c	;volatile
  2562                           
  2563                           ;i2c1.c: 250: i2c1_state = S_MASTER_IDLE;
  2564  000624  0E00               	movlw	0
  2565  000626  6E15               	movwf	_i2c1_state,c
  2566                           
  2567                           ;i2c1.c: 251: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
  2568  000628  EE20 F003          	lfsr	2,3
  2569  00062C  500A               	movf	_p_i2c1_current,w,c
  2570  00062E  26D9               	addwf	fsr2l,f,c
  2571  000630  500B               	movf	_p_i2c1_current+1,w,c
  2572  000632  22DA               	addwfc	fsr2h,f,c
  2573  000634  CFDE F02E          	movff	postinc2,??_I2C1_ISR
  2574  000638  CFDD F02F          	movff	postdec2,??_I2C1_ISR+1
  2575  00063C  C02E  FFD9         	movff	??_I2C1_ISR,fsr2l
  2576  000640  C02F  FFDA         	movff	??_I2C1_ISR+1,fsr2h
  2577  000644  0E01               	movlw	1
  2578  000646  6EDF               	movwf	indf2,c
  2579                           
  2580                           ;i2c1.c: 254: p_i2c1_current = (0);
  2581  000648  0E00               	movlw	0
  2582  00064A  6E0A               	movwf	_p_i2c1_current,c
  2583  00064C  0E00               	movlw	0
  2584  00064E  6E0B               	movwf	_p_i2c1_current+1,c
  2585                           
  2586                           ;i2c1.c: 256: return;
  2587  000650  0012               	return	
  2588                           
  2589                           ;i2c1.c: 257: }
  2590                           ;i2c1.c: 260: switch(i2c1_state)
  2591  000652  D0FB               	goto	i2l1450
  2592  000654                     i2l60:
  2593                           
  2594                           ;i2c1.c: 264: if(i2c1_object.trStatus.s.empty != 1)
  2595  000654  B205               	btfsc	_i2c1_object+4,1,c
  2596  000656  0012               	return	
  2597                           
  2598                           ;i2c1.c: 265: {
  2599                           ;i2c1.c: 267: p_i2c1_current = i2c1_object.pTrHead;
  2600  000658  C003  F00A         	movff	_i2c1_object+2,_p_i2c1_current
  2601  00065C  C004  F00B         	movff	_i2c1_object+3,_p_i2c1_current+1
  2602                           
  2603                           ;i2c1.c: 268: i2c1_trb_count = i2c1_object.pTrHead->count;
  2604  000660  C003  FFD9         	movff	_i2c1_object+2,fsr2l
  2605  000664  C004  FFDA         	movff	_i2c1_object+3,fsr2h
  2606  000668  50DF               	movf	indf2,w,c
  2607  00066A  6E16               	movwf	_i2c1_trb_count,c
  2608                           
  2609                           ;i2c1.c: 269: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
  2610  00066C  EE20 F001          	lfsr	2,1
  2611  000670  5003               	movf	_i2c1_object+2,w,c
  2612  000672  26D9               	addwf	fsr2l,f,c
  2613  000674  5004               	movf	_i2c1_object+3,w,c
  2614  000676  22DA               	addwfc	fsr2h,f,c
  2615  000678  CFDE F00C          	movff	postinc2,_p_i2c1_trb_current
  2616  00067C  CFDD F00D          	movff	postdec2,_p_i2c1_trb_current+1
  2617                           
  2618                           ;i2c1.c: 271: i2c1_object.pTrHead++;
  2619  000680  0E06               	movlw	6
  2620  000682  2603               	addwf	_i2c1_object+2,f,c
  2621  000684  0E00               	movlw	0
  2622  000686  2204               	addwfc	_i2c1_object+3,f,c
  2623                           
  2624                           ;i2c1.c: 274: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
  2625  000688  0E29               	movlw	low (_i2c1_tr_queue+6)
  2626  00068A  1803               	xorwf	_i2c1_object+2,w,c
  2627  00068C  E109               	bnz	i2l1342
  2628  00068E  0E00               	movlw	high (_i2c1_tr_queue+6)
  2629  000690  1804               	xorwf	_i2c1_object+3,w,c
  2630  000692  A4D8               	btfss	status,2,c
  2631  000694  D005               	goto	i2l1342
  2632                           
  2633                           ;i2c1.c: 275: {
  2634                           ;i2c1.c: 277: i2c1_object.pTrHead = i2c1_tr_queue;
  2635  000696  0E23               	movlw	low _i2c1_tr_queue
  2636  000698  6E03               	movwf	_i2c1_object+2,c
  2637  00069A  0E00               	movlw	high _i2c1_tr_queue
  2638  00069C  6E04               	movwf	_i2c1_object+3,c
  2639  00069E  D000               	goto	i2l1342
  2640  0006A0                     i2l1342:
  2641                           
  2642                           ;i2c1.c: 278: }
  2643                           ;i2c1.c: 282: i2c1_object.trStatus.s.full = 0;
  2644  0006A0  9005               	bcf	_i2c1_object+4,0,c
  2645                           
  2646                           ;i2c1.c: 285: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
  2647  0006A2  5001               	movf	_i2c1_object,w,c
  2648  0006A4  1803               	xorwf	_i2c1_object+2,w,c
  2649  0006A6  E105               	bnz	i2l63
  2650  0006A8  5002               	movf	_i2c1_object+1,w,c
  2651  0006AA  1804               	xorwf	_i2c1_object+3,w,c
  2652  0006AC  A4D8               	btfss	status,2,c
  2653  0006AE  D001               	goto	i2l63
  2654                           
  2655                           ;i2c1.c: 286: {
  2656                           ;i2c1.c: 288: i2c1_object.trStatus.s.empty = 1;
  2657  0006B0  8205               	bsf	_i2c1_object+4,1,c
  2658  0006B2                     i2l63:
  2659                           
  2660                           ;i2c1.c: 289: }
  2661                           ;i2c1.c: 292: SSP1CON2bits.SEN = 1;
  2662  0006B2  80C5               	bsf	4037,0,c	;volatile
  2663                           
  2664                           ;i2c1.c: 295: i2c1_state = S_MASTER_SEND_ADDR;
  2665  0006B4  0E02               	movlw	2
  2666  0006B6  6E15               	movwf	_i2c1_state,c
  2667                           
  2668                           ;i2c1.c: 296: }
  2669                           ;i2c1.c: 298: break;
  2670  0006B8  0012               	return	
  2671  0006BA                     i2l65:
  2672                           
  2673                           ;i2c1.c: 305: SSP1CON2bits.RSEN = 1;
  2674  0006BA  82C5               	bsf	4037,1,c	;volatile
  2675                           
  2676                           ;i2c1.c: 308: i2c1_state = S_MASTER_SEND_ADDR;
  2677  0006BC  0E02               	movlw	2
  2678  0006BE  6E15               	movwf	_i2c1_state,c
  2679                           
  2680                           ;i2c1.c: 310: break;
  2681  0006C0  0012               	return	
  2682  0006C2                     i2l66:
  2683                           
  2684                           ;i2c1.c: 314: if(SSP1CON2bits.ACKSTAT)
  2685  0006C2  ACC5               	btfss	4037,6,c	;volatile
  2686  0006C4  D005               	goto	i2l1354
  2687                           
  2688                           ;i2c1.c: 315: {
  2689                           ;i2c1.c: 316: i2c1_object.i2cErrors++;
  2690  0006C6  2A07               	incf	_i2c1_object+6,f,c
  2691                           
  2692                           ;i2c1.c: 317: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  2693  0006C8  0E04               	movlw	4
  2694  0006CA  ECDA  F005         	call	_I2C1_Stop
  2695                           
  2696                           ;i2c1.c: 318: }
  2697  0006CE  0012               	return	
  2698  0006D0                     i2l1354:
  2699                           
  2700                           ;i2c1.c: 319: else
  2701                           ;i2c1.c: 320: {
  2702                           ;i2c1.c: 322: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  2703  0006D0  90D8               	bcf	status,0,c
  2704  0006D2  302A               	rrcf	I2C1_ISR@i2c_address+1,w,c
  2705  0006D4  6E2F               	movwf	(??_I2C1_ISR+1)& (0+255),c
  2706  0006D6  3029               	rrcf	I2C1_ISR@i2c_address,w,c
  2707  0006D8  6E2E               	movwf	??_I2C1_ISR& (0+255),c
  2708  0006DA  502E               	movf	??_I2C1_ISR,w,c
  2709  0006DC  6EC9               	movwf	4041,c	;volatile
  2710                           
  2711                           ;i2c1.c: 325: if(i2c_address & 0x01)
  2712  0006DE  A029               	btfss	I2C1_ISR@i2c_address,0,c
  2713  0006E0  D003               	goto	i2l1360
  2714                           
  2715                           ;i2c1.c: 326: {
  2716                           ;i2c1.c: 329: i2c1_state = S_MASTER_10BIT_RESTART;
  2717  0006E2  0E0B               	movlw	11
  2718  0006E4  6E15               	movwf	_i2c1_state,c
  2719                           
  2720                           ;i2c1.c: 330: }
  2721  0006E6  0012               	return	
  2722  0006E8                     i2l1360:
  2723                           
  2724                           ;i2c1.c: 331: else
  2725                           ;i2c1.c: 332: {
  2726                           ;i2c1.c: 334: i2c1_state = S_MASTER_SEND_DATA;
  2727  0006E8  0E03               	movlw	3
  2728  0006EA  6E15               	movwf	_i2c1_state,c
  2729                           
  2730                           ;i2c1.c: 335: }
  2731                           ;i2c1.c: 336: }
  2732                           ;i2c1.c: 338: break;
  2733  0006EC  0012               	return	
  2734  0006EE                     i2l71:
  2735                           
  2736                           ;i2c1.c: 342: if(SSP1CON2bits.ACKSTAT)
  2737  0006EE  ACC5               	btfss	4037,6,c	;volatile
  2738  0006F0  D005               	goto	i2l72
  2739                           
  2740                           ;i2c1.c: 343: {
  2741                           ;i2c1.c: 344: i2c1_object.i2cErrors++;
  2742  0006F2  2A07               	incf	_i2c1_object+6,f,c
  2743                           
  2744                           ;i2c1.c: 345: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  2745  0006F4  0E04               	movlw	4
  2746  0006F6  ECDA  F005         	call	_I2C1_Stop
  2747                           
  2748                           ;i2c1.c: 346: }
  2749  0006FA  0012               	return	
  2750  0006FC                     i2l72:
  2751                           
  2752                           ;i2c1.c: 347: else
  2753                           ;i2c1.c: 348: {
  2754                           ;i2c1.c: 351: SSP1CON2bits.RSEN = 1;
  2755  0006FC  82C5               	bsf	4037,1,c	;volatile
  2756                           
  2757                           ;i2c1.c: 355: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  2758  0006FE  C029  F02E         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
  2759  000702  C02A  F02F         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
  2760  000706  C02F  F02E         	movff	??_I2C1_ISR+1,??_I2C1_ISR
  2761  00070A  6A2F               	clrf	??_I2C1_ISR+1,c
  2762  00070C  0E06               	movlw	6
  2763  00070E  162E               	andwf	??_I2C1_ISR,f,c
  2764  000710  0E00               	movlw	0
  2765  000712  162F               	andwf	??_I2C1_ISR+1,f,c
  2766  000714  0EF0               	movlw	240
  2767  000716  102E               	iorwf	??_I2C1_ISR,w,c
  2768  000718  6E29               	movwf	I2C1_ISR@i2c_address,c
  2769  00071A  502F               	movf	??_I2C1_ISR+1,w,c
  2770  00071C  6E2A               	movwf	I2C1_ISR@i2c_address+1,c
  2771                           
  2772                           ;i2c1.c: 358: i2c_address |= 0x0001;
  2773  00071E  8029               	bsf	I2C1_ISR@i2c_address,0,c
  2774                           
  2775                           ;i2c1.c: 361: i2c_10bit_address_restart = 1;
  2776  000720  0E01               	movlw	1
  2777  000722  6E0E               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
  2778                           
  2779                           ;i2c1.c: 364: i2c1_state = S_MASTER_SEND_ADDR;
  2780  000724  0E02               	movlw	2
  2781  000726  6E15               	movwf	_i2c1_state,c
  2782                           
  2783                           ;i2c1.c: 365: }
  2784                           ;i2c1.c: 367: break;
  2785  000728  0012               	return	
  2786  00072A                     i2l1374:
  2787                           
  2788                           ;i2c1.c: 382: if(i2c_10bit_address_restart != 1)
  2789  00072A  040E               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
  2790  00072C  B4D8               	btfsc	status,2,c
  2791  00072E  D030               	goto	i2l76
  2792                           
  2793                           ;i2c1.c: 383: {
  2794                           ;i2c1.c: 385: i2c_address = p_i2c1_trb_current->address;
  2795  000730  C00C  FFD9         	movff	_p_i2c1_trb_current,fsr2l
  2796  000734  C00D  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
  2797  000738  CFDE F029          	movff	postinc2,I2C1_ISR@i2c_address
  2798  00073C  CFDD F02A          	movff	postdec2,I2C1_ISR@i2c_address+1
  2799                           
  2800                           ;i2c1.c: 386: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
  2801  000740  EE20 F003          	lfsr	2,3
  2802  000744  500C               	movf	_p_i2c1_trb_current,w,c
  2803  000746  26D9               	addwf	fsr2l,f,c
  2804  000748  500D               	movf	_p_i2c1_trb_current+1,w,c
  2805  00074A  22DA               	addwfc	fsr2h,f,c
  2806  00074C  CFDE F008          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
  2807  000750  CFDD F009          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
  2808                           
  2809                           ;i2c1.c: 387: i2c_bytes_left = p_i2c1_trb_current->length;
  2810  000754  EE20 F002          	lfsr	2,2
  2811  000758  500C               	movf	_p_i2c1_trb_current,w,c
  2812  00075A  26D9               	addwf	fsr2l,f,c
  2813  00075C  500D               	movf	_p_i2c1_trb_current+1,w,c
  2814  00075E  22DA               	addwfc	fsr2h,f,c
  2815  000760  50DF               	movf	indf2,w,c
  2816  000762  6E0F               	movwf	I2C1_ISR@i2c_bytes_left,c
  2817                           
  2818                           ;i2c1.c: 388: }
  2819                           ;i2c1.c: 391: if(!1 && (0x0 != i2c_address))
  2820  000764  D015               	goto	i2l76
  2821  000766  5029               	movf	I2C1_ISR@i2c_address,w,c
  2822  000768  102A               	iorwf	I2C1_ISR@i2c_address+1,w,c
  2823  00076A  B4D8               	btfsc	status,2,c
  2824  00076C  D011               	goto	i2l76
  2825                           
  2826                           ;i2c1.c: 392: {
  2827                           ;i2c1.c: 393: if (0 == i2c_10bit_address_restart)
  2828  00076E  500E               	movf	I2C1_ISR@i2c_10bit_address_restart,w,c
  2829  000770  A4D8               	btfss	status,2,c
  2830  000772  D007               	goto	i2l77
  2831                           
  2832                           ;i2c1.c: 394: {
  2833                           ;i2c1.c: 398: SSP1BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  2834  000774  502A               	movf	I2C1_ISR@i2c_address+1,w,c
  2835  000776  0B06               	andlw	6
  2836  000778  09F0               	iorlw	240
  2837  00077A  6EC9               	movwf	4041,c	;volatile
  2838                           
  2839                           ;i2c1.c: 399: i2c1_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  2840  00077C  0E0A               	movlw	10
  2841  00077E  6E15               	movwf	_i2c1_state,c
  2842                           
  2843                           ;i2c1.c: 400: }
  2844  000780  0012               	return	
  2845  000782                     i2l77:
  2846                           
  2847                           ;i2c1.c: 401: else
  2848                           ;i2c1.c: 402: {
  2849                           ;i2c1.c: 404: SSP1BUF = i2c_address;
  2850  000782  C029  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
  2851                           
  2852                           ;i2c1.c: 405: i2c1_state = S_MASTER_ACK_ADDR;
  2853  000786  0E05               	movlw	5
  2854  000788  6E15               	movwf	_i2c1_state,c
  2855                           
  2856                           ;i2c1.c: 407: i2c_10bit_address_restart = 0;
  2857  00078A  0E00               	movlw	0
  2858  00078C  6E0E               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
  2859                           
  2860                           ;i2c1.c: 408: }
  2861                           ;i2c1.c: 409: }
  2862  00078E  0012               	return	
  2863  000790                     i2l76:
  2864                           
  2865                           ;i2c1.c: 410: else
  2866                           ;i2c1.c: 411: {
  2867                           ;i2c1.c: 413: SSP1BUF = i2c_address;
  2868  000790  C029  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
  2869                           
  2870                           ;i2c1.c: 414: if(i2c_address & 0x01)
  2871  000794  A029               	btfss	I2C1_ISR@i2c_address,0,c
  2872  000796  D003               	goto	i2l1394
  2873                           
  2874                           ;i2c1.c: 415: {
  2875                           ;i2c1.c: 417: i2c1_state = S_MASTER_ACK_ADDR;
  2876  000798  0E05               	movlw	5
  2877  00079A  6E15               	movwf	_i2c1_state,c
  2878                           
  2879                           ;i2c1.c: 418: }
  2880  00079C  0012               	return	
  2881  00079E                     i2l1394:
  2882                           
  2883                           ;i2c1.c: 419: else
  2884                           ;i2c1.c: 420: {
  2885                           ;i2c1.c: 422: i2c1_state = S_MASTER_SEND_DATA;
  2886  00079E  0E03               	movlw	3
  2887  0007A0  6E15               	movwf	_i2c1_state,c
  2888                           
  2889                           ;i2c1.c: 423: }
  2890                           ;i2c1.c: 424: }
  2891                           ;i2c1.c: 425: break;
  2892  0007A2  0012               	return	
  2893  0007A4                     i2l82:
  2894                           
  2895                           ;i2c1.c: 430: if(SSP1CON2bits.ACKSTAT)
  2896  0007A4  ACC5               	btfss	4037,6,c	;volatile
  2897  0007A6  D006               	goto	i2l1402
  2898                           
  2899                           ;i2c1.c: 431: {
  2900                           ;i2c1.c: 433: i2c1_object.i2cErrors++;
  2901  0007A8  2A07               	incf	_i2c1_object+6,f,c
  2902                           
  2903                           ;i2c1.c: 436: SSP1CON2bits.ACKSTAT = 0;
  2904  0007AA  9CC5               	bcf	4037,6,c	;volatile
  2905                           
  2906                           ;i2c1.c: 439: I2C1_Stop(I2C1_DATA_NO_ACK);
  2907  0007AC  0E05               	movlw	5
  2908  0007AE  ECDA  F005         	call	_I2C1_Stop
  2909                           
  2910                           ;i2c1.c: 441: }
  2911  0007B2  0012               	return	
  2912  0007B4                     i2l1402:
  2913                           
  2914                           ;i2c1.c: 442: else
  2915                           ;i2c1.c: 443: {
  2916                           ;i2c1.c: 445: if(i2c_bytes_left-- == 0U)
  2917  0007B4  060F               	decf	I2C1_ISR@i2c_bytes_left,f,c
  2918  0007B6  280F               	incf	I2C1_ISR@i2c_bytes_left,w,c
  2919  0007B8  A4D8               	btfss	status,2,c
  2920  0007BA  D00E               	goto	i2l1412
  2921                           
  2922                           ;i2c1.c: 446: {
  2923                           ;i2c1.c: 450: p_i2c1_trb_current++;
  2924  0007BC  0E06               	movlw	6
  2925  0007BE  260C               	addwf	_p_i2c1_trb_current,f,c
  2926  0007C0  0E00               	movlw	0
  2927  0007C2  220D               	addwfc	_p_i2c1_trb_current+1,f,c
  2928                           
  2929                           ;i2c1.c: 453: if(--i2c1_trb_count == 0)
  2930  0007C4  2E16               	decfsz	_i2c1_trb_count,f,c
  2931  0007C6  D004               	goto	i2l86
  2932                           
  2933                           ;i2c1.c: 454: {
  2934                           ;i2c1.c: 455: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  2935  0007C8  0E00               	movlw	0
  2936  0007CA  ECDA  F005         	call	_I2C1_Stop
  2937                           
  2938                           ;i2c1.c: 456: }
  2939  0007CE  0012               	return	
  2940  0007D0                     i2l86:
  2941                           
  2942                           ;i2c1.c: 457: else
  2943                           ;i2c1.c: 458: {
  2944                           ;i2c1.c: 465: SSP1CON2bits.RSEN = 1;
  2945  0007D0  82C5               	bsf	4037,1,c	;volatile
  2946                           
  2947                           ;i2c1.c: 468: i2c1_state = S_MASTER_SEND_ADDR;
  2948  0007D2  0E02               	movlw	2
  2949  0007D4  6E15               	movwf	_i2c1_state,c
  2950                           
  2951                           ;i2c1.c: 470: }
  2952                           ;i2c1.c: 471: }
  2953  0007D6  0012               	return	
  2954  0007D8                     i2l1412:
  2955                           
  2956                           ;i2c1.c: 472: else
  2957                           ;i2c1.c: 473: {
  2958                           ;i2c1.c: 475: SSP1BUF = *pi2c_buf_ptr++;
  2959  0007D8  C008  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  2960  0007DC  C009  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  2961  0007E0  50DF               	movf	indf2,w,c
  2962  0007E2  6EC9               	movwf	4041,c	;volatile
  2963  0007E4  4A08               	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
  2964  0007E6  2A09               	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
  2965                           
  2966                           ;i2c1.c: 476: }
  2967                           ;i2c1.c: 477: }
  2968                           ;i2c1.c: 478: break;
  2969  0007E8  0012               	return	
  2970  0007EA                     i2l89:
  2971                           
  2972                           ;i2c1.c: 483: if(SSP1CON2bits.ACKSTAT)
  2973  0007EA  ACC5               	btfss	4037,6,c	;volatile
  2974  0007EC  D006               	goto	i2l90
  2975                           
  2976                           ;i2c1.c: 484: {
  2977                           ;i2c1.c: 487: i2c1_object.i2cErrors++;
  2978  0007EE  2A07               	incf	_i2c1_object+6,f,c
  2979                           
  2980                           ;i2c1.c: 490: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  2981  0007F0  0E04               	movlw	4
  2982  0007F2  ECDA  F005         	call	_I2C1_Stop
  2983                           
  2984                           ;i2c1.c: 493: SSP1CON2bits.ACKSTAT = 0;
  2985  0007F6  9CC5               	bcf	4037,6,c	;volatile
  2986                           
  2987                           ;i2c1.c: 494: }
  2988  0007F8  0012               	return	
  2989  0007FA                     i2l90:
  2990                           
  2991                           ;i2c1.c: 495: else
  2992                           ;i2c1.c: 496: {
  2993                           ;i2c1.c: 497: SSP1CON2bits.RCEN = 1;
  2994  0007FA  86C5               	bsf	4037,3,c	;volatile
  2995                           
  2996                           ;i2c1.c: 498: i2c1_state = S_MASTER_ACK_RCV_DATA;
  2997  0007FC  0E08               	movlw	8
  2998  0007FE  6E15               	movwf	_i2c1_state,c
  2999                           
  3000                           ;i2c1.c: 499: }
  3001                           ;i2c1.c: 500: break;
  3002  000800  0012               	return	
  3003  000802                     i2l1424:
  3004                           
  3005                           ;i2c1.c: 507: i2c1_state = S_MASTER_ACK_RCV_DATA;
  3006  000802  0E08               	movlw	8
  3007  000804  6E15               	movwf	_i2c1_state,c
  3008                           
  3009                           ;i2c1.c: 510: SSP1CON2bits.RCEN = 1;
  3010  000806  86C5               	bsf	4037,3,c	;volatile
  3011                           
  3012                           ;i2c1.c: 512: break;
  3013  000808  0012               	return	
  3014  00080A                     i2l1428:
  3015                           
  3016                           ;i2c1.c: 517: *pi2c_buf_ptr++ = SSP1BUF;
  3017  00080A  C008  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  3018  00080E  C009  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  3019  000812  CFC9 FFDF          	movff	4041,indf2	;volatile
  3020  000816  4A08               	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
  3021  000818  2A09               	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
  3022                           
  3023                           ;i2c1.c: 520: if(--i2c_bytes_left)
  3024  00081A  0E01               	movlw	1
  3025  00081C  5E0F               	subwf	I2C1_ISR@i2c_bytes_left,f,c
  3026  00081E  B4D8               	btfsc	status,2,c
  3027  000820  D004               	goto	i2l94
  3028                           
  3029                           ;i2c1.c: 521: {
  3030                           ;i2c1.c: 527: SSP1CON2bits.ACKDT = 0;
  3031  000822  9AC5               	bcf	4037,5,c	;volatile
  3032                           
  3033                           ;i2c1.c: 530: i2c1_state = S_MASTER_RCV_DATA;
  3034  000824  0E06               	movlw	6
  3035  000826  6E15               	movwf	_i2c1_state,c
  3036                           
  3037                           ;i2c1.c: 531: }
  3038  000828  D004               	goto	i2l1440
  3039  00082A                     i2l94:
  3040                           
  3041                           ;i2c1.c: 532: else
  3042                           ;i2c1.c: 533: {
  3043                           ;i2c1.c: 537: SSP1CON2bits.ACKDT = 1;
  3044  00082A  8AC5               	bsf	4037,5,c	;volatile
  3045                           
  3046                           ;i2c1.c: 539: I2C1_FunctionComplete();
  3047  00082C  ECA9  F006         	call	_I2C1_FunctionComplete	;wreg free
  3048  000830  D000               	goto	i2l1440
  3049  000832                     i2l1440:
  3050                           
  3051                           ;i2c1.c: 540: }
  3052                           ;i2c1.c: 543: SSP1CON2bits.ACKEN = 1;
  3053  000832  88C5               	bsf	4037,4,c	;volatile
  3054                           
  3055                           ;i2c1.c: 544: break;
  3056  000834  0012               	return	
  3057                           
  3058                           ;i2c1.c: 546: case S_MASTER_RCV_STOP:
  3059  000836  D000               	goto	i2l1442
  3060  000838                     i2l1442:
  3061                           
  3062                           ;i2c1.c: 547: case S_MASTER_SEND_STOP:
  3063                           ;i2c1.c: 550: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  3064  000838  0E00               	movlw	0
  3065  00083A  ECDA  F005         	call	_I2C1_Stop
  3066                           
  3067                           ;i2c1.c: 551: break;
  3068  00083E  0012               	return	
  3069  000840                     i2l1444:
  3070                           
  3071                           ;i2c1.c: 557: i2c1_object.i2cErrors++;
  3072  000840  2A07               	incf	_i2c1_object+6,f,c
  3073                           
  3074                           ;i2c1.c: 558: I2C1_Stop(I2C1_LOST_STATE);
  3075  000842  0E06               	movlw	6
  3076  000844  ECDA  F005         	call	_I2C1_Stop
  3077                           
  3078                           ;i2c1.c: 561: }
  3079                           
  3080                           ;i2c1.c: 559: break;
  3081  000848  0012               	return	
  3082  00084A                     i2l1450:
  3083  00084A  5015               	movf	_i2c1_state,w,c
  3084                           
  3085                           ; Switch size 1, requested type "space"
  3086                           ; Number of cases is 11, Range of values is 0 to 11
  3087                           ; switch strategies available:
  3088                           ; Name         Instructions Cycles
  3089                           ; simple_byte           34    18 (average)
  3090                           ;	Chosen strategy is simple_byte
  3091  00084C  0A00               	xorlw	0	; case 0
  3092  00084E  B4D8               	btfsc	status,2,c
  3093  000850  D701               	goto	i2l60
  3094  000852  0A01               	xorlw	1	; case 1
  3095  000854  B4D8               	btfsc	status,2,c
  3096  000856  D731               	goto	i2l65
  3097  000858  0A03               	xorlw	3	; case 2
  3098  00085A  B4D8               	btfsc	status,2,c
  3099  00085C  D766               	goto	i2l1374
  3100  00085E  0A01               	xorlw	1	; case 3
  3101  000860  B4D8               	btfsc	status,2,c
  3102  000862  D7A0               	goto	i2l82
  3103  000864  0A07               	xorlw	7	; case 4
  3104  000866  B4D8               	btfsc	status,2,c
  3105  000868  D7E7               	goto	i2l1442
  3106  00086A  0A01               	xorlw	1	; case 5
  3107  00086C  B4D8               	btfsc	status,2,c
  3108  00086E  D7BD               	goto	i2l89
  3109  000870  0A03               	xorlw	3	; case 6
  3110  000872  B4D8               	btfsc	status,2,c
  3111  000874  D7C6               	goto	i2l1424
  3112  000876  0A01               	xorlw	1	; case 7
  3113  000878  B4D8               	btfsc	status,2,c
  3114  00087A  D7DE               	goto	i2l1442
  3115  00087C  0A0F               	xorlw	15	; case 8
  3116  00087E  B4D8               	btfsc	status,2,c
  3117  000880  D7C4               	goto	i2l1428
  3118  000882  0A02               	xorlw	2	; case 10
  3119  000884  B4D8               	btfsc	status,2,c
  3120  000886  D71D               	goto	i2l66
  3121  000888  0A01               	xorlw	1	; case 11
  3122  00088A  B4D8               	btfsc	status,2,c
  3123  00088C  D730               	goto	i2l71
  3124  00088E  D7D8               	goto	i2l1444
  3125  000890  0012               	return		;funcret
  3126  000892                     __end_of_I2C1_ISR:
  3127                           	opt stack 0
  3128                           pclatu	equ	0xFFB
  3129                           pclath	equ	0xFFA
  3130                           tblptru	equ	0xFF8
  3131                           tblptrh	equ	0xFF7
  3132                           tblptrl	equ	0xFF6
  3133                           tablat	equ	0xFF5
  3134                           prodh	equ	0xFF4
  3135                           prodl	equ	0xFF3
  3136                           intcon	equ	0xFF2
  3137                           intcon2	equ	0xFF1
  3138                           postinc0	equ	0xFEE
  3139                           fsr0h	equ	0xFEA
  3140                           fsr0l	equ	0xFE9
  3141                           wreg	equ	0xFE8
  3142                           fsr1h	equ	0xFE2
  3143                           fsr1l	equ	0xFE1
  3144                           indf2	equ	0xFDF
  3145                           postinc2	equ	0xFDE
  3146                           postdec2	equ	0xFDD
  3147                           fsr2h	equ	0xFDA
  3148                           fsr2l	equ	0xFD9
  3149                           status	equ	0xFD8
  3150                           
  3151 ;; *************** function _I2C1_Stop *****************
  3152 ;; Defined at:
  3153 ;;		line 582 in file "mcc_generated_files/i2c1.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;  completion_c    1    wreg     enum E8836
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;  completion_c    1    2[COMRAM] enum E8836
  3158 ;; Return value:  Size  Location     Type
  3159 ;;		None               void
  3160 ;; Registers used:
  3161 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3167 ;;      Params:         0       0       0       0       0       0       0
  3168 ;;      Locals:         1       0       0       0       0       0       0
  3169 ;;      Temps:          2       0       0       0       0       0       0
  3170 ;;      Totals:         3       0       0       0       0       0       0
  3171 ;;Total ram usage:        3 bytes
  3172 ;; Hardware stack levels used:    1
  3173 ;; This function calls:
  3174 ;;		Nothing
  3175 ;; This function is called by:
  3176 ;;		_I2C1_ISR
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           	psect	text20
  3181  000BB4                     __ptext20:
  3182                           	opt stack 0
  3183  000BB4                     _I2C1_Stop:
  3184                           	opt stack 25
  3185                           
  3186                           ;incstack = 0
  3187                           ;I2C1_Stop@completion_code stored from wreg
  3188  000BB4  6E2D               	movwf	I2C1_Stop@completion_code,c
  3189                           
  3190                           ;i2c1.c: 585: SSP1CON2bits.PEN = 1;
  3191  000BB6  84C5               	bsf	4037,2,c	;volatile
  3192                           
  3193                           ;i2c1.c: 588: if (p_i2c1_current->pTrFlag != (0))
  3194  000BB8  EE20 F003          	lfsr	2,3
  3195  000BBC  500A               	movf	_p_i2c1_current,w,c
  3196  000BBE  26D9               	addwf	fsr2l,f,c
  3197  000BC0  500B               	movf	_p_i2c1_current+1,w,c
  3198  000BC2  22DA               	addwfc	fsr2h,f,c
  3199  000BC4  50DE               	movf	postinc2,w,c
  3200  000BC6  10DE               	iorwf	postinc2,w,c
  3201  000BC8  B4D8               	btfsc	status,2,c
  3202  000BCA  D011               	goto	i2l1240
  3203                           
  3204                           ;i2c1.c: 589: {
  3205                           ;i2c1.c: 591: *(p_i2c1_current->pTrFlag) = completion_code;
  3206  000BCC  EE20 F003          	lfsr	2,3
  3207  000BD0  500A               	movf	_p_i2c1_current,w,c
  3208  000BD2  26D9               	addwf	fsr2l,f,c
  3209  000BD4  500B               	movf	_p_i2c1_current+1,w,c
  3210  000BD6  22DA               	addwfc	fsr2h,f,c
  3211  000BD8  CFDE F02B          	movff	postinc2,??_I2C1_Stop
  3212  000BDC  CFDD F02C          	movff	postdec2,??_I2C1_Stop+1
  3213  000BE0  C02B  FFD9         	movff	??_I2C1_Stop,fsr2l
  3214  000BE4  C02C  FFDA         	movff	??_I2C1_Stop+1,fsr2h
  3215  000BE8  C02D  FFDF         	movff	I2C1_Stop@completion_code,indf2
  3216  000BEC  D000               	goto	i2l1240
  3217  000BEE                     i2l1240:
  3218                           
  3219                           ;i2c1.c: 592: }
  3220                           ;i2c1.c: 595: i2c1_state = S_MASTER_IDLE;
  3221  000BEE  0E00               	movlw	0
  3222  000BF0  6E15               	movwf	_i2c1_state,c
  3223  000BF2  0012               	return		;funcret
  3224  000BF4                     __end_of_I2C1_Stop:
  3225                           	opt stack 0
  3226                           pclatu	equ	0xFFB
  3227                           pclath	equ	0xFFA
  3228                           tblptru	equ	0xFF8
  3229                           tblptrh	equ	0xFF7
  3230                           tblptrl	equ	0xFF6
  3231                           tablat	equ	0xFF5
  3232                           prodh	equ	0xFF4
  3233                           prodl	equ	0xFF3
  3234                           intcon	equ	0xFF2
  3235                           intcon2	equ	0xFF1
  3236                           postinc0	equ	0xFEE
  3237                           fsr0h	equ	0xFEA
  3238                           fsr0l	equ	0xFE9
  3239                           wreg	equ	0xFE8
  3240                           fsr1h	equ	0xFE2
  3241                           fsr1l	equ	0xFE1
  3242                           indf2	equ	0xFDF
  3243                           postinc2	equ	0xFDE
  3244                           postdec2	equ	0xFDD
  3245                           fsr2h	equ	0xFDA
  3246                           fsr2l	equ	0xFD9
  3247                           status	equ	0xFD8
  3248                           
  3249 ;; *************** function _I2C1_FunctionComplete *****************
  3250 ;; Defined at:
  3251 ;;		line 564 in file "mcc_generated_files/i2c1.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;		None
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;		None
  3256 ;; Return value:  Size  Location     Type
  3257 ;;		None               void
  3258 ;; Registers used:
  3259 ;;		wreg, status,2, status,0
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/0
  3262 ;;		On exit  : 0/0
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3265 ;;      Params:         0       0       0       0       0       0       0
  3266 ;;      Locals:         0       0       0       0       0       0       0
  3267 ;;      Temps:          0       0       0       0       0       0       0
  3268 ;;      Totals:         0       0       0       0       0       0       0
  3269 ;;Total ram usage:        0 bytes
  3270 ;; Hardware stack levels used:    1
  3271 ;; This function calls:
  3272 ;;		Nothing
  3273 ;; This function is called by:
  3274 ;;		_I2C1_ISR
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278                           	psect	text21
  3279  000D52                     __ptext21:
  3280                           	opt stack 0
  3281  000D52                     _I2C1_FunctionComplete:
  3282                           	opt stack 25
  3283                           
  3284                           ;i2c1.c: 568: p_i2c1_trb_current++;
  3285                           
  3286                           ;incstack = 0
  3287  000D52  0E06               	movlw	6
  3288  000D54  260C               	addwf	_p_i2c1_trb_current,f,c
  3289  000D56  0E00               	movlw	0
  3290  000D58  220D               	addwfc	_p_i2c1_trb_current+1,f,c
  3291                           
  3292                           ;i2c1.c: 571: if(--i2c1_trb_count == 0)
  3293  000D5A  2E16               	decfsz	_i2c1_trb_count,f,c
  3294  000D5C  D003               	goto	i2l1248
  3295                           
  3296                           ;i2c1.c: 572: {
  3297                           ;i2c1.c: 573: i2c1_state = S_MASTER_SEND_STOP;
  3298  000D5E  0E04               	movlw	4
  3299  000D60  6E15               	movwf	_i2c1_state,c
  3300                           
  3301                           ;i2c1.c: 574: }
  3302  000D62  0012               	return	
  3303  000D64                     i2l1248:
  3304                           
  3305                           ;i2c1.c: 575: else
  3306                           ;i2c1.c: 576: {
  3307                           ;i2c1.c: 577: i2c1_state = S_MASTER_RESTART;
  3308  000D64  0E01               	movlw	1
  3309  000D66  6E15               	movwf	_i2c1_state,c
  3310  000D68  0012               	return	
  3311  000D6A  0012               	return		;funcret
  3312  000D6C                     __end_of_I2C1_FunctionComplete:
  3313                           	opt stack 0
  3314                           pclatu	equ	0xFFB
  3315                           pclath	equ	0xFFA
  3316                           tblptru	equ	0xFF8
  3317                           tblptrh	equ	0xFF7
  3318                           tblptrl	equ	0xFF6
  3319                           tablat	equ	0xFF5
  3320                           prodh	equ	0xFF4
  3321                           prodl	equ	0xFF3
  3322                           intcon	equ	0xFF2
  3323                           intcon2	equ	0xFF1
  3324                           postinc0	equ	0xFEE
  3325                           fsr0h	equ	0xFEA
  3326                           fsr0l	equ	0xFE9
  3327                           wreg	equ	0xFE8
  3328                           fsr1h	equ	0xFE2
  3329                           fsr1l	equ	0xFE1
  3330                           indf2	equ	0xFDF
  3331                           postinc2	equ	0xFDE
  3332                           postdec2	equ	0xFDD
  3333                           fsr2h	equ	0xFDA
  3334                           fsr2l	equ	0xFD9
  3335                           status	equ	0xFD8
  3336                           
  3337 ;; *************** function _I2C1_BusCollisionISR *****************
  3338 ;; Defined at:
  3339 ;;		line 729 in file "mcc_generated_files/i2c1.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;		None
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;		None
  3344 ;; Return value:  Size  Location     Type
  3345 ;;		None               void
  3346 ;; Registers used:
  3347 ;;		None
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 0/0
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3353 ;;      Params:         0       0       0       0       0       0       0
  3354 ;;      Locals:         0       0       0       0       0       0       0
  3355 ;;      Temps:          0       0       0       0       0       0       0
  3356 ;;      Totals:         0       0       0       0       0       0       0
  3357 ;;Total ram usage:        0 bytes
  3358 ;; Hardware stack levels used:    1
  3359 ;; This function calls:
  3360 ;;		Nothing
  3361 ;; This function is called by:
  3362 ;;		_INTERRUPT_InterruptManager
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           	psect	text22
  3367  000DCA                     __ptext22:
  3368                           	opt stack 0
  3369  000DCA                     _I2C1_BusCollisionISR:
  3370                           	opt stack 26
  3371                           
  3372                           ;incstack = 0
  3373  000DCA  0012               	return		;funcret
  3374  000DCC                     __end_of_I2C1_BusCollisionISR:
  3375                           	opt stack 0
  3376                           pclatu	equ	0xFFB
  3377                           pclath	equ	0xFFA
  3378                           tblptru	equ	0xFF8
  3379                           tblptrh	equ	0xFF7
  3380                           tblptrl	equ	0xFF6
  3381                           tablat	equ	0xFF5
  3382                           prodh	equ	0xFF4
  3383                           prodl	equ	0xFF3
  3384                           intcon	equ	0xFF2
  3385                           intcon2	equ	0xFF1
  3386                           postinc0	equ	0xFEE
  3387                           fsr0h	equ	0xFEA
  3388                           fsr0l	equ	0xFE9
  3389                           wreg	equ	0xFE8
  3390                           fsr1h	equ	0xFE2
  3391                           fsr1l	equ	0xFE1
  3392                           indf2	equ	0xFDF
  3393                           postinc2	equ	0xFDE
  3394                           postdec2	equ	0xFDD
  3395                           fsr2h	equ	0xFDA
  3396                           fsr2l	equ	0xFD9
  3397                           status	equ	0xFD8
  3398                           
  3399 ;; *************** function _EUSART1_Transmit_ISR *****************
  3400 ;; Defined at:
  3401 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;		None
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;		None
  3406 ;; Return value:  Size  Location     Type
  3407 ;;		None               void
  3408 ;; Registers used:
  3409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3415 ;;      Params:         0       0       0       0       0       0       0
  3416 ;;      Locals:         0       0       0       0       0       0       0
  3417 ;;      Temps:          0       0       0       0       0       0       0
  3418 ;;      Totals:         0       0       0       0       0       0       0
  3419 ;;Total ram usage:        0 bytes
  3420 ;; Hardware stack levels used:    1
  3421 ;; This function calls:
  3422 ;;		Nothing
  3423 ;; This function is called by:
  3424 ;;		_INTERRUPT_InterruptManager
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           	psect	text23
  3429  000C64                     __ptext23:
  3430                           	opt stack 0
  3431  000C64                     _EUSART1_Transmit_ISR:
  3432                           	opt stack 26
  3433                           
  3434                           ;eusart1.c: 177: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  3435                           
  3436                           ;incstack = 0
  3437  000C64  0E08               	movlw	8
  3438  000C66  604C               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  3439  000C68  D013               	goto	i2l213
  3440                           
  3441                           ;eusart1.c: 178: {
  3442                           ;eusart1.c: 179: TX1REG = eusart1TxBuffer[eusart1TxTail++];
  3443  000C6A  5014               	movf	_eusart1TxTail,w,c
  3444  000C6C  0D01               	mullw	1
  3445  000C6E  0E7C               	movlw	low _eusart1TxBuffer
  3446  000C70  24F3               	addwf	prodl,w,c
  3447  000C72  6ED9               	movwf	fsr2l,c
  3448  000C74  0E00               	movlw	high _eusart1TxBuffer
  3449  000C76  20F4               	addwfc	prodh,w,c
  3450  000C78  6EDA               	movwf	fsr2h,c
  3451  000C7A  50DF               	movf	indf2,w,c
  3452  000C7C  6EAD               	movwf	4013,c	;volatile
  3453  000C7E  2A14               	incf	_eusart1TxTail,f,c
  3454                           
  3455                           ;eusart1.c: 180: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  3456  000C80  0E07               	movlw	7
  3457  000C82  6414               	cpfsgt	_eusart1TxTail,c
  3458  000C84  D003               	goto	i2l1872
  3459                           
  3460                           ;eusart1.c: 181: {
  3461                           ;eusart1.c: 182: eusart1TxTail = 0;
  3462  000C86  0E00               	movlw	0
  3463  000C88  6E14               	movwf	_eusart1TxTail,c
  3464  000C8A  D000               	goto	i2l1872
  3465  000C8C                     i2l1872:
  3466                           
  3467                           ;eusart1.c: 183: }
  3468                           ;eusart1.c: 184: eusart1TxBufferRemaining++;
  3469  000C8C  2A4C               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  3470                           
  3471                           ;eusart1.c: 185: }
  3472  000C8E  0012               	return	
  3473  000C90                     i2l213:
  3474                           
  3475                           ;eusart1.c: 186: else
  3476                           ;eusart1.c: 187: {
  3477                           ;eusart1.c: 188: PIE1bits.TX1IE = 0;
  3478  000C90  989D               	bcf	3997,4,c	;volatile
  3479  000C92  0012               	return	
  3480  000C94  0012               	return		;funcret
  3481  000C96                     __end_of_EUSART1_Transmit_ISR:
  3482                           	opt stack 0
  3483                           pclatu	equ	0xFFB
  3484                           pclath	equ	0xFFA
  3485                           tblptru	equ	0xFF8
  3486                           tblptrh	equ	0xFF7
  3487                           tblptrl	equ	0xFF6
  3488                           tablat	equ	0xFF5
  3489                           prodh	equ	0xFF4
  3490                           prodl	equ	0xFF3
  3491                           intcon	equ	0xFF2
  3492                           intcon2	equ	0xFF1
  3493                           postinc0	equ	0xFEE
  3494                           fsr0h	equ	0xFEA
  3495                           fsr0l	equ	0xFE9
  3496                           wreg	equ	0xFE8
  3497                           fsr1h	equ	0xFE2
  3498                           fsr1l	equ	0xFE1
  3499                           indf2	equ	0xFDF
  3500                           postinc2	equ	0xFDE
  3501                           postdec2	equ	0xFDD
  3502                           fsr2h	equ	0xFDA
  3503                           fsr2l	equ	0xFD9
  3504                           status	equ	0xFD8
  3505                           
  3506 ;; *************** function _EUSART1_Receive_ISR *****************
  3507 ;; Defined at:
  3508 ;;		line 192 in file "mcc_generated_files/eusart1.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;		None
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;		None
  3513 ;; Return value:  Size  Location     Type
  3514 ;;		None               void
  3515 ;; Registers used:
  3516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3522 ;;      Params:         0       0       0       0       0       0       0
  3523 ;;      Locals:         0       0       0       0       0       0       0
  3524 ;;      Temps:          0       0       0       0       0       0       0
  3525 ;;      Totals:         0       0       0       0       0       0       0
  3526 ;;Total ram usage:        0 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		_INTERRUPT_InterruptManager
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           	psect	text24
  3536  000C96                     __ptext24:
  3537                           	opt stack 0
  3538  000C96                     _EUSART1_Receive_ISR:
  3539                           	opt stack 26
  3540                           
  3541                           ;eusart1.c: 194: if(1 == RC1STAbits.OERR)
  3542                           
  3543                           ;incstack = 0
  3544  000C96  A2AB               	btfss	4011,1,c	;volatile
  3545  000C98  D003               	goto	i2l1878
  3546                           
  3547                           ;eusart1.c: 195: {
  3548                           ;eusart1.c: 198: RC1STAbits.CREN = 0;
  3549  000C9A  98AB               	bcf	4011,4,c	;volatile
  3550                           
  3551                           ;eusart1.c: 199: RC1STAbits.CREN = 1;
  3552  000C9C  88AB               	bsf	4011,4,c	;volatile
  3553  000C9E  D000               	goto	i2l1878
  3554  000CA0                     i2l1878:
  3555                           
  3556                           ;eusart1.c: 200: }
  3557                           ;eusart1.c: 203: eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  3558  000CA0  5011               	movf	_eusart1RxHead,w,c
  3559  000CA2  0D01               	mullw	1
  3560  000CA4  0E74               	movlw	low _eusart1RxBuffer
  3561  000CA6  24F3               	addwf	prodl,w,c
  3562  000CA8  6ED9               	movwf	fsr2l,c
  3563  000CAA  0E00               	movlw	high _eusart1RxBuffer
  3564  000CAC  20F4               	addwfc	prodh,w,c
  3565  000CAE  6EDA               	movwf	fsr2h,c
  3566  000CB0  CFAE FFDF          	movff	4014,indf2	;volatile
  3567  000CB4  2A11               	incf	_eusart1RxHead,f,c
  3568                           
  3569                           ;eusart1.c: 204: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  3570  000CB6  0E07               	movlw	7
  3571  000CB8  6411               	cpfsgt	_eusart1RxHead,c
  3572  000CBA  D003               	goto	i2l1886
  3573                           
  3574                           ;eusart1.c: 205: {
  3575                           ;eusart1.c: 206: eusart1RxHead = 0;
  3576  000CBC  0E00               	movlw	0
  3577  000CBE  6E11               	movwf	_eusart1RxHead,c
  3578  000CC0  D000               	goto	i2l1886
  3579  000CC2                     i2l1886:
  3580                           
  3581                           ;eusart1.c: 207: }
  3582                           ;eusart1.c: 208: eusart1RxCount++;
  3583  000CC2  2A10               	incf	_eusart1RxCount,f,c	;volatile
  3584  000CC4  0012               	return		;funcret
  3585  000CC6                     __end_of_EUSART1_Receive_ISR:
  3586                           	opt stack 0
  3587                           pclatu	equ	0xFFB
  3588                           pclath	equ	0xFFA
  3589                           tblptru	equ	0xFF8
  3590                           tblptrh	equ	0xFF7
  3591                           tblptrl	equ	0xFF6
  3592                           tablat	equ	0xFF5
  3593                           prodh	equ	0xFF4
  3594                           prodl	equ	0xFF3
  3595                           intcon	equ	0xFF2
  3596                           intcon2	equ	0xFF1
  3597                           postinc0	equ	0xFEE
  3598                           fsr0h	equ	0xFEA
  3599                           fsr0l	equ	0xFE9
  3600                           wreg	equ	0xFE8
  3601                           fsr1h	equ	0xFE2
  3602                           fsr1l	equ	0xFE1
  3603                           indf2	equ	0xFDF
  3604                           postinc2	equ	0xFDE
  3605                           postdec2	equ	0xFDD
  3606                           fsr2h	equ	0xFDA
  3607                           fsr2l	equ	0xFD9
  3608                           status	equ	0xFD8
  3609                           
  3610 ;; *************** function _ADC_ISR *****************
  3611 ;; Defined at:
  3612 ;;		line 128 in file "mcc_generated_files/adc.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;		None
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;		None
  3617 ;; Return value:  Size  Location     Type
  3618 ;;		None               void
  3619 ;; Registers used:
  3620 ;;		None
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3626 ;;      Params:         0       0       0       0       0       0       0
  3627 ;;      Locals:         0       0       0       0       0       0       0
  3628 ;;      Temps:          0       0       0       0       0       0       0
  3629 ;;      Totals:         0       0       0       0       0       0       0
  3630 ;;Total ram usage:        0 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; This function calls:
  3633 ;;		Nothing
  3634 ;; This function is called by:
  3635 ;;		_INTERRUPT_InterruptManager
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text25
  3640  000DC6                     __ptext25:
  3641                           	opt stack 0
  3642  000DC6                     _ADC_ISR:
  3643                           	opt stack 26
  3644                           
  3645                           ;adc.c: 131: PIR1bits.ADIF = 0;
  3646                           
  3647                           ;incstack = 0
  3648  000DC6  9C9E               	bcf	3998,6,c	;volatile
  3649  000DC8  0012               	return		;funcret
  3650  000DCA                     __end_of_ADC_ISR:
  3651                           	opt stack 0
  3652                           pclatu	equ	0xFFB
  3653                           pclath	equ	0xFFA
  3654                           tblptru	equ	0xFF8
  3655                           tblptrh	equ	0xFF7
  3656                           tblptrl	equ	0xFF6
  3657                           tablat	equ	0xFF5
  3658                           prodh	equ	0xFF4
  3659                           prodl	equ	0xFF3
  3660                           intcon	equ	0xFF2
  3661                           intcon2	equ	0xFF1
  3662                           postinc0	equ	0xFEE
  3663                           fsr0h	equ	0xFEA
  3664                           fsr0l	equ	0xFE9
  3665                           wreg	equ	0xFE8
  3666                           fsr1h	equ	0xFE2
  3667                           fsr1l	equ	0xFE1
  3668                           indf2	equ	0xFDF
  3669                           postinc2	equ	0xFDE
  3670                           postdec2	equ	0xFDD
  3671                           fsr2h	equ	0xFDA
  3672                           fsr2l	equ	0xFD9
  3673                           status	equ	0xFD8
  3674                           pclatu	equ	0xFFB
  3675                           pclath	equ	0xFFA
  3676                           tblptru	equ	0xFF8
  3677                           tblptrh	equ	0xFF7
  3678                           tblptrl	equ	0xFF6
  3679                           tablat	equ	0xFF5
  3680                           prodh	equ	0xFF4
  3681                           prodl	equ	0xFF3
  3682                           intcon	equ	0xFF2
  3683                           intcon2	equ	0xFF1
  3684                           postinc0	equ	0xFEE
  3685                           fsr0h	equ	0xFEA
  3686                           fsr0l	equ	0xFE9
  3687                           wreg	equ	0xFE8
  3688                           fsr1h	equ	0xFE2
  3689                           fsr1l	equ	0xFE1
  3690                           indf2	equ	0xFDF
  3691                           postinc2	equ	0xFDE
  3692                           postdec2	equ	0xFDD
  3693                           fsr2h	equ	0xFDA
  3694                           fsr2l	equ	0xFD9
  3695                           status	equ	0xFD8
  3696                           
  3697                           	psect	rparam
  3698  0000                     pclatu	equ	0xFFB
  3699                           pclath	equ	0xFFA
  3700                           tblptru	equ	0xFF8
  3701                           tblptrh	equ	0xFF7
  3702                           tblptrl	equ	0xFF6
  3703                           tablat	equ	0xFF5
  3704                           prodh	equ	0xFF4
  3705                           prodl	equ	0xFF3
  3706                           intcon	equ	0xFF2
  3707                           intcon2	equ	0xFF1
  3708                           postinc0	equ	0xFEE
  3709                           fsr0h	equ	0xFEA
  3710                           fsr0l	equ	0xFE9
  3711                           wreg	equ	0xFE8
  3712                           fsr1h	equ	0xFE2
  3713                           fsr1l	equ	0xFE1
  3714                           indf2	equ	0xFDF
  3715                           postinc2	equ	0xFDE
  3716                           postdec2	equ	0xFDD
  3717                           fsr2h	equ	0xFDA
  3718                           fsr2l	equ	0xFD9
  3719                           status	equ	0xFD8


Data Sizes:
    Strings     16
    Constant    10
    Data        0
    BSS         78
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     31      76
    BANK0           160     17      53
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_tr_queue.pTrFlag	PTR enum E8836 size(2) Largest target is 0

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(COMRAM[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c1_object.pTrTail.pTrFlag	PTR enum E8836 size(2) Largest target is 0

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    F8948.pbuffer	PTR unsigned char  size(2) Largest target is 0

    F8943.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> I2C1_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), 

    S21$pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E8836 size(2) Largest target is 0

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    S33$pTrFlag	PTR enum E8836 size(2) Largest target is 0

    p_i2c1_current.pTrFlag	PTR enum E8836 size(2) Largest target is 0

    S33$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[6]), I2C1_MasterWrite@trBlock(COMRAM[6]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), NULL(NULL[0]), 

    S44$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), 

    S44$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _printf->___lwmod
    _putch->_EUSART1_Write
    ___lwmod->___lwdiv

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1619
                                             12 BANK0      5     5      0
                  _ADC_GetConversion
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              21    17      4    1514
                                              0 BANK0     12     8      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      93
                                             20 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      62
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     386
                                             26 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     395
                                             19 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      31
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0      15
                                              5 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_ISR                                             2     2      0      15
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C1_Stop                                            3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     11      35       4       33.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1F      4C       1       80.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      81       9        0.0%
DATA                 0      0      81      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Apr 04 00:03:48 2015

           _eusart1TxBufferRemaining 004C                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                                  l201 0B88  
                                l431 0A62                                  l296 0C4A  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                    __end_of_ADC_ISR 0DCA                                  prod 000FF3  
                                wreg 000FE8                         __CFG_LVP$OFF 000000  
                   __end_of_I2C1_ISR 0892                                 l1117 0AD2  
                               l2110 0AA8                                 l1127 0B1E  
                               l2032 0B78                                 l2200 097A  
                               l2106 0A96                                 l2130 0AFC  
                               l2202 0980                                 l2108 0AA0  
                               l2044 0BAC                                 l2220 0A1A  
                               l2118 0AC6                                 l2134 0B12  
                               l2126 0AEA                                 l2046 0BB0  
                               l2206 09D0                                 l2128 0AF4  
                               l2208 09E0                                 l2170 08C4  
                               l2162 08A0                                 l2226 0A4C  
                               l2218 0A16                                 l2172 08EE  
                               l2182 0920                                 l2166 08B4  
                               l2192 095E                                 l2184 0926  
                               l2196 0964                                 l2188 0934  
                               STR_1 060B                                 _LATA 000F89  
                               _LATB 000F8A                                 _LATC 000F8B  
                               _LATD 000F8C                                 _LATE 000F8D  
                               u1517 0A54                                 i2l60 0654  
                               i2l71 06EE                                 i2l63 06B2  
                               i2l72 06FC                                 i2l65 06BA  
                               i2l90 07FA                                 i2l82 07A4  
                               i2l66 06C2                                 i2l76 0790  
                               i2l77 0782                                 i2l94 082A  
                               i2l86 07D0                                 i2l89 07EA  
                               _WPUB 000F61                        _EUSART1_Write 0B74  
                               _main 0A02                      _TMR0_StartTimer 0DC2  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                        __CFG_BORV$190 000000  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 00C2  
                      __CFG_IESO$OFF 000000                         ___param_bank 000010  
            __end_of_TMR0_Initialize 0D52                           _i2c1_state 0015  
     __size_of_OSCILLATOR_Initialize 000E        __end_of_OSCILLATOR_Initialize 0DB2  
                              ?_main 002B                    __end_of_I2C1_Stop 0BF4  
                              _T0CON 000FD5                                _LATA3 007C4B  
                              _LATB3 007C53                                _LATD1 007C61  
                              _LATB5 007C55                                _LATE0 007C68  
                              _LATE1 007C69                                _LATE2 007C6A  
                     __CFG_DEBUG$OFF 000000                      __end_of___lwdiv 0ADC  
                    __end_of___lwmod 0B28                                i2l213 0C90  
                              i2l381 0070                                i2l383 007C  
                              i2l375 004C                                i2l377 0058  
                              i2l379 0064                                i2l387 0088  
                              _TMR0H 000FD7                                _TMR0L 000FD6  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                                _TRISD 000F95  
                              _TRISE 000F96         __end_of_I2C1_BusCollisionISR 0DCC  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
               _EUSART1_Transmit_ISR 0C64                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                  ??_I2C1_Initialize 003E                     __end_of_TMR0_ISR 0DA4  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                    __end_of_dpowers 060B                   __CFG_MCLRE$EXTMCLR 000000  
                              _putch 0DB2                                main@i 0093  
                     ?_EUSART1_Write 002B                                tablat 000FF5  
                              status 000FD8                       __CFG_HFOFST$ON 000000  
                     __CFG_PBADEN$ON 000000                      __initialization 0CF4  
         __end_of_EUSART1_Initialize 0C30                         __end_of_main 0A80  
                          ??_ADC_ISR 002B          ?_INTERRUPT_InterruptManager 002B  
                        _i2c1_object 0001                               ??_main 0090  
                      __activetblptr 000002                ?_EUSART1_Transmit_ISR 002B  
            __end_of_TMR0_StartTimer 0DC6                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
                             _ANSELA 000F38                               ?_putch 002B  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             _ANSELD 000F3B                               _ANSELE 000F3C  
                             _RC1REG 000FAE                               _RC1STA 000FAB  
                             i2l1240 0BEE                               i2l1402 07B4  
                             i2l1412 07D8                               i2l1342 06A0  
                             i2l1248 0D64                               i2l1440 0832  
                             i2l1424 0802                               i2l1360 06E8  
                             i2l1442 0838                               i2l1354 06D0  
                             i2l1450 084A                               i2l1444 0840  
                             i2l1428 080A                               i2l1374 072A  
                             i2l1394 079E                       __CFG_WDTEN$OFF 000000  
                             i2l1872 0C8C                               i2l1886 0CC2  
                             i2l1878 0CA0                               _RCREG1 000FAE  
                             _OSCCON 000FD3                               _SPBRG1 000FAF  
                             _TX1REG 000FAD                               _TX1STA 000FAC  
                             _TXREG1 000FAD                       __CFG_XINST$OFF 000000  
                     _p_i2c1_current 000A                       __CFG_STVREN$ON 000000  
                          ??___lwdiv 0042                            ??___lwmod 0049  
                   ?_TMR0_Initialize 002B                            ?_I2C1_ISR 002B  
                             clear_0 0CFA                               clear_1 0D06  
                             _printf 0892                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8             ADC_GetConversion@channel 0042  
              __end_of_TMR0_CallBack 0DC2                      ??_EUSART1_Write 003E  
                    _eusart1RxBuffer 0074        __size_of_INTERRUPT_Initialize 0010  
                    _eusart1TxBuffer 007C                    _SYSTEM_Initialize 0D16  
                         __accesstop 0060              __end_of__initialization 0D0C  
                 ?_SYSTEM_Initialize 002B                        ___rparam_used 000001  
                     _i2c1_trb_count 0016                _I2C1_FunctionComplete 0D52  
               _I2C1_BusCollisionISR 0DCA                       __pcstackCOMRAM 002B  
                ??_SYSTEM_Initialize 003E                            ?_TMR0_ISR 002B  
                      __end_of_putch 0DBC                           ??_I2C1_ISR 002E  
             ??_EUSART1_Transmit_ISR 002B          __end_of_EUSART1_Receive_ISR 0CC6  
                   ?_TMR0_StartTimer 002B            __end_of_SYSTEM_Initialize 0D34  
                            ??_putch 003F                        _eusart1RxHead 0011  
                      _eusart1TxHead 0013                        _eusart1RxTail 0012  
                         __pbssBANK0 0060                        _eusart1TxTail 0014  
                    __CFG_PLLCFG$OFF 000000                           __pnvCOMRAM 004A  
              ?_I2C1_BusCollisionISR 002B                   __CFG_CCP2MX$PORTC1 000000  
                         ??_TMR0_ISR 002B                   __CFG_CCP3MX$PORTB5 000000  
                    _I2C1_Initialize 0CC6                              _ADC_ISR 0DC6  
                            ?_printf 0084              __size_of_ADC_Initialize 0018  
                            _OSCCON2 000FD2                            _I2C1_Stop 0BB4  
                  __CFG_PRICLKEN$OFF 000000                              _OSCTUNE 000F9B  
                            _SPBRGH1 000FB0                              _SSP1ADD 000FC8  
                            _SSP1BUF 000FC9                      __CFG_PWRTEN$OFF 000000  
             ?_I2C1_FunctionComplete 002B                              __Hparam 0000  
                            __Lparam 0000                   _p_i2c1_trb_current 000C  
                            ___lwdiv 0A80                              ___lwmod 0ADC  
                       __psmallconst 0600                              __pcinit 0CF4  
                            __ramtop 0600                              __ptext0 0A02  
                            __ptext1 0892                              __ptext2 0DB2  
                            __ptext3 0B74                              __ptext4 0ADC  
                            __ptext5 0A80                              __ptext6 0D16  
                            __ptext7 0D34                              __ptext8 0DC2  
                            __ptext9 0B28                      __size_of_printf 0170  
                          _T0CONbits 000FD5                              _dpowers 0601  
              _OSCILLATOR_Initialize 0DA4                   _EUSART1_Initialize 0BF4  
           ??_PIN_MANAGER_Initialize 003E                           ?_I2C1_Stop 002B  
         __size_of_SYSTEM_Initialize 001E                 I2C1_ISR@pi2c_buf_ptr 0008  
               end_of_initialization 0D0C                  ?_EUSART1_Initialize 002B  
                      __Lmediumconst 0000                   _button_value_array 0060  
             ??_I2C1_BusCollisionISR 002B              __end_of_I2C1_Initialize 0CF4  
                            printf@c 008F                              printf@f 0084  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc2 000FDE                 ??_EUSART1_Initialize 003E  
                          _PORTAbits 000F80                            _PORTBbits 000F81  
                          _PORTDbits 000F83                    __size_of_I2C1_ISR 0276  
                EUSART1_Write@txData 003E    I2C1_ISR@i2c_10bit_address_restart 000E  
               _timer0ReloadVal16bit 004A         __end_of_INTERRUPT_Initialize 0D94  
            I2C1_MasterWrite@trBlock 001D                    __size_of_TMR0_ISR 0010  
           I2C1_Stop@completion_code 002D                       _ADC_Initialize 0D6C  
             ?_OSCILLATOR_Initialize 002B                       __end_of_printf 0A02  
                start_initialization 0CF4                          ??_I2C1_Stop 002B  
           __size_of_TMR0_Initialize 001E      __size_of_PIN_MANAGER_Initialize 004C  
                        putch@txData 003F                __end_of_EUSART1_Write 0BB4  
                   ?_I2C1_Initialize 002B               __size_of_TMR0_CallBack 0006  
             __end_of_ADC_Initialize 0D84                             ?_ADC_ISR 002B  
                           ??_printf 0088                       _eusart1RxCount 0010  
                        __pbssCOMRAM 0001        __size_of_EUSART1_Transmit_ISR 0032  
                      __pcstackBANK0 0084                        _i2c1_tr_queue 0023  
            ??_I2C1_FunctionComplete 002B         __size_of_EUSART1_Receive_ISR 0030  
           __size_of_TMR0_StartTimer 0004                     ___lwdiv@dividend 003E  
             _PIN_MANAGER_Initialize 0B28                            __pintcode 0008  
                           ?___lwdiv 003E                             ?___lwmod 0045  
                    ?_ADC_Initialize 002B                             _I2C1_ISR 061C  
       ??_INTERRUPT_InterruptManager 0030                             _BAUD1CON 000FB8  
                        __smallconst 0600                     ___lwdiv@quotient 0043  
                      _TMR0_CallBack 0DBC                       __size_of_putch 000A  
               _INTERRUPT_Initialize 0D84               I2C1_MasterRead@trBlock 0017  
                  ??_TMR0_Initialize 003E                             _IPR1bits 000F9F  
                           _IPR2bits 000FA2                             _PIE1bits 000F9D  
                           _PIE2bits 000FA0  __size_of_INTERRUPT_InterruptManager 00BA  
                           _PIR1bits 000F9E                             _PIR2bits 000FA1  
                           _RCONbits 000FD0                     __CFG_WDTPS$32768 000000  
                           _SSP1CON1 000FC6                             _SSP1CON3 000FCB  
                           _TMR0_ISR 0D94                            main@ADCNT 0091  
                           _SSP1STAT 000FC7                     __size_of_ADC_ISR 0004  
                         _ADCON0bits 000FC2                           printf@flag 008B  
                         printf@prec 008C                       ?_TMR0_CallBack 002B  
                        _INTCON2bits 000FF1                ?_INTERRUPT_Initialize 002B  
                           __Hrparam 0000        __size_of_I2C1_BusCollisionISR 0002  
                           __Lrparam 0000                    _ADC_GetConversion 0C30  
                 __CFG_BOREN$SBORDIS 000000               I2C1_ISR@i2c_bytes_left 000F  
                  __CFG_P2BMX$PORTD2 000000              ??_OSCILLATOR_Initialize 003E  
                 ?_ADC_GetConversion 003E                    ??_TMR0_StartTimer 003E  
        __size_of_EUSART1_Initialize 003C                     __size_of___lwdiv 005C  
                   __size_of___lwmod 004C                  ??_ADC_GetConversion 0040  
                    ___lwdiv@divisor 0040                  I2C1_ISR@i2c_address 0029  
                    ___lwdiv@counter 0042                             __ptext10 0DA4  
                           __ptext11 0D84                             __ptext20 0BB4  
                           __ptext12 0CC6                             __ptext21 0D52  
                           __ptext13 0BF4                             __ptext22 0DCA  
                           __ptext14 0D6C                             __ptext23 0C64  
                           __ptext15 0C30                             __ptext24 0C96  
                           __ptext25 0DC6                             __ptext17 0D94  
                           __ptext18 0DBC                             __ptext19 061C  
                       _SSP1CON1bits 000FC6                         _SSP1CON2bits 000FC5  
                      __size_of_main 007E            __end_of_ADC_GetConversion 0C64  
                         _RC1STAbits 000FAB   __end_of_INTERRUPT_InterruptManager 00C2  
         _INTERRUPT_InterruptManager 0008                            printf@val 008D  
                _EUSART1_Receive_ISR 0C96                           _INTCONbits 000FF2  
                    ??_TMR0_CallBack 002B               ??_INTERRUPT_Initialize 003E  
                           intlevel2 0000                 ?_EUSART1_Receive_ISR 002B  
                   ___lwmod@dividend 0045              ?_PIN_MANAGER_Initialize 002B  
     __size_of_I2C1_FunctionComplete 001A        __end_of_I2C1_FunctionComplete 0D6C  
       __end_of_EUSART1_Transmit_ISR 0C96                     ??_ADC_Initialize 003E  
                           printf@ap 0089             __size_of_I2C1_Initialize 002E  
             __size_of_EUSART1_Write 0040                      ___lwmod@divisor 0047  
                    _TMR0_Initialize 0D34                      ___lwmod@counter 0049  
                  __CFG_T3CMX$PORTC0 000000                ??_EUSART1_Receive_ISR 002B  
     __end_of_PIN_MANAGER_Initialize 0B74                   __size_of_I2C1_Stop 0040  
                  __CFG_FOSC$INTIO67 000000           __size_of_ADC_GetConversion 0034  
