

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Jun 01 19:18:08 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           	psect	smallconst
    50  000600                     __psmallconst:
    51                           	opt stack 0
    52  000600  00                 	db	0
    53  000601                     _dpowers:
    54                           	opt stack 0
    55  000601  0001               	dw	1
    56  000603  000A               	dw	10
    57  000605  0064               	dw	100
    58  000607  03E8               	dw	1000
    59  000609  2710               	dw	10000
    60  00060B                     __end_of_dpowers:
    61                           	opt stack 0
    62  00060B                     STR_1:
    63  00060B  41                 	db	65	;'A'
    64  00060C  44                 	db	68	;'D'
    65  00060D  43                 	db	67	;'C'
    66  00060E  20                 	db	32
    67  00060F  56                 	db	86	;'V'
    68  000610  6F                 	db	111	;'o'
    69  000611  6C                 	db	108	;'l'
    70  000612  75                 	db	117	;'u'
    71  000613  6D                 	db	109	;'m'
    72  000614  65                 	db	101	;'e'
    73  000615  20                 	db	32
    74  000616  3D                 	db	61	;'='
    75  000617  20                 	db	32
    76  000618  25                 	db	37
    77  000619  64                 	db	100	;'d'
    78  00061A  00                 	db	0
    79                           
    80                           ; #config settings
    81  00061B  00                 	db	0	; dummy byte at the end
    82  0000                     
    83                           	psect	nvCOMRAM
    84  000049                     __pnvCOMRAM:
    85                           	opt stack 0
    86  000049                     _timer0ReloadVal16bit:
    87                           	opt stack 0
    88  000049                     	ds	2
    89  00004B                     _eusart1TxBufferRemaining:
    90                           	opt stack 0
    91  00004B                     	ds	1
    92  0000                     _ANSELA	set	3896
    93  0000                     _ANSELB	set	3897
    94  0000                     _ANSELC	set	3898
    95  0000                     _ANSELD	set	3899
    96  0000                     _ANSELE	set	3900
    97  0000                     _ADCON0	set	4034
    98  0000                     _ADCON0bits	set	4034
    99  0000                     _ADCON1	set	4033
   100  0000                     _ADCON2	set	4032
   101  0000                     _ADRESH	set	4036
   102  0000                     _ADRESL	set	4035
   103  0000                     _BAUD1CON	set	4024
   104  0000                     _INTCON2bits	set	4081
   105  0000                     _INTCONbits	set	4082
   106  0000                     _IPR1bits	set	3999
   107  0000                     _IPR2bits	set	4002
   108  0000                     _LATA	set	3977
   109  0000                     _LATB	set	3978
   110  0000                     _LATC	set	3979
   111  0000                     _LATD	set	3980
   112  0000                     _LATE	set	3981
   113  0000                     _OSCCON	set	4051
   114  0000                     _OSCCON2	set	4050
   115  0000                     _OSCTUNE	set	3995
   116  0000                     _PIE1bits	set	3997
   117  0000                     _PIE2bits	set	4000
   118  0000                     _PIR1bits	set	3998
   119  0000                     _PIR2bits	set	4001
   120  0000                     _PORTAbits	set	3968
   121  0000                     _PORTBbits	set	3969
   122  0000                     _PORTDbits	set	3971
   123  0000                     _RC1STA	set	4011
   124  0000                     _RC1STAbits	set	4011
   125  0000                     _RCONbits	set	4048
   126  0000                     _RCREG1	set	4014
   127  0000                     _SPBRG1	set	4015
   128  0000                     _SPBRGH1	set	4016
   129  0000                     _SSP1ADD	set	4040
   130  0000                     _SSP1BUF	set	4041
   131  0000                     _SSP1CON1	set	4038
   132  0000                     _SSP1CON1bits	set	4038
   133  0000                     _SSP1CON2bits	set	4037
   134  0000                     _SSP1CON3	set	4043
   135  0000                     _SSP1STAT	set	4039
   136  0000                     _T0CON	set	4053
   137  0000                     _T0CONbits	set	4053
   138  0000                     _TMR0H	set	4055
   139  0000                     _TMR0L	set	4054
   140  0000                     _TRISA	set	3986
   141  0000                     _TRISB	set	3987
   142  0000                     _TRISC	set	3988
   143  0000                     _TRISD	set	3989
   144  0000                     _TRISE	set	3990
   145  0000                     _TX1STA	set	4012
   146  0000                     _TXREG1	set	4013
   147  0000                     _WPUB	set	3937
   148  0000                     _LATA3	set	31819
   149  0000                     _LATB3	set	31827
   150  0000                     _LATB5	set	31829
   151  0000                     _LATD1	set	31841
   152  0000                     _LATE0	set	31848
   153  0000                     _LATE1	set	31849
   154  0000                     _LATE2	set	31850
   155                           
   156                           	psect	cinit
   157  00119E                     __pcinit:
   158                           	opt stack 0
   159  00119E                     start_initialization:
   160                           	opt stack 0
   161  00119E                     __initialization:
   162                           	opt stack 0
   163                           
   164                           ; Clear objects allocated to BANK0 (69 bytes)
   165  00119E  EE00  F060         	lfsr	0,__pbssBANK0
   166  0011A2  0E45               	movlw	69
   167  0011A4                     clear_0:
   168  0011A4  6AEE               	clrf	postinc0,c
   169  0011A6  06E8               	decf	wreg,f,c
   170  0011A8  E1FD               	bnz	clear_0
   171                           
   172                           ; Clear objects allocated to COMRAM (36 bytes)
   173  0011AA  EE00  F001         	lfsr	0,__pbssCOMRAM
   174  0011AE  0E24               	movlw	36
   175  0011B0                     clear_1:
   176  0011B0  6AEE               	clrf	postinc0,c
   177  0011B2  06E8               	decf	wreg,f,c
   178  0011B4  E1FD               	bnz	clear_1
   179  0011B6                     end_of_initialization:
   180                           	opt stack 0
   181  0011B6                     __end_of__initialization:
   182                           	opt stack 0
   183  0011B6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   184  0011B8  6EF8               	movwf	tblptru,c
   185  0011BA  0100               	movlb	0
   186  0011BC  EF3A  F007         	goto	_main	;jump to C main() function
   187                           tblptru	equ	0xFF8
   188                           postinc0	equ	0xFEE
   189                           wreg	equ	0xFE8
   190                           
   191                           	psect	bssCOMRAM
   192  000001                     __pbssCOMRAM:
   193                           	opt stack 0
   194  000001                     _i2c1_object:
   195                           	opt stack 0
   196  000001                     	ds	7
   197  000008                     I2C1_ISR@pi2c_buf_ptr:
   198                           	opt stack 0
   199  000008                     	ds	2
   200  00000A                     TMR0_ISR@CountCallBack:
   201                           	opt stack 0
   202  00000A                     	ds	2
   203  00000C                     _p_i2c1_current:
   204                           	opt stack 0
   205  00000C                     	ds	2
   206  00000E                     _p_i2c1_trb_current:
   207                           	opt stack 0
   208  00000E                     	ds	2
   209  000010                     I2C1_ISR@i2c_10bit_address_restart:
   210                           	opt stack 0
   211  000010                     	ds	1
   212  000011                     I2C1_ISR@i2c_bytes_left:
   213                           	opt stack 0
   214  000011                     	ds	1
   215  000012                     _eusart1RxCount:
   216                           	opt stack 0
   217  000012                     	ds	1
   218  000013                     _eusart1RxHead:
   219                           	opt stack 0
   220  000013                     	ds	1
   221  000014                     _eusart1RxTail:
   222                           	opt stack 0
   223  000014                     	ds	1
   224  000015                     _eusart1TxHead:
   225                           	opt stack 0
   226  000015                     	ds	1
   227  000016                     _eusart1TxTail:
   228                           	opt stack 0
   229  000016                     	ds	1
   230  000017                     _i2c1_state:
   231                           	opt stack 0
   232  000017                     	ds	1
   233  000018                     _i2c1_trb_count:
   234                           	opt stack 0
   235  000018                     	ds	1
   236  000019                     I2C1_MasterWrite@trBlock:
   237                           	opt stack 0
   238  000019                     	ds	5
   239  00001E                     _i2c1_tr_queue:
   240                           	opt stack 0
   241  00001E                     	ds	5
   242  000023                     I2C1_ISR@i2c_address:
   243                           	opt stack 0
   244  000023                     	ds	2
   245                           tblptru	equ	0xFF8
   246                           postinc0	equ	0xFEE
   247                           wreg	equ	0xFE8
   248                           
   249                           	psect	bssBANK0
   250  000060                     __pbssBANK0:
   251                           	opt stack 0
   252  000060                     _displaybuffer:
   253                           	opt stack 0
   254  000060                     	ds	40
   255  000088                     _butnarray:
   256                           	opt stack 0
   257  000088                     	ds	8
   258  000090                     _eusart1RxBuffer:
   259                           	opt stack 0
   260  000090                     	ds	8
   261  000098                     _eusart1TxBuffer:
   262                           	opt stack 0
   263  000098                     	ds	8
   264  0000A0                     I2C1_MasterRead@trBlock:
   265                           	opt stack 0
   266  0000A0                     	ds	5
   267                           tblptru	equ	0xFF8
   268                           postinc0	equ	0xFEE
   269                           wreg	equ	0xFE8
   270                           
   271                           	psect	cstackBANK0
   272  0000A5                     __pcstackBANK0:
   273                           	opt stack 0
   274  0000A5                     ??_printf:
   275  0000A5                     LEDBsetBrightness@b:
   276                           	opt stack 0
   277  0000A5                     LEDblinkRate@b:
   278                           	opt stack 0
   279                           
   280                           ; 2 bytes @ 0x0
   281  0000A5                     	ds	1
   282  0000A6                     printf@ap:
   283                           	opt stack 0
   284                           
   285                           ; 2 bytes @ 0x1
   286  0000A6                     	ds	1
   287  0000A7                     LEDBsetBrightness@i2c_addr:
   288                           	opt stack 0
   289  0000A7                     LEDblinkRate@i2c_addr:
   290                           	opt stack 0
   291                           
   292                           ; 1 bytes @ 0x2
   293  0000A7                     	ds	1
   294  0000A8                     printf@flag:
   295                           	opt stack 0
   296  0000A8                     LEDBsetBrightness@writeBuffer:
   297                           	opt stack 0
   298  0000A8                     LEDblinkRate@writeBuffer:
   299                           	opt stack 0
   300                           
   301                           ; 2 bytes @ 0x3
   302  0000A8                     	ds	1
   303  0000A9                     printf@prec:
   304                           	opt stack 0
   305                           
   306                           ; 1 bytes @ 0x4
   307  0000A9                     	ds	1
   308  0000AA                     LEDBsetBrightness@timeOut:
   309                           	opt stack 0
   310  0000AA                     LEDblinkRate@timeOut:
   311                           	opt stack 0
   312  0000AA                     printf@val:
   313                           	opt stack 0
   314                           
   315                           ; 2 bytes @ 0x5
   316  0000AA                     	ds	2
   317  0000AC                     LEDBsetBrightness@status:
   318                           	opt stack 0
   319  0000AC                     LEDblinkRate@status:
   320                           	opt stack 0
   321  0000AC                     printf@c:
   322                           	opt stack 0
   323                           
   324                           ; 1 bytes @ 0x7
   325  0000AC                     	ds	1
   326  0000AD                     LEDbegin@writeBuffer:
   327                           	opt stack 0
   328                           
   329                           ; 3 bytes @ 0x8
   330  0000AD                     	ds	3
   331  0000B0                     LEDbegin@timeOut:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0xB
   335  0000B0                     	ds	2
   336  0000B2                     LEDbegin@i2c_addr:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0xD
   340  0000B2                     	ds	1
   341  0000B3                     LEDbegin@status:
   342                           	opt stack 0
   343                           
   344                           ; 1 bytes @ 0xE
   345  0000B3                     	ds	1
   346  0000B4                     main@ADCNT:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0xF
   350  0000B4                     	ds	2
   351                           tblptru	equ	0xFF8
   352                           postinc0	equ	0xFEE
   353                           wreg	equ	0xFE8
   354                           
   355                           	psect	cstackCOMRAM
   356  000025                     __pcstackCOMRAM:
   357                           	opt stack 0
   358  000025                     ??_I2C1_Stop:
   359  000025                     ReadButtonState@btnnum:
   360                           	opt stack 0
   361                           
   362                           ; 2 bytes @ 0x0
   363  000025                     	ds	2
   364  000027                     ??_ReadButtonState:
   365  000027                     I2C1_Stop@completion_code:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x2
   369  000027                     	ds	1
   370  000028                     ??_I2C1_ISR:
   371                           
   372                           ; 0 bytes @ 0x3
   373  000028                     	ds	1
   374  000029                     TMR0_ISR@x:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0x4
   378  000029                     	ds	2
   379  00002B                     ??_INTERRUPT_InterruptManager:
   380                           
   381                           ; 0 bytes @ 0x6
   382  00002B                     	ds	14
   383  000039                     ?___lwdiv:
   384                           	opt stack 0
   385  000039                     EUSART1_Write@txData:
   386                           	opt stack 0
   387  000039                     I2C1_MasterTRBInsert@ptrb_list:
   388                           	opt stack 0
   389  000039                     I2C1_MasterWriteTRBBuild@ptrb:
   390                           	opt stack 0
   391  000039                     Delay@wait:
   392                           	opt stack 0
   393  000039                     GetButtonState@btnnum:
   394                           	opt stack 0
   395  000039                     ___lwdiv@dividend:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x14
   399  000039                     	ds	1
   400  00003A                     putch@txData:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0x15
   404  00003A                     	ds	1
   405  00003B                     ??_GetButtonState:
   406  00003B                     ??_Delay:
   407  00003B                     I2C1_MasterTRBInsert@pflag:
   408                           	opt stack 0
   409  00003B                     I2C1_MasterWriteTRBBuild@pdata:
   410                           	opt stack 0
   411  00003B                     ___lwdiv@divisor:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x16
   415  00003B                     	ds	1
   416  00003C                     Delay@x:
   417                           	opt stack 0
   418                           
   419                           ; 2 bytes @ 0x17
   420  00003C                     	ds	1
   421  00003D                     I2C1_MasterWriteTRBBuild@length:
   422                           	opt stack 0
   423  00003D                     ___lwdiv@counter:
   424                           	opt stack 0
   425                           
   426                           ; 1 bytes @ 0x18
   427  00003D                     	ds	1
   428  00003E                     I2C1_MasterTRBInsert@count:
   429                           	opt stack 0
   430  00003E                     I2C1_MasterWriteTRBBuild@address:
   431                           	opt stack 0
   432  00003E                     ___lwdiv@quotient:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x19
   436  00003E                     	ds	2
   437  000040                     ??_I2C1_MasterWriteTRBBuild:
   438  000040                     ?___lwmod:
   439                           	opt stack 0
   440  000040                     ___lwmod@dividend:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x1B
   444  000040                     	ds	2
   445  000042                     I2C1_MasterWrite@pdata:
   446                           	opt stack 0
   447  000042                     ___lwmod@divisor:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x1D
   451  000042                     	ds	2
   452  000044                     I2C1_MasterWrite@length:
   453                           	opt stack 0
   454  000044                     ___lwmod@counter:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0x1F
   458  000044                     	ds	1
   459  000045                     ?_printf:
   460                           	opt stack 0
   461  000045                     I2C1_MasterWrite@address:
   462                           	opt stack 0
   463  000045                     printf@f:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x20
   467  000045                     	ds	2
   468  000047                     I2C1_MasterWrite@pflag:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0x22
   472  000047                     	ds	2
   473  000049                     tblptru	equ	0xFF8
   474                           postinc0	equ	0xFEE
   475                           wreg	equ	0xFE8
   476                           
   477                           ; 0 bytes @ 0x24
   478 ;;
   479 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   480 ;;
   481 ;; *************** function _main *****************
   482 ;; Defined at:
   483 ;;		line 32 in file "main.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;  ADCNT           2   15[BANK0 ] int 
   488 ;; Return value:  Size  Location     Type
   489 ;;		None               void
   490 ;; Registers used:
   491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   497 ;;      Params:         0       0       0       0       0       0       0
   498 ;;      Locals:         0       2       0       0       0       0       0
   499 ;;      Temps:          0       0       0       0       0       0       0
   500 ;;      Totals:         0       2       0       0       0       0       0
   501 ;;Total ram usage:        2 bytes
   502 ;; Hardware stack levels required when called:    7
   503 ;; This function calls:
   504 ;;		_Delay
   505 ;;		_GetButtonState
   506 ;;		_LEDbegin
   507 ;;		_SYSTEM_Initialize
   508 ;;		_printf
   509 ;; This function is called by:
   510 ;;		Startup code after reset
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           	psect	text0
   515  000E74                     __ptext0:
   516                           	opt stack 0
   517  000E74                     _main:
   518                           	opt stack 24
   519                           
   520                           ;main.c: 35: SYSTEM_Initialize();
   521                           
   522                           ;incstack = 0
   523  000E74  ECE0  F008         	call	_SYSTEM_Initialize	;wreg free
   524                           
   525                           ;main.c: 54: (INTCONbits.GIE = 1);
   526  000E78  8EF2               	bsf	intcon,7,c	;volatile
   527                           
   528                           ;main.c: 57: (INTCONbits.PEIE = 1);
   529  000E7A  8CF2               	bsf	intcon,6,c	;volatile
   530                           
   531                           ;main.c: 64: int ADCNT = 1;
   532  000E7C  0E00               	movlw	0
   533  000E7E  0100               	movlb	0	; () banked
   534  000E80  6FB5               	movwf	(main@ADCNT+1)& (0+255),b
   535  000E82  0E01               	movlw	1
   536  000E84  6FB4               	movwf	main@ADCNT& (0+255),b
   537                           
   538                           ; BSR set to: 0
   539                           ;main.c: 65: LEDbegin(0x70);
   540  000E86  0E70               	movlw	112
   541  000E88  EC8B  F005         	call	_LEDbegin
   542  000E8C  D000               	goto	l3272
   543  000E8E                     l3272:
   544  000E8E  8689               	bsf	3977,3,c	;volatile
   545  000E90  D000               	goto	l3274
   546  000E92                     l3274:
   547                           
   548                           ;main.c: 68: {
   549                           ;main.c: 71: printf("ADC Volume = %d",ADCNT);
   550  000E92  0E0B               	movlw	low STR_1
   551  000E94  6E45               	movwf	printf@f,c
   552  000E96  0E06               	movlw	high STR_1
   553  000E98  6E46               	movwf	printf@f+1,c
   554  000E9A  C0B4  F047         	movff	main@ADCNT,?_printf+2
   555  000E9E  C0B5  F048         	movff	main@ADCNT+1,?_printf+3
   556  000EA2  EC49  F004         	call	_printf	;wreg free
   557                           
   558                           ;main.c: 96: if(GetButtonState(4) ==1)
   559  000EA6  0E00               	movlw	0
   560  000EA8  6E3A               	movwf	GetButtonState@btnnum+1,c
   561  000EAA  0E04               	movlw	4
   562  000EAC  6E39               	movwf	GetButtonState@btnnum,c
   563  000EAE  ECBA  F008         	call	_GetButtonState	;wreg free
   564  000EB2  06E8               	decf	wreg,f,c
   565  000EB4  A4D8               	btfss	status,2,c
   566  000EB6  D7ED               	goto	l3274
   567                           
   568                           ;main.c: 97: {
   569                           ;main.c: 98: Delay(500);
   570  000EB8  0E01               	movlw	1
   571  000EBA  6E3A               	movwf	Delay@wait+1,c
   572  000EBC  0EF4               	movlw	244
   573  000EBE  6E39               	movwf	Delay@wait,c
   574  000EC0  EC58  F008         	call	_Delay	;wreg free
   575  000EC4  D7E6               	goto	l3274
   576  000EC6  EF61  F000         	goto	start
   577  000ECA                     __end_of_main:
   578                           	opt stack 0
   579                           tblptru	equ	0xFF8
   580                           intcon	equ	0xFF2
   581                           postinc0	equ	0xFEE
   582                           wreg	equ	0xFE8
   583                           status	equ	0xFD8
   584                           
   585 ;; *************** function _printf *****************
   586 ;; Defined at:
   587 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;  f               2   32[COMRAM] PTR const unsigned char 
   590 ;;		 -> STR_1(16), 
   591 ;; Auto vars:     Size  Location     Type
   592 ;;  tmpval          4    0        struct .
   593 ;;  cp              3    0        PTR const unsigned char 
   594 ;;  val             2    5[BANK0 ] unsigned int 
   595 ;;  ap              2    1[BANK0 ] PTR void [1]
   596 ;;		 -> ?_printf(2), 
   597 ;;  len             2    0        unsigned int 
   598 ;;  c               1    7[BANK0 ] char 
   599 ;;  prec            1    4[BANK0 ] char 
   600 ;;  flag            1    3[BANK0 ] unsigned char 
   601 ;; Return value:  Size  Location     Type
   602 ;;                  2   32[COMRAM] int 
   603 ;; Registers used:
   604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   610 ;;      Params:         4       0       0       0       0       0       0
   611 ;;      Locals:         0       7       0       0       0       0       0
   612 ;;      Temps:          0       1       0       0       0       0       0
   613 ;;      Totals:         4       8       0       0       0       0       0
   614 ;;Total ram usage:       12 bytes
   615 ;; Hardware stack levels used:    1
   616 ;; Hardware stack levels required when called:    5
   617 ;; This function calls:
   618 ;;		___lwdiv
   619 ;;		___lwmod
   620 ;;		_putch
   621 ;; This function is called by:
   622 ;;		_main
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626                           	psect	text1
   627  000892                     __ptext1:
   628                           	opt stack 0
   629  000892                     _printf:
   630                           	opt stack 25
   631                           
   632                           ;doprnt.c: 466: va_list ap;
   633                           ;doprnt.c: 499: signed char c;
   634                           ;doprnt.c: 506: signed char prec;
   635                           ;doprnt.c: 508: unsigned char flag;
   636                           ;doprnt.c: 523: union {
   637                           ;doprnt.c: 524: unsigned long vd;
   638                           ;doprnt.c: 525: double integ;
   639                           ;doprnt.c: 526: } tmpval;
   640                           ;doprnt.c: 528: unsigned int val;
   641                           ;doprnt.c: 529: unsigned len;
   642                           ;doprnt.c: 530: const char * cp;
   643                           ;doprnt.c: 533: *ap = __va_start();
   644                           
   645                           ;incstack = 0
   646  000892  0E47               	movlw	low (?_printf+2)
   647  000894  0100               	movlb	0	; () banked
   648  000896  6FA6               	movwf	printf@ap& (0+255),b
   649  000898  0E00               	movlw	high (?_printf+2)
   650  00089A  0100               	movlb	0	; () banked
   651  00089C  6FA7               	movwf	(printf@ap+1)& (0+255),b
   652                           
   653                           ;doprnt.c: 536: while(c = *f++) {
   654  00089E  D09F               	goto	l3220
   655  0008A0                     l3174:
   656                           
   657                           ; BSR set to: 0
   658                           ;doprnt.c: 538: if(c != '%')
   659  0008A0  0E25               	movlw	37
   660  0008A2  0100               	movlb	0	; () banked
   661  0008A4  19AC               	xorwf	printf@c& (0+255),w,b
   662  0008A6  B4D8               	btfsc	status,2,c
   663  0008A8  D005               	goto	l3178
   664                           
   665                           ; BSR set to: 0
   666                           ;doprnt.c: 540: {
   667                           ;doprnt.c: 541: (putch(c) );
   668  0008AA  0100               	movlb	0	; () banked
   669  0008AC  51AC               	movf	printf@c& (0+255),w,b
   670  0008AE  EC26  F009         	call	_putch
   671                           
   672                           ;doprnt.c: 542: continue;
   673  0008B2  D095               	goto	l3220
   674  0008B4                     l3178:
   675                           
   676                           ;doprnt.c: 543: }
   677                           ;doprnt.c: 548: flag = 0;
   678  0008B4  0E00               	movlw	0
   679  0008B6  0100               	movlb	0	; () banked
   680  0008B8  6FA8               	movwf	printf@flag& (0+255),b
   681                           
   682                           ;doprnt.c: 635: switch(c = *f++) {
   683  0008BA  D004               	goto	l3182
   684                           
   685                           ; BSR set to: 0
   686                           ;doprnt.c: 638: goto alldone;
   687                           
   688                           ;doprnt.c: 637: case 0:
   689  0008BC  0012               	return	
   690                           
   691                           ; BSR set to: 0
   692                           ;doprnt.c: 698: case 'i':
   693                           ;doprnt.c: 699: break;
   694                           
   695                           ; BSR set to: 0
   696                           
   697                           ;doprnt.c: 697: case 'd':
   698  0008BE  D016               	goto	l3184
   699                           
   700                           ; BSR set to: 0
   701                           ;doprnt.c: 813: continue;
   702                           
   703                           ;doprnt.c: 802: default:
   704  0008C0  D08E               	goto	l3220
   705                           
   706                           ; BSR set to: 0
   707                           ;doprnt.c: 822: }
   708  0008C2  D014               	goto	l3184
   709  0008C4                     l3182:
   710                           
   711                           ; BSR set to: 0
   712  0008C4  C045  FFF6         	movff	printf@f,tblptrl
   713  0008C8  C046  FFF7         	movff	printf@f+1,tblptrh
   714  0008CC  4A45               	infsnz	printf@f,f,c
   715  0008CE  2A46               	incf	printf@f+1,f,c
   716  0008D0                     	if	0	;tblptru may be non-zero
   717  0008D0                     	endif
   718  0008D0                     	if	0	;tblptru may be non-zero
   719  0008D0                     	endif
   720  0008D0  0008               	tblrd		*
   721  0008D2  CFF5 F0AC          	movff	tablat,printf@c
   722  0008D6  0100               	movlb	0	; () banked
   723  0008D8  51AC               	movf	printf@c& (0+255),w,b
   724                           
   725                           ; Switch size 1, requested type "space"
   726                           ; Number of cases is 3, Range of values is 0 to 105
   727                           ; switch strategies available:
   728                           ; Name         Instructions Cycles
   729                           ; simple_byte           10     6 (average)
   730                           ;	Chosen strategy is simple_byte
   731  0008DA  0A00               	xorlw	0	; case 0
   732  0008DC  B4D8               	btfsc	status,2,c
   733  0008DE  0012               	return	
   734  0008E0  0A64               	xorlw	100	; case 100
   735  0008E2  B4D8               	btfsc	status,2,c
   736  0008E4  D003               	goto	l3184
   737  0008E6  0A0D               	xorlw	13	; case 105
   738  0008E8  A4D8               	btfss	status,2,c
   739  0008EA  D079               	goto	l3220
   740  0008EC                     l3184:
   741                           
   742                           ; BSR set to: 0
   743                           ;doprnt.c: 1253: {
   744                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   745  0008EC  C0A6  FFD9         	movff	printf@ap,fsr2l
   746  0008F0  C0A7  FFDA         	movff	printf@ap+1,fsr2h
   747  0008F4  CFDE F0AA          	movff	postinc2,printf@val
   748  0008F8  CFDD F0AB          	movff	postdec2,printf@val+1
   749                           
   750                           ; BSR set to: 0
   751  0008FC  0E02               	movlw	2
   752  0008FE  0100               	movlb	0	; () banked
   753  000900  27A6               	addwf	printf@ap& (0+255),f,b
   754  000902  0E00               	movlw	0
   755  000904  23A7               	addwfc	(printf@ap+1)& (0+255),f,b
   756                           
   757                           ; BSR set to: 0
   758                           ;doprnt.c: 1261: if((int)val < 0) {
   759  000906  0100               	movlb	0	; () banked
   760  000908  AFAB               	btfss	(printf@val+1)& (0+255),7,b
   761  00090A  D009               	goto	l3194
   762                           
   763                           ; BSR set to: 0
   764                           ;doprnt.c: 1262: flag |= 0x03;
   765  00090C  0E03               	movlw	3
   766  00090E  0100               	movlb	0	; () banked
   767  000910  13A8               	iorwf	printf@flag& (0+255),f,b
   768                           
   769                           ; BSR set to: 0
   770                           ;doprnt.c: 1263: val = -val;
   771  000912  0100               	movlb	0	; () banked
   772  000914  6DAA               	negf	printf@val& (0+255),b
   773  000916  1FAB               	comf	(printf@val+1)& (0+255),f,b
   774  000918  B0D8               	btfsc	status,0,c
   775  00091A  2BAB               	incf	(printf@val+1)& (0+255),f,b
   776  00091C  D000               	goto	l3194
   777  00091E                     l3194:
   778                           
   779                           ; BSR set to: 0
   780                           ;doprnt.c: 1264: }
   781                           ;doprnt.c: 1266: }
   782                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   783  00091E  0E01               	movlw	1
   784  000920  0100               	movlb	0	; () banked
   785  000922  6FAC               	movwf	printf@c& (0+255),b
   786  000924                     l3196:
   787                           
   788                           ; BSR set to: 0
   789  000924  0E05               	movlw	5
   790  000926  0100               	movlb	0	; () banked
   791  000928  19AC               	xorwf	printf@c& (0+255),w,b
   792  00092A  B4D8               	btfsc	status,2,c
   793  00092C  D01A               	goto	l3208
   794  00092E  D001               	goto	l3200
   795                           
   796                           ; BSR set to: 0
   797  000930  D018               	goto	l3208
   798  000932                     l3200:
   799                           
   800                           ; BSR set to: 0
   801                           ;doprnt.c: 1306: if(val < dpowers[c])
   802  000932  0100               	movlb	0	; () banked
   803  000934  51AC               	movf	printf@c& (0+255),w,b
   804  000936  0D02               	mullw	2
   805  000938  0E01               	movlw	low _dpowers
   806  00093A  24F3               	addwf	prodl,w,c
   807  00093C  6EF6               	movwf	tblptrl,c
   808  00093E  0E06               	movlw	high _dpowers
   809  000940  20F4               	addwfc	prodh,w,c
   810  000942  6EF7               	movwf	tblptrh,c
   811  000944                     	if	0	;There are less than 3 active tblptr bytes
   812  000944                     	endif
   813  000944  0009               	tblrd		*+
   814  000946  50F5               	movf	tablat,w,c
   815  000948  0100               	movlb	0	; () banked
   816  00094A  5DAA               	subwf	printf@val& (0+255),w,b
   817  00094C  0009               	tblrd		*+
   818  00094E  50F5               	movf	tablat,w,c
   819  000950  0100               	movlb	0	; () banked
   820  000952  59AB               	subwfb	(printf@val+1)& (0+255),w,b
   821  000954  A0D8               	btfss	status,0,c
   822  000956  D005               	goto	l3208
   823  000958  D001               	goto	l3204
   824                           
   825                           ; BSR set to: 0
   826                           ;doprnt.c: 1307: break;
   827  00095A  D003               	goto	l3208
   828  00095C                     l3204:
   829                           
   830                           ; BSR set to: 0
   831  00095C  0100               	movlb	0	; () banked
   832  00095E  2BAC               	incf	printf@c& (0+255),f,b
   833  000960  D7E1               	goto	l3196
   834  000962                     l3208:
   835                           
   836                           ; BSR set to: 0
   837                           ;doprnt.c: 1422: {
   838                           ;doprnt.c: 1438: if(flag & 0x03)
   839  000962  C0A8  F0A5         	movff	printf@flag,??_printf
   840  000966  0E03               	movlw	3
   841  000968  0100               	movlb	0	; () banked
   842  00096A  17A5               	andwf	??_printf& (0+255),f,b
   843  00096C  B4D8               	btfsc	status,2,c
   844  00096E  D004               	goto	l3212
   845                           
   846                           ; BSR set to: 0
   847                           ;doprnt.c: 1439: (putch('-') );
   848  000970  0E2D               	movlw	45
   849  000972  EC26  F009         	call	_putch
   850  000976  D000               	goto	l3212
   851  000978                     l3212:
   852                           
   853                           ;doprnt.c: 1469: }
   854                           ;doprnt.c: 1472: prec = c;
   855  000978  C0AC  F0A9         	movff	printf@c,printf@prec
   856                           
   857                           ;doprnt.c: 1474: while(prec--) {
   858  00097C  D028               	goto	l3218
   859  00097E                     l3214:
   860                           
   861                           ;doprnt.c: 1478: {
   862                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
   863  00097E  0100               	movlb	0	; () banked
   864  000980  51A9               	movf	printf@prec& (0+255),w,b
   865  000982  0D02               	mullw	2
   866  000984  0E01               	movlw	low _dpowers
   867  000986  24F3               	addwf	prodl,w,c
   868  000988  6EF6               	movwf	tblptrl,c
   869  00098A  0E06               	movlw	high _dpowers
   870  00098C  20F4               	addwfc	prodh,w,c
   871  00098E  6EF7               	movwf	tblptrh,c
   872  000990                     	if	0	;There are less than 3 active tblptr bytes
   873  000990                     	endif
   874  000990  0009               	tblrd		*+
   875  000992  CFF5 F03B          	movff	tablat,___lwdiv@divisor
   876  000996  000A               	tblrd		*-
   877  000998  CFF5 F03C          	movff	tablat,___lwdiv@divisor+1
   878  00099C  C0AA  F039         	movff	printf@val,___lwdiv@dividend
   879  0009A0  C0AB  F03A         	movff	printf@val+1,___lwdiv@dividend+1
   880  0009A4  ECDF  F006         	call	___lwdiv	;wreg free
   881  0009A8  C039  F040         	movff	?___lwdiv,___lwmod@dividend
   882  0009AC  C03A  F041         	movff	?___lwdiv+1,___lwmod@dividend+1
   883  0009B0  0E00               	movlw	0
   884  0009B2  6E43               	movwf	___lwmod@divisor+1,c
   885  0009B4  0E0A               	movlw	10
   886  0009B6  6E42               	movwf	___lwmod@divisor,c
   887  0009B8  EC8C  F007         	call	___lwmod	;wreg free
   888  0009BC  5040               	movf	?___lwmod,w,c
   889  0009BE  0F30               	addlw	48
   890  0009C0  0100               	movlb	0	; () banked
   891  0009C2  6FAC               	movwf	printf@c& (0+255),b
   892                           
   893                           ; BSR set to: 0
   894                           ;doprnt.c: 1523: }
   895                           ;doprnt.c: 1524: (putch(c) );
   896  0009C4  0100               	movlb	0	; () banked
   897  0009C6  51AC               	movf	printf@c& (0+255),w,b
   898  0009C8  EC26  F009         	call	_putch
   899  0009CC  D000               	goto	l3218
   900  0009CE                     l3218:
   901  0009CE  0100               	movlb	0	; () banked
   902  0009D0  07A9               	decf	printf@prec& (0+255),f,b
   903  0009D2  0100               	movlb	0	; () banked
   904  0009D4  29A9               	incf	printf@prec& (0+255),w,b
   905  0009D6  B4D8               	btfsc	status,2,c
   906  0009D8  D002               	goto	l3220
   907  0009DA  D7D1               	goto	l3214
   908                           
   909                           ; BSR set to: 0
   910  0009DC  D000               	goto	l3220
   911  0009DE                     l3220:
   912  0009DE  C045  FFF6         	movff	printf@f,tblptrl
   913  0009E2  C046  FFF7         	movff	printf@f+1,tblptrh
   914  0009E6  4A45               	infsnz	printf@f,f,c
   915  0009E8  2A46               	incf	printf@f+1,f,c
   916  0009EA                     	if	0	;tblptru may be non-zero
   917  0009EA                     	endif
   918  0009EA                     	if	0	;tblptru may be non-zero
   919  0009EA                     	endif
   920  0009EA  0008               	tblrd		*
   921  0009EC  CFF5 F0AC          	movff	tablat,printf@c
   922  0009F0  0100               	movlb	0	; () banked
   923  0009F2  51AC               	movf	printf@c& (0+255),w,b
   924  0009F4  B4D8               	btfsc	status,2,c
   925  0009F6  0012               	return	
   926  0009F8  D753               	goto	l3174
   927                           
   928                           ; BSR set to: 0
   929  0009FA  0012               	return	
   930                           
   931                           ; BSR set to: 0
   932                           
   933                           ; BSR set to: 0
   934                           ;doprnt.c: 1540: return 0;
   935                           ;	Return value of _printf is never used
   936                           
   937                           ;doprnt.c: 1525: }
   938                           ;doprnt.c: 1533: }
   939                           ;doprnt.c: 1535: alldone:
   940  0009FC  0012               	return		;funcret
   941  0009FE                     __end_of_printf:
   942                           	opt stack 0
   943                           tblptru	equ	0xFF8
   944                           tblptrh	equ	0xFF7
   945                           tblptrl	equ	0xFF6
   946                           tablat	equ	0xFF5
   947                           prodh	equ	0xFF4
   948                           prodl	equ	0xFF3
   949                           intcon	equ	0xFF2
   950                           postinc0	equ	0xFEE
   951                           wreg	equ	0xFE8
   952                           postinc2	equ	0xFDE
   953                           postdec2	equ	0xFDD
   954                           fsr2h	equ	0xFDA
   955                           fsr2l	equ	0xFD9
   956                           status	equ	0xFD8
   957                           
   958 ;; *************** function _putch *****************
   959 ;; Defined at:
   960 ;;		line 168 in file "mcc_generated_files/eusart1.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;  txData          1    wreg     unsigned char 
   963 ;; Auto vars:     Size  Location     Type
   964 ;;  txData          1   21[COMRAM] unsigned char 
   965 ;; Return value:  Size  Location     Type
   966 ;;		None               void
   967 ;; Registers used:
   968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   974 ;;      Params:         0       0       0       0       0       0       0
   975 ;;      Locals:         1       0       0       0       0       0       0
   976 ;;      Temps:          0       0       0       0       0       0       0
   977 ;;      Totals:         1       0       0       0       0       0       0
   978 ;;Total ram usage:        1 bytes
   979 ;; Hardware stack levels used:    1
   980 ;; Hardware stack levels required when called:    4
   981 ;; This function calls:
   982 ;;		_EUSART1_Write
   983 ;; This function is called by:
   984 ;;		_printf
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           	psect	text2
   989  00124C                     __ptext2:
   990                           	opt stack 0
   991  00124C                     _putch:
   992                           	opt stack 25
   993                           
   994                           ; BSR set to: 0
   995                           ;incstack = 0
   996                           ;putch@txData stored from wreg
   997  00124C  6E3A               	movwf	putch@txData,c
   998                           
   999                           ;eusart1.c: 170: EUSART1_Write(txData);
  1000  00124E  503A               	movf	putch@txData,w,c
  1001  001250  ECFA  F007         	call	_EUSART1_Write
  1002  001254  0012               	return		;funcret
  1003  001256                     __end_of_putch:
  1004                           	opt stack 0
  1005                           tblptru	equ	0xFF8
  1006                           tblptrh	equ	0xFF7
  1007                           tblptrl	equ	0xFF6
  1008                           tablat	equ	0xFF5
  1009                           prodh	equ	0xFF4
  1010                           prodl	equ	0xFF3
  1011                           intcon	equ	0xFF2
  1012                           postinc0	equ	0xFEE
  1013                           wreg	equ	0xFE8
  1014                           postinc2	equ	0xFDE
  1015                           postdec2	equ	0xFDD
  1016                           fsr2h	equ	0xFDA
  1017                           fsr2l	equ	0xFD9
  1018                           status	equ	0xFD8
  1019                           
  1020 ;; *************** function _EUSART1_Write *****************
  1021 ;; Defined at:
  1022 ;;		line 140 in file "mcc_generated_files/eusart1.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;  txData          1    wreg     unsigned char 
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;  txData          1   20[COMRAM] unsigned char 
  1027 ;; Return value:  Size  Location     Type
  1028 ;;		None               void
  1029 ;; Registers used:
  1030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1036 ;;      Params:         0       0       0       0       0       0       0
  1037 ;;      Locals:         1       0       0       0       0       0       0
  1038 ;;      Temps:          0       0       0       0       0       0       0
  1039 ;;      Totals:         1       0       0       0       0       0       0
  1040 ;;Total ram usage:        1 bytes
  1041 ;; Hardware stack levels used:    1
  1042 ;; Hardware stack levels required when called:    3
  1043 ;; This function calls:
  1044 ;;		Nothing
  1045 ;; This function is called by:
  1046 ;;		_putch
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text3
  1051  000FF4                     __ptext3:
  1052                           	opt stack 0
  1053  000FF4                     _EUSART1_Write:
  1054                           	opt stack 25
  1055                           
  1056                           ;incstack = 0
  1057                           ;EUSART1_Write@txData stored from wreg
  1058  000FF4  6E39               	movwf	EUSART1_Write@txData,c
  1059                           
  1060                           ;eusart1.c: 142: while(0 == eusart1TxBufferRemaining)
  1061  000FF6  D000               	goto	l2816
  1062  000FF8                     l2816:
  1063  000FF8  504B               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  1064  000FFA  B4D8               	btfsc	status,2,c
  1065  000FFC  D7FD               	goto	l2816
  1066                           
  1067                           ;eusart1.c: 144: }
  1068                           ;eusart1.c: 146: if(0 == PIE1bits.TX1IE)
  1069  000FFE  B89D               	btfsc	3997,4,c	;volatile
  1070  001000  D003               	goto	l197
  1071                           
  1072                           ;eusart1.c: 147: {
  1073                           ;eusart1.c: 148: TXREG1 = txData;
  1074  001002  C039  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1075                           
  1076                           ;eusart1.c: 149: }
  1077  001006  D014               	goto	l2830
  1078  001008                     l197:
  1079                           
  1080                           ;eusart1.c: 150: else
  1081                           ;eusart1.c: 151: {
  1082                           ;eusart1.c: 152: PIE1bits.TX1IE = 0;
  1083  001008  989D               	bcf	3997,4,c	;volatile
  1084                           
  1085                           ;eusart1.c: 153: eusart1TxBuffer[eusart1TxHead++] = txData;
  1086  00100A  5015               	movf	_eusart1TxHead,w,c
  1087  00100C  0D01               	mullw	1
  1088  00100E  0E98               	movlw	low _eusart1TxBuffer
  1089  001010  24F3               	addwf	prodl,w,c
  1090  001012  6ED9               	movwf	fsr2l,c
  1091  001014  0E00               	movlw	high _eusart1TxBuffer
  1092  001016  20F4               	addwfc	prodh,w,c
  1093  001018  6EDA               	movwf	fsr2h,c
  1094  00101A  C039  FFDF         	movff	EUSART1_Write@txData,indf2
  1095  00101E  2A15               	incf	_eusart1TxHead,f,c
  1096                           
  1097                           ;eusart1.c: 154: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  1098  001020  0E07               	movlw	7
  1099  001022  6415               	cpfsgt	_eusart1TxHead,c
  1100  001024  D003               	goto	l2828
  1101                           
  1102                           ;eusart1.c: 155: {
  1103                           ;eusart1.c: 156: eusart1TxHead = 0;
  1104  001026  0E00               	movlw	0
  1105  001028  6E15               	movwf	_eusart1TxHead,c
  1106  00102A  D000               	goto	l2828
  1107  00102C                     l2828:
  1108                           
  1109                           ;eusart1.c: 157: }
  1110                           ;eusart1.c: 158: eusart1TxBufferRemaining--;
  1111  00102C  064B               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  1112  00102E  D000               	goto	l2830
  1113  001030                     l2830:
  1114                           
  1115                           ;eusart1.c: 159: }
  1116                           ;eusart1.c: 160: PIE1bits.TX1IE = 1;
  1117  001030  889D               	bsf	3997,4,c	;volatile
  1118  001032  0012               	return		;funcret
  1119  001034                     __end_of_EUSART1_Write:
  1120                           	opt stack 0
  1121                           tblptru	equ	0xFF8
  1122                           tblptrh	equ	0xFF7
  1123                           tblptrl	equ	0xFF6
  1124                           tablat	equ	0xFF5
  1125                           prodh	equ	0xFF4
  1126                           prodl	equ	0xFF3
  1127                           intcon	equ	0xFF2
  1128                           postinc0	equ	0xFEE
  1129                           wreg	equ	0xFE8
  1130                           indf2	equ	0xFDF
  1131                           postinc2	equ	0xFDE
  1132                           postdec2	equ	0xFDD
  1133                           fsr2h	equ	0xFDA
  1134                           fsr2l	equ	0xFD9
  1135                           status	equ	0xFD8
  1136                           
  1137 ;; *************** function ___lwmod *****************
  1138 ;; Defined at:
  1139 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;  dividend        2   27[COMRAM] unsigned int 
  1142 ;;  divisor         2   29[COMRAM] unsigned int 
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;  counter         1   31[COMRAM] unsigned char 
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  2   27[COMRAM] unsigned int 
  1147 ;; Registers used:
  1148 ;;		wreg, status,2, status,0
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1154 ;;      Params:         4       0       0       0       0       0       0
  1155 ;;      Locals:         1       0       0       0       0       0       0
  1156 ;;      Temps:          0       0       0       0       0       0       0
  1157 ;;      Totals:         5       0       0       0       0       0       0
  1158 ;;Total ram usage:        5 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; Hardware stack levels required when called:    3
  1161 ;; This function calls:
  1162 ;;		Nothing
  1163 ;; This function is called by:
  1164 ;;		_printf
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text4
  1169  000F18                     __ptext4:
  1170                           	opt stack 0
  1171  000F18                     ___lwmod:
  1172                           	opt stack 26
  1173                           
  1174                           ;incstack = 0
  1175  000F18  5042               	movf	___lwmod@divisor,w,c
  1176  000F1A  1043               	iorwf	___lwmod@divisor+1,w,c
  1177  000F1C  B4D8               	btfsc	status,2,c
  1178  000F1E  D01D               	goto	l1155
  1179  000F20  0E01               	movlw	1
  1180  000F22  6E44               	movwf	___lwmod@counter,c
  1181  000F24  D005               	goto	l2990
  1182  000F26                     l2988:
  1183  000F26  90D8               	bcf	status,0,c
  1184  000F28  3642               	rlcf	___lwmod@divisor,f,c
  1185  000F2A  3643               	rlcf	___lwmod@divisor+1,f,c
  1186  000F2C  2A44               	incf	___lwmod@counter,f,c
  1187  000F2E  D000               	goto	l2990
  1188  000F30                     l2990:
  1189  000F30  BE43               	btfsc	___lwmod@divisor+1,7,c
  1190  000F32  D002               	goto	l2992
  1191  000F34  D7F8               	goto	l2988
  1192  000F36  D000               	goto	l2992
  1193  000F38                     l2992:
  1194  000F38  5042               	movf	___lwmod@divisor,w,c
  1195  000F3A  5C40               	subwf	___lwmod@dividend,w,c
  1196  000F3C  5043               	movf	___lwmod@divisor+1,w,c
  1197  000F3E  5841               	subwfb	___lwmod@dividend+1,w,c
  1198  000F40  A0D8               	btfss	status,0,c
  1199  000F42  D005               	goto	l2996
  1200  000F44  5042               	movf	___lwmod@divisor,w,c
  1201  000F46  5E40               	subwf	___lwmod@dividend,f,c
  1202  000F48  5043               	movf	___lwmod@divisor+1,w,c
  1203  000F4A  5A41               	subwfb	___lwmod@dividend+1,f,c
  1204  000F4C  D000               	goto	l2996
  1205  000F4E                     l2996:
  1206  000F4E  90D8               	bcf	status,0,c
  1207  000F50  3243               	rrcf	___lwmod@divisor+1,f,c
  1208  000F52  3242               	rrcf	___lwmod@divisor,f,c
  1209  000F54  2E44               	decfsz	___lwmod@counter,f,c
  1210  000F56  D7F0               	goto	l2992
  1211  000F58  D000               	goto	l1155
  1212  000F5A                     l1155:
  1213  000F5A  C040  F040         	movff	___lwmod@dividend,?___lwmod
  1214  000F5E  C041  F041         	movff	___lwmod@dividend+1,?___lwmod+1
  1215  000F62  0012               	return		;funcret
  1216  000F64                     __end_of___lwmod:
  1217                           	opt stack 0
  1218                           tblptru	equ	0xFF8
  1219                           tblptrh	equ	0xFF7
  1220                           tblptrl	equ	0xFF6
  1221                           tablat	equ	0xFF5
  1222                           prodh	equ	0xFF4
  1223                           prodl	equ	0xFF3
  1224                           intcon	equ	0xFF2
  1225                           postinc0	equ	0xFEE
  1226                           wreg	equ	0xFE8
  1227                           indf2	equ	0xFDF
  1228                           postinc2	equ	0xFDE
  1229                           postdec2	equ	0xFDD
  1230                           fsr2h	equ	0xFDA
  1231                           fsr2l	equ	0xFD9
  1232                           status	equ	0xFD8
  1233                           
  1234 ;; *************** function ___lwdiv *****************
  1235 ;; Defined at:
  1236 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;  dividend        2   20[COMRAM] unsigned int 
  1239 ;;  divisor         2   22[COMRAM] unsigned int 
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;  quotient        2   25[COMRAM] unsigned int 
  1242 ;;  counter         1   24[COMRAM] unsigned char 
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  2   20[COMRAM] unsigned int 
  1245 ;; Registers used:
  1246 ;;		wreg, status,2, status,0
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1252 ;;      Params:         4       0       0       0       0       0       0
  1253 ;;      Locals:         3       0       0       0       0       0       0
  1254 ;;      Temps:          0       0       0       0       0       0       0
  1255 ;;      Totals:         7       0       0       0       0       0       0
  1256 ;;Total ram usage:        7 bytes
  1257 ;; Hardware stack levels used:    1
  1258 ;; Hardware stack levels required when called:    3
  1259 ;; This function calls:
  1260 ;;		Nothing
  1261 ;; This function is called by:
  1262 ;;		_printf
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           	psect	text5
  1267  000DBE                     __ptext5:
  1268                           	opt stack 0
  1269  000DBE                     ___lwdiv:
  1270                           	opt stack 26
  1271                           
  1272                           ;incstack = 0
  1273  000DBE  0E00               	movlw	0
  1274  000DC0  6E3F               	movwf	___lwdiv@quotient+1,c
  1275  000DC2  0E00               	movlw	0
  1276  000DC4  6E3E               	movwf	___lwdiv@quotient,c
  1277  000DC6  503B               	movf	___lwdiv@divisor,w,c
  1278  000DC8  103C               	iorwf	___lwdiv@divisor+1,w,c
  1279  000DCA  B4D8               	btfsc	status,2,c
  1280  000DCC  D021               	goto	l1145
  1281  000DCE  0E01               	movlw	1
  1282  000DD0  6E3D               	movwf	___lwdiv@counter,c
  1283  000DD2  D005               	goto	l2970
  1284  000DD4                     l2968:
  1285  000DD4  90D8               	bcf	status,0,c
  1286  000DD6  363B               	rlcf	___lwdiv@divisor,f,c
  1287  000DD8  363C               	rlcf	___lwdiv@divisor+1,f,c
  1288  000DDA  2A3D               	incf	___lwdiv@counter,f,c
  1289  000DDC  D000               	goto	l2970
  1290  000DDE                     l2970:
  1291  000DDE  BE3C               	btfsc	___lwdiv@divisor+1,7,c
  1292  000DE0  D002               	goto	l2972
  1293  000DE2  D7F8               	goto	l2968
  1294  000DE4  D000               	goto	l2972
  1295  000DE6                     l2972:
  1296  000DE6  90D8               	bcf	status,0,c
  1297  000DE8  363E               	rlcf	___lwdiv@quotient,f,c
  1298  000DEA  363F               	rlcf	___lwdiv@quotient+1,f,c
  1299  000DEC  503B               	movf	___lwdiv@divisor,w,c
  1300  000DEE  5C39               	subwf	___lwdiv@dividend,w,c
  1301  000DF0  503C               	movf	___lwdiv@divisor+1,w,c
  1302  000DF2  583A               	subwfb	___lwdiv@dividend+1,w,c
  1303  000DF4  A0D8               	btfss	status,0,c
  1304  000DF6  D006               	goto	l2980
  1305  000DF8  503B               	movf	___lwdiv@divisor,w,c
  1306  000DFA  5E39               	subwf	___lwdiv@dividend,f,c
  1307  000DFC  503C               	movf	___lwdiv@divisor+1,w,c
  1308  000DFE  5A3A               	subwfb	___lwdiv@dividend+1,f,c
  1309  000E00  803E               	bsf	___lwdiv@quotient,0,c
  1310  000E02  D000               	goto	l2980
  1311  000E04                     l2980:
  1312  000E04  90D8               	bcf	status,0,c
  1313  000E06  323C               	rrcf	___lwdiv@divisor+1,f,c
  1314  000E08  323B               	rrcf	___lwdiv@divisor,f,c
  1315  000E0A  2E3D               	decfsz	___lwdiv@counter,f,c
  1316  000E0C  D7EC               	goto	l2972
  1317  000E0E  D000               	goto	l1145
  1318  000E10                     l1145:
  1319  000E10  C03E  F039         	movff	___lwdiv@quotient,?___lwdiv
  1320  000E14  C03F  F03A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1321  000E18  0012               	return		;funcret
  1322  000E1A                     __end_of___lwdiv:
  1323                           	opt stack 0
  1324                           tblptru	equ	0xFF8
  1325                           tblptrh	equ	0xFF7
  1326                           tblptrl	equ	0xFF6
  1327                           tablat	equ	0xFF5
  1328                           prodh	equ	0xFF4
  1329                           prodl	equ	0xFF3
  1330                           intcon	equ	0xFF2
  1331                           postinc0	equ	0xFEE
  1332                           wreg	equ	0xFE8
  1333                           indf2	equ	0xFDF
  1334                           postinc2	equ	0xFDE
  1335                           postdec2	equ	0xFDD
  1336                           fsr2h	equ	0xFDA
  1337                           fsr2l	equ	0xFD9
  1338                           status	equ	0xFD8
  1339                           
  1340 ;; *************** function _SYSTEM_Initialize *****************
  1341 ;; Defined at:
  1342 ;;		line 112 in file "mcc_generated_files/mcc.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;		None
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;		None               void
  1349 ;; Registers used:
  1350 ;;		wreg, status,2, status,0, cstack
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1356 ;;      Params:         0       0       0       0       0       0       0
  1357 ;;      Locals:         0       0       0       0       0       0       0
  1358 ;;      Temps:          0       0       0       0       0       0       0
  1359 ;;      Totals:         0       0       0       0       0       0       0
  1360 ;;Total ram usage:        0 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; Hardware stack levels required when called:    5
  1363 ;; This function calls:
  1364 ;;		_ADC_Initialize
  1365 ;;		_EUSART1_Initialize
  1366 ;;		_I2C1_Initialize
  1367 ;;		_INTERRUPT_Initialize
  1368 ;;		_OSCILLATOR_Initialize
  1369 ;;		_PIN_MANAGER_Initialize
  1370 ;;		_TMR0_Initialize
  1371 ;; This function is called by:
  1372 ;;		_main
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           	psect	text6
  1377  0011C0                     __ptext6:
  1378                           	opt stack 0
  1379  0011C0                     _SYSTEM_Initialize:
  1380                           	opt stack 25
  1381                           
  1382                           ;mcc.c: 114: OSCILLATOR_Initialize();
  1383                           
  1384                           ;incstack = 0
  1385  0011C0  EC1F  F009         	call	_OSCILLATOR_Initialize	;wreg free
  1386                           
  1387                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1388  0011C4  EC65  F007         	call	_PIN_MANAGER_Initialize	;wreg free
  1389                           
  1390                           ;mcc.c: 116: INTERRUPT_Initialize();
  1391  0011C8  EC17  F009         	call	_INTERRUPT_Initialize	;wreg free
  1392                           
  1393                           ;mcc.c: 117: ADC_Initialize();
  1394  0011CC  EC0B  F009         	call	_ADC_Initialize	;wreg free
  1395                           
  1396                           ;mcc.c: 118: TMR0_Initialize();
  1397  0011D0  ECEF  F008         	call	_TMR0_Initialize	;wreg free
  1398                           
  1399                           ;mcc.c: 119: EUSART1_Initialize();
  1400  0011D4  EC3A  F008         	call	_EUSART1_Initialize	;wreg free
  1401                           
  1402                           ;mcc.c: 120: I2C1_Initialize();
  1403  0011D8  ECA3  F008         	call	_I2C1_Initialize	;wreg free
  1404  0011DC  0012               	return		;funcret
  1405  0011DE                     __end_of_SYSTEM_Initialize:
  1406                           	opt stack 0
  1407                           tblptru	equ	0xFF8
  1408                           tblptrh	equ	0xFF7
  1409                           tblptrl	equ	0xFF6
  1410                           tablat	equ	0xFF5
  1411                           prodh	equ	0xFF4
  1412                           prodl	equ	0xFF3
  1413                           intcon	equ	0xFF2
  1414                           postinc0	equ	0xFEE
  1415                           wreg	equ	0xFE8
  1416                           indf2	equ	0xFDF
  1417                           postinc2	equ	0xFDE
  1418                           postdec2	equ	0xFDD
  1419                           fsr2h	equ	0xFDA
  1420                           fsr2l	equ	0xFD9
  1421                           status	equ	0xFD8
  1422                           
  1423 ;; *************** function _TMR0_Initialize *****************
  1424 ;; Defined at:
  1425 ;;		line 22 in file "mcc_generated_files/tmr0.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;		None
  1430 ;; Return value:  Size  Location     Type
  1431 ;;		None               void
  1432 ;; Registers used:
  1433 ;;		wreg, status,2, cstack
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1439 ;;      Params:         0       0       0       0       0       0       0
  1440 ;;      Locals:         0       0       0       0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0       0       0
  1442 ;;      Totals:         0       0       0       0       0       0       0
  1443 ;;Total ram usage:        0 bytes
  1444 ;; Hardware stack levels used:    1
  1445 ;; Hardware stack levels required when called:    4
  1446 ;; This function calls:
  1447 ;;		_TMR0_StartTimer
  1448 ;; This function is called by:
  1449 ;;		_SYSTEM_Initialize
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text7
  1454  0011DE                     __ptext7:
  1455                           	opt stack 0
  1456  0011DE                     _TMR0_Initialize:
  1457                           	opt stack 25
  1458                           
  1459                           ;tmr0.c: 27: T0CON = 0x94;
  1460                           
  1461                           ;incstack = 0
  1462  0011DE  0E94               	movlw	148
  1463  0011E0  6ED5               	movwf	4053,c	;volatile
  1464                           
  1465                           ;tmr0.c: 30: TMR0H = 0xCF;
  1466  0011E2  0ECF               	movlw	207
  1467  0011E4  6ED7               	movwf	4055,c	;volatile
  1468                           
  1469                           ;tmr0.c: 33: TMR0L = 0x2C;
  1470  0011E6  0E2C               	movlw	44
  1471  0011E8  6ED6               	movwf	4054,c	;volatile
  1472                           
  1473                           ;tmr0.c: 36: timer0ReloadVal16bit = 53036;
  1474  0011EA  0ECF               	movlw	207
  1475  0011EC  6E4A               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  1476  0011EE  0E2C               	movlw	44
  1477  0011F0  6E49               	movwf	_timer0ReloadVal16bit,c	;volatile
  1478                           
  1479                           ;tmr0.c: 39: INTCONbits.TMR0IF = 0;
  1480  0011F2  94F2               	bcf	intcon,2,c	;volatile
  1481                           
  1482                           ;tmr0.c: 42: INTCONbits.TMR0IE = 1;
  1483  0011F4  8AF2               	bsf	intcon,5,c	;volatile
  1484                           
  1485                           ;tmr0.c: 45: TMR0_StartTimer();
  1486  0011F6  EC2E  F009         	call	_TMR0_StartTimer	;wreg free
  1487  0011FA  0012               	return		;funcret
  1488  0011FC                     __end_of_TMR0_Initialize:
  1489                           	opt stack 0
  1490                           tblptru	equ	0xFF8
  1491                           tblptrh	equ	0xFF7
  1492                           tblptrl	equ	0xFF6
  1493                           tablat	equ	0xFF5
  1494                           prodh	equ	0xFF4
  1495                           prodl	equ	0xFF3
  1496                           intcon	equ	0xFF2
  1497                           postinc0	equ	0xFEE
  1498                           wreg	equ	0xFE8
  1499                           indf2	equ	0xFDF
  1500                           postinc2	equ	0xFDE
  1501                           postdec2	equ	0xFDD
  1502                           fsr2h	equ	0xFDA
  1503                           fsr2l	equ	0xFD9
  1504                           status	equ	0xFD8
  1505                           
  1506 ;; *************** function _TMR0_StartTimer *****************
  1507 ;; Defined at:
  1508 ;;		line 48 in file "mcc_generated_files/tmr0.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;		None
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;		None
  1513 ;; Return value:  Size  Location     Type
  1514 ;;		None               void
  1515 ;; Registers used:
  1516 ;;		None
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1522 ;;      Params:         0       0       0       0       0       0       0
  1523 ;;      Locals:         0       0       0       0       0       0       0
  1524 ;;      Temps:          0       0       0       0       0       0       0
  1525 ;;      Totals:         0       0       0       0       0       0       0
  1526 ;;Total ram usage:        0 bytes
  1527 ;; Hardware stack levels used:    1
  1528 ;; Hardware stack levels required when called:    3
  1529 ;; This function calls:
  1530 ;;		Nothing
  1531 ;; This function is called by:
  1532 ;;		_TMR0_Initialize
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           	psect	text8
  1537  00125C                     __ptext8:
  1538                           	opt stack 0
  1539  00125C                     _TMR0_StartTimer:
  1540                           	opt stack 25
  1541                           
  1542                           ;tmr0.c: 51: T0CONbits.TMR0ON = 1;
  1543                           
  1544                           ;incstack = 0
  1545  00125C  8ED5               	bsf	4053,7,c	;volatile
  1546  00125E  0012               	return		;funcret
  1547  001260                     __end_of_TMR0_StartTimer:
  1548                           	opt stack 0
  1549                           tblptru	equ	0xFF8
  1550                           tblptrh	equ	0xFF7
  1551                           tblptrl	equ	0xFF6
  1552                           tablat	equ	0xFF5
  1553                           prodh	equ	0xFF4
  1554                           prodl	equ	0xFF3
  1555                           intcon	equ	0xFF2
  1556                           postinc0	equ	0xFEE
  1557                           wreg	equ	0xFE8
  1558                           indf2	equ	0xFDF
  1559                           postinc2	equ	0xFDE
  1560                           postdec2	equ	0xFDD
  1561                           fsr2h	equ	0xFDA
  1562                           fsr2l	equ	0xFD9
  1563                           status	equ	0xFD8
  1564                           
  1565 ;; *************** function _PIN_MANAGER_Initialize *****************
  1566 ;; Defined at:
  1567 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;		None
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;		None
  1572 ;; Return value:  Size  Location     Type
  1573 ;;		None               void
  1574 ;; Registers used:
  1575 ;;		wreg, status,2
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1581 ;;      Params:         0       0       0       0       0       0       0
  1582 ;;      Locals:         0       0       0       0       0       0       0
  1583 ;;      Temps:          0       0       0       0       0       0       0
  1584 ;;      Totals:         0       0       0       0       0       0       0
  1585 ;;Total ram usage:        0 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; Hardware stack levels required when called:    3
  1588 ;; This function calls:
  1589 ;;		Nothing
  1590 ;; This function is called by:
  1591 ;;		_SYSTEM_Initialize
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           	psect	text9
  1596  000ECA                     __ptext9:
  1597                           	opt stack 0
  1598  000ECA                     _PIN_MANAGER_Initialize:
  1599                           	opt stack 26
  1600                           
  1601                           ;pin_manager.c: 52: LATA = 0x00;
  1602                           
  1603                           ;incstack = 0
  1604  000ECA  0E00               	movlw	0
  1605  000ECC  6E89               	movwf	3977,c	;volatile
  1606                           
  1607                           ;pin_manager.c: 53: TRISA = 0xF7;
  1608  000ECE  0EF7               	movlw	247
  1609  000ED0  6E92               	movwf	3986,c	;volatile
  1610                           
  1611                           ;pin_manager.c: 54: ANSELA = 0x20;
  1612  000ED2  0E20               	movlw	32
  1613  000ED4  010F               	movlb	15	; () banked
  1614  000ED6  6F38               	movwf	56,b	;volatile
  1615                           
  1616                           ;pin_manager.c: 56: LATB = 0x00;
  1617  000ED8  0E00               	movlw	0
  1618  000EDA  6E8A               	movwf	3978,c	;volatile
  1619                           
  1620                           ;pin_manager.c: 57: TRISB = 0xD7;
  1621  000EDC  0ED7               	movlw	215
  1622  000EDE  6E93               	movwf	3987,c	;volatile
  1623                           
  1624                           ;pin_manager.c: 58: ANSELB = 0x00;
  1625  000EE0  0E00               	movlw	0
  1626  000EE2  010F               	movlb	15	; () banked
  1627  000EE4  6F39               	movwf	57,b	;volatile
  1628                           
  1629                           ;pin_manager.c: 59: WPUB = 0x00;
  1630  000EE6  0E00               	movlw	0
  1631  000EE8  6E61               	movwf	3937,c	;volatile
  1632                           
  1633                           ;pin_manager.c: 61: LATC = 0x18;
  1634  000EEA  0E18               	movlw	24
  1635  000EEC  6E8B               	movwf	3979,c	;volatile
  1636                           
  1637                           ;pin_manager.c: 62: TRISC = 0xDF;
  1638  000EEE  0EDF               	movlw	223
  1639  000EF0  6E94               	movwf	3988,c	;volatile
  1640                           
  1641                           ;pin_manager.c: 63: ANSELC = 0x04;
  1642  000EF2  0E04               	movlw	4
  1643  000EF4  010F               	movlb	15	; () banked
  1644  000EF6  6F3A               	movwf	58,b	;volatile
  1645                           
  1646                           ;pin_manager.c: 65: LATD = 0x00;
  1647  000EF8  0E00               	movlw	0
  1648  000EFA  6E8C               	movwf	3980,c	;volatile
  1649                           
  1650                           ;pin_manager.c: 66: TRISD = 0xFD;
  1651  000EFC  0EFD               	movlw	253
  1652  000EFE  6E95               	movwf	3989,c	;volatile
  1653                           
  1654                           ;pin_manager.c: 67: ANSELD = 0xDD;
  1655  000F00  0EDD               	movlw	221
  1656  000F02  010F               	movlb	15	; () banked
  1657  000F04  6F3B               	movwf	59,b	;volatile
  1658                           
  1659                           ;pin_manager.c: 69: LATE = 0x00;
  1660  000F06  0E00               	movlw	0
  1661  000F08  6E8D               	movwf	3981,c	;volatile
  1662                           
  1663                           ;pin_manager.c: 70: TRISE = 0x00;
  1664  000F0A  0E00               	movlw	0
  1665  000F0C  6E96               	movwf	3990,c	;volatile
  1666                           
  1667                           ;pin_manager.c: 71: ANSELE = 0x00;
  1668  000F0E  0E00               	movlw	0
  1669  000F10  010F               	movlb	15	; () banked
  1670  000F12  6F3C               	movwf	60,b	;volatile
  1671                           
  1672                           ; BSR set to: 15
  1673                           ;pin_manager.c: 73: INTCON2bits.nRBPU = 0x01;
  1674  000F14  8EF1               	bsf	intcon2,7,c	;volatile
  1675                           
  1676                           ; BSR set to: 15
  1677  000F16  0012               	return		;funcret
  1678  000F18                     __end_of_PIN_MANAGER_Initialize:
  1679                           	opt stack 0
  1680                           tblptru	equ	0xFF8
  1681                           tblptrh	equ	0xFF7
  1682                           tblptrl	equ	0xFF6
  1683                           tablat	equ	0xFF5
  1684                           prodh	equ	0xFF4
  1685                           prodl	equ	0xFF3
  1686                           intcon	equ	0xFF2
  1687                           intcon2	equ	0xFF1
  1688                           postinc0	equ	0xFEE
  1689                           wreg	equ	0xFE8
  1690                           indf2	equ	0xFDF
  1691                           postinc2	equ	0xFDE
  1692                           postdec2	equ	0xFDD
  1693                           fsr2h	equ	0xFDA
  1694                           fsr2l	equ	0xFD9
  1695                           status	equ	0xFD8
  1696                           
  1697 ;; *************** function _OSCILLATOR_Initialize *****************
  1698 ;; Defined at:
  1699 ;;		line 123 in file "mcc_generated_files/mcc.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;		None               void
  1706 ;; Registers used:
  1707 ;;		wreg, status,2
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1713 ;;      Params:         0       0       0       0       0       0       0
  1714 ;;      Locals:         0       0       0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0
  1716 ;;      Totals:         0       0       0       0       0       0       0
  1717 ;;Total ram usage:        0 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; Hardware stack levels required when called:    3
  1720 ;; This function calls:
  1721 ;;		Nothing
  1722 ;; This function is called by:
  1723 ;;		_SYSTEM_Initialize
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text10
  1728  00123E                     __ptext10:
  1729                           	opt stack 0
  1730  00123E                     _OSCILLATOR_Initialize:
  1731                           	opt stack 26
  1732                           
  1733                           ;mcc.c: 126: OSCCON = 0x72;
  1734                           
  1735                           ; BSR set to: 15
  1736                           ;incstack = 0
  1737  00123E  0E72               	movlw	114
  1738  001240  6ED3               	movwf	4051,c	;volatile
  1739                           
  1740                           ;mcc.c: 128: OSCCON2 = 0x04;
  1741  001242  0E04               	movlw	4
  1742  001244  6ED2               	movwf	4050,c	;volatile
  1743                           
  1744                           ;mcc.c: 130: OSCTUNE = 0x00;
  1745  001246  0E00               	movlw	0
  1746  001248  6E9B               	movwf	3995,c	;volatile
  1747  00124A  0012               	return		;funcret
  1748  00124C                     __end_of_OSCILLATOR_Initialize:
  1749                           	opt stack 0
  1750                           tblptru	equ	0xFF8
  1751                           tblptrh	equ	0xFF7
  1752                           tblptrl	equ	0xFF6
  1753                           tablat	equ	0xFF5
  1754                           prodh	equ	0xFF4
  1755                           prodl	equ	0xFF3
  1756                           intcon	equ	0xFF2
  1757                           intcon2	equ	0xFF1
  1758                           postinc0	equ	0xFEE
  1759                           wreg	equ	0xFE8
  1760                           indf2	equ	0xFDF
  1761                           postinc2	equ	0xFDE
  1762                           postdec2	equ	0xFDD
  1763                           fsr2h	equ	0xFDA
  1764                           fsr2l	equ	0xFD9
  1765                           status	equ	0xFD8
  1766                           
  1767 ;; *************** function _INTERRUPT_Initialize *****************
  1768 ;; Defined at:
  1769 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;		None
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;		None               void
  1776 ;; Registers used:
  1777 ;;		None
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1783 ;;      Params:         0       0       0       0       0       0       0
  1784 ;;      Locals:         0       0       0       0       0       0       0
  1785 ;;      Temps:          0       0       0       0       0       0       0
  1786 ;;      Totals:         0       0       0       0       0       0       0
  1787 ;;Total ram usage:        0 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    3
  1790 ;; This function calls:
  1791 ;;		Nothing
  1792 ;; This function is called by:
  1793 ;;		_SYSTEM_Initialize
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text11
  1798  00122E                     __ptext11:
  1799                           	opt stack 0
  1800  00122E                     _INTERRUPT_Initialize:
  1801                           	opt stack 26
  1802                           
  1803                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  1804                           
  1805                           ;incstack = 0
  1806  00122E  9ED0               	bcf	4048,7,c	;volatile
  1807                           
  1808                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
  1809  001230  9A9F               	bcf	3999,5,c	;volatile
  1810                           
  1811                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  1812  001232  989F               	bcf	3999,4,c	;volatile
  1813                           
  1814                           ;interrupt_manager.c: 64: INTCON2bits.TMR0IP = 0;
  1815  001234  94F1               	bcf	intcon2,2,c	;volatile
  1816                           
  1817                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 0;
  1818  001236  9C9F               	bcf	3999,6,c	;volatile
  1819                           
  1820                           ;interrupt_manager.c: 68: IPR1bits.SSP1IP = 0;
  1821  001238  969F               	bcf	3999,3,c	;volatile
  1822                           
  1823                           ;interrupt_manager.c: 70: IPR2bits.BCL1IP = 0;
  1824  00123A  96A2               	bcf	4002,3,c	;volatile
  1825  00123C  0012               	return		;funcret
  1826  00123E                     __end_of_INTERRUPT_Initialize:
  1827                           	opt stack 0
  1828                           tblptru	equ	0xFF8
  1829                           tblptrh	equ	0xFF7
  1830                           tblptrl	equ	0xFF6
  1831                           tablat	equ	0xFF5
  1832                           prodh	equ	0xFF4
  1833                           prodl	equ	0xFF3
  1834                           intcon	equ	0xFF2
  1835                           intcon2	equ	0xFF1
  1836                           postinc0	equ	0xFEE
  1837                           wreg	equ	0xFE8
  1838                           indf2	equ	0xFDF
  1839                           postinc2	equ	0xFDE
  1840                           postdec2	equ	0xFDD
  1841                           fsr2h	equ	0xFDA
  1842                           fsr2l	equ	0xFD9
  1843                           status	equ	0xFD8
  1844                           
  1845 ;; *************** function _I2C1_Initialize *****************
  1846 ;; Defined at:
  1847 ;;		line 151 in file "mcc_generated_files/i2c1.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;		None
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;		None
  1852 ;; Return value:  Size  Location     Type
  1853 ;;		None               void
  1854 ;; Registers used:
  1855 ;;		wreg, status,2, status,0
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1861 ;;      Params:         0       0       0       0       0       0       0
  1862 ;;      Locals:         0       0       0       0       0       0       0
  1863 ;;      Temps:          0       0       0       0       0       0       0
  1864 ;;      Totals:         0       0       0       0       0       0       0
  1865 ;;Total ram usage:        0 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; Hardware stack levels required when called:    3
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		_SYSTEM_Initialize
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text12
  1876  001146                     __ptext12:
  1877                           	opt stack 0
  1878  001146                     _I2C1_Initialize:
  1879                           	opt stack 26
  1880                           
  1881                           ;i2c1.c: 153: i2c1_object.pTrHead = i2c1_tr_queue;
  1882                           
  1883                           ;incstack = 0
  1884  001146  0E1E               	movlw	low _i2c1_tr_queue
  1885  001148  6E03               	movwf	_i2c1_object+2,c
  1886  00114A  0E00               	movlw	high _i2c1_tr_queue
  1887  00114C  6E04               	movwf	_i2c1_object+3,c
  1888                           
  1889                           ;i2c1.c: 154: i2c1_object.pTrTail = i2c1_tr_queue;
  1890  00114E  0E1E               	movlw	low _i2c1_tr_queue
  1891  001150  6E01               	movwf	_i2c1_object,c
  1892  001152  0E00               	movlw	high _i2c1_tr_queue
  1893  001154  6E02               	movwf	_i2c1_object+1,c
  1894                           
  1895                           ;i2c1.c: 155: i2c1_object.trStatus.s.empty = 1;
  1896  001156  8205               	bsf	_i2c1_object+4,1,c
  1897                           
  1898                           ;i2c1.c: 156: i2c1_object.trStatus.s.full = 0;
  1899  001158  9005               	bcf	_i2c1_object+4,0,c
  1900                           
  1901                           ;i2c1.c: 158: i2c1_object.i2cErrors = 0;
  1902  00115A  0E00               	movlw	0
  1903  00115C  6E07               	movwf	_i2c1_object+6,c
  1904                           
  1905                           ;i2c1.c: 161: SSP1STAT = 0x80;
  1906  00115E  0E80               	movlw	128
  1907  001160  6EC7               	movwf	4039,c	;volatile
  1908                           
  1909                           ;i2c1.c: 163: SSP1CON1 = 0x28;
  1910  001162  0E28               	movlw	40
  1911  001164  6EC6               	movwf	4038,c	;volatile
  1912                           
  1913                           ;i2c1.c: 165: SSP1CON3 = 0x00;
  1914  001166  0E00               	movlw	0
  1915  001168  6ECB               	movwf	4043,c	;volatile
  1916                           
  1917                           ;i2c1.c: 167: SSP1ADD = 0x09;
  1918  00116A  0E09               	movlw	9
  1919  00116C  6EC8               	movwf	4040,c	;volatile
  1920                           
  1921                           ;i2c1.c: 171: PIR1bits.SSP1IF = 0;
  1922  00116E  969E               	bcf	3998,3,c	;volatile
  1923                           
  1924                           ;i2c1.c: 173: PIE1bits.SSP1IE = 1;
  1925  001170  869D               	bsf	3997,3,c	;volatile
  1926  001172  0012               	return		;funcret
  1927  001174                     __end_of_I2C1_Initialize:
  1928                           	opt stack 0
  1929                           tblptru	equ	0xFF8
  1930                           tblptrh	equ	0xFF7
  1931                           tblptrl	equ	0xFF6
  1932                           tablat	equ	0xFF5
  1933                           prodh	equ	0xFF4
  1934                           prodl	equ	0xFF3
  1935                           intcon	equ	0xFF2
  1936                           intcon2	equ	0xFF1
  1937                           postinc0	equ	0xFEE
  1938                           wreg	equ	0xFE8
  1939                           indf2	equ	0xFDF
  1940                           postinc2	equ	0xFDE
  1941                           postdec2	equ	0xFDD
  1942                           fsr2h	equ	0xFDA
  1943                           fsr2l	equ	0xFD9
  1944                           status	equ	0xFD8
  1945                           
  1946 ;; *************** function _EUSART1_Initialize *****************
  1947 ;; Defined at:
  1948 ;;		line 76 in file "mcc_generated_files/eusart1.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;		None
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;		None
  1953 ;; Return value:  Size  Location     Type
  1954 ;;		None               void
  1955 ;; Registers used:
  1956 ;;		wreg, status,2
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1962 ;;      Params:         0       0       0       0       0       0       0
  1963 ;;      Locals:         0       0       0       0       0       0       0
  1964 ;;      Temps:          0       0       0       0       0       0       0
  1965 ;;      Totals:         0       0       0       0       0       0       0
  1966 ;;Total ram usage:        0 bytes
  1967 ;; Hardware stack levels used:    1
  1968 ;; Hardware stack levels required when called:    3
  1969 ;; This function calls:
  1970 ;;		Nothing
  1971 ;; This function is called by:
  1972 ;;		_SYSTEM_Initialize
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           	psect	text13
  1977  001074                     __ptext13:
  1978                           	opt stack 0
  1979  001074                     _EUSART1_Initialize:
  1980                           	opt stack 26
  1981                           
  1982                           ;eusart1.c: 79: PIE1bits.RC1IE = 0;
  1983                           
  1984                           ;incstack = 0
  1985  001074  9A9D               	bcf	3997,5,c	;volatile
  1986                           
  1987                           ;eusart1.c: 80: PIE1bits.TX1IE = 0;
  1988  001076  989D               	bcf	3997,4,c	;volatile
  1989                           
  1990                           ;eusart1.c: 85: BAUD1CON = 0x48;
  1991  001078  0E48               	movlw	72
  1992  00107A  6EB8               	movwf	4024,c	;volatile
  1993                           
  1994                           ;eusart1.c: 88: RC1STA = 0x90;
  1995  00107C  0E90               	movlw	144
  1996  00107E  6EAB               	movwf	4011,c	;volatile
  1997                           
  1998                           ;eusart1.c: 91: TX1STA = 0x26;
  1999  001080  0E26               	movlw	38
  2000  001082  6EAC               	movwf	4012,c	;volatile
  2001                           
  2002                           ;eusart1.c: 94: SPBRG1 = 0xCF;
  2003  001084  0ECF               	movlw	207
  2004  001086  6EAF               	movwf	4015,c	;volatile
  2005                           
  2006                           ;eusart1.c: 97: SPBRGH1 = 0x00;
  2007  001088  0E00               	movlw	0
  2008  00108A  6EB0               	movwf	4016,c	;volatile
  2009                           
  2010                           ;eusart1.c: 100: TXREG1 = 0x00;
  2011  00108C  0E00               	movlw	0
  2012  00108E  6EAD               	movwf	4013,c	;volatile
  2013                           
  2014                           ;eusart1.c: 103: RCREG1 = 0x00;
  2015  001090  0E00               	movlw	0
  2016  001092  6EAE               	movwf	4014,c	;volatile
  2017                           
  2018                           ;eusart1.c: 107: eusart1TxHead = 0;
  2019  001094  0E00               	movlw	0
  2020  001096  6E15               	movwf	_eusart1TxHead,c
  2021                           
  2022                           ;eusart1.c: 108: eusart1TxTail = 0;
  2023  001098  0E00               	movlw	0
  2024  00109A  6E16               	movwf	_eusart1TxTail,c
  2025                           
  2026                           ;eusart1.c: 109: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  2027  00109C  0E08               	movlw	8
  2028  00109E  6E4B               	movwf	_eusart1TxBufferRemaining,c	;volatile
  2029                           
  2030                           ;eusart1.c: 111: eusart1RxHead = 0;
  2031  0010A0  0E00               	movlw	0
  2032  0010A2  6E13               	movwf	_eusart1RxHead,c
  2033                           
  2034                           ;eusart1.c: 112: eusart1RxTail = 0;
  2035  0010A4  0E00               	movlw	0
  2036  0010A6  6E14               	movwf	_eusart1RxTail,c
  2037                           
  2038                           ;eusart1.c: 113: eusart1RxCount = 0;
  2039  0010A8  0E00               	movlw	0
  2040  0010AA  6E12               	movwf	_eusart1RxCount,c	;volatile
  2041                           
  2042                           ;eusart1.c: 116: PIE1bits.RC1IE = 1;
  2043  0010AC  8A9D               	bsf	3997,5,c	;volatile
  2044  0010AE  0012               	return		;funcret
  2045  0010B0                     __end_of_EUSART1_Initialize:
  2046                           	opt stack 0
  2047                           tblptru	equ	0xFF8
  2048                           tblptrh	equ	0xFF7
  2049                           tblptrl	equ	0xFF6
  2050                           tablat	equ	0xFF5
  2051                           prodh	equ	0xFF4
  2052                           prodl	equ	0xFF3
  2053                           intcon	equ	0xFF2
  2054                           intcon2	equ	0xFF1
  2055                           postinc0	equ	0xFEE
  2056                           wreg	equ	0xFE8
  2057                           indf2	equ	0xFDF
  2058                           postinc2	equ	0xFDE
  2059                           postdec2	equ	0xFDD
  2060                           fsr2h	equ	0xFDA
  2061                           fsr2l	equ	0xFD9
  2062                           status	equ	0xFD8
  2063                           
  2064 ;; *************** function _ADC_Initialize *****************
  2065 ;; Defined at:
  2066 ;;		line 59 in file "mcc_generated_files/adc.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;		None
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;		None
  2071 ;; Return value:  Size  Location     Type
  2072 ;;		None               void
  2073 ;; Registers used:
  2074 ;;		wreg, status,2
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2080 ;;      Params:         0       0       0       0       0       0       0
  2081 ;;      Locals:         0       0       0       0       0       0       0
  2082 ;;      Temps:          0       0       0       0       0       0       0
  2083 ;;      Totals:         0       0       0       0       0       0       0
  2084 ;;Total ram usage:        0 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; Hardware stack levels required when called:    3
  2087 ;; This function calls:
  2088 ;;		Nothing
  2089 ;; This function is called by:
  2090 ;;		_SYSTEM_Initialize
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text14
  2095  001216                     __ptext14:
  2096                           	opt stack 0
  2097  001216                     _ADC_Initialize:
  2098                           	opt stack 26
  2099                           
  2100                           ;adc.c: 64: ADCON0 = 0x01;
  2101                           
  2102                           ;incstack = 0
  2103  001216  0E01               	movlw	1
  2104  001218  6EC2               	movwf	4034,c	;volatile
  2105                           
  2106                           ;adc.c: 67: ADCON1 = 0x80;
  2107  00121A  0E80               	movlw	128
  2108  00121C  6EC1               	movwf	4033,c	;volatile
  2109                           
  2110                           ;adc.c: 70: ADCON2 = 0x05;
  2111  00121E  0E05               	movlw	5
  2112  001220  6EC0               	movwf	4032,c	;volatile
  2113                           
  2114                           ;adc.c: 73: ADRESL = 0x00;
  2115  001222  0E00               	movlw	0
  2116  001224  6EC3               	movwf	4035,c	;volatile
  2117                           
  2118                           ;adc.c: 76: ADRESH = 0x00;
  2119  001226  0E00               	movlw	0
  2120  001228  6EC4               	movwf	4036,c	;volatile
  2121                           
  2122                           ;adc.c: 79: PIE1bits.ADIE = 1;
  2123  00122A  8C9D               	bsf	3997,6,c	;volatile
  2124  00122C  0012               	return		;funcret
  2125  00122E                     __end_of_ADC_Initialize:
  2126                           	opt stack 0
  2127                           tblptru	equ	0xFF8
  2128                           tblptrh	equ	0xFF7
  2129                           tblptrl	equ	0xFF6
  2130                           tablat	equ	0xFF5
  2131                           prodh	equ	0xFF4
  2132                           prodl	equ	0xFF3
  2133                           intcon	equ	0xFF2
  2134                           intcon2	equ	0xFF1
  2135                           postinc0	equ	0xFEE
  2136                           wreg	equ	0xFE8
  2137                           indf2	equ	0xFDF
  2138                           postinc2	equ	0xFDE
  2139                           postdec2	equ	0xFDD
  2140                           fsr2h	equ	0xFDA
  2141                           fsr2l	equ	0xFD9
  2142                           status	equ	0xFD8
  2143                           
  2144 ;; *************** function _LEDbegin *****************
  2145 ;; Defined at:
  2146 ;;		line 73 in file "LED_BarGraph.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  i2c_addr        1    wreg     unsigned char 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  i2c_addr        1   13[BANK0 ] unsigned char 
  2151 ;;  writeBuffer     3    8[BANK0 ] unsigned char [3]
  2152 ;;  timeOut         2   11[BANK0 ] unsigned int 
  2153 ;;  status          1   14[BANK0 ] enum E8852
  2154 ;; Return value:  Size  Location     Type
  2155 ;;		None               void
  2156 ;; Registers used:
  2157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2163 ;;      Params:         0       0       0       0       0       0       0
  2164 ;;      Locals:         0       7       0       0       0       0       0
  2165 ;;      Temps:          0       0       0       0       0       0       0
  2166 ;;      Totals:         0       7       0       0       0       0       0
  2167 ;;Total ram usage:        7 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:    6
  2170 ;; This function calls:
  2171 ;;		_I2C1_MasterWrite
  2172 ;;		_LEDBsetBrightness
  2173 ;;		_LEDblinkRate
  2174 ;; This function is called by:
  2175 ;;		_main
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           	psect	text15
  2180  000B16                     __ptext15:
  2181                           	opt stack 0
  2182  000B16                     _LEDbegin:
  2183                           	opt stack 24
  2184                           
  2185                           ;incstack = 0
  2186                           ;LEDbegin@i2c_addr stored from wreg
  2187  000B16  0100               	movlb	0	; () banked
  2188  000B18  6FB2               	movwf	LEDbegin@i2c_addr& (0+255),b
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;LED_BarGraph.c: 74: uint8_t writeBuffer[3];
  2192                           ;LED_BarGraph.c: 75: uint16_t timeOut;
  2193                           ;LED_BarGraph.c: 76: writeBuffer[0]=0x21;
  2194  000B1A  0E21               	movlw	33
  2195  000B1C  0100               	movlb	0	; () banked
  2196  000B1E  6FAD               	movwf	LEDbegin@writeBuffer& (0+255),b
  2197                           
  2198                           ;LED_BarGraph.c: 77: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  2199  000B20  0E02               	movlw	2
  2200  000B22  0100               	movlb	0	; () banked
  2201  000B24  6FB3               	movwf	LEDbegin@status& (0+255),b
  2202                           
  2203                           ;LED_BarGraph.c: 79: timeOut = 0;
  2204  000B26  0E00               	movlw	0
  2205  000B28  0100               	movlb	0	; () banked
  2206  000B2A  6FB1               	movwf	(LEDbegin@timeOut+1)& (0+255),b
  2207  000B2C  0E00               	movlw	0
  2208  000B2E  6FB0               	movwf	LEDbegin@timeOut& (0+255),b
  2209                           
  2210                           ;LED_BarGraph.c: 80: while(status != I2C1_MESSAGE_FAIL)
  2211  000B30  D031               	goto	l3168
  2212  000B32                     l3148:
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;LED_BarGraph.c: 81: {
  2216                           ;LED_BarGraph.c: 83: I2C1_MasterWrite( &writeBuffer,
  2217                           ;LED_BarGraph.c: 84: 1,
  2218                           ;LED_BarGraph.c: 85: 0x70,
  2219                           ;LED_BarGraph.c: 86: &status);
  2220  000B32  0EAD               	movlw	low LEDbegin@writeBuffer
  2221  000B34  6E42               	movwf	I2C1_MasterWrite@pdata,c
  2222  000B36  0E00               	movlw	high LEDbegin@writeBuffer
  2223  000B38  6E43               	movwf	I2C1_MasterWrite@pdata+1,c
  2224  000B3A  0E01               	movlw	1
  2225  000B3C  6E44               	movwf	I2C1_MasterWrite@length,c
  2226  000B3E  0E00               	movlw	0
  2227  000B40  6E46               	movwf	I2C1_MasterWrite@address+1,c
  2228  000B42  0E70               	movlw	112
  2229  000B44  6E45               	movwf	I2C1_MasterWrite@address,c
  2230  000B46  0EB3               	movlw	low LEDbegin@status
  2231  000B48  6E47               	movwf	I2C1_MasterWrite@pflag,c
  2232  000B4A  0E00               	movlw	high LEDbegin@status
  2233  000B4C  6E48               	movwf	I2C1_MasterWrite@pflag+1,c
  2234  000B4E  ECB2  F007         	call	_I2C1_MasterWrite	;wreg free
  2235                           
  2236                           ;LED_BarGraph.c: 89: while(status == I2C1_MESSAGE_PENDING);
  2237  000B52  D000               	goto	l3150
  2238  000B54                     l3150:
  2239  000B54  0E02               	movlw	2
  2240  000B56  0100               	movlb	0	; () banked
  2241  000B58  19B3               	xorwf	LEDbegin@status& (0+255),w,b
  2242  000B5A  B4D8               	btfsc	status,2,c
  2243  000B5C  D7FB               	goto	l3150
  2244                           
  2245                           ; BSR set to: 0
  2246                           ;LED_BarGraph.c: 91: if (status == I2C1_MESSAGE_COMPLETE)
  2247                           
  2248                           ; BSR set to: 0
  2249  000B5E  0100               	movlb	0	; () banked
  2250  000B60  51B3               	movf	LEDbegin@status& (0+255),w,b
  2251  000B62  0100               	movlb	0	; () banked
  2252  000B64  B4D8               	btfsc	status,2,c
  2253  000B66  D01A               	goto	l3170
  2254  000B68  D001               	goto	l3156
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;LED_BarGraph.c: 92: break;
  2258  000B6A  D018               	goto	l3170
  2259  000B6C                     l3156:
  2260                           
  2261                           ; BSR set to: 0
  2262                           ;LED_BarGraph.c: 93: if (timeOut == 100)
  2263  000B6C  0E64               	movlw	100
  2264  000B6E  0100               	movlb	0	; () banked
  2265  000B70  19B0               	xorwf	LEDbegin@timeOut& (0+255),w,b
  2266  000B72  0100               	movlb	0	; () banked
  2267  000B74  11B1               	iorwf	(LEDbegin@timeOut+1)& (0+255),w,b
  2268  000B76  B4D8               	btfsc	status,2,c
  2269  000B78  D011               	goto	l3170
  2270  000B7A  D001               	goto	l3160
  2271                           
  2272                           ; BSR set to: 0
  2273                           ;LED_BarGraph.c: 94: break;
  2274  000B7C  D00F               	goto	l3170
  2275  000B7E                     l3160:
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;LED_BarGraph.c: 95: if (status == I2C1_MESSAGE_FAIL)
  2279  000B7E  0100               	movlb	0	; () banked
  2280  000B80  05B3               	decf	LEDbegin@status& (0+255),w,b
  2281  000B82  B4D8               	btfsc	status,2,c
  2282  000B84  D00B               	goto	l3170
  2283  000B86  D002               	goto	l3166
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;LED_BarGraph.c: 96: break;
  2287  000B88  D009               	goto	l3170
  2288                           
  2289                           ; BSR set to: 0
  2290  000B8A  D004               	goto	l3168
  2291  000B8C                     l3166:
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;LED_BarGraph.c: 97: else
  2295                           ;LED_BarGraph.c: 98: timeOut++;
  2296  000B8C  0100               	movlb	0	; () banked
  2297  000B8E  4BB0               	infsnz	LEDbegin@timeOut& (0+255),f,b
  2298  000B90  2BB1               	incf	(LEDbegin@timeOut+1)& (0+255),f,b
  2299                           
  2300                           ; BSR set to: 0
  2301  000B92  D000               	goto	l3168
  2302  000B94                     l3168:
  2303                           
  2304                           ; BSR set to: 0
  2305  000B94  0100               	movlb	0	; () banked
  2306  000B96  05B3               	decf	LEDbegin@status& (0+255),w,b
  2307  000B98  A4D8               	btfss	status,2,c
  2308  000B9A  D7CB               	goto	l3148
  2309  000B9C                     l3170:
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;LED_BarGraph.c: 99: }
  2313                           ;LED_BarGraph.c: 101: LEDblinkRate(0,i2c_addr);
  2314  000B9C  0E00               	movlw	0
  2315  000B9E  0100               	movlb	0	; () banked
  2316  000BA0  6FA6               	movwf	(LEDblinkRate@b+1)& (0+255),b
  2317  000BA2  0E00               	movlw	0
  2318  000BA4  6FA5               	movwf	LEDblinkRate@b& (0+255),b
  2319  000BA6  C0B2  F0A7         	movff	LEDbegin@i2c_addr,LEDblinkRate@i2c_addr
  2320  000BAA  ECE1  F005         	call	_LEDblinkRate	;wreg free
  2321                           
  2322                           ;LED_BarGraph.c: 102: LEDBsetBrightness(15,i2c_addr);
  2323  000BAE  0E00               	movlw	0
  2324  000BB0  0100               	movlb	0	; () banked
  2325  000BB2  6FA6               	movwf	(LEDBsetBrightness@b+1)& (0+255),b
  2326  000BB4  0E0F               	movlw	15
  2327  000BB6  6FA5               	movwf	LEDBsetBrightness@b& (0+255),b
  2328  000BB8  C0B2  F0A7         	movff	LEDbegin@i2c_addr,LEDBsetBrightness@i2c_addr
  2329  000BBC  EC37  F006         	call	_LEDBsetBrightness	;wreg free
  2330  000BC0  0012               	return		;funcret
  2331  000BC2                     __end_of_LEDbegin:
  2332                           	opt stack 0
  2333                           tblptru	equ	0xFF8
  2334                           tblptrh	equ	0xFF7
  2335                           tblptrl	equ	0xFF6
  2336                           tablat	equ	0xFF5
  2337                           prodh	equ	0xFF4
  2338                           prodl	equ	0xFF3
  2339                           intcon	equ	0xFF2
  2340                           intcon2	equ	0xFF1
  2341                           postinc0	equ	0xFEE
  2342                           wreg	equ	0xFE8
  2343                           indf2	equ	0xFDF
  2344                           postinc2	equ	0xFDE
  2345                           postdec2	equ	0xFDD
  2346                           fsr2h	equ	0xFDA
  2347                           fsr2l	equ	0xFD9
  2348                           status	equ	0xFD8
  2349                           
  2350 ;; *************** function _LEDblinkRate *****************
  2351 ;; Defined at:
  2352 ;;		line 42 in file "LED_BarGraph.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;  b               2    0[BANK0 ] int 
  2355 ;;  i2c_addr        1    2[BANK0 ] unsigned char 
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;  writeBuffer     2    3[BANK0 ] unsigned char [2]
  2358 ;;  timeOut         2    5[BANK0 ] unsigned int 
  2359 ;;  status          1    7[BANK0 ] enum E8852
  2360 ;; Return value:  Size  Location     Type
  2361 ;;		None               void
  2362 ;; Registers used:
  2363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2369 ;;      Params:         0       3       0       0       0       0       0
  2370 ;;      Locals:         0       5       0       0       0       0       0
  2371 ;;      Temps:          0       0       0       0       0       0       0
  2372 ;;      Totals:         0       8       0       0       0       0       0
  2373 ;;Total ram usage:        8 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:    5
  2376 ;; This function calls:
  2377 ;;		_I2C1_MasterWrite
  2378 ;; This function is called by:
  2379 ;;		_LEDbegin
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           	psect	text16
  2384  000BC2                     __ptext16:
  2385                           	opt stack 0
  2386  000BC2                     _LEDblinkRate:
  2387                           	opt stack 24
  2388                           
  2389                           ;LED_BarGraph.c: 43: if (b > 3) b = 0;
  2390                           
  2391                           ;incstack = 0
  2392  000BC2  0100               	movlb	0	; () banked
  2393  000BC4  BFA6               	btfsc	(LEDblinkRate@b+1)& (0+255),7,b
  2394  000BC6  D00E               	goto	l2934
  2395  000BC8  0100               	movlb	0	; () banked
  2396  000BCA  51A6               	movf	(LEDblinkRate@b+1)& (0+255),w,b
  2397  000BCC  E105               	bnz	u2520
  2398  000BCE  0E04               	movlw	4
  2399  000BD0  0100               	movlb	0	; () banked
  2400  000BD2  5DA5               	subwf	LEDblinkRate@b& (0+255),w,b
  2401  000BD4  A0D8               	btfss	status,0,c
  2402  000BD6  D006               	goto	l2934
  2403  000BD8                     u2520:
  2404                           
  2405                           ; BSR set to: 0
  2406  000BD8  0E00               	movlw	0
  2407  000BDA  0100               	movlb	0	; () banked
  2408  000BDC  6FA6               	movwf	(LEDblinkRate@b+1)& (0+255),b
  2409  000BDE  0E00               	movlw	0
  2410  000BE0  6FA5               	movwf	LEDblinkRate@b& (0+255),b
  2411  000BE2  D000               	goto	l2934
  2412  000BE4                     l2934:
  2413                           
  2414                           ; BSR set to: 0
  2415                           ;LED_BarGraph.c: 44: uint8_t writeBuffer[2];
  2416                           ;LED_BarGraph.c: 45: uint16_t timeOut;
  2417                           ;LED_BarGraph.c: 46: writeBuffer[0]= (0x80 | 0x01 | (b << 1));
  2418  000BE4  0100               	movlb	0	; () banked
  2419  000BE6  51A5               	movf	LEDblinkRate@b& (0+255),w,b
  2420  000BE8  25A5               	addwf	LEDblinkRate@b& (0+255),w,b
  2421  000BEA  0981               	iorlw	129
  2422  000BEC  0100               	movlb	0	; () banked
  2423  000BEE  6FA8               	movwf	LEDblinkRate@writeBuffer& (0+255),b
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;LED_BarGraph.c: 47: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  2427  000BF0  0E02               	movlw	2
  2428  000BF2  0100               	movlb	0	; () banked
  2429  000BF4  6FAC               	movwf	LEDblinkRate@status& (0+255),b
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;LED_BarGraph.c: 49: timeOut = 0;
  2433  000BF6  0E00               	movlw	0
  2434  000BF8  0100               	movlb	0	; () banked
  2435  000BFA  6FAB               	movwf	(LEDblinkRate@timeOut+1)& (0+255),b
  2436  000BFC  0E00               	movlw	0
  2437  000BFE  6FAA               	movwf	LEDblinkRate@timeOut& (0+255),b
  2438                           
  2439                           ;LED_BarGraph.c: 50: while(status != I2C1_MESSAGE_FAIL)
  2440  000C00  D031               	goto	l2960
  2441  000C02                     l2940:
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;LED_BarGraph.c: 51: {
  2445                           ;LED_BarGraph.c: 53: I2C1_MasterWrite( &writeBuffer,
  2446                           ;LED_BarGraph.c: 54: 1,
  2447                           ;LED_BarGraph.c: 55: 0x70,
  2448                           ;LED_BarGraph.c: 56: &status);
  2449  000C02  0EA8               	movlw	low LEDblinkRate@writeBuffer
  2450  000C04  6E42               	movwf	I2C1_MasterWrite@pdata,c
  2451  000C06  0E00               	movlw	high LEDblinkRate@writeBuffer
  2452  000C08  6E43               	movwf	I2C1_MasterWrite@pdata+1,c
  2453  000C0A  0E01               	movlw	1
  2454  000C0C  6E44               	movwf	I2C1_MasterWrite@length,c
  2455  000C0E  0E00               	movlw	0
  2456  000C10  6E46               	movwf	I2C1_MasterWrite@address+1,c
  2457  000C12  0E70               	movlw	112
  2458  000C14  6E45               	movwf	I2C1_MasterWrite@address,c
  2459  000C16  0EAC               	movlw	low LEDblinkRate@status
  2460  000C18  6E47               	movwf	I2C1_MasterWrite@pflag,c
  2461  000C1A  0E00               	movlw	high LEDblinkRate@status
  2462  000C1C  6E48               	movwf	I2C1_MasterWrite@pflag+1,c
  2463  000C1E  ECB2  F007         	call	_I2C1_MasterWrite	;wreg free
  2464                           
  2465                           ;LED_BarGraph.c: 59: while(status == I2C1_MESSAGE_PENDING);
  2466  000C22  D000               	goto	l2942
  2467  000C24                     l2942:
  2468  000C24  0E02               	movlw	2
  2469  000C26  0100               	movlb	0	; () banked
  2470  000C28  19AC               	xorwf	LEDblinkRate@status& (0+255),w,b
  2471  000C2A  B4D8               	btfsc	status,2,c
  2472  000C2C  D7FB               	goto	l2942
  2473                           
  2474                           ; BSR set to: 0
  2475                           ;LED_BarGraph.c: 61: if (status == I2C1_MESSAGE_COMPLETE)
  2476                           
  2477                           ; BSR set to: 0
  2478  000C2E  0100               	movlb	0	; () banked
  2479  000C30  51AC               	movf	LEDblinkRate@status& (0+255),w,b
  2480  000C32  0100               	movlb	0	; () banked
  2481  000C34  B4D8               	btfsc	status,2,c
  2482  000C36  0012               	return	
  2483  000C38  D001               	goto	l2948
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;LED_BarGraph.c: 62: break;
  2487  000C3A  0012               	return	
  2488  000C3C                     l2948:
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;LED_BarGraph.c: 63: if (timeOut == 100)
  2492  000C3C  0E64               	movlw	100
  2493  000C3E  0100               	movlb	0	; () banked
  2494  000C40  19AA               	xorwf	LEDblinkRate@timeOut& (0+255),w,b
  2495  000C42  0100               	movlb	0	; () banked
  2496  000C44  11AB               	iorwf	(LEDblinkRate@timeOut+1)& (0+255),w,b
  2497  000C46  B4D8               	btfsc	status,2,c
  2498  000C48  0012               	return	
  2499  000C4A  D001               	goto	l2952
  2500                           
  2501                           ; BSR set to: 0
  2502                           ;LED_BarGraph.c: 64: break;
  2503  000C4C  0012               	return	
  2504  000C4E                     l2952:
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;LED_BarGraph.c: 65: if (status == I2C1_MESSAGE_FAIL)
  2508  000C4E  0100               	movlb	0	; () banked
  2509  000C50  05AC               	decf	LEDblinkRate@status& (0+255),w,b
  2510  000C52  B4D8               	btfsc	status,2,c
  2511  000C54  0012               	return	
  2512  000C56  D002               	goto	l2958
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;LED_BarGraph.c: 66: break;
  2516  000C58  0012               	return	
  2517                           
  2518                           ; BSR set to: 0
  2519  000C5A  D004               	goto	l2960
  2520  000C5C                     l2958:
  2521                           
  2522                           ; BSR set to: 0
  2523                           ;LED_BarGraph.c: 67: else
  2524                           ;LED_BarGraph.c: 68: timeOut++;
  2525  000C5C  0100               	movlb	0	; () banked
  2526  000C5E  4BAA               	infsnz	LEDblinkRate@timeOut& (0+255),f,b
  2527  000C60  2BAB               	incf	(LEDblinkRate@timeOut+1)& (0+255),f,b
  2528                           
  2529                           ; BSR set to: 0
  2530  000C62  D000               	goto	l2960
  2531  000C64                     l2960:
  2532                           
  2533                           ; BSR set to: 0
  2534  000C64  0100               	movlb	0	; () banked
  2535  000C66  05AC               	decf	LEDblinkRate@status& (0+255),w,b
  2536  000C68  A4D8               	btfss	status,2,c
  2537  000C6A  D7CB               	goto	l2940
  2538                           
  2539                           ; BSR set to: 0
  2540                           
  2541                           ; BSR set to: 0
  2542  000C6C  0012               	return		;funcret
  2543  000C6E                     __end_of_LEDblinkRate:
  2544                           	opt stack 0
  2545                           tblptru	equ	0xFF8
  2546                           tblptrh	equ	0xFF7
  2547                           tblptrl	equ	0xFF6
  2548                           tablat	equ	0xFF5
  2549                           prodh	equ	0xFF4
  2550                           prodl	equ	0xFF3
  2551                           intcon	equ	0xFF2
  2552                           intcon2	equ	0xFF1
  2553                           postinc0	equ	0xFEE
  2554                           wreg	equ	0xFE8
  2555                           indf2	equ	0xFDF
  2556                           postinc2	equ	0xFDE
  2557                           postdec2	equ	0xFDD
  2558                           fsr2h	equ	0xFDA
  2559                           fsr2l	equ	0xFD9
  2560                           status	equ	0xFD8
  2561                           
  2562 ;; *************** function _LEDBsetBrightness *****************
  2563 ;; Defined at:
  2564 ;;		line 11 in file "LED_BarGraph.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;  b               2    0[BANK0 ] int 
  2567 ;;  i2c_addr        1    2[BANK0 ] unsigned char 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  writeBuffer     2    3[BANK0 ] unsigned char [2]
  2570 ;;  timeOut         2    5[BANK0 ] unsigned int 
  2571 ;;  status          1    7[BANK0 ] enum E8852
  2572 ;; Return value:  Size  Location     Type
  2573 ;;		None               void
  2574 ;; Registers used:
  2575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2581 ;;      Params:         0       3       0       0       0       0       0
  2582 ;;      Locals:         0       5       0       0       0       0       0
  2583 ;;      Temps:          0       0       0       0       0       0       0
  2584 ;;      Totals:         0       8       0       0       0       0       0
  2585 ;;Total ram usage:        8 bytes
  2586 ;; Hardware stack levels used:    1
  2587 ;; Hardware stack levels required when called:    5
  2588 ;; This function calls:
  2589 ;;		_I2C1_MasterWrite
  2590 ;; This function is called by:
  2591 ;;		_LEDbegin
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text17
  2596  000C6E                     __ptext17:
  2597                           	opt stack 0
  2598  000C6E                     _LEDBsetBrightness:
  2599                           	opt stack 24
  2600                           
  2601                           ;LED_BarGraph.c: 12: if (b > 15) b = 15;
  2602                           
  2603                           ; BSR set to: 0
  2604                           ;incstack = 0
  2605  000C6E  0100               	movlb	0	; () banked
  2606  000C70  BFA6               	btfsc	(LEDBsetBrightness@b+1)& (0+255),7,b
  2607  000C72  D00E               	goto	l2902
  2608  000C74  0100               	movlb	0	; () banked
  2609  000C76  51A6               	movf	(LEDBsetBrightness@b+1)& (0+255),w,b
  2610  000C78  E105               	bnz	u2460
  2611  000C7A  0E10               	movlw	16
  2612  000C7C  0100               	movlb	0	; () banked
  2613  000C7E  5DA5               	subwf	LEDBsetBrightness@b& (0+255),w,b
  2614  000C80  A0D8               	btfss	status,0,c
  2615  000C82  D006               	goto	l2902
  2616  000C84                     u2460:
  2617                           
  2618                           ; BSR set to: 0
  2619  000C84  0E00               	movlw	0
  2620  000C86  0100               	movlb	0	; () banked
  2621  000C88  6FA6               	movwf	(LEDBsetBrightness@b+1)& (0+255),b
  2622  000C8A  0E0F               	movlw	15
  2623  000C8C  6FA5               	movwf	LEDBsetBrightness@b& (0+255),b
  2624  000C8E  D000               	goto	l2902
  2625  000C90                     l2902:
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;LED_BarGraph.c: 13: uint8_t writeBuffer[2];
  2629                           ;LED_BarGraph.c: 14: uint16_t timeOut;
  2630                           ;LED_BarGraph.c: 15: writeBuffer[0] = (0xE0 | b);
  2631  000C90  0100               	movlb	0	; () banked
  2632  000C92  51A5               	movf	LEDBsetBrightness@b& (0+255),w,b
  2633  000C94  09E0               	iorlw	224
  2634  000C96  0100               	movlb	0	; () banked
  2635  000C98  6FA8               	movwf	LEDBsetBrightness@writeBuffer& (0+255),b
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;LED_BarGraph.c: 16: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  2639  000C9A  0E02               	movlw	2
  2640  000C9C  0100               	movlb	0	; () banked
  2641  000C9E  6FAC               	movwf	LEDBsetBrightness@status& (0+255),b
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;LED_BarGraph.c: 18: timeOut = 0;
  2645  000CA0  0E00               	movlw	0
  2646  000CA2  0100               	movlb	0	; () banked
  2647  000CA4  6FAB               	movwf	(LEDBsetBrightness@timeOut+1)& (0+255),b
  2648  000CA6  0E00               	movlw	0
  2649  000CA8  6FAA               	movwf	LEDBsetBrightness@timeOut& (0+255),b
  2650                           
  2651                           ;LED_BarGraph.c: 19: while(status != I2C1_MESSAGE_FAIL)
  2652  000CAA  D031               	goto	l2928
  2653  000CAC                     l2908:
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;LED_BarGraph.c: 20: {
  2657                           ;LED_BarGraph.c: 22: I2C1_MasterWrite( &writeBuffer,
  2658                           ;LED_BarGraph.c: 23: 1,
  2659                           ;LED_BarGraph.c: 24: 0x70,
  2660                           ;LED_BarGraph.c: 25: &status);
  2661  000CAC  0EA8               	movlw	low LEDBsetBrightness@writeBuffer
  2662  000CAE  6E42               	movwf	I2C1_MasterWrite@pdata,c
  2663  000CB0  0E00               	movlw	high LEDBsetBrightness@writeBuffer
  2664  000CB2  6E43               	movwf	I2C1_MasterWrite@pdata+1,c
  2665  000CB4  0E01               	movlw	1
  2666  000CB6  6E44               	movwf	I2C1_MasterWrite@length,c
  2667  000CB8  0E00               	movlw	0
  2668  000CBA  6E46               	movwf	I2C1_MasterWrite@address+1,c
  2669  000CBC  0E70               	movlw	112
  2670  000CBE  6E45               	movwf	I2C1_MasterWrite@address,c
  2671  000CC0  0EAC               	movlw	low LEDBsetBrightness@status
  2672  000CC2  6E47               	movwf	I2C1_MasterWrite@pflag,c
  2673  000CC4  0E00               	movlw	high LEDBsetBrightness@status
  2674  000CC6  6E48               	movwf	I2C1_MasterWrite@pflag+1,c
  2675  000CC8  ECB2  F007         	call	_I2C1_MasterWrite	;wreg free
  2676                           
  2677                           ;LED_BarGraph.c: 28: while(status == I2C1_MESSAGE_PENDING);
  2678  000CCC  D000               	goto	l2910
  2679  000CCE                     l2910:
  2680  000CCE  0E02               	movlw	2
  2681  000CD0  0100               	movlb	0	; () banked
  2682  000CD2  19AC               	xorwf	LEDBsetBrightness@status& (0+255),w,b
  2683  000CD4  B4D8               	btfsc	status,2,c
  2684  000CD6  D7FB               	goto	l2910
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;LED_BarGraph.c: 30: if (status == I2C1_MESSAGE_COMPLETE)
  2688                           
  2689                           ; BSR set to: 0
  2690  000CD8  0100               	movlb	0	; () banked
  2691  000CDA  51AC               	movf	LEDBsetBrightness@status& (0+255),w,b
  2692  000CDC  0100               	movlb	0	; () banked
  2693  000CDE  B4D8               	btfsc	status,2,c
  2694  000CE0  0012               	return	
  2695  000CE2  D001               	goto	l2916
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;LED_BarGraph.c: 31: break;
  2699  000CE4  0012               	return	
  2700  000CE6                     l2916:
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;LED_BarGraph.c: 32: if (timeOut == 100)
  2704  000CE6  0E64               	movlw	100
  2705  000CE8  0100               	movlb	0	; () banked
  2706  000CEA  19AA               	xorwf	LEDBsetBrightness@timeOut& (0+255),w,b
  2707  000CEC  0100               	movlb	0	; () banked
  2708  000CEE  11AB               	iorwf	(LEDBsetBrightness@timeOut+1)& (0+255),w,b
  2709  000CF0  B4D8               	btfsc	status,2,c
  2710  000CF2  0012               	return	
  2711  000CF4  D001               	goto	l2920
  2712                           
  2713                           ; BSR set to: 0
  2714                           ;LED_BarGraph.c: 33: break;
  2715  000CF6  0012               	return	
  2716  000CF8                     l2920:
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;LED_BarGraph.c: 34: if (status == I2C1_MESSAGE_FAIL)
  2720  000CF8  0100               	movlb	0	; () banked
  2721  000CFA  05AC               	decf	LEDBsetBrightness@status& (0+255),w,b
  2722  000CFC  B4D8               	btfsc	status,2,c
  2723  000CFE  0012               	return	
  2724  000D00  D002               	goto	l2926
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;LED_BarGraph.c: 35: break;
  2728  000D02  0012               	return	
  2729                           
  2730                           ; BSR set to: 0
  2731  000D04  D004               	goto	l2928
  2732  000D06                     l2926:
  2733                           
  2734                           ; BSR set to: 0
  2735                           ;LED_BarGraph.c: 36: else
  2736                           ;LED_BarGraph.c: 37: timeOut++;
  2737  000D06  0100               	movlb	0	; () banked
  2738  000D08  4BAA               	infsnz	LEDBsetBrightness@timeOut& (0+255),f,b
  2739  000D0A  2BAB               	incf	(LEDBsetBrightness@timeOut+1)& (0+255),f,b
  2740                           
  2741                           ; BSR set to: 0
  2742  000D0C  D000               	goto	l2928
  2743  000D0E                     l2928:
  2744                           
  2745                           ; BSR set to: 0
  2746  000D0E  0100               	movlb	0	; () banked
  2747  000D10  05AC               	decf	LEDBsetBrightness@status& (0+255),w,b
  2748  000D12  A4D8               	btfss	status,2,c
  2749  000D14  D7CB               	goto	l2908
  2750                           
  2751                           ; BSR set to: 0
  2752                           
  2753                           ; BSR set to: 0
  2754  000D16  0012               	return		;funcret
  2755  000D18                     __end_of_LEDBsetBrightness:
  2756                           	opt stack 0
  2757                           tblptru	equ	0xFF8
  2758                           tblptrh	equ	0xFF7
  2759                           tblptrl	equ	0xFF6
  2760                           tablat	equ	0xFF5
  2761                           prodh	equ	0xFF4
  2762                           prodl	equ	0xFF3
  2763                           intcon	equ	0xFF2
  2764                           intcon2	equ	0xFF1
  2765                           postinc0	equ	0xFEE
  2766                           wreg	equ	0xFE8
  2767                           indf2	equ	0xFDF
  2768                           postinc2	equ	0xFDE
  2769                           postdec2	equ	0xFDD
  2770                           fsr2h	equ	0xFDA
  2771                           fsr2l	equ	0xFD9
  2772                           status	equ	0xFD8
  2773                           
  2774 ;; *************** function _I2C1_MasterWrite *****************
  2775 ;; Defined at:
  2776 ;;		line 551 in file "mcc_generated_files/i2c1.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;  pdata           2   29[COMRAM] PTR unsigned char 
  2779 ;;		 -> LEDwriteDisplay@writeBuffer(20), LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBu
      +ffer(2), 
  2780 ;;  length          1   31[COMRAM] unsigned char 
  2781 ;;  address         2   32[COMRAM] unsigned int 
  2782 ;;  pflag           2   34[COMRAM] PTR enum E8836
  2783 ;;		 -> LEDwriteDisplay@status(1), LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;		None
  2786 ;; Return value:  Size  Location     Type
  2787 ;;		None               void
  2788 ;; Registers used:
  2789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2795 ;;      Params:         7       0       0       0       0       0       0
  2796 ;;      Locals:         0       0       0       0       0       0       0
  2797 ;;      Temps:          0       0       0       0       0       0       0
  2798 ;;      Totals:         7       0       0       0       0       0       0
  2799 ;;Total ram usage:        7 bytes
  2800 ;; Hardware stack levels used:    1
  2801 ;; Hardware stack levels required when called:    4
  2802 ;; This function calls:
  2803 ;;		_I2C1_MasterTRBInsert
  2804 ;;		_I2C1_MasterWriteTRBBuild
  2805 ;; This function is called by:
  2806 ;;		_LEDBsetBrightness
  2807 ;;		_LEDblinkRate
  2808 ;;		_LEDbegin
  2809 ;;		_LEDwriteDisplay
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           	psect	text18
  2814  000F64                     __ptext18:
  2815                           	opt stack 0
  2816  000F64                     _I2C1_MasterWrite:
  2817                           	opt stack 24
  2818                           
  2819                           ;i2c1.c: 557: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
  2820                           ;i2c1.c: 560: if (i2c1_object.trStatus.s.full != 1)
  2821                           
  2822                           ; BSR set to: 0
  2823                           ;incstack = 0
  2824  000F64  B005               	btfsc	_i2c1_object+4,0,c
  2825  000F66  D01C               	goto	l2812
  2826                           
  2827                           ;i2c1.c: 561: {
  2828                           ;i2c1.c: 562: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
  2829  000F68  0E19               	movlw	low I2C1_MasterWrite@trBlock
  2830  000F6A  6E39               	movwf	I2C1_MasterWriteTRBBuild@ptrb,c
  2831  000F6C  0E00               	movlw	high I2C1_MasterWrite@trBlock
  2832  000F6E  6E3A               	movwf	I2C1_MasterWriteTRBBuild@ptrb+1,c
  2833  000F70  C042  F03B         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
  2834  000F74  C043  F03C         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
  2835  000F78  C044  F03D         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
  2836  000F7C  C045  F03E         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
  2837  000F80  C046  F03F         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
  2838  000F84  ECD8  F007         	call	_I2C1_MasterWriteTRBBuild	;wreg free
  2839                           
  2840                           ;i2c1.c: 563: I2C1_MasterTRBInsert(1, &trBlock, pflag);
  2841  000F88  0E19               	movlw	low I2C1_MasterWrite@trBlock
  2842  000F8A  6E39               	movwf	I2C1_MasterTRBInsert@ptrb_list,c
  2843  000F8C  0E00               	movlw	high I2C1_MasterWrite@trBlock
  2844  000F8E  6E3A               	movwf	I2C1_MasterTRBInsert@ptrb_list+1,c
  2845  000F90  C047  F03B         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
  2846  000F94  C048  F03C         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
  2847  000F98  0E01               	movlw	1
  2848  000F9A  EC8C  F006         	call	_I2C1_MasterTRBInsert
  2849                           
  2850                           ;i2c1.c: 564: }
  2851  000F9E  0012               	return	
  2852  000FA0                     l2812:
  2853                           
  2854                           ;i2c1.c: 565: else
  2855                           ;i2c1.c: 566: {
  2856                           ;i2c1.c: 567: *pflag = I2C1_MESSAGE_FAIL;
  2857  000FA0  C047  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
  2858  000FA4  C048  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
  2859  000FA8  0E01               	movlw	1
  2860  000FAA  6EDF               	movwf	indf2,c
  2861  000FAC  0012               	return	
  2862  000FAE  0012               	return		;funcret
  2863  000FB0                     __end_of_I2C1_MasterWrite:
  2864                           	opt stack 0
  2865                           tblptru	equ	0xFF8
  2866                           tblptrh	equ	0xFF7
  2867                           tblptrl	equ	0xFF6
  2868                           tablat	equ	0xFF5
  2869                           prodh	equ	0xFF4
  2870                           prodl	equ	0xFF3
  2871                           intcon	equ	0xFF2
  2872                           intcon2	equ	0xFF1
  2873                           postinc0	equ	0xFEE
  2874                           wreg	equ	0xFE8
  2875                           indf2	equ	0xFDF
  2876                           postinc2	equ	0xFDE
  2877                           postdec2	equ	0xFDD
  2878                           fsr2h	equ	0xFDA
  2879                           fsr2l	equ	0xFD9
  2880                           status	equ	0xFD8
  2881                           
  2882 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
  2883 ;; Defined at:
  2884 ;;		line 660 in file "mcc_generated_files/i2c1.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;  ptrb            2   20[COMRAM] PTR struct .
  2887 ;;		 -> I2C1_MasterWrite@trBlock(5), 
  2888 ;;  pdata           2   22[COMRAM] PTR unsigned char 
  2889 ;;		 -> LEDwriteDisplay@writeBuffer(20), LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBu
      +ffer(2), 
  2890 ;;  length          1   24[COMRAM] unsigned char 
  2891 ;;  address         2   25[COMRAM] unsigned int 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;		None
  2894 ;; Return value:  Size  Location     Type
  2895 ;;		None               void
  2896 ;; Registers used:
  2897 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2903 ;;      Params:         7       0       0       0       0       0       0
  2904 ;;      Locals:         0       0       0       0       0       0       0
  2905 ;;      Temps:          2       0       0       0       0       0       0
  2906 ;;      Totals:         9       0       0       0       0       0       0
  2907 ;;Total ram usage:        9 bytes
  2908 ;; Hardware stack levels used:    1
  2909 ;; Hardware stack levels required when called:    3
  2910 ;; This function calls:
  2911 ;;		Nothing
  2912 ;; This function is called by:
  2913 ;;		_I2C1_MasterWrite
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text19
  2918  000FB0                     __ptext19:
  2919                           	opt stack 0
  2920  000FB0                     _I2C1_MasterWriteTRBBuild:
  2921                           	opt stack 24
  2922                           
  2923                           ;i2c1.c: 666: ptrb->address = address << 1;
  2924                           
  2925                           ;incstack = 0
  2926  000FB0  C03E  F040         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
  2927  000FB4  C03F  F041         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
  2928  000FB8  90D8               	bcf	status,0,c
  2929  000FBA  3640               	rlcf	??_I2C1_MasterWriteTRBBuild,f,c
  2930  000FBC  3641               	rlcf	??_I2C1_MasterWriteTRBBuild+1,f,c
  2931  000FBE  C039  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
  2932  000FC2  C03A  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
  2933  000FC6  C040  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
  2934  000FCA  C041  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
  2935                           
  2936                           ;i2c1.c: 667: ptrb->length = length;
  2937  000FCE  EE20 F002          	lfsr	2,2
  2938  000FD2  5039               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
  2939  000FD4  26D9               	addwf	fsr2l,f,c
  2940  000FD6  503A               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
  2941  000FD8  22DA               	addwfc	fsr2h,f,c
  2942  000FDA  C03D  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
  2943                           
  2944                           ;i2c1.c: 668: ptrb->pbuffer = pdata;
  2945  000FDE  EE20 F003          	lfsr	2,3
  2946  000FE2  5039               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
  2947  000FE4  26D9               	addwf	fsr2l,f,c
  2948  000FE6  503A               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
  2949  000FE8  22DA               	addwfc	fsr2h,f,c
  2950  000FEA  C03B  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
  2951  000FEE  C03C  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
  2952  000FF2  0012               	return		;funcret
  2953  000FF4                     __end_of_I2C1_MasterWriteTRBBuild:
  2954                           	opt stack 0
  2955                           tblptru	equ	0xFF8
  2956                           tblptrh	equ	0xFF7
  2957                           tblptrl	equ	0xFF6
  2958                           tablat	equ	0xFF5
  2959                           prodh	equ	0xFF4
  2960                           prodl	equ	0xFF3
  2961                           intcon	equ	0xFF2
  2962                           intcon2	equ	0xFF1
  2963                           postinc0	equ	0xFEE
  2964                           wreg	equ	0xFE8
  2965                           indf2	equ	0xFDF
  2966                           postinc2	equ	0xFDE
  2967                           postdec2	equ	0xFDD
  2968                           fsr2h	equ	0xFDA
  2969                           fsr2l	equ	0xFD9
  2970                           status	equ	0xFD8
  2971                           
  2972 ;; *************** function _I2C1_MasterTRBInsert *****************
  2973 ;; Defined at:
  2974 ;;		line 594 in file "mcc_generated_files/i2c1.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;  count           1    wreg     unsigned char 
  2977 ;;  ptrb_list       2   20[COMRAM] PTR struct .
  2978 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
  2979 ;;  pflag           2   22[COMRAM] PTR enum E8836
  2980 ;;		 -> LEDwriteDisplay@status(1), LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;  count           1   25[COMRAM] unsigned char 
  2983 ;; Return value:  Size  Location     Type
  2984 ;;		None               void
  2985 ;; Registers used:
  2986 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2992 ;;      Params:         4       0       0       0       0       0       0
  2993 ;;      Locals:         1       0       0       0       0       0       0
  2994 ;;      Temps:          1       0       0       0       0       0       0
  2995 ;;      Totals:         6       0       0       0       0       0       0
  2996 ;;Total ram usage:        6 bytes
  2997 ;; Hardware stack levels used:    1
  2998 ;; Hardware stack levels required when called:    3
  2999 ;; This function calls:
  3000 ;;		Nothing
  3001 ;; This function is called by:
  3002 ;;		_I2C1_MasterWrite
  3003 ;;		_I2C1_MasterRead
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	text20
  3008  000D18                     __ptext20:
  3009                           	opt stack 0
  3010  000D18                     _I2C1_MasterTRBInsert:
  3011                           	opt stack 24
  3012                           
  3013                           ;incstack = 0
  3014                           ;I2C1_MasterTRBInsert@count stored from wreg
  3015  000D18  6E3E               	movwf	I2C1_MasterTRBInsert@count,c
  3016                           
  3017                           ;i2c1.c: 601: if (i2c1_object.trStatus.s.full != 1)
  3018  000D1A  B005               	btfsc	_i2c1_object+4,0,c
  3019  000D1C  D03A               	goto	l2800
  3020                           
  3021                           ;i2c1.c: 602: {
  3022                           ;i2c1.c: 603: *pflag = I2C1_MESSAGE_PENDING;
  3023  000D1E  C03B  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
  3024  000D22  C03C  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
  3025  000D26  0E02               	movlw	2
  3026  000D28  6EDF               	movwf	indf2,c
  3027                           
  3028                           ;i2c1.c: 605: i2c1_object.pTrTail->ptrb_list = ptrb_list;
  3029  000D2A  EE20 F001          	lfsr	2,1
  3030  000D2E  5001               	movf	_i2c1_object,w,c
  3031  000D30  26D9               	addwf	fsr2l,f,c
  3032  000D32  5002               	movf	_i2c1_object+1,w,c
  3033  000D34  22DA               	addwfc	fsr2h,f,c
  3034  000D36  C039  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
  3035  000D3A  C03A  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
  3036                           
  3037                           ;i2c1.c: 606: i2c1_object.pTrTail->count = count;
  3038  000D3E  C001  FFD9         	movff	_i2c1_object,fsr2l
  3039  000D42  C002  FFDA         	movff	_i2c1_object+1,fsr2h
  3040  000D46  C03E  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
  3041                           
  3042                           ;i2c1.c: 607: i2c1_object.pTrTail->pTrFlag = pflag;
  3043  000D4A  EE20 F003          	lfsr	2,3
  3044  000D4E  5001               	movf	_i2c1_object,w,c
  3045  000D50  26D9               	addwf	fsr2l,f,c
  3046  000D52  5002               	movf	_i2c1_object+1,w,c
  3047  000D54  22DA               	addwfc	fsr2h,f,c
  3048  000D56  C03B  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
  3049  000D5A  C03C  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
  3050                           
  3051                           ;i2c1.c: 608: i2c1_object.pTrTail++;
  3052  000D5E  0E05               	movlw	5
  3053  000D60  2601               	addwf	_i2c1_object,f,c
  3054  000D62  0E00               	movlw	0
  3055  000D64  2202               	addwfc	_i2c1_object+1,f,c
  3056                           
  3057                           ;i2c1.c: 611: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
  3058  000D66  0E23               	movlw	low (_i2c1_tr_queue+5)
  3059  000D68  1801               	xorwf	_i2c1_object,w,c
  3060  000D6A  E109               	bnz	l2796
  3061  000D6C  0E00               	movlw	high (_i2c1_tr_queue+5)
  3062  000D6E  1802               	xorwf	_i2c1_object+1,w,c
  3063  000D70  A4D8               	btfss	status,2,c
  3064  000D72  D005               	goto	l2796
  3065                           
  3066                           ;i2c1.c: 612: {
  3067                           ;i2c1.c: 614: i2c1_object.pTrTail = i2c1_tr_queue;
  3068  000D74  0E1E               	movlw	low _i2c1_tr_queue
  3069  000D76  6E01               	movwf	_i2c1_object,c
  3070  000D78  0E00               	movlw	high _i2c1_tr_queue
  3071  000D7A  6E02               	movwf	_i2c1_object+1,c
  3072  000D7C  D000               	goto	l2796
  3073  000D7E                     l2796:
  3074                           
  3075                           ;i2c1.c: 615: }
  3076                           ;i2c1.c: 619: i2c1_object.trStatus.s.empty = 0;
  3077  000D7E  9205               	bcf	_i2c1_object+4,1,c
  3078                           
  3079                           ;i2c1.c: 622: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
  3080  000D80  5001               	movf	_i2c1_object,w,c
  3081  000D82  1803               	xorwf	_i2c1_object+2,w,c
  3082  000D84  E10D               	bnz	l2802
  3083  000D86  5002               	movf	_i2c1_object+1,w,c
  3084  000D88  1804               	xorwf	_i2c1_object+3,w,c
  3085  000D8A  A4D8               	btfss	status,2,c
  3086  000D8C  D009               	goto	l2802
  3087                           
  3088                           ;i2c1.c: 623: {
  3089                           ;i2c1.c: 625: i2c1_object.trStatus.s.full = 1;
  3090  000D8E  8005               	bsf	_i2c1_object+4,0,c
  3091                           
  3092                           ;i2c1.c: 626: }
  3093                           ;i2c1.c: 628: }
  3094  000D90  D007               	goto	l2802
  3095  000D92                     l2800:
  3096                           
  3097                           ;i2c1.c: 629: else
  3098                           ;i2c1.c: 630: {
  3099                           ;i2c1.c: 631: *pflag = I2C1_MESSAGE_FAIL;
  3100  000D92  C03B  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
  3101  000D96  C03C  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
  3102  000D9A  0E01               	movlw	1
  3103  000D9C  6EDF               	movwf	indf2,c
  3104  000D9E  D000               	goto	l2802
  3105  000DA0                     l2802:
  3106                           
  3107                           ;i2c1.c: 632: }
  3108                           ;i2c1.c: 635: if (*pflag == I2C1_MESSAGE_PENDING)
  3109  000DA0  C03B  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
  3110  000DA4  C03C  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
  3111  000DA8  0E02               	movlw	2
  3112  000DAA  18DE               	xorwf	postinc2,w,c
  3113  000DAC  A4D8               	btfss	status,2,c
  3114  000DAE  0012               	return	
  3115                           
  3116                           ;i2c1.c: 636: {
  3117                           ;i2c1.c: 637: while(i2c1_state != S_MASTER_IDLE);
  3118  000DB0  D000               	goto	l2806
  3119  000DB2                     l2806:
  3120  000DB2  5017               	movf	_i2c1_state,w,c
  3121  000DB4  A4D8               	btfss	status,2,c
  3122  000DB6  D7FD               	goto	l2806
  3123                           
  3124                           ;i2c1.c: 638: {
  3125                           ;i2c1.c: 641: PIR1bits.SSP1IF = 1;
  3126  000DB8  869E               	bsf	3998,3,c	;volatile
  3127  000DBA  0012               	return	
  3128  000DBC  0012               	return		;funcret
  3129  000DBE                     __end_of_I2C1_MasterTRBInsert:
  3130                           	opt stack 0
  3131                           tblptru	equ	0xFF8
  3132                           tblptrh	equ	0xFF7
  3133                           tblptrl	equ	0xFF6
  3134                           tablat	equ	0xFF5
  3135                           prodh	equ	0xFF4
  3136                           prodl	equ	0xFF3
  3137                           intcon	equ	0xFF2
  3138                           intcon2	equ	0xFF1
  3139                           postinc0	equ	0xFEE
  3140                           wreg	equ	0xFE8
  3141                           indf2	equ	0xFDF
  3142                           postinc2	equ	0xFDE
  3143                           postdec2	equ	0xFDD
  3144                           fsr2h	equ	0xFDA
  3145                           fsr2l	equ	0xFD9
  3146                           status	equ	0xFD8
  3147                           
  3148 ;; *************** function _GetButtonState *****************
  3149 ;; Defined at:
  3150 ;;		line 71 in file "IO.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  btnnum          2   20[COMRAM] int 
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;		None
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      unsigned char 
  3157 ;; Registers used:
  3158 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3164 ;;      Params:         2       0       0       0       0       0       0
  3165 ;;      Locals:         0       0       0       0       0       0       0
  3166 ;;      Temps:          4       0       0       0       0       0       0
  3167 ;;      Totals:         6       0       0       0       0       0       0
  3168 ;;Total ram usage:        6 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; Hardware stack levels required when called:    3
  3171 ;; This function calls:
  3172 ;;		Nothing
  3173 ;; This function is called by:
  3174 ;;		_main
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           	psect	text21
  3179  001174                     __ptext21:
  3180                           	opt stack 0
  3181  001174                     _GetButtonState:
  3182                           	opt stack 27
  3183                           
  3184                           ;IO.c: 73: return butnarray[btnnum-1];
  3185                           
  3186                           ;incstack = 0
  3187  001174  0EFF               	movlw	255
  3188  001176  6E3B               	movwf	??_GetButtonState& (0+255),c
  3189  001178  0EFF               	movlw	255
  3190  00117A  6E3C               	movwf	(??_GetButtonState+1)& (0+255),c
  3191  00117C  C039  F03D         	movff	GetButtonState@btnnum,??_GetButtonState+2
  3192  001180  C03A  F03E         	movff	GetButtonState@btnnum+1,??_GetButtonState+3
  3193  001184  503B               	movf	??_GetButtonState,w,c
  3194  001186  263D               	addwf	??_GetButtonState+2,f,c
  3195  001188  503C               	movf	??_GetButtonState+1,w,c
  3196  00118A  223E               	addwfc	??_GetButtonState+3,f,c
  3197  00118C  0E88               	movlw	low _butnarray
  3198  00118E  243D               	addwf	??_GetButtonState+2,w,c
  3199  001190  6ED9               	movwf	fsr2l,c
  3200  001192  0E00               	movlw	high _butnarray
  3201  001194  203E               	addwfc	??_GetButtonState+3,w,c
  3202  001196  6EDA               	movwf	fsr2h,c
  3203  001198  50DF               	movf	indf2,w,c
  3204  00119A  0012               	return	
  3205  00119C  0012               	return		;funcret
  3206  00119E                     __end_of_GetButtonState:
  3207                           	opt stack 0
  3208                           tblptru	equ	0xFF8
  3209                           tblptrh	equ	0xFF7
  3210                           tblptrl	equ	0xFF6
  3211                           tablat	equ	0xFF5
  3212                           prodh	equ	0xFF4
  3213                           prodl	equ	0xFF3
  3214                           intcon	equ	0xFF2
  3215                           intcon2	equ	0xFF1
  3216                           postinc0	equ	0xFEE
  3217                           wreg	equ	0xFE8
  3218                           indf2	equ	0xFDF
  3219                           postinc2	equ	0xFDE
  3220                           postdec2	equ	0xFDD
  3221                           fsr2h	equ	0xFDA
  3222                           fsr2l	equ	0xFD9
  3223                           status	equ	0xFD8
  3224                           
  3225 ;; *************** function _Delay *****************
  3226 ;; Defined at:
  3227 ;;		line 103 in file "main.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;  wait            2   20[COMRAM] int 
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;  x               2   23[COMRAM] int 
  3232 ;; Return value:  Size  Location     Type
  3233 ;;		None               void
  3234 ;; Registers used:
  3235 ;;		wreg, status,2, status,0
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3241 ;;      Params:         2       0       0       0       0       0       0
  3242 ;;      Locals:         2       0       0       0       0       0       0
  3243 ;;      Temps:          1       0       0       0       0       0       0
  3244 ;;      Totals:         5       0       0       0       0       0       0
  3245 ;;Total ram usage:        5 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; Hardware stack levels required when called:    3
  3248 ;; This function calls:
  3249 ;;		Nothing
  3250 ;; This function is called by:
  3251 ;;		_main
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text22
  3256  0010B0                     __ptext22:
  3257                           	opt stack 0
  3258  0010B0                     _Delay:
  3259                           	opt stack 27
  3260                           
  3261                           ;main.c: 105: int x;
  3262                           ;main.c: 106: for(x = 0;x<wait;x++)
  3263                           
  3264                           ;incstack = 0
  3265  0010B0  0E00               	movlw	0
  3266  0010B2  6E3D               	movwf	Delay@x+1,c
  3267  0010B4  0E00               	movlw	0
  3268  0010B6  6E3C               	movwf	Delay@x,c
  3269  0010B8  D00A               	goto	l446
  3270  0010BA                     l3228:
  3271                           
  3272                           ;main.c: 107: {
  3273                           ;main.c: 108: _delay((unsigned long)((1)*(16000000/4000.0)));
  3274  0010BA  0E06               	movlw	6
  3275  0010BC  6E3B               	movwf	??_Delay& (0+255),c
  3276  0010BE  0E30               	movlw	48
  3277  0010C0                     u3177:
  3278  0010C0  2EE8               	decfsz	wreg,f,c
  3279  0010C2  D7FE               	goto	u3177
  3280  0010C4  2E3B               	decfsz	??_Delay& (0+255),f,c
  3281  0010C6  D7FC               	goto	u3177
  3282  0010C8  D000               	nop2	
  3283  0010CA  4A3C               	infsnz	Delay@x,f,c
  3284  0010CC  2A3D               	incf	Delay@x+1,f,c
  3285  0010CE                     l446:
  3286  0010CE  5039               	movf	Delay@wait,w,c
  3287  0010D0  5C3C               	subwf	Delay@x,w,c
  3288  0010D2  503D               	movf	Delay@x+1,w,c
  3289  0010D4  0A80               	xorlw	128
  3290  0010D6  6E3B               	movwf	??_Delay& (0+255),c
  3291  0010D8  503A               	movf	Delay@wait+1,w,c
  3292  0010DA  0A80               	xorlw	128
  3293  0010DC  583B               	subwfb	??_Delay& (0+255),w,c
  3294  0010DE  A0D8               	btfss	status,0,c
  3295  0010E0  D7EC               	goto	l3228
  3296  0010E2  0012               	return		;funcret
  3297  0010E4                     __end_of_Delay:
  3298                           	opt stack 0
  3299                           tblptru	equ	0xFF8
  3300                           tblptrh	equ	0xFF7
  3301                           tblptrl	equ	0xFF6
  3302                           tablat	equ	0xFF5
  3303                           prodh	equ	0xFF4
  3304                           prodl	equ	0xFF3
  3305                           intcon	equ	0xFF2
  3306                           intcon2	equ	0xFF1
  3307                           postinc0	equ	0xFEE
  3308                           wreg	equ	0xFE8
  3309                           indf2	equ	0xFDF
  3310                           postinc2	equ	0xFDE
  3311                           postdec2	equ	0xFDD
  3312                           fsr2h	equ	0xFDA
  3313                           fsr2l	equ	0xFD9
  3314                           status	equ	0xFD8
  3315                           
  3316 ;; *************** function _INTERRUPT_InterruptManager *****************
  3317 ;; Defined at:
  3318 ;;		line 73 in file "mcc_generated_files/interrupt_manager.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;		None
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;		None
  3323 ;; Return value:  Size  Location     Type
  3324 ;;		None               void
  3325 ;; Registers used:
  3326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3332 ;;      Params:         0       0       0       0       0       0       0
  3333 ;;      Locals:         0       0       0       0       0       0       0
  3334 ;;      Temps:         14       0       0       0       0       0       0
  3335 ;;      Totals:        14       0       0       0       0       0       0
  3336 ;;Total ram usage:       14 bytes
  3337 ;; Hardware stack levels used:    1
  3338 ;; Hardware stack levels required when called:    2
  3339 ;; This function calls:
  3340 ;;		_ADC_ISR
  3341 ;;		_EUSART1_Receive_ISR
  3342 ;;		_EUSART1_Transmit_ISR
  3343 ;;		_I2C1_BusCollisionISR
  3344 ;;		_I2C1_ISR
  3345 ;;		_TMR0_ISR
  3346 ;; This function is called by:
  3347 ;;		Interrupt level 2
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           	psect	intcode
  3352  000008                     __pintcode:
  3353                           	opt stack 0
  3354  000008                     _INTERRUPT_InterruptManager:
  3355                           	opt stack 24
  3356                           
  3357                           ;incstack = 0
  3358  000008  CFFA F02B          	movff	pclath,??_INTERRUPT_InterruptManager
  3359  00000C  CFFB F02C          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3360  000010  CFE9 F02D          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  3361  000014  CFEA F02E          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  3362  000018  CFE1 F02F          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  3363  00001C  CFE2 F030          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  3364  000020  CFD9 F031          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  3365  000024  CFDA F032          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  3366  000028  CFF3 F033          	movff	prodl,??_INTERRUPT_InterruptManager+8
  3367  00002C  CFF4 F034          	movff	prodh,??_INTERRUPT_InterruptManager+9
  3368  000030  CFF6 F035          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  3369  000034  CFF7 F036          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  3370  000038  CFF8 F037          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  3371  00003C  CFF5 F038          	movff	tablat,??_INTERRUPT_InterruptManager+13
  3372                           
  3373                           ;interrupt_manager.c: 76: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  3374  000040  BA9D               	btfsc	3997,5,c	;volatile
  3375  000042  AA9E               	btfss	3998,5,c	;volatile
  3376  000044  D003               	goto	i2l378
  3377                           
  3378                           ;interrupt_manager.c: 77: {
  3379                           ;interrupt_manager.c: 78: EUSART1_Receive_ISR();
  3380  000046  EC8B  F008         	call	_EUSART1_Receive_ISR	;wreg free
  3381                           
  3382                           ;interrupt_manager.c: 79: }
  3383  00004A  D01E               	goto	i2l390
  3384  00004C                     i2l378:
  3385                           
  3386                           ;interrupt_manager.c: 80: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  3387  00004C  B89D               	btfsc	3997,4,c	;volatile
  3388  00004E  A89E               	btfss	3998,4,c	;volatile
  3389  000050  D003               	goto	i2l380
  3390                           
  3391                           ;interrupt_manager.c: 81: {
  3392                           ;interrupt_manager.c: 82: EUSART1_Transmit_ISR();
  3393  000052  EC72  F008         	call	_EUSART1_Transmit_ISR	;wreg free
  3394                           
  3395                           ;interrupt_manager.c: 83: }
  3396  000056  D018               	goto	i2l390
  3397  000058                     i2l380:
  3398                           
  3399                           ;interrupt_manager.c: 84: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  3400  000058  BAF2               	btfsc	intcon,5,c	;volatile
  3401  00005A  A4F2               	btfss	intcon,2,c	;volatile
  3402  00005C  D003               	goto	i2l382
  3403                           
  3404                           ;interrupt_manager.c: 85: {
  3405                           ;interrupt_manager.c: 86: TMR0_ISR();
  3406  00005E  EC0D  F007         	call	_TMR0_ISR	;wreg free
  3407                           
  3408                           ;interrupt_manager.c: 87: }
  3409  000062  D012               	goto	i2l390
  3410  000064                     i2l382:
  3411                           
  3412                           ;interrupt_manager.c: 88: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  3413  000064  BC9D               	btfsc	3997,6,c	;volatile
  3414  000066  AC9E               	btfss	3998,6,c	;volatile
  3415  000068  D003               	goto	i2l384
  3416                           
  3417                           ;interrupt_manager.c: 89: {
  3418                           ;interrupt_manager.c: 90: ADC_ISR();
  3419  00006A  EC30  F009         	call	_ADC_ISR	;wreg free
  3420                           
  3421                           ;interrupt_manager.c: 91: }
  3422  00006E  D00C               	goto	i2l390
  3423  000070                     i2l384:
  3424                           
  3425                           ;interrupt_manager.c: 92: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
  3426  000070  B69D               	btfsc	3997,3,c	;volatile
  3427  000072  A69E               	btfss	3998,3,c	;volatile
  3428  000074  D003               	goto	i2l386
  3429                           
  3430                           ;interrupt_manager.c: 93: {
  3431                           ;interrupt_manager.c: 94: I2C1_ISR();
  3432  000076  EC0E  F003         	call	_I2C1_ISR	;wreg free
  3433                           
  3434                           ;interrupt_manager.c: 95: }
  3435  00007A  D006               	goto	i2l390
  3436  00007C                     i2l386:
  3437                           
  3438                           ;interrupt_manager.c: 96: else if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  3439  00007C  B6A0               	btfsc	4000,3,c	;volatile
  3440  00007E  A6A1               	btfss	4001,3,c	;volatile
  3441  000080  D003               	goto	i2l390
  3442                           
  3443                           ;interrupt_manager.c: 97: {
  3444                           ;interrupt_manager.c: 98: I2C1_BusCollisionISR();
  3445  000082  EC32  F009         	call	_I2C1_BusCollisionISR	;wreg free
  3446                           
  3447                           ;interrupt_manager.c: 100: else
  3448                           ;interrupt_manager.c: 101: {
  3449                           
  3450                           ;interrupt_manager.c: 99: }
  3451  000086  D000               	goto	i2l390
  3452  000088                     i2l390:
  3453  000088  C038  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  3454  00008C  C037  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  3455  000090  C036  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  3456  000094  C035  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  3457  000098  C034  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  3458  00009C  C033  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  3459  0000A0  C032  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  3460  0000A4  C031  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  3461  0000A8  C030  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  3462  0000AC  C02F  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  3463  0000B0  C02E  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  3464  0000B4  C02D  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  3465  0000B8  C02C  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3466  0000BC  C02B  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3467  0000C0  0011               	retfie		f
  3468  0000C2                     __end_of_INTERRUPT_InterruptManager:
  3469                           	opt stack 0
  3470                           pclatu	equ	0xFFB
  3471                           pclath	equ	0xFFA
  3472                           tblptru	equ	0xFF8
  3473                           tblptrh	equ	0xFF7
  3474                           tblptrl	equ	0xFF6
  3475                           tablat	equ	0xFF5
  3476                           prodh	equ	0xFF4
  3477                           prodl	equ	0xFF3
  3478                           intcon	equ	0xFF2
  3479                           intcon2	equ	0xFF1
  3480                           postinc0	equ	0xFEE
  3481                           fsr0h	equ	0xFEA
  3482                           fsr0l	equ	0xFE9
  3483                           wreg	equ	0xFE8
  3484                           fsr1h	equ	0xFE2
  3485                           fsr1l	equ	0xFE1
  3486                           indf2	equ	0xFDF
  3487                           postinc2	equ	0xFDE
  3488                           postdec2	equ	0xFDD
  3489                           fsr2h	equ	0xFDA
  3490                           fsr2l	equ	0xFD9
  3491                           status	equ	0xFD8
  3492                           
  3493 ;; *************** function _TMR0_ISR *****************
  3494 ;; Defined at:
  3495 ;;		line 89 in file "mcc_generated_files/tmr0.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;		None
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;  x               2    4[COMRAM] int 
  3500 ;; Return value:  Size  Location     Type
  3501 ;;		None               void
  3502 ;; Registers used:
  3503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3509 ;;      Params:         0       0       0       0       0       0       0
  3510 ;;      Locals:         2       0       0       0       0       0       0
  3511 ;;      Temps:          0       0       0       0       0       0       0
  3512 ;;      Totals:         2       0       0       0       0       0       0
  3513 ;;Total ram usage:        2 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; Hardware stack levels required when called:    1
  3516 ;; This function calls:
  3517 ;;		_ReadButtonState
  3518 ;;		_TMR0_CallBack
  3519 ;; This function is called by:
  3520 ;;		_INTERRUPT_InterruptManager
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524                           	psect	text24
  3525  000E1A                     __ptext24:
  3526                           	opt stack 0
  3527  000E1A                     _TMR0_ISR:
  3528                           	opt stack 24
  3529                           
  3530                           ;tmr0.c: 91: static volatile uint16_t CountCallBack = 0;
  3531                           ;tmr0.c: 94: INTCONbits.TMR0IF = 0;
  3532                           
  3533                           ;incstack = 0
  3534  000E1A  94F2               	bcf	intcon,2,c	;volatile
  3535                           
  3536                           ;tmr0.c: 98: TMR0H = timer0ReloadVal16bit >> 8;
  3537  000E1C  504A               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
  3538  000E1E  6ED7               	movwf	4055,c	;volatile
  3539                           
  3540                           ;tmr0.c: 99: TMR0L = (uint8_t) timer0ReloadVal16bit;
  3541  000E20  C049  FFD6         	movff	_timer0ReloadVal16bit,4054	;volatile
  3542                           
  3543                           ;tmr0.c: 101: for(int x = 0;x<8;x++)
  3544  000E24  0E00               	movlw	0
  3545  000E26  6E2A               	movwf	TMR0_ISR@x+1,c
  3546  000E28  0E00               	movlw	0
  3547  000E2A  6E29               	movwf	TMR0_ISR@x,c
  3548  000E2C                     i2l2426:
  3549  000E2C  BE2A               	btfsc	TMR0_ISR@x+1,7,c
  3550  000E2E  D008               	goto	i2l2430
  3551  000E30  502A               	movf	TMR0_ISR@x+1,w,c
  3552  000E32  E110               	bnz	i2l2436
  3553  000E34  0E08               	movlw	8
  3554  000E36  5C29               	subwf	TMR0_ISR@x,w,c
  3555  000E38  B0D8               	btfsc	status,0,c
  3556  000E3A  D00C               	goto	i2l2436
  3557  000E3C  D001               	goto	i2l2430
  3558  000E3E  D00A               	goto	i2l2436
  3559  000E40                     i2l2430:
  3560                           
  3561                           ;tmr0.c: 102: {
  3562                           ;tmr0.c: 103: ReadButtonState(x);
  3563  000E40  C029  F025         	movff	TMR0_ISR@x,ReadButtonState@btnnum
  3564  000E44  C02A  F026         	movff	TMR0_ISR@x+1,ReadButtonState@btnnum+1
  3565  000E48  ECFF  F004         	call	_ReadButtonState	;wreg free
  3566  000E4C  4A29               	infsnz	TMR0_ISR@x,f,c
  3567  000E4E  2A2A               	incf	TMR0_ISR@x+1,f,c
  3568  000E50  D7ED               	goto	i2l2426
  3569  000E52  D000               	goto	i2l2436
  3570  000E54                     i2l2436:
  3571                           
  3572                           ;tmr0.c: 104: }
  3573                           ;tmr0.c: 107: if (++CountCallBack >= 5)
  3574  000E54  4A0A               	infsnz	TMR0_ISR@CountCallBack,f,c	;volatile
  3575  000E56  2A0B               	incf	TMR0_ISR@CountCallBack+1,f,c	;volatile
  3576  000E58  500B               	movf	TMR0_ISR@CountCallBack+1,w,c	;volatile
  3577  000E5A  E104               	bnz	i2u175_40
  3578  000E5C  0E05               	movlw	5
  3579  000E5E  5C0A               	subwf	TMR0_ISR@CountCallBack,w,c	;volatile
  3580  000E60  A0D8               	btfss	status,0,c
  3581  000E62  0012               	return	
  3582  000E64                     i2u175_40:
  3583                           
  3584                           ;tmr0.c: 108: {
  3585                           ;tmr0.c: 110: TMR0_CallBack();
  3586  000E64  EC2B  F009         	call	_TMR0_CallBack	;wreg free
  3587                           
  3588                           ;tmr0.c: 113: CountCallBack = 0;
  3589  000E68  0E00               	movlw	0
  3590  000E6A  6E0B               	movwf	TMR0_ISR@CountCallBack+1,c	;volatile
  3591  000E6C  0E00               	movlw	0
  3592  000E6E  6E0A               	movwf	TMR0_ISR@CountCallBack,c	;volatile
  3593  000E70  0012               	return	
  3594  000E72  0012               	return		;funcret
  3595  000E74                     __end_of_TMR0_ISR:
  3596                           	opt stack 0
  3597                           pclatu	equ	0xFFB
  3598                           pclath	equ	0xFFA
  3599                           tblptru	equ	0xFF8
  3600                           tblptrh	equ	0xFF7
  3601                           tblptrl	equ	0xFF6
  3602                           tablat	equ	0xFF5
  3603                           prodh	equ	0xFF4
  3604                           prodl	equ	0xFF3
  3605                           intcon	equ	0xFF2
  3606                           intcon2	equ	0xFF1
  3607                           postinc0	equ	0xFEE
  3608                           fsr0h	equ	0xFEA
  3609                           fsr0l	equ	0xFE9
  3610                           wreg	equ	0xFE8
  3611                           fsr1h	equ	0xFE2
  3612                           fsr1l	equ	0xFE1
  3613                           indf2	equ	0xFDF
  3614                           postinc2	equ	0xFDE
  3615                           postdec2	equ	0xFDD
  3616                           fsr2h	equ	0xFDA
  3617                           fsr2l	equ	0xFD9
  3618                           status	equ	0xFD8
  3619                           
  3620 ;; *************** function _TMR0_CallBack *****************
  3621 ;; Defined at:
  3622 ;;		line 119 in file "mcc_generated_files/tmr0.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;		None
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;		None
  3627 ;; Return value:  Size  Location     Type
  3628 ;;		None               void
  3629 ;; Registers used:
  3630 ;;		None
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3636 ;;      Params:         0       0       0       0       0       0       0
  3637 ;;      Locals:         0       0       0       0       0       0       0
  3638 ;;      Temps:          0       0       0       0       0       0       0
  3639 ;;      Totals:         0       0       0       0       0       0       0
  3640 ;;Total ram usage:        0 bytes
  3641 ;; Hardware stack levels used:    1
  3642 ;; This function calls:
  3643 ;;		Nothing
  3644 ;; This function is called by:
  3645 ;;		_TMR0_ISR
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text25
  3650  001256                     __ptext25:
  3651                           	opt stack 0
  3652  001256                     _TMR0_CallBack:
  3653                           	opt stack 24
  3654                           
  3655                           ;incstack = 0
  3656                           ;tmr0.c: 121: do { LATA3 = ~LATA3; } while(0);
  3657  001256  7689               	btg	3977,3,c	;volatile
  3658  001258  0012               	return	
  3659  00125A  0012               	return		;funcret
  3660  00125C                     __end_of_TMR0_CallBack:
  3661                           	opt stack 0
  3662                           pclatu	equ	0xFFB
  3663                           pclath	equ	0xFFA
  3664                           tblptru	equ	0xFF8
  3665                           tblptrh	equ	0xFF7
  3666                           tblptrl	equ	0xFF6
  3667                           tablat	equ	0xFF5
  3668                           prodh	equ	0xFF4
  3669                           prodl	equ	0xFF3
  3670                           intcon	equ	0xFF2
  3671                           intcon2	equ	0xFF1
  3672                           postinc0	equ	0xFEE
  3673                           fsr0h	equ	0xFEA
  3674                           fsr0l	equ	0xFE9
  3675                           wreg	equ	0xFE8
  3676                           fsr1h	equ	0xFE2
  3677                           fsr1l	equ	0xFE1
  3678                           indf2	equ	0xFDF
  3679                           postinc2	equ	0xFDE
  3680                           postdec2	equ	0xFDD
  3681                           fsr2h	equ	0xFDA
  3682                           fsr2l	equ	0xFD9
  3683                           status	equ	0xFD8
  3684                           
  3685 ;; *************** function _ReadButtonState *****************
  3686 ;; Defined at:
  3687 ;;		line 39 in file "IO.c"
  3688 ;; Parameters:    Size  Location     Type
  3689 ;;  btnnum          2    0[COMRAM] int 
  3690 ;; Auto vars:     Size  Location     Type
  3691 ;;		None
  3692 ;; Return value:  Size  Location     Type
  3693 ;;		None               void
  3694 ;; Registers used:
  3695 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3701 ;;      Params:         2       0       0       0       0       0       0
  3702 ;;      Locals:         0       0       0       0       0       0       0
  3703 ;;      Temps:          2       0       0       0       0       0       0
  3704 ;;      Totals:         4       0       0       0       0       0       0
  3705 ;;Total ram usage:        4 bytes
  3706 ;; Hardware stack levels used:    1
  3707 ;; This function calls:
  3708 ;;		Nothing
  3709 ;; This function is called by:
  3710 ;;		_TMR0_ISR
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           	psect	text26
  3715  0009FE                     __ptext26:
  3716                           	opt stack 0
  3717  0009FE                     _ReadButtonState:
  3718                           	opt stack 24
  3719                           
  3720                           ;IO.c: 41: switch (btnnum)
  3721                           
  3722                           ;incstack = 0
  3723  0009FE  D068               	goto	i2l2132
  3724  000A00                     i2l2114:
  3725                           
  3726                           ;IO.c: 44: butnarray[btnnum] = PORTDbits.RD5;
  3727  000A00  0E88               	movlw	low _butnarray
  3728  000A02  2425               	addwf	ReadButtonState@btnnum,w,c
  3729  000A04  6ED9               	movwf	fsr2l,c
  3730  000A06  0E00               	movlw	high _butnarray
  3731  000A08  2026               	addwfc	ReadButtonState@btnnum+1,w,c
  3732  000A0A  6EDA               	movwf	fsr2h,c
  3733  000A0C  AA83               	btfss	3971,5,c	;volatile
  3734  000A0E  D002               	goto	i2u126_40
  3735  000A10  0E01               	movlw	1
  3736  000A12  D001               	goto	i2u126_46
  3737  000A14                     i2u126_40:
  3738  000A14  0E00               	movlw	0
  3739  000A16                     i2u126_46:
  3740  000A16  6EDF               	movwf	indf2,c
  3741                           
  3742                           ;IO.c: 45: break;
  3743  000A18  0012               	return	
  3744  000A1A                     i2l2116:
  3745                           
  3746                           ;IO.c: 47: butnarray[btnnum] = PORTBbits.RB0;
  3747  000A1A  0E88               	movlw	low _butnarray
  3748  000A1C  2425               	addwf	ReadButtonState@btnnum,w,c
  3749  000A1E  6ED9               	movwf	fsr2l,c
  3750  000A20  0E00               	movlw	high _butnarray
  3751  000A22  2026               	addwfc	ReadButtonState@btnnum+1,w,c
  3752  000A24  6EDA               	movwf	fsr2h,c
  3753  000A26  A081               	btfss	3969,0,c	;volatile
  3754  000A28  D002               	goto	i2u127_40
  3755  000A2A  0E01               	movlw	1
  3756  000A2C  D001               	goto	i2u127_46
  3757  000A2E                     i2u127_40:
  3758  000A2E  0E00               	movlw	0
  3759  000A30                     i2u127_46:
  3760  000A30  6EDF               	movwf	indf2,c
  3761                           
  3762                           ;IO.c: 48: break;
  3763  000A32  0012               	return	
  3764  000A34                     i2l2118:
  3765                           
  3766                           ;IO.c: 50: butnarray[btnnum] = PORTBbits.RB1;
  3767  000A34  0E88               	movlw	low _butnarray
  3768  000A36  2425               	addwf	ReadButtonState@btnnum,w,c
  3769  000A38  6ED9               	movwf	fsr2l,c
  3770  000A3A  0E00               	movlw	high _butnarray
  3771  000A3C  2026               	addwfc	ReadButtonState@btnnum+1,w,c
  3772  000A3E  6EDA               	movwf	fsr2h,c
  3773  000A40  A281               	btfss	3969,1,c	;volatile
  3774  000A42  D002               	goto	i2u128_40
  3775  000A44  0E01               	movlw	1
  3776  000A46  D001               	goto	i2u128_46
  3777  000A48                     i2u128_40:
  3778  000A48  0E00               	movlw	0
  3779  000A4A                     i2u128_46:
  3780  000A4A  6EDF               	movwf	indf2,c
  3781                           
  3782                           ;IO.c: 51: break;
  3783  000A4C  0012               	return	
  3784  000A4E                     i2l2120:
  3785                           
  3786                           ;IO.c: 53: butnarray[btnnum] = PORTBbits.RB2;
  3787  000A4E  0E88               	movlw	low _butnarray
  3788  000A50  2425               	addwf	ReadButtonState@btnnum,w,c
  3789  000A52  6ED9               	movwf	fsr2l,c
  3790  000A54  0E00               	movlw	high _butnarray
  3791  000A56  2026               	addwfc	ReadButtonState@btnnum+1,w,c
  3792  000A58  6EDA               	movwf	fsr2h,c
  3793  000A5A  A481               	btfss	3969,2,c	;volatile
  3794  000A5C  D002               	goto	i2u129_40
  3795  000A5E  0E01               	movlw	1
  3796  000A60  D001               	goto	i2u129_46
  3797  000A62                     i2u129_40:
  3798  000A62  0E00               	movlw	0
  3799  000A64                     i2u129_46:
  3800  000A64  6EDF               	movwf	indf2,c
  3801                           
  3802                           ;IO.c: 54: break;
  3803  000A66  0012               	return	
  3804  000A68                     i2l2122:
  3805                           
  3806                           ;IO.c: 56: butnarray[btnnum] = PORTBbits.RB4;
  3807  000A68  0E88               	movlw	low _butnarray
  3808  000A6A  2425               	addwf	ReadButtonState@btnnum,w,c
  3809  000A6C  6ED9               	movwf	fsr2l,c
  3810  000A6E  0E00               	movlw	high _butnarray
  3811  000A70  2026               	addwfc	ReadButtonState@btnnum+1,w,c
  3812  000A72  6EDA               	movwf	fsr2h,c
  3813  000A74  A881               	btfss	3969,4,c	;volatile
  3814  000A76  D002               	goto	i2u130_40
  3815  000A78  0E01               	movlw	1
  3816  000A7A  D001               	goto	i2u130_46
  3817  000A7C                     i2u130_40:
  3818  000A7C  0E00               	movlw	0
  3819  000A7E                     i2u130_46:
  3820  000A7E  6EDF               	movwf	indf2,c
  3821                           
  3822                           ;IO.c: 57: break;
  3823  000A80  0012               	return	
  3824  000A82                     i2l2124:
  3825                           
  3826                           ;IO.c: 59: butnarray[btnnum] = PORTAbits.RA0;
  3827  000A82  0E88               	movlw	low _butnarray
  3828  000A84  2425               	addwf	ReadButtonState@btnnum,w,c
  3829  000A86  6ED9               	movwf	fsr2l,c
  3830  000A88  0E00               	movlw	high _butnarray
  3831  000A8A  2026               	addwfc	ReadButtonState@btnnum+1,w,c
  3832  000A8C  6EDA               	movwf	fsr2h,c
  3833  000A8E  A080               	btfss	3968,0,c	;volatile
  3834  000A90  D002               	goto	i2u131_40
  3835  000A92  0E01               	movlw	1
  3836  000A94  D001               	goto	i2u131_46
  3837  000A96                     i2u131_40:
  3838  000A96  0E00               	movlw	0
  3839  000A98                     i2u131_46:
  3840  000A98  6EDF               	movwf	indf2,c
  3841                           
  3842                           ;IO.c: 60: break;
  3843  000A9A  0012               	return	
  3844  000A9C                     i2l2126:
  3845                           
  3846                           ;IO.c: 62: butnarray[btnnum] = PORTAbits.RA1;
  3847  000A9C  0E88               	movlw	low _butnarray
  3848  000A9E  2425               	addwf	ReadButtonState@btnnum,w,c
  3849  000AA0  6ED9               	movwf	fsr2l,c
  3850  000AA2  0E00               	movlw	high _butnarray
  3851  000AA4  2026               	addwfc	ReadButtonState@btnnum+1,w,c
  3852  000AA6  6EDA               	movwf	fsr2h,c
  3853  000AA8  A280               	btfss	3968,1,c	;volatile
  3854  000AAA  D002               	goto	i2u132_40
  3855  000AAC  0E01               	movlw	1
  3856  000AAE  D001               	goto	i2u132_46
  3857  000AB0                     i2u132_40:
  3858  000AB0  0E00               	movlw	0
  3859  000AB2                     i2u132_46:
  3860  000AB2  6EDF               	movwf	indf2,c
  3861                           
  3862                           ;IO.c: 63: break;
  3863  000AB4  0012               	return	
  3864  000AB6                     i2l2128:
  3865                           
  3866                           ;IO.c: 65: butnarray[btnnum] = PORTAbits.RA2;
  3867  000AB6  0E88               	movlw	low _butnarray
  3868  000AB8  2425               	addwf	ReadButtonState@btnnum,w,c
  3869  000ABA  6ED9               	movwf	fsr2l,c
  3870  000ABC  0E00               	movlw	high _butnarray
  3871  000ABE  2026               	addwfc	ReadButtonState@btnnum+1,w,c
  3872  000AC0  6EDA               	movwf	fsr2h,c
  3873  000AC2  A480               	btfss	3968,2,c	;volatile
  3874  000AC4  D002               	goto	i2u133_40
  3875  000AC6  0E01               	movlw	1
  3876  000AC8  D001               	goto	i2u133_46
  3877  000ACA                     i2u133_40:
  3878  000ACA  0E00               	movlw	0
  3879  000ACC                     i2u133_46:
  3880  000ACC  6EDF               	movwf	indf2,c
  3881                           
  3882                           ;IO.c: 68: }
  3883                           
  3884                           ;IO.c: 66: break;
  3885  000ACE  0012               	return	
  3886  000AD0                     i2l2132:
  3887  000AD0  C025  F027         	movff	ReadButtonState@btnnum,??_ReadButtonState
  3888  000AD4  C026  F028         	movff	ReadButtonState@btnnum+1,??_ReadButtonState+1
  3889                           
  3890                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3891                           ; Switch size 1, requested type "space"
  3892                           ; Number of cases is 1, Range of values is 0 to 0
  3893                           ; switch strategies available:
  3894                           ; Name         Instructions Cycles
  3895                           ; simple_byte            4     3 (average)
  3896                           ;	Chosen strategy is simple_byte
  3897  000AD8  5028               	movf	??_ReadButtonState+1,w,c
  3898  000ADA  0A00               	xorlw	0	; case 0
  3899  000ADC  A4D8               	btfss	status,2,c
  3900  000ADE  0012               	return	
  3901                           
  3902                           ; Switch size 1, requested type "space"
  3903                           ; Number of cases is 8, Range of values is 0 to 7
  3904                           ; switch strategies available:
  3905                           ; Name         Instructions Cycles
  3906                           ; simple_byte           25    13 (average)
  3907                           ;	Chosen strategy is simple_byte
  3908  000AE0  5027               	movf	??_ReadButtonState,w,c
  3909  000AE2  0A00               	xorlw	0	; case 0
  3910  000AE4  B4D8               	btfsc	status,2,c
  3911  000AE6  D78C               	goto	i2l2114
  3912  000AE8  0A01               	xorlw	1	; case 1
  3913  000AEA  B4D8               	btfsc	status,2,c
  3914  000AEC  D796               	goto	i2l2116
  3915  000AEE  0A03               	xorlw	3	; case 2
  3916  000AF0  B4D8               	btfsc	status,2,c
  3917  000AF2  D7A0               	goto	i2l2118
  3918  000AF4  0A01               	xorlw	1	; case 3
  3919  000AF6  B4D8               	btfsc	status,2,c
  3920  000AF8  D7AA               	goto	i2l2120
  3921  000AFA  0A07               	xorlw	7	; case 4
  3922  000AFC  B4D8               	btfsc	status,2,c
  3923  000AFE  D7B4               	goto	i2l2122
  3924  000B00  0A01               	xorlw	1	; case 5
  3925  000B02  B4D8               	btfsc	status,2,c
  3926  000B04  D7BE               	goto	i2l2124
  3927  000B06  0A03               	xorlw	3	; case 6
  3928  000B08  B4D8               	btfsc	status,2,c
  3929  000B0A  D7C8               	goto	i2l2126
  3930  000B0C  0A01               	xorlw	1	; case 7
  3931  000B0E  A4D8               	btfss	status,2,c
  3932  000B10  0012               	return	
  3933  000B12  D7D1               	goto	i2l2128
  3934  000B14  0012               	return		;funcret
  3935  000B16                     __end_of_ReadButtonState:
  3936                           	opt stack 0
  3937                           pclatu	equ	0xFFB
  3938                           pclath	equ	0xFFA
  3939                           tblptru	equ	0xFF8
  3940                           tblptrh	equ	0xFF7
  3941                           tblptrl	equ	0xFF6
  3942                           tablat	equ	0xFF5
  3943                           prodh	equ	0xFF4
  3944                           prodl	equ	0xFF3
  3945                           intcon	equ	0xFF2
  3946                           intcon2	equ	0xFF1
  3947                           postinc0	equ	0xFEE
  3948                           fsr0h	equ	0xFEA
  3949                           fsr0l	equ	0xFE9
  3950                           wreg	equ	0xFE8
  3951                           fsr1h	equ	0xFE2
  3952                           fsr1l	equ	0xFE1
  3953                           indf2	equ	0xFDF
  3954                           postinc2	equ	0xFDE
  3955                           postdec2	equ	0xFDD
  3956                           fsr2h	equ	0xFDA
  3957                           fsr2l	equ	0xFD9
  3958                           status	equ	0xFD8
  3959                           
  3960 ;; *************** function _I2C1_ISR *****************
  3961 ;; Defined at:
  3962 ;;		line 186 in file "mcc_generated_files/i2c1.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;		None
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;		None
  3967 ;; Return value:  Size  Location     Type
  3968 ;;		None               void
  3969 ;; Registers used:
  3970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3976 ;;      Params:         0       0       0       0       0       0       0
  3977 ;;      Locals:         0       0       0       0       0       0       0
  3978 ;;      Temps:          2       0       0       0       0       0       0
  3979 ;;      Totals:         2       0       0       0       0       0       0
  3980 ;;Total ram usage:        2 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    1
  3983 ;; This function calls:
  3984 ;;		_I2C1_FunctionComplete
  3985 ;;		_I2C1_Stop
  3986 ;; This function is called by:
  3987 ;;		_INTERRUPT_InterruptManager
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           	psect	text27
  3992  00061C                     __ptext27:
  3993                           	opt stack 0
  3994  00061C                     _I2C1_ISR:
  3995                           	opt stack 24
  3996                           
  3997                           ;i2c1.c: 189: static uint8_t *pi2c_buf_ptr;
  3998                           ;i2c1.c: 190: static uint16_t i2c_address = 0;
  3999                           ;i2c1.c: 191: static uint8_t i2c_bytes_left = 0;
  4000                           ;i2c1.c: 192: static uint8_t i2c_10bit_address_restart = 0;
  4001                           ;i2c1.c: 194: PIR1bits.SSP1IF = 0;
  4002                           
  4003                           ;incstack = 0
  4004  00061C  969E               	bcf	3998,3,c	;volatile
  4005                           
  4006                           ;i2c1.c: 198: if(SSP1CON1bits.WCOL)
  4007  00061E  AEC6               	btfss	4038,7,c	;volatile
  4008  000620  D114               	goto	i2l3132
  4009                           
  4010                           ;i2c1.c: 199: {
  4011                           ;i2c1.c: 201: SSP1CON1bits.WCOL = 0;
  4012  000622  9EC6               	bcf	4038,7,c	;volatile
  4013                           
  4014                           ;i2c1.c: 202: i2c1_state = S_MASTER_IDLE;
  4015  000624  0E00               	movlw	0
  4016  000626  6E17               	movwf	_i2c1_state,c
  4017                           
  4018                           ;i2c1.c: 203: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
  4019  000628  EE20 F003          	lfsr	2,3
  4020  00062C  500C               	movf	_p_i2c1_current,w,c
  4021  00062E  26D9               	addwf	fsr2l,f,c
  4022  000630  500D               	movf	_p_i2c1_current+1,w,c
  4023  000632  22DA               	addwfc	fsr2h,f,c
  4024  000634  CFDE F028          	movff	postinc2,??_I2C1_ISR
  4025  000638  CFDD F029          	movff	postdec2,??_I2C1_ISR+1
  4026  00063C  C028  FFD9         	movff	??_I2C1_ISR,fsr2l
  4027  000640  C029  FFDA         	movff	??_I2C1_ISR+1,fsr2h
  4028  000644  0E01               	movlw	1
  4029  000646  6EDF               	movwf	indf2,c
  4030                           
  4031                           ;i2c1.c: 206: p_i2c1_current = (0);
  4032  000648  0E00               	movlw	0
  4033  00064A  6E0C               	movwf	_p_i2c1_current,c
  4034  00064C  0E00               	movlw	0
  4035  00064E  6E0D               	movwf	_p_i2c1_current+1,c
  4036                           
  4037                           ;i2c1.c: 208: return;
  4038  000650  0012               	return	
  4039                           
  4040                           ;i2c1.c: 209: }
  4041                           ;i2c1.c: 212: switch(i2c1_state)
  4042  000652  D0FB               	goto	i2l3132
  4043  000654                     i2l60:
  4044                           
  4045                           ;i2c1.c: 216: if(i2c1_object.trStatus.s.empty != 1)
  4046  000654  B205               	btfsc	_i2c1_object+4,1,c
  4047  000656  0012               	return	
  4048                           
  4049                           ;i2c1.c: 217: {
  4050                           ;i2c1.c: 219: p_i2c1_current = i2c1_object.pTrHead;
  4051  000658  C003  F00C         	movff	_i2c1_object+2,_p_i2c1_current
  4052  00065C  C004  F00D         	movff	_i2c1_object+3,_p_i2c1_current+1
  4053                           
  4054                           ;i2c1.c: 220: i2c1_trb_count = i2c1_object.pTrHead->count;
  4055  000660  C003  FFD9         	movff	_i2c1_object+2,fsr2l
  4056  000664  C004  FFDA         	movff	_i2c1_object+3,fsr2h
  4057  000668  50DF               	movf	indf2,w,c
  4058  00066A  6E18               	movwf	_i2c1_trb_count,c
  4059                           
  4060                           ;i2c1.c: 221: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
  4061  00066C  EE20 F001          	lfsr	2,1
  4062  000670  5003               	movf	_i2c1_object+2,w,c
  4063  000672  26D9               	addwf	fsr2l,f,c
  4064  000674  5004               	movf	_i2c1_object+3,w,c
  4065  000676  22DA               	addwfc	fsr2h,f,c
  4066  000678  CFDE F00E          	movff	postinc2,_p_i2c1_trb_current
  4067  00067C  CFDD F00F          	movff	postdec2,_p_i2c1_trb_current+1
  4068                           
  4069                           ;i2c1.c: 223: i2c1_object.pTrHead++;
  4070  000680  0E05               	movlw	5
  4071  000682  2603               	addwf	_i2c1_object+2,f,c
  4072  000684  0E00               	movlw	0
  4073  000686  2204               	addwfc	_i2c1_object+3,f,c
  4074                           
  4075                           ;i2c1.c: 226: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
  4076  000688  0E23               	movlw	low (_i2c1_tr_queue+5)
  4077  00068A  1803               	xorwf	_i2c1_object+2,w,c
  4078  00068C  E109               	bnz	i2l3024
  4079  00068E  0E00               	movlw	high (_i2c1_tr_queue+5)
  4080  000690  1804               	xorwf	_i2c1_object+3,w,c
  4081  000692  A4D8               	btfss	status,2,c
  4082  000694  D005               	goto	i2l3024
  4083                           
  4084                           ;i2c1.c: 227: {
  4085                           ;i2c1.c: 229: i2c1_object.pTrHead = i2c1_tr_queue;
  4086  000696  0E1E               	movlw	low _i2c1_tr_queue
  4087  000698  6E03               	movwf	_i2c1_object+2,c
  4088  00069A  0E00               	movlw	high _i2c1_tr_queue
  4089  00069C  6E04               	movwf	_i2c1_object+3,c
  4090  00069E  D000               	goto	i2l3024
  4091  0006A0                     i2l3024:
  4092                           
  4093                           ;i2c1.c: 230: }
  4094                           ;i2c1.c: 234: i2c1_object.trStatus.s.full = 0;
  4095  0006A0  9005               	bcf	_i2c1_object+4,0,c
  4096                           
  4097                           ;i2c1.c: 237: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
  4098  0006A2  5001               	movf	_i2c1_object,w,c
  4099  0006A4  1803               	xorwf	_i2c1_object+2,w,c
  4100  0006A6  E105               	bnz	i2l63
  4101  0006A8  5002               	movf	_i2c1_object+1,w,c
  4102  0006AA  1804               	xorwf	_i2c1_object+3,w,c
  4103  0006AC  A4D8               	btfss	status,2,c
  4104  0006AE  D001               	goto	i2l63
  4105                           
  4106                           ;i2c1.c: 238: {
  4107                           ;i2c1.c: 240: i2c1_object.trStatus.s.empty = 1;
  4108  0006B0  8205               	bsf	_i2c1_object+4,1,c
  4109  0006B2                     i2l63:
  4110                           
  4111                           ;i2c1.c: 241: }
  4112                           ;i2c1.c: 244: SSP1CON2bits.SEN = 1;
  4113  0006B2  80C5               	bsf	4037,0,c	;volatile
  4114                           
  4115                           ;i2c1.c: 247: i2c1_state = S_MASTER_SEND_ADDR;
  4116  0006B4  0E02               	movlw	2
  4117  0006B6  6E17               	movwf	_i2c1_state,c
  4118                           
  4119                           ;i2c1.c: 248: }
  4120                           ;i2c1.c: 250: break;
  4121  0006B8  0012               	return	
  4122  0006BA                     i2l65:
  4123                           
  4124                           ;i2c1.c: 257: SSP1CON2bits.RSEN = 1;
  4125  0006BA  82C5               	bsf	4037,1,c	;volatile
  4126                           
  4127                           ;i2c1.c: 260: i2c1_state = S_MASTER_SEND_ADDR;
  4128  0006BC  0E02               	movlw	2
  4129  0006BE  6E17               	movwf	_i2c1_state,c
  4130                           
  4131                           ;i2c1.c: 262: break;
  4132  0006C0  0012               	return	
  4133  0006C2                     i2l66:
  4134                           
  4135                           ;i2c1.c: 266: if(SSP1CON2bits.ACKSTAT)
  4136  0006C2  ACC5               	btfss	4037,6,c	;volatile
  4137  0006C4  D005               	goto	i2l3036
  4138                           
  4139                           ;i2c1.c: 267: {
  4140                           ;i2c1.c: 268: i2c1_object.i2cErrors++;
  4141  0006C6  2A07               	incf	_i2c1_object+6,f,c
  4142                           
  4143                           ;i2c1.c: 269: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  4144  0006C8  0E04               	movlw	4
  4145  0006CA  EC1A  F008         	call	_I2C1_Stop
  4146                           
  4147                           ;i2c1.c: 270: }
  4148  0006CE  0012               	return	
  4149  0006D0                     i2l3036:
  4150                           
  4151                           ;i2c1.c: 271: else
  4152                           ;i2c1.c: 272: {
  4153                           ;i2c1.c: 274: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  4154  0006D0  90D8               	bcf	status,0,c
  4155  0006D2  3024               	rrcf	I2C1_ISR@i2c_address+1,w,c
  4156  0006D4  6E29               	movwf	(??_I2C1_ISR+1)& (0+255),c
  4157  0006D6  3023               	rrcf	I2C1_ISR@i2c_address,w,c
  4158  0006D8  6E28               	movwf	??_I2C1_ISR& (0+255),c
  4159  0006DA  5028               	movf	??_I2C1_ISR,w,c
  4160  0006DC  6EC9               	movwf	4041,c	;volatile
  4161                           
  4162                           ;i2c1.c: 277: if(i2c_address & 0x01)
  4163  0006DE  A023               	btfss	I2C1_ISR@i2c_address,0,c
  4164  0006E0  D003               	goto	i2l3042
  4165                           
  4166                           ;i2c1.c: 278: {
  4167                           ;i2c1.c: 281: i2c1_state = S_MASTER_10BIT_RESTART;
  4168  0006E2  0E0B               	movlw	11
  4169  0006E4  6E17               	movwf	_i2c1_state,c
  4170                           
  4171                           ;i2c1.c: 282: }
  4172  0006E6  0012               	return	
  4173  0006E8                     i2l3042:
  4174                           
  4175                           ;i2c1.c: 283: else
  4176                           ;i2c1.c: 284: {
  4177                           ;i2c1.c: 286: i2c1_state = S_MASTER_SEND_DATA;
  4178  0006E8  0E03               	movlw	3
  4179  0006EA  6E17               	movwf	_i2c1_state,c
  4180                           
  4181                           ;i2c1.c: 287: }
  4182                           ;i2c1.c: 288: }
  4183                           ;i2c1.c: 290: break;
  4184  0006EC  0012               	return	
  4185  0006EE                     i2l71:
  4186                           
  4187                           ;i2c1.c: 294: if(SSP1CON2bits.ACKSTAT)
  4188  0006EE  ACC5               	btfss	4037,6,c	;volatile
  4189  0006F0  D005               	goto	i2l72
  4190                           
  4191                           ;i2c1.c: 295: {
  4192                           ;i2c1.c: 296: i2c1_object.i2cErrors++;
  4193  0006F2  2A07               	incf	_i2c1_object+6,f,c
  4194                           
  4195                           ;i2c1.c: 297: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  4196  0006F4  0E04               	movlw	4
  4197  0006F6  EC1A  F008         	call	_I2C1_Stop
  4198                           
  4199                           ;i2c1.c: 298: }
  4200  0006FA  0012               	return	
  4201  0006FC                     i2l72:
  4202                           
  4203                           ;i2c1.c: 299: else
  4204                           ;i2c1.c: 300: {
  4205                           ;i2c1.c: 303: SSP1CON2bits.RSEN = 1;
  4206  0006FC  82C5               	bsf	4037,1,c	;volatile
  4207                           
  4208                           ;i2c1.c: 307: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  4209  0006FE  C023  F028         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
  4210  000702  C024  F029         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
  4211  000706  C029  F028         	movff	??_I2C1_ISR+1,??_I2C1_ISR
  4212  00070A  6A29               	clrf	??_I2C1_ISR+1,c
  4213  00070C  0E06               	movlw	6
  4214  00070E  1628               	andwf	??_I2C1_ISR,f,c
  4215  000710  0E00               	movlw	0
  4216  000712  1629               	andwf	??_I2C1_ISR+1,f,c
  4217  000714  0EF0               	movlw	240
  4218  000716  1028               	iorwf	??_I2C1_ISR,w,c
  4219  000718  6E23               	movwf	I2C1_ISR@i2c_address,c
  4220  00071A  5029               	movf	??_I2C1_ISR+1,w,c
  4221  00071C  6E24               	movwf	I2C1_ISR@i2c_address+1,c
  4222                           
  4223                           ;i2c1.c: 310: i2c_address |= 0x0001;
  4224  00071E  8023               	bsf	I2C1_ISR@i2c_address,0,c
  4225                           
  4226                           ;i2c1.c: 313: i2c_10bit_address_restart = 1;
  4227  000720  0E01               	movlw	1
  4228  000722  6E10               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
  4229                           
  4230                           ;i2c1.c: 316: i2c1_state = S_MASTER_SEND_ADDR;
  4231  000724  0E02               	movlw	2
  4232  000726  6E17               	movwf	_i2c1_state,c
  4233                           
  4234                           ;i2c1.c: 317: }
  4235                           ;i2c1.c: 319: break;
  4236  000728  0012               	return	
  4237  00072A                     i2l3056:
  4238                           
  4239                           ;i2c1.c: 334: if(i2c_10bit_address_restart != 1)
  4240  00072A  0410               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
  4241  00072C  B4D8               	btfsc	status,2,c
  4242  00072E  D030               	goto	i2l76
  4243                           
  4244                           ;i2c1.c: 335: {
  4245                           ;i2c1.c: 337: i2c_address = p_i2c1_trb_current->address;
  4246  000730  C00E  FFD9         	movff	_p_i2c1_trb_current,fsr2l
  4247  000734  C00F  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
  4248  000738  CFDE F023          	movff	postinc2,I2C1_ISR@i2c_address
  4249  00073C  CFDD F024          	movff	postdec2,I2C1_ISR@i2c_address+1
  4250                           
  4251                           ;i2c1.c: 338: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
  4252  000740  EE20 F003          	lfsr	2,3
  4253  000744  500E               	movf	_p_i2c1_trb_current,w,c
  4254  000746  26D9               	addwf	fsr2l,f,c
  4255  000748  500F               	movf	_p_i2c1_trb_current+1,w,c
  4256  00074A  22DA               	addwfc	fsr2h,f,c
  4257  00074C  CFDE F008          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
  4258  000750  CFDD F009          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
  4259                           
  4260                           ;i2c1.c: 339: i2c_bytes_left = p_i2c1_trb_current->length;
  4261  000754  EE20 F002          	lfsr	2,2
  4262  000758  500E               	movf	_p_i2c1_trb_current,w,c
  4263  00075A  26D9               	addwf	fsr2l,f,c
  4264  00075C  500F               	movf	_p_i2c1_trb_current+1,w,c
  4265  00075E  22DA               	addwfc	fsr2h,f,c
  4266  000760  50DF               	movf	indf2,w,c
  4267  000762  6E11               	movwf	I2C1_ISR@i2c_bytes_left,c
  4268                           
  4269                           ;i2c1.c: 340: }
  4270                           ;i2c1.c: 343: if(!1 && (0x0 != i2c_address))
  4271  000764  D015               	goto	i2l76
  4272  000766  5023               	movf	I2C1_ISR@i2c_address,w,c
  4273  000768  1024               	iorwf	I2C1_ISR@i2c_address+1,w,c
  4274  00076A  B4D8               	btfsc	status,2,c
  4275  00076C  D011               	goto	i2l76
  4276                           
  4277                           ;i2c1.c: 344: {
  4278                           ;i2c1.c: 345: if (0 == i2c_10bit_address_restart)
  4279  00076E  5010               	movf	I2C1_ISR@i2c_10bit_address_restart,w,c
  4280  000770  A4D8               	btfss	status,2,c
  4281  000772  D007               	goto	i2l77
  4282                           
  4283                           ;i2c1.c: 346: {
  4284                           ;i2c1.c: 350: SSP1BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  4285  000774  5024               	movf	I2C1_ISR@i2c_address+1,w,c
  4286  000776  0B06               	andlw	6
  4287  000778  09F0               	iorlw	240
  4288  00077A  6EC9               	movwf	4041,c	;volatile
  4289                           
  4290                           ;i2c1.c: 351: i2c1_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  4291  00077C  0E0A               	movlw	10
  4292  00077E  6E17               	movwf	_i2c1_state,c
  4293                           
  4294                           ;i2c1.c: 352: }
  4295  000780  0012               	return	
  4296  000782                     i2l77:
  4297                           
  4298                           ;i2c1.c: 353: else
  4299                           ;i2c1.c: 354: {
  4300                           ;i2c1.c: 356: SSP1BUF = i2c_address;
  4301  000782  C023  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
  4302                           
  4303                           ;i2c1.c: 357: i2c1_state = S_MASTER_ACK_ADDR;
  4304  000786  0E05               	movlw	5
  4305  000788  6E17               	movwf	_i2c1_state,c
  4306                           
  4307                           ;i2c1.c: 359: i2c_10bit_address_restart = 0;
  4308  00078A  0E00               	movlw	0
  4309  00078C  6E10               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
  4310                           
  4311                           ;i2c1.c: 360: }
  4312                           ;i2c1.c: 361: }
  4313  00078E  0012               	return	
  4314  000790                     i2l76:
  4315                           
  4316                           ;i2c1.c: 362: else
  4317                           ;i2c1.c: 363: {
  4318                           ;i2c1.c: 365: SSP1BUF = i2c_address;
  4319  000790  C023  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
  4320                           
  4321                           ;i2c1.c: 366: if(i2c_address & 0x01)
  4322  000794  A023               	btfss	I2C1_ISR@i2c_address,0,c
  4323  000796  D003               	goto	i2l3076
  4324                           
  4325                           ;i2c1.c: 367: {
  4326                           ;i2c1.c: 369: i2c1_state = S_MASTER_ACK_ADDR;
  4327  000798  0E05               	movlw	5
  4328  00079A  6E17               	movwf	_i2c1_state,c
  4329                           
  4330                           ;i2c1.c: 370: }
  4331  00079C  0012               	return	
  4332  00079E                     i2l3076:
  4333                           
  4334                           ;i2c1.c: 371: else
  4335                           ;i2c1.c: 372: {
  4336                           ;i2c1.c: 374: i2c1_state = S_MASTER_SEND_DATA;
  4337  00079E  0E03               	movlw	3
  4338  0007A0  6E17               	movwf	_i2c1_state,c
  4339                           
  4340                           ;i2c1.c: 375: }
  4341                           ;i2c1.c: 376: }
  4342                           ;i2c1.c: 377: break;
  4343  0007A2  0012               	return	
  4344  0007A4                     i2l82:
  4345                           
  4346                           ;i2c1.c: 382: if(SSP1CON2bits.ACKSTAT)
  4347  0007A4  ACC5               	btfss	4037,6,c	;volatile
  4348  0007A6  D006               	goto	i2l3084
  4349                           
  4350                           ;i2c1.c: 383: {
  4351                           ;i2c1.c: 385: i2c1_object.i2cErrors++;
  4352  0007A8  2A07               	incf	_i2c1_object+6,f,c
  4353                           
  4354                           ;i2c1.c: 388: SSP1CON2bits.ACKSTAT = 0;
  4355  0007AA  9CC5               	bcf	4037,6,c	;volatile
  4356                           
  4357                           ;i2c1.c: 391: I2C1_Stop(I2C1_DATA_NO_ACK);
  4358  0007AC  0E05               	movlw	5
  4359  0007AE  EC1A  F008         	call	_I2C1_Stop
  4360                           
  4361                           ;i2c1.c: 393: }
  4362  0007B2  0012               	return	
  4363  0007B4                     i2l3084:
  4364                           
  4365                           ;i2c1.c: 394: else
  4366                           ;i2c1.c: 395: {
  4367                           ;i2c1.c: 397: if(i2c_bytes_left-- == 0U)
  4368  0007B4  0611               	decf	I2C1_ISR@i2c_bytes_left,f,c
  4369  0007B6  2811               	incf	I2C1_ISR@i2c_bytes_left,w,c
  4370  0007B8  A4D8               	btfss	status,2,c
  4371  0007BA  D00E               	goto	i2l3094
  4372                           
  4373                           ;i2c1.c: 398: {
  4374                           ;i2c1.c: 402: p_i2c1_trb_current++;
  4375  0007BC  0E05               	movlw	5
  4376  0007BE  260E               	addwf	_p_i2c1_trb_current,f,c
  4377  0007C0  0E00               	movlw	0
  4378  0007C2  220F               	addwfc	_p_i2c1_trb_current+1,f,c
  4379                           
  4380                           ;i2c1.c: 405: if(--i2c1_trb_count == 0)
  4381  0007C4  2E18               	decfsz	_i2c1_trb_count,f,c
  4382  0007C6  D004               	goto	i2l86
  4383                           
  4384                           ;i2c1.c: 406: {
  4385                           ;i2c1.c: 407: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  4386  0007C8  0E00               	movlw	0
  4387  0007CA  EC1A  F008         	call	_I2C1_Stop
  4388                           
  4389                           ;i2c1.c: 408: }
  4390  0007CE  0012               	return	
  4391  0007D0                     i2l86:
  4392                           
  4393                           ;i2c1.c: 409: else
  4394                           ;i2c1.c: 410: {
  4395                           ;i2c1.c: 417: SSP1CON2bits.RSEN = 1;
  4396  0007D0  82C5               	bsf	4037,1,c	;volatile
  4397                           
  4398                           ;i2c1.c: 420: i2c1_state = S_MASTER_SEND_ADDR;
  4399  0007D2  0E02               	movlw	2
  4400  0007D4  6E17               	movwf	_i2c1_state,c
  4401                           
  4402                           ;i2c1.c: 422: }
  4403                           ;i2c1.c: 423: }
  4404  0007D6  0012               	return	
  4405  0007D8                     i2l3094:
  4406                           
  4407                           ;i2c1.c: 424: else
  4408                           ;i2c1.c: 425: {
  4409                           ;i2c1.c: 427: SSP1BUF = *pi2c_buf_ptr++;
  4410  0007D8  C008  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  4411  0007DC  C009  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  4412  0007E0  50DF               	movf	indf2,w,c
  4413  0007E2  6EC9               	movwf	4041,c	;volatile
  4414  0007E4  4A08               	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
  4415  0007E6  2A09               	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
  4416                           
  4417                           ;i2c1.c: 428: }
  4418                           ;i2c1.c: 429: }
  4419                           ;i2c1.c: 430: break;
  4420  0007E8  0012               	return	
  4421  0007EA                     i2l89:
  4422                           
  4423                           ;i2c1.c: 435: if(SSP1CON2bits.ACKSTAT)
  4424  0007EA  ACC5               	btfss	4037,6,c	;volatile
  4425  0007EC  D006               	goto	i2l90
  4426                           
  4427                           ;i2c1.c: 436: {
  4428                           ;i2c1.c: 439: i2c1_object.i2cErrors++;
  4429  0007EE  2A07               	incf	_i2c1_object+6,f,c
  4430                           
  4431                           ;i2c1.c: 442: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  4432  0007F0  0E04               	movlw	4
  4433  0007F2  EC1A  F008         	call	_I2C1_Stop
  4434                           
  4435                           ;i2c1.c: 445: SSP1CON2bits.ACKSTAT = 0;
  4436  0007F6  9CC5               	bcf	4037,6,c	;volatile
  4437                           
  4438                           ;i2c1.c: 446: }
  4439  0007F8  0012               	return	
  4440  0007FA                     i2l90:
  4441                           
  4442                           ;i2c1.c: 447: else
  4443                           ;i2c1.c: 448: {
  4444                           ;i2c1.c: 449: SSP1CON2bits.RCEN = 1;
  4445  0007FA  86C5               	bsf	4037,3,c	;volatile
  4446                           
  4447                           ;i2c1.c: 450: i2c1_state = S_MASTER_ACK_RCV_DATA;
  4448  0007FC  0E08               	movlw	8
  4449  0007FE  6E17               	movwf	_i2c1_state,c
  4450                           
  4451                           ;i2c1.c: 451: }
  4452                           ;i2c1.c: 452: break;
  4453  000800  0012               	return	
  4454  000802                     i2l3106:
  4455                           
  4456                           ;i2c1.c: 459: i2c1_state = S_MASTER_ACK_RCV_DATA;
  4457  000802  0E08               	movlw	8
  4458  000804  6E17               	movwf	_i2c1_state,c
  4459                           
  4460                           ;i2c1.c: 462: SSP1CON2bits.RCEN = 1;
  4461  000806  86C5               	bsf	4037,3,c	;volatile
  4462                           
  4463                           ;i2c1.c: 464: break;
  4464  000808  0012               	return	
  4465  00080A                     i2l3110:
  4466                           
  4467                           ;i2c1.c: 469: *pi2c_buf_ptr++ = SSP1BUF;
  4468  00080A  C008  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  4469  00080E  C009  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  4470  000812  CFC9 FFDF          	movff	4041,indf2	;volatile
  4471  000816  4A08               	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
  4472  000818  2A09               	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
  4473                           
  4474                           ;i2c1.c: 472: if(--i2c_bytes_left)
  4475  00081A  0E01               	movlw	1
  4476  00081C  5E11               	subwf	I2C1_ISR@i2c_bytes_left,f,c
  4477  00081E  B4D8               	btfsc	status,2,c
  4478  000820  D004               	goto	i2l94
  4479                           
  4480                           ;i2c1.c: 473: {
  4481                           ;i2c1.c: 479: SSP1CON2bits.ACKDT = 0;
  4482  000822  9AC5               	bcf	4037,5,c	;volatile
  4483                           
  4484                           ;i2c1.c: 482: i2c1_state = S_MASTER_RCV_DATA;
  4485  000824  0E06               	movlw	6
  4486  000826  6E17               	movwf	_i2c1_state,c
  4487                           
  4488                           ;i2c1.c: 483: }
  4489  000828  D004               	goto	i2l3122
  4490  00082A                     i2l94:
  4491                           
  4492                           ;i2c1.c: 484: else
  4493                           ;i2c1.c: 485: {
  4494                           ;i2c1.c: 489: SSP1CON2bits.ACKDT = 1;
  4495  00082A  8AC5               	bsf	4037,5,c	;volatile
  4496                           
  4497                           ;i2c1.c: 491: I2C1_FunctionComplete();
  4498  00082C  ECFE  F008         	call	_I2C1_FunctionComplete	;wreg free
  4499  000830  D000               	goto	i2l3122
  4500  000832                     i2l3122:
  4501                           
  4502                           ;i2c1.c: 492: }
  4503                           ;i2c1.c: 495: SSP1CON2bits.ACKEN = 1;
  4504  000832  88C5               	bsf	4037,4,c	;volatile
  4505                           
  4506                           ;i2c1.c: 496: break;
  4507  000834  0012               	return	
  4508                           
  4509                           ;i2c1.c: 498: case S_MASTER_RCV_STOP:
  4510  000836  D000               	goto	i2l3124
  4511  000838                     i2l3124:
  4512                           
  4513                           ;i2c1.c: 499: case S_MASTER_SEND_STOP:
  4514                           ;i2c1.c: 502: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  4515  000838  0E00               	movlw	0
  4516  00083A  EC1A  F008         	call	_I2C1_Stop
  4517                           
  4518                           ;i2c1.c: 503: break;
  4519  00083E  0012               	return	
  4520  000840                     i2l3126:
  4521                           
  4522                           ;i2c1.c: 509: i2c1_object.i2cErrors++;
  4523  000840  2A07               	incf	_i2c1_object+6,f,c
  4524                           
  4525                           ;i2c1.c: 510: I2C1_Stop(I2C1_LOST_STATE);
  4526  000842  0E06               	movlw	6
  4527  000844  EC1A  F008         	call	_I2C1_Stop
  4528                           
  4529                           ;i2c1.c: 513: }
  4530                           
  4531                           ;i2c1.c: 511: break;
  4532  000848  0012               	return	
  4533  00084A                     i2l3132:
  4534  00084A  5017               	movf	_i2c1_state,w,c
  4535                           
  4536                           ; Switch size 1, requested type "space"
  4537                           ; Number of cases is 11, Range of values is 0 to 11
  4538                           ; switch strategies available:
  4539                           ; Name         Instructions Cycles
  4540                           ; simple_byte           34    18 (average)
  4541                           ;	Chosen strategy is simple_byte
  4542  00084C  0A00               	xorlw	0	; case 0
  4543  00084E  B4D8               	btfsc	status,2,c
  4544  000850  D701               	goto	i2l60
  4545  000852  0A01               	xorlw	1	; case 1
  4546  000854  B4D8               	btfsc	status,2,c
  4547  000856  D731               	goto	i2l65
  4548  000858  0A03               	xorlw	3	; case 2
  4549  00085A  B4D8               	btfsc	status,2,c
  4550  00085C  D766               	goto	i2l3056
  4551  00085E  0A01               	xorlw	1	; case 3
  4552  000860  B4D8               	btfsc	status,2,c
  4553  000862  D7A0               	goto	i2l82
  4554  000864  0A07               	xorlw	7	; case 4
  4555  000866  B4D8               	btfsc	status,2,c
  4556  000868  D7E7               	goto	i2l3124
  4557  00086A  0A01               	xorlw	1	; case 5
  4558  00086C  B4D8               	btfsc	status,2,c
  4559  00086E  D7BD               	goto	i2l89
  4560  000870  0A03               	xorlw	3	; case 6
  4561  000872  B4D8               	btfsc	status,2,c
  4562  000874  D7C6               	goto	i2l3106
  4563  000876  0A01               	xorlw	1	; case 7
  4564  000878  B4D8               	btfsc	status,2,c
  4565  00087A  D7DE               	goto	i2l3124
  4566  00087C  0A0F               	xorlw	15	; case 8
  4567  00087E  B4D8               	btfsc	status,2,c
  4568  000880  D7C4               	goto	i2l3110
  4569  000882  0A02               	xorlw	2	; case 10
  4570  000884  B4D8               	btfsc	status,2,c
  4571  000886  D71D               	goto	i2l66
  4572  000888  0A01               	xorlw	1	; case 11
  4573  00088A  B4D8               	btfsc	status,2,c
  4574  00088C  D730               	goto	i2l71
  4575  00088E  D7D8               	goto	i2l3126
  4576  000890  0012               	return		;funcret
  4577  000892                     __end_of_I2C1_ISR:
  4578                           	opt stack 0
  4579                           pclatu	equ	0xFFB
  4580                           pclath	equ	0xFFA
  4581                           tblptru	equ	0xFF8
  4582                           tblptrh	equ	0xFF7
  4583                           tblptrl	equ	0xFF6
  4584                           tablat	equ	0xFF5
  4585                           prodh	equ	0xFF4
  4586                           prodl	equ	0xFF3
  4587                           intcon	equ	0xFF2
  4588                           intcon2	equ	0xFF1
  4589                           postinc0	equ	0xFEE
  4590                           fsr0h	equ	0xFEA
  4591                           fsr0l	equ	0xFE9
  4592                           wreg	equ	0xFE8
  4593                           fsr1h	equ	0xFE2
  4594                           fsr1l	equ	0xFE1
  4595                           indf2	equ	0xFDF
  4596                           postinc2	equ	0xFDE
  4597                           postdec2	equ	0xFDD
  4598                           fsr2h	equ	0xFDA
  4599                           fsr2l	equ	0xFD9
  4600                           status	equ	0xFD8
  4601                           
  4602 ;; *************** function _I2C1_Stop *****************
  4603 ;; Defined at:
  4604 ;;		line 534 in file "mcc_generated_files/i2c1.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;  completion_c    1    wreg     enum E8836
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;  completion_c    1    2[COMRAM] enum E8836
  4609 ;; Return value:  Size  Location     Type
  4610 ;;		None               void
  4611 ;; Registers used:
  4612 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4618 ;;      Params:         0       0       0       0       0       0       0
  4619 ;;      Locals:         1       0       0       0       0       0       0
  4620 ;;      Temps:          2       0       0       0       0       0       0
  4621 ;;      Totals:         3       0       0       0       0       0       0
  4622 ;;Total ram usage:        3 bytes
  4623 ;; Hardware stack levels used:    1
  4624 ;; This function calls:
  4625 ;;		Nothing
  4626 ;; This function is called by:
  4627 ;;		_I2C1_ISR
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631                           	psect	text28
  4632  001034                     __ptext28:
  4633                           	opt stack 0
  4634  001034                     _I2C1_Stop:
  4635                           	opt stack 24
  4636                           
  4637                           ;incstack = 0
  4638                           ;I2C1_Stop@completion_code stored from wreg
  4639  001034  6E27               	movwf	I2C1_Stop@completion_code,c
  4640                           
  4641                           ;i2c1.c: 537: SSP1CON2bits.PEN = 1;
  4642  001036  84C5               	bsf	4037,2,c	;volatile
  4643                           
  4644                           ;i2c1.c: 540: if (p_i2c1_current->pTrFlag != (0))
  4645  001038  EE20 F003          	lfsr	2,3
  4646  00103C  500C               	movf	_p_i2c1_current,w,c
  4647  00103E  26D9               	addwf	fsr2l,f,c
  4648  001040  500D               	movf	_p_i2c1_current+1,w,c
  4649  001042  22DA               	addwfc	fsr2h,f,c
  4650  001044  50DE               	movf	postinc2,w,c
  4651  001046  10DE               	iorwf	postinc2,w,c
  4652  001048  B4D8               	btfsc	status,2,c
  4653  00104A  D011               	goto	i2l2860
  4654                           
  4655                           ;i2c1.c: 541: {
  4656                           ;i2c1.c: 543: *(p_i2c1_current->pTrFlag) = completion_code;
  4657  00104C  EE20 F003          	lfsr	2,3
  4658  001050  500C               	movf	_p_i2c1_current,w,c
  4659  001052  26D9               	addwf	fsr2l,f,c
  4660  001054  500D               	movf	_p_i2c1_current+1,w,c
  4661  001056  22DA               	addwfc	fsr2h,f,c
  4662  001058  CFDE F025          	movff	postinc2,??_I2C1_Stop
  4663  00105C  CFDD F026          	movff	postdec2,??_I2C1_Stop+1
  4664  001060  C025  FFD9         	movff	??_I2C1_Stop,fsr2l
  4665  001064  C026  FFDA         	movff	??_I2C1_Stop+1,fsr2h
  4666  001068  C027  FFDF         	movff	I2C1_Stop@completion_code,indf2
  4667  00106C  D000               	goto	i2l2860
  4668  00106E                     i2l2860:
  4669                           
  4670                           ;i2c1.c: 544: }
  4671                           ;i2c1.c: 547: i2c1_state = S_MASTER_IDLE;
  4672  00106E  0E00               	movlw	0
  4673  001070  6E17               	movwf	_i2c1_state,c
  4674  001072  0012               	return		;funcret
  4675  001074                     __end_of_I2C1_Stop:
  4676                           	opt stack 0
  4677                           pclatu	equ	0xFFB
  4678                           pclath	equ	0xFFA
  4679                           tblptru	equ	0xFF8
  4680                           tblptrh	equ	0xFF7
  4681                           tblptrl	equ	0xFF6
  4682                           tablat	equ	0xFF5
  4683                           prodh	equ	0xFF4
  4684                           prodl	equ	0xFF3
  4685                           intcon	equ	0xFF2
  4686                           intcon2	equ	0xFF1
  4687                           postinc0	equ	0xFEE
  4688                           fsr0h	equ	0xFEA
  4689                           fsr0l	equ	0xFE9
  4690                           wreg	equ	0xFE8
  4691                           fsr1h	equ	0xFE2
  4692                           fsr1l	equ	0xFE1
  4693                           indf2	equ	0xFDF
  4694                           postinc2	equ	0xFDE
  4695                           postdec2	equ	0xFDD
  4696                           fsr2h	equ	0xFDA
  4697                           fsr2l	equ	0xFD9
  4698                           status	equ	0xFD8
  4699                           
  4700 ;; *************** function _I2C1_FunctionComplete *****************
  4701 ;; Defined at:
  4702 ;;		line 516 in file "mcc_generated_files/i2c1.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;		None
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;		None
  4707 ;; Return value:  Size  Location     Type
  4708 ;;		None               void
  4709 ;; Registers used:
  4710 ;;		wreg, status,2, status,0
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/0
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4716 ;;      Params:         0       0       0       0       0       0       0
  4717 ;;      Locals:         0       0       0       0       0       0       0
  4718 ;;      Temps:          0       0       0       0       0       0       0
  4719 ;;      Totals:         0       0       0       0       0       0       0
  4720 ;;Total ram usage:        0 bytes
  4721 ;; Hardware stack levels used:    1
  4722 ;; This function calls:
  4723 ;;		Nothing
  4724 ;; This function is called by:
  4725 ;;		_I2C1_ISR
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           	psect	text29
  4730  0011FC                     __ptext29:
  4731                           	opt stack 0
  4732  0011FC                     _I2C1_FunctionComplete:
  4733                           	opt stack 24
  4734                           
  4735                           ;i2c1.c: 520: p_i2c1_trb_current++;
  4736                           
  4737                           ;incstack = 0
  4738  0011FC  0E05               	movlw	5
  4739  0011FE  260E               	addwf	_p_i2c1_trb_current,f,c
  4740  001200  0E00               	movlw	0
  4741  001202  220F               	addwfc	_p_i2c1_trb_current+1,f,c
  4742                           
  4743                           ;i2c1.c: 523: if(--i2c1_trb_count == 0)
  4744  001204  2E18               	decfsz	_i2c1_trb_count,f,c
  4745  001206  D003               	goto	i2l2868
  4746                           
  4747                           ;i2c1.c: 524: {
  4748                           ;i2c1.c: 525: i2c1_state = S_MASTER_SEND_STOP;
  4749  001208  0E04               	movlw	4
  4750  00120A  6E17               	movwf	_i2c1_state,c
  4751                           
  4752                           ;i2c1.c: 526: }
  4753  00120C  0012               	return	
  4754  00120E                     i2l2868:
  4755                           
  4756                           ;i2c1.c: 527: else
  4757                           ;i2c1.c: 528: {
  4758                           ;i2c1.c: 529: i2c1_state = S_MASTER_RESTART;
  4759  00120E  0E01               	movlw	1
  4760  001210  6E17               	movwf	_i2c1_state,c
  4761  001212  0012               	return	
  4762  001214  0012               	return		;funcret
  4763  001216                     __end_of_I2C1_FunctionComplete:
  4764                           	opt stack 0
  4765                           pclatu	equ	0xFFB
  4766                           pclath	equ	0xFFA
  4767                           tblptru	equ	0xFF8
  4768                           tblptrh	equ	0xFF7
  4769                           tblptrl	equ	0xFF6
  4770                           tablat	equ	0xFF5
  4771                           prodh	equ	0xFF4
  4772                           prodl	equ	0xFF3
  4773                           intcon	equ	0xFF2
  4774                           intcon2	equ	0xFF1
  4775                           postinc0	equ	0xFEE
  4776                           fsr0h	equ	0xFEA
  4777                           fsr0l	equ	0xFE9
  4778                           wreg	equ	0xFE8
  4779                           fsr1h	equ	0xFE2
  4780                           fsr1l	equ	0xFE1
  4781                           indf2	equ	0xFDF
  4782                           postinc2	equ	0xFDE
  4783                           postdec2	equ	0xFDD
  4784                           fsr2h	equ	0xFDA
  4785                           fsr2l	equ	0xFD9
  4786                           status	equ	0xFD8
  4787                           
  4788 ;; *************** function _I2C1_BusCollisionISR *****************
  4789 ;; Defined at:
  4790 ;;		line 681 in file "mcc_generated_files/i2c1.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;		None
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;		None
  4795 ;; Return value:  Size  Location     Type
  4796 ;;		None               void
  4797 ;; Registers used:
  4798 ;;		None
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4804 ;;      Params:         0       0       0       0       0       0       0
  4805 ;;      Locals:         0       0       0       0       0       0       0
  4806 ;;      Temps:          0       0       0       0       0       0       0
  4807 ;;      Totals:         0       0       0       0       0       0       0
  4808 ;;Total ram usage:        0 bytes
  4809 ;; Hardware stack levels used:    1
  4810 ;; This function calls:
  4811 ;;		Nothing
  4812 ;; This function is called by:
  4813 ;;		_INTERRUPT_InterruptManager
  4814 ;; This function uses a non-reentrant model
  4815 ;;
  4816                           
  4817                           	psect	text30
  4818  001264                     __ptext30:
  4819                           	opt stack 0
  4820  001264                     _I2C1_BusCollisionISR:
  4821                           	opt stack 25
  4822                           
  4823                           ;incstack = 0
  4824  001264  0012               	return		;funcret
  4825  001266                     __end_of_I2C1_BusCollisionISR:
  4826                           	opt stack 0
  4827                           pclatu	equ	0xFFB
  4828                           pclath	equ	0xFFA
  4829                           tblptru	equ	0xFF8
  4830                           tblptrh	equ	0xFF7
  4831                           tblptrl	equ	0xFF6
  4832                           tablat	equ	0xFF5
  4833                           prodh	equ	0xFF4
  4834                           prodl	equ	0xFF3
  4835                           intcon	equ	0xFF2
  4836                           intcon2	equ	0xFF1
  4837                           postinc0	equ	0xFEE
  4838                           fsr0h	equ	0xFEA
  4839                           fsr0l	equ	0xFE9
  4840                           wreg	equ	0xFE8
  4841                           fsr1h	equ	0xFE2
  4842                           fsr1l	equ	0xFE1
  4843                           indf2	equ	0xFDF
  4844                           postinc2	equ	0xFDE
  4845                           postdec2	equ	0xFDD
  4846                           fsr2h	equ	0xFDA
  4847                           fsr2l	equ	0xFD9
  4848                           status	equ	0xFD8
  4849                           
  4850 ;; *************** function _EUSART1_Transmit_ISR *****************
  4851 ;; Defined at:
  4852 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;		None
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;		None
  4857 ;; Return value:  Size  Location     Type
  4858 ;;		None               void
  4859 ;; Registers used:
  4860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4866 ;;      Params:         0       0       0       0       0       0       0
  4867 ;;      Locals:         0       0       0       0       0       0       0
  4868 ;;      Temps:          0       0       0       0       0       0       0
  4869 ;;      Totals:         0       0       0       0       0       0       0
  4870 ;;Total ram usage:        0 bytes
  4871 ;; Hardware stack levels used:    1
  4872 ;; This function calls:
  4873 ;;		Nothing
  4874 ;; This function is called by:
  4875 ;;		_INTERRUPT_InterruptManager
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           	psect	text31
  4880  0010E4                     __ptext31:
  4881                           	opt stack 0
  4882  0010E4                     _EUSART1_Transmit_ISR:
  4883                           	opt stack 25
  4884                           
  4885                           ;eusart1.c: 177: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  4886                           
  4887                           ;incstack = 0
  4888  0010E4  0E08               	movlw	8
  4889  0010E6  604B               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  4890  0010E8  D013               	goto	i2l209
  4891                           
  4892                           ;eusart1.c: 178: {
  4893                           ;eusart1.c: 179: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  4894  0010EA  5016               	movf	_eusart1TxTail,w,c
  4895  0010EC  0D01               	mullw	1
  4896  0010EE  0E98               	movlw	low _eusart1TxBuffer
  4897  0010F0  24F3               	addwf	prodl,w,c
  4898  0010F2  6ED9               	movwf	fsr2l,c
  4899  0010F4  0E00               	movlw	high _eusart1TxBuffer
  4900  0010F6  20F4               	addwfc	prodh,w,c
  4901  0010F8  6EDA               	movwf	fsr2h,c
  4902  0010FA  50DF               	movf	indf2,w,c
  4903  0010FC  6EAD               	movwf	4013,c	;volatile
  4904  0010FE  2A16               	incf	_eusart1TxTail,f,c
  4905                           
  4906                           ;eusart1.c: 180: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  4907  001100  0E07               	movlw	7
  4908  001102  6416               	cpfsgt	_eusart1TxTail,c
  4909  001104  D003               	goto	i2l2404
  4910                           
  4911                           ;eusart1.c: 181: {
  4912                           ;eusart1.c: 182: eusart1TxTail = 0;
  4913  001106  0E00               	movlw	0
  4914  001108  6E16               	movwf	_eusart1TxTail,c
  4915  00110A  D000               	goto	i2l2404
  4916  00110C                     i2l2404:
  4917                           
  4918                           ;eusart1.c: 183: }
  4919                           ;eusart1.c: 184: eusart1TxBufferRemaining++;
  4920  00110C  2A4B               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  4921                           
  4922                           ;eusart1.c: 185: }
  4923  00110E  0012               	return	
  4924  001110                     i2l209:
  4925                           
  4926                           ;eusart1.c: 186: else
  4927                           ;eusart1.c: 187: {
  4928                           ;eusart1.c: 188: PIE1bits.TX1IE = 0;
  4929  001110  989D               	bcf	3997,4,c	;volatile
  4930  001112  0012               	return	
  4931  001114  0012               	return		;funcret
  4932  001116                     __end_of_EUSART1_Transmit_ISR:
  4933                           	opt stack 0
  4934                           pclatu	equ	0xFFB
  4935                           pclath	equ	0xFFA
  4936                           tblptru	equ	0xFF8
  4937                           tblptrh	equ	0xFF7
  4938                           tblptrl	equ	0xFF6
  4939                           tablat	equ	0xFF5
  4940                           prodh	equ	0xFF4
  4941                           prodl	equ	0xFF3
  4942                           intcon	equ	0xFF2
  4943                           intcon2	equ	0xFF1
  4944                           postinc0	equ	0xFEE
  4945                           fsr0h	equ	0xFEA
  4946                           fsr0l	equ	0xFE9
  4947                           wreg	equ	0xFE8
  4948                           fsr1h	equ	0xFE2
  4949                           fsr1l	equ	0xFE1
  4950                           indf2	equ	0xFDF
  4951                           postinc2	equ	0xFDE
  4952                           postdec2	equ	0xFDD
  4953                           fsr2h	equ	0xFDA
  4954                           fsr2l	equ	0xFD9
  4955                           status	equ	0xFD8
  4956                           
  4957 ;; *************** function _EUSART1_Receive_ISR *****************
  4958 ;; Defined at:
  4959 ;;		line 192 in file "mcc_generated_files/eusart1.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;		None
  4962 ;; Auto vars:     Size  Location     Type
  4963 ;;		None
  4964 ;; Return value:  Size  Location     Type
  4965 ;;		None               void
  4966 ;; Registers used:
  4967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4973 ;;      Params:         0       0       0       0       0       0       0
  4974 ;;      Locals:         0       0       0       0       0       0       0
  4975 ;;      Temps:          0       0       0       0       0       0       0
  4976 ;;      Totals:         0       0       0       0       0       0       0
  4977 ;;Total ram usage:        0 bytes
  4978 ;; Hardware stack levels used:    1
  4979 ;; This function calls:
  4980 ;;		Nothing
  4981 ;; This function is called by:
  4982 ;;		_INTERRUPT_InterruptManager
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           	psect	text32
  4987  001116                     __ptext32:
  4988                           	opt stack 0
  4989  001116                     _EUSART1_Receive_ISR:
  4990                           	opt stack 25
  4991                           
  4992                           ;eusart1.c: 194: if(1 == RC1STAbits.OERR)
  4993                           
  4994                           ;incstack = 0
  4995  001116  A2AB               	btfss	4011,1,c	;volatile
  4996  001118  D003               	goto	i2l2410
  4997                           
  4998                           ;eusart1.c: 195: {
  4999                           ;eusart1.c: 198: RC1STAbits.CREN = 0;
  5000  00111A  98AB               	bcf	4011,4,c	;volatile
  5001                           
  5002                           ;eusart1.c: 199: RC1STAbits.CREN = 1;
  5003  00111C  88AB               	bsf	4011,4,c	;volatile
  5004  00111E  D000               	goto	i2l2410
  5005  001120                     i2l2410:
  5006                           
  5007                           ;eusart1.c: 200: }
  5008                           ;eusart1.c: 203: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  5009  001120  5013               	movf	_eusart1RxHead,w,c
  5010  001122  0D01               	mullw	1
  5011  001124  0E90               	movlw	low _eusart1RxBuffer
  5012  001126  24F3               	addwf	prodl,w,c
  5013  001128  6ED9               	movwf	fsr2l,c
  5014  00112A  0E00               	movlw	high _eusart1RxBuffer
  5015  00112C  20F4               	addwfc	prodh,w,c
  5016  00112E  6EDA               	movwf	fsr2h,c
  5017  001130  CFAE FFDF          	movff	4014,indf2	;volatile
  5018  001134  2A13               	incf	_eusart1RxHead,f,c
  5019                           
  5020                           ;eusart1.c: 204: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  5021  001136  0E07               	movlw	7
  5022  001138  6413               	cpfsgt	_eusart1RxHead,c
  5023  00113A  D003               	goto	i2l2418
  5024                           
  5025                           ;eusart1.c: 205: {
  5026                           ;eusart1.c: 206: eusart1RxHead = 0;
  5027  00113C  0E00               	movlw	0
  5028  00113E  6E13               	movwf	_eusart1RxHead,c
  5029  001140  D000               	goto	i2l2418
  5030  001142                     i2l2418:
  5031                           
  5032                           ;eusart1.c: 207: }
  5033                           ;eusart1.c: 208: eusart1RxCount++;
  5034  001142  2A12               	incf	_eusart1RxCount,f,c	;volatile
  5035  001144  0012               	return		;funcret
  5036  001146                     __end_of_EUSART1_Receive_ISR:
  5037                           	opt stack 0
  5038                           pclatu	equ	0xFFB
  5039                           pclath	equ	0xFFA
  5040                           tblptru	equ	0xFF8
  5041                           tblptrh	equ	0xFF7
  5042                           tblptrl	equ	0xFF6
  5043                           tablat	equ	0xFF5
  5044                           prodh	equ	0xFF4
  5045                           prodl	equ	0xFF3
  5046                           intcon	equ	0xFF2
  5047                           intcon2	equ	0xFF1
  5048                           postinc0	equ	0xFEE
  5049                           fsr0h	equ	0xFEA
  5050                           fsr0l	equ	0xFE9
  5051                           wreg	equ	0xFE8
  5052                           fsr1h	equ	0xFE2
  5053                           fsr1l	equ	0xFE1
  5054                           indf2	equ	0xFDF
  5055                           postinc2	equ	0xFDE
  5056                           postdec2	equ	0xFDD
  5057                           fsr2h	equ	0xFDA
  5058                           fsr2l	equ	0xFD9
  5059                           status	equ	0xFD8
  5060                           
  5061 ;; *************** function _ADC_ISR *****************
  5062 ;; Defined at:
  5063 ;;		line 128 in file "mcc_generated_files/adc.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;		None
  5066 ;; Auto vars:     Size  Location     Type
  5067 ;;		None
  5068 ;; Return value:  Size  Location     Type
  5069 ;;		None               void
  5070 ;; Registers used:
  5071 ;;		None
  5072 ;; Tracked objects:
  5073 ;;		On entry : 0/0
  5074 ;;		On exit  : 0/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5077 ;;      Params:         0       0       0       0       0       0       0
  5078 ;;      Locals:         0       0       0       0       0       0       0
  5079 ;;      Temps:          0       0       0       0       0       0       0
  5080 ;;      Totals:         0       0       0       0       0       0       0
  5081 ;;Total ram usage:        0 bytes
  5082 ;; Hardware stack levels used:    1
  5083 ;; This function calls:
  5084 ;;		Nothing
  5085 ;; This function is called by:
  5086 ;;		_INTERRUPT_InterruptManager
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           	psect	text33
  5091  001260                     __ptext33:
  5092                           	opt stack 0
  5093  001260                     _ADC_ISR:
  5094                           	opt stack 25
  5095                           
  5096                           ;adc.c: 131: PIR1bits.ADIF = 0;
  5097                           
  5098                           ;incstack = 0
  5099  001260  9C9E               	bcf	3998,6,c	;volatile
  5100  001262  0012               	return		;funcret
  5101  001264                     __end_of_ADC_ISR:
  5102                           	opt stack 0
  5103                           pclatu	equ	0xFFB
  5104                           pclath	equ	0xFFA
  5105                           tblptru	equ	0xFF8
  5106                           tblptrh	equ	0xFF7
  5107                           tblptrl	equ	0xFF6
  5108                           tablat	equ	0xFF5
  5109                           prodh	equ	0xFF4
  5110                           prodl	equ	0xFF3
  5111                           intcon	equ	0xFF2
  5112                           intcon2	equ	0xFF1
  5113                           postinc0	equ	0xFEE
  5114                           fsr0h	equ	0xFEA
  5115                           fsr0l	equ	0xFE9
  5116                           wreg	equ	0xFE8
  5117                           fsr1h	equ	0xFE2
  5118                           fsr1l	equ	0xFE1
  5119                           indf2	equ	0xFDF
  5120                           postinc2	equ	0xFDE
  5121                           postdec2	equ	0xFDD
  5122                           fsr2h	equ	0xFDA
  5123                           fsr2l	equ	0xFD9
  5124                           status	equ	0xFD8
  5125                           pclatu	equ	0xFFB
  5126                           pclath	equ	0xFFA
  5127                           tblptru	equ	0xFF8
  5128                           tblptrh	equ	0xFF7
  5129                           tblptrl	equ	0xFF6
  5130                           tablat	equ	0xFF5
  5131                           prodh	equ	0xFF4
  5132                           prodl	equ	0xFF3
  5133                           intcon	equ	0xFF2
  5134                           intcon2	equ	0xFF1
  5135                           postinc0	equ	0xFEE
  5136                           fsr0h	equ	0xFEA
  5137                           fsr0l	equ	0xFE9
  5138                           wreg	equ	0xFE8
  5139                           fsr1h	equ	0xFE2
  5140                           fsr1l	equ	0xFE1
  5141                           indf2	equ	0xFDF
  5142                           postinc2	equ	0xFDE
  5143                           postdec2	equ	0xFDD
  5144                           fsr2h	equ	0xFDA
  5145                           fsr2l	equ	0xFD9
  5146                           status	equ	0xFD8
  5147                           
  5148                           	psect	rparam
  5149  0000                     pclatu	equ	0xFFB
  5150                           pclath	equ	0xFFA
  5151                           tblptru	equ	0xFF8
  5152                           tblptrh	equ	0xFF7
  5153                           tblptrl	equ	0xFF6
  5154                           tablat	equ	0xFF5
  5155                           prodh	equ	0xFF4
  5156                           prodl	equ	0xFF3
  5157                           intcon	equ	0xFF2
  5158                           intcon2	equ	0xFF1
  5159                           postinc0	equ	0xFEE
  5160                           fsr0h	equ	0xFEA
  5161                           fsr0l	equ	0xFE9
  5162                           wreg	equ	0xFE8
  5163                           fsr1h	equ	0xFE2
  5164                           fsr1l	equ	0xFE1
  5165                           indf2	equ	0xFDF
  5166                           postinc2	equ	0xFDE
  5167                           postdec2	equ	0xFDD
  5168                           fsr2h	equ	0xFDA
  5169                           fsr2l	equ	0xFD9
  5170                           status	equ	0xFD8


Data Sizes:
    Strings     16
    Constant    10
    Data        0
    BSS         105
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      75
    BANK0           160     17      86
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> LEDwriteDisplay@writeBuffer(COMRAM[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_tr_queue.pTrFlag	PTR enum E8836 size(2) Largest target is 0
		 -> LEDwriteDisplay@status(COMRAM[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(COMRAM[5]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(COMRAM[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(COMRAM[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(COMRAM[5]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(COMRAM[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(COMRAM[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E8836 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(COMRAM[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(COMRAM[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(COMRAM[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E8836 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(COMRAM[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    F8948.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(COMRAM[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWrite@pflag	PTR enum E8836 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(COMRAM[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(COMRAM[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    F8943.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(COMRAM[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(COMRAM[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDblinkRate@b(BANK0[2]), 
		 -> LEDBsetBrightness@writeBuffer(BANK0[2]), LEDBsetBrightness@b(BANK0[2]), I2C1_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), 

    S21$pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(COMRAM[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(COMRAM[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(COMRAM[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E8836 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(COMRAM[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(COMRAM[5]), 

    S33$pTrFlag	PTR enum E8836 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(COMRAM[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E8836 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(COMRAM[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    S33$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(COMRAM[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(COMRAM[5]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[5]), NULL(NULL[0]), 

    S44$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[5]), 

    S44$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___lwmod
    _putch->_EUSART1_Write
    ___lwmod->___lwdiv
    _LEDbegin->_I2C1_MasterWrite
    _LEDblinkRate->_I2C1_MasterWrite
    _LEDBsetBrightness->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_TMR0_ISR
    _TMR0_ISR->_ReadButtonState
    _I2C1_ISR->_I2C1_Stop

Critical Paths under _main in BANK0

    _main->_LEDbegin
    _LEDbegin->_LEDBsetBrightness
    _LEDbegin->_LEDblinkRate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11205
                                             15 BANK0      2     2      0
                              _Delay
                     _GetButtonState
                           _LEDbegin
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              21    17      4    1514
                                             32 COMRAM     4     0      4
                                              0 BANK0      8     8      0
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      93
                                             21 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      62
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     386
                                             27 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     395
                                             20 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDbegin                                             7     7      0    9404
                                              8 BANK0      7     7      0
                   _I2C1_MasterWrite
                  _LEDBsetBrightness
                       _LEDblinkRate
 ---------------------------------------------------------------------------------
 (2) _LEDblinkRate                                         8     5      3    3194
                                              0 BANK0      8     5      3
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _LEDBsetBrightness                                    8     5      3    3194
                                              0 BANK0      8     5      3
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWrite                                     7     0      7    2683
                                             29 COMRAM     7     0      7
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWriteTRBBuild                             9     2      7     494
                                             20 COMRAM     9     2      7
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterTRBInsert                                 6     2      4     494
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _GetButtonState                                       6     4      2     108
                                             20 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Delay                                                5     3      2     145
                                             20 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                          14    14      0     361
                                              6 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             2     2      0     330
                                              4 COMRAM     2     2      0
                    _ReadButtonState
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ReadButtonState                                      4     2      2     262
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _I2C1_ISR                                             2     2      0      31
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (7) _I2C1_Stop                                            3     3      0      31
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay
   _GetButtonState
   _LEDbegin
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
     _LEDBsetBrightness
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
     _LEDblinkRate
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR
     _ReadButtonState
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     11      56       4       53.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     24      4B       1       78.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A1       9        0.0%
DATA                 0      0      A1      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Jun 01 19:18:08 2015

           _eusart1TxBufferRemaining 004B             LEDBsetBrightness@timeOut 00AA  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                                l197 1008                                  l446 10CE  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                    __end_of_ADC_ISR 1264                                  prod 000FF3  
                                wreg 000FE8                         __CFG_LVP$OFF 000000  
                   __end_of_I2C1_ISR 0892                                 l1145 0E10  
                               l1155 0F5A                                 l3200 0932  
                               l3212 0978                                 l3204 095C  
                               l3220 09DE                                 l3150 0B54  
                               l3214 097E                                 l3160 0B7E  
                               l3208 0962                                 l3170 0B9C  
                               l3218 09CE                                 l3228 10BA  
                               l3156 0B6C                                 l3148 0B32  
                               l3166 0B8C                                 l3182 08C4  
                               l3174 08A0                                 l2800 0D92  
                               l3168 0B94                                 l3184 08EC  
                               l3272 0E8E                                 l2802 0DA0  
                               l3194 091E                                 l3178 08B4  
                               l3274 0E92                                 l2812 0FA0  
                               l3196 0924                                 l2806 0DB2  
                               l2910 0CCE                                 l2902 0C90  
                               l2830 1030                                 l2920 0CF8  
                               l2816 0FF8                                 l2916 0CE6  
                               l2908 0CAC                                 l2940 0C02  
                               l2828 102C                                 l2926 0D06  
                               l2942 0C24                                 l2934 0BE4  
                               l2928 0D0E                                 l2952 0C4E  
                               l2960 0C64                                 l2970 0DDE  
                               l2796 0D7E                                 l2948 0C3C  
                               l2980 0E04                                 l2972 0DE6  
                               l2958 0C5C                                 l2990 0F30  
                               l2968 0DD4                                 l2992 0F38  
                               l2996 0F4E                                 l2988 0F26  
                               STR_1 060B                                 _LATA 000F89  
                               _LATB 000F8A                                 _LATC 000F8B  
                               _LATD 000F8C                                 _LATE 000F8D  
                               u2520 0BD8                                 u2460 0C84  
                               u3177 10C0                                 i2l60 0654  
                               i2l71 06EE                                 i2l63 06B2  
                               i2l72 06FC                                 i2l65 06BA  
                               i2l90 07FA                                 i2l82 07A4  
                               i2l66 06C2                                 i2l76 0790  
                               i2l77 0782                                 i2l94 082A  
                               i2l86 07D0                                 i2l89 07EA  
                               _WPUB 000F61                        _EUSART1_Write 0FF4  
                               _main 0E74                      _TMR0_StartTimer 125C  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9               ??_I2C1_MasterTRBInsert 003D  
                      __CFG_BORV$190 000000                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 00C2                        __CFG_IESO$OFF 000000  
                       ___param_bank 000010       I2C1_MasterWriteTRBBuild@length 003D  
            __end_of_TMR0_Initialize 11FC                           _i2c1_state 0017  
     __size_of_OSCILLATOR_Initialize 000E            I2C1_MasterTRBInsert@count 003E  
      __end_of_OSCILLATOR_Initialize 124C            I2C1_MasterTRBInsert@pflag 003B  
                   LEDbegin@i2c_addr 00B2                     __end_of_LEDbegin 0BC2  
                              ?_main 0025                    __end_of_I2C1_Stop 1074  
                              _T0CON 000FD5                                _LATA3 007C4B  
                              _LATB3 007C53                                _LATD1 007C61  
                              _LATB5 007C55                                _LATE0 007C68  
                              _LATE1 007C69                                _LATE2 007C6A  
                     __CFG_DEBUG$OFF 000000                      __end_of___lwdiv 0E1A  
                    __end_of___lwmod 0F64                                i2l209 1110  
                              i2l380 0058                                i2l382 0064  
                              i2l390 0088                                i2l384 0070  
                              i2l386 007C                                i2l378 004C  
                              _TMR0H 000FD7                                _TMR0L 000FD6  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                                _TRISD 000F95  
                              _TRISE 000F96                                _Delay 10B0  
       __end_of_I2C1_BusCollisionISR 1266                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                 _EUSART1_Transmit_ISR 10E4  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                    ??_I2C1_Initialize 0039  
                   __end_of_TMR0_ISR 0E74                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                      __end_of_dpowers 060B  
                 __CFG_MCLRE$EXTMCLR 000000                                _putch 124C  
                     ?_EUSART1_Write 0025                                tablat 000FF5  
                              status 000FD8                       __CFG_HFOFST$ON 000000  
                  ??_ReadButtonState 0027                       __CFG_PBADEN$ON 000000  
    I2C1_MasterWriteTRBBuild@address 003E                      __initialization 119E  
              I2C1_MasterWrite@pdata 0042                I2C1_MasterWrite@pflag 0047  
         __end_of_EUSART1_Initialize 10B0                         __end_of_main 0ECA  
                      ?_LEDblinkRate 00A5                            ??_ADC_ISR 0025  
        ?_INTERRUPT_InterruptManager 0025                          _i2c1_object 0001  
                             ??_main 0049                        __activetblptr 000002  
                             ?_Delay 0039                ?_EUSART1_Transmit_ISR 0025  
            __end_of_TMR0_StartTimer 1260                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
                             _ANSELA 000F38                               ?_putch 0025  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             _ANSELD 000F3B                               _ANSELE 000F3C  
                             _RC1STA 000FAB                               i2l2120 0A4E  
                             i2l2122 0A68                               i2l2114 0A00  
                             i2l2124 0A82                               i2l2116 0A1A  
                             i2l2132 0AD0                               i2l3110 080A  
                             i2l2126 0A9C                               i2l2118 0A34  
                             i2l3024 06A0                               i2l2128 0AB6  
                             i2l2410 1120                               i2l3122 0832  
                             i2l3106 0802                               i2l3042 06E8  
                             i2l2404 110C                               i2l3124 0838  
                             i2l3036 06D0                               i2l3132 084A  
                             i2l3126 0840                               i2l2430 0E40  
                             i2l3056 072A                               i2l2418 1142  
                             i2l2426 0E2C                               i2l3084 07B4  
                             i2l3076 079E                               i2l2436 0E54  
                             i2l3094 07D8                       __CFG_WDTEN$OFF 000000  
                             Delay@x 003C                               i2l2860 106E  
                             i2l2868 120E                       _GetButtonState 1174  
                             _RCREG1 000FAE                               _OSCCON 000FD3  
                             _SPBRG1 000FAF                               _TX1STA 000FAC  
                             _TXREG1 000FAD                    ?_I2C1_MasterWrite 0042  
                     __CFG_XINST$OFF 000000                   ??_I2C1_MasterWrite 0049  
                     _p_i2c1_current 000C                       __CFG_STVREN$ON 000000  
                     ??_LEDblinkRate 0049                            ??___lwdiv 003D  
                          ??___lwmod 0044           ??_I2C1_MasterWriteTRBBuild 0040  
                   ?_TMR0_Initialize 0025                            ?_I2C1_ISR 0025  
                             clear_0 11A4                               clear_1 11B0  
                             _printf 0892                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                __end_of_TMR0_CallBack 125C  
                    ??_EUSART1_Write 0039               __end_of_GetButtonState 119E  
      I2C1_MasterWriteTRBBuild@pdata 003B                      _eusart1RxBuffer 0090  
                 LEDblinkRate@status 00AC        __size_of_INTERRUPT_Initialize 0010  
                    _eusart1TxBuffer 0098                    _SYSTEM_Initialize 11C0  
                         __accesstop 0060              __end_of__initialization 11B6  
                 ?_SYSTEM_Initialize 0025                            ?_LEDbegin 0025  
                      ___rparam_used 000001                       _i2c1_trb_count 0018  
                      __end_of_Delay 10E4                _I2C1_FunctionComplete 11FC  
               _I2C1_BusCollisionISR 1264                       __pcstackCOMRAM 0025  
             I2C1_MasterWrite@length 0044                  ??_SYSTEM_Initialize 0039  
                          ?_TMR0_ISR 0025                        __end_of_putch 1256  
                         ??_I2C1_ISR 0028               ??_EUSART1_Transmit_ISR 0025  
              TMR0_ISR@CountCallBack 000A                              ??_Delay 003B  
                     LEDbegin@status 00B3          __end_of_EUSART1_Receive_ISR 1146  
                   ?_TMR0_StartTimer 0025                      ?_GetButtonState 0039  
          __end_of_SYSTEM_Initialize 11DE                              ??_putch 003A  
                      _eusart1RxHead 0013                        _eusart1TxHead 0015  
                      _eusart1RxTail 0014                           __pbssBANK0 0060  
                      _eusart1TxTail 0016                      __CFG_PLLCFG$OFF 000000  
                         __pnvCOMRAM 0049                           ??_LEDbegin 0049  
              ?_I2C1_BusCollisionISR 0025                   __CFG_CCP2MX$PORTC1 000000  
                         ??_TMR0_ISR 0029                   __CFG_CCP3MX$PORTB5 000000  
                    _I2C1_Initialize 1146                              _ADC_ISR 1260  
                            ?_printf 0045                            TMR0_ISR@x 0029  
            __size_of_ADC_Initialize 0018                              _OSCCON2 000FD2  
                          _I2C1_Stop 1034                    __CFG_PRICLKEN$OFF 000000  
                            _OSCTUNE 000F9B                              _SPBRGH1 000FB0  
                            _SSP1ADD 000FC8                      _ReadButtonState 09FE  
                            _SSP1BUF 000FC9                 __end_of_LEDblinkRate 0C6E  
      I2C1_MasterTRBInsert@ptrb_list 0039                      __CFG_PWRTEN$OFF 000000  
             ?_I2C1_FunctionComplete 0025                              __Hparam 0000  
      __size_of_I2C1_MasterTRBInsert 00A6                              __Lparam 0000  
                 _p_i2c1_trb_current 000E                              ___lwdiv 0DBE  
                            ___lwmod 0F18                         __psmallconst 0600  
                            __pcinit 119E                              __ramtop 0600  
                            __ptext0 0E74                              __ptext1 0892  
                            __ptext2 124C                              __ptext3 0FF4  
                            __ptext4 0F18                              __ptext5 0DBE  
                            __ptext6 11C0                              __ptext7 11DE  
                            __ptext8 125C                              __ptext9 0ECA  
                    __size_of_printf 016C                            _T0CONbits 000FD5  
                            _dpowers 0601                _OSCILLATOR_Initialize 123E  
                 _EUSART1_Initialize 1074             ??_PIN_MANAGER_Initialize 0039  
                         ?_I2C1_Stop 0025           __size_of_SYSTEM_Initialize 001E  
               I2C1_ISR@pi2c_buf_ptr 0008                 end_of_initialization 11B6  
                          Delay@wait 0039                  ?_EUSART1_Initialize 0025  
                      __Lmediumconst 0000               ??_I2C1_BusCollisionISR 0025  
            __end_of_I2C1_Initialize 1174                              printf@c 00AC  
                            printf@f 0045                              postdec2 000FDD  
                            postinc0 000FEE                              postinc2 000FDE  
              ReadButtonState@btnnum 0025                 ??_EUSART1_Initialize 0039  
                LEDblinkRate@timeOut 00AA                            _PORTAbits 000F80  
                          _PORTBbits 000F81                            _PORTDbits 000F83  
            __end_of_ReadButtonState 0B16            __size_of_I2C1_MasterWrite 004C  
                  __size_of_I2C1_ISR 0276                  EUSART1_Write@txData 0039  
            LEDBsetBrightness@status 00AC    I2C1_ISR@i2c_10bit_address_restart 0010  
                LEDbegin@writeBuffer 00AD              I2C1_MasterWrite@address 0045  
          LEDBsetBrightness@i2c_addr 00A7                    __size_of_LEDbegin 00AC  
               _timer0ReloadVal16bit 0049         __end_of_INTERRUPT_Initialize 123E  
            I2C1_MasterWrite@trBlock 0019                    __size_of_TMR0_ISR 005A  
           I2C1_Stop@completion_code 0027                       _ADC_Initialize 1216  
             ?_OSCILLATOR_Initialize 0025                       __end_of_printf 09FE  
                   ??_GetButtonState 003B                    _LEDBsetBrightness 0C6E  
                start_initialization 119E                __size_of_LEDblinkRate 00AC  
                        ??_I2C1_Stop 0025             __size_of_TMR0_Initialize 001E  
    __size_of_PIN_MANAGER_Initialize 004E                   ?_LEDBsetBrightness 00A5  
  __size_of_I2C1_MasterWriteTRBBuild 0044                          putch@txData 003A  
          ?_I2C1_MasterWriteTRBBuild 0039                __end_of_EUSART1_Write 1034  
                    LEDbegin@timeOut 00B0                  ??_LEDBsetBrightness 0049  
                   ?_I2C1_Initialize 0025               __size_of_TMR0_CallBack 0006  
             __end_of_ADC_Initialize 122E                             ?_ADC_ISR 0025  
                       _LEDblinkRate 0BC2                             ??_printf 00A5  
          __end_of_LEDBsetBrightness 0D18         I2C1_MasterWriteTRBBuild@ptrb 0039  
                     _eusart1RxCount 0012                     ?_ReadButtonState 0025  
                        __pbssCOMRAM 0001        __size_of_EUSART1_Transmit_ISR 0032  
                      __pcstackBANK0 00A5                        _i2c1_tr_queue 001E  
            ??_I2C1_FunctionComplete 0025         __size_of_EUSART1_Receive_ISR 0030  
           __size_of_TMR0_StartTimer 0004                     ___lwdiv@dividend 0039  
             _PIN_MANAGER_Initialize 0ECA                            __pintcode 0008  
                           ?___lwdiv 0039                             ?___lwmod 0040  
                    ?_ADC_Initialize 0025                             _I2C1_ISR 061C  
       ??_INTERRUPT_InterruptManager 002B         LEDBsetBrightness@writeBuffer 00A8  
                   _I2C1_MasterWrite 0F64                             _BAUD1CON 000FB8  
                        __smallconst 0600         __end_of_I2C1_MasterTRBInsert 0DBE  
                     __size_of_Delay 0034                            _butnarray 0088  
                   ___lwdiv@quotient 003E                        _TMR0_CallBack 1256  
                     __size_of_putch 000A                 _INTERRUPT_Initialize 122E  
               GetButtonState@btnnum 0039               I2C1_MasterRead@trBlock 00A0  
                  ??_TMR0_Initialize 0039                             _IPR1bits 000F9F  
                           _LEDbegin 0B16                             _IPR2bits 000FA2  
                           _PIE1bits 000F9D                             _PIE2bits 000FA0  
                      LEDblinkRate@b 00A5                             i2u130_40 0A7C  
                           i2u130_46 0A7E                             i2u131_40 0A96  
                           i2u131_46 0A98                             i2u132_40 0AB0  
                           i2u132_46 0AB2                             i2u133_40 0ACA  
                           i2u133_46 0ACC                             i2u126_40 0A14  
                           i2u126_46 0A16                             i2u127_40 0A2E  
__size_of_INTERRUPT_InterruptManager 00BA                             i2u127_46 0A30  
                           i2u128_40 0A48                             i2u128_46 0A4A  
                           i2u129_40 0A62                             i2u129_46 0A64  
                           i2u175_40 0E64                             _PIR1bits 000F9E  
                           _PIR2bits 000FA1                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                             _SSP1CON1 000FC6  
                           _SSP1CON3 000FCB                             _TMR0_ISR 0E1A  
                          main@ADCNT 00B4                             _SSP1STAT 000FC7  
                   __size_of_ADC_ISR 0004                           _ADCON0bits 000FC2  
         __size_of_LEDBsetBrightness 00AA                           printf@flag 00A8  
                         printf@prec 00A9                       ?_TMR0_CallBack 0025  
                        _INTCON2bits 000FF1                ?_INTERRUPT_Initialize 0025  
                           __Hrparam 0000        __size_of_I2C1_BusCollisionISR 0002  
                           __Lrparam 0000                   __CFG_BOREN$SBORDIS 000000  
             I2C1_ISR@i2c_bytes_left 0011                    __CFG_P2BMX$PORTD2 000000  
            LEDblinkRate@writeBuffer 00A8              ??_OSCILLATOR_Initialize 0039  
                  ??_TMR0_StartTimer 0039          __size_of_EUSART1_Initialize 003C  
                   __size_of___lwdiv 005C                     __size_of___lwmod 004C  
   __end_of_I2C1_MasterWriteTRBBuild 0FF4                      ___lwdiv@divisor 003B  
                I2C1_ISR@i2c_address 0023                      ___lwdiv@counter 003D  
                           __ptext10 123E                             __ptext11 122E  
                           __ptext20 0D18                             __ptext12 1146  
                           __ptext21 1174                             __ptext13 1074  
                           __ptext30 1264                             __ptext22 10B0  
                           __ptext14 1216                             __ptext31 10E4  
                           __ptext15 0B16                             __ptext32 1116  
                           __ptext24 0E1A                             __ptext16 0BC2  
                           __ptext33 1260                             __ptext25 1256  
                           __ptext17 0C6E                             __ptext26 09FE  
                           __ptext18 0F64                             __ptext27 061C  
                           __ptext19 0FB0                             __ptext28 1034  
                           __ptext29 11FC                         _SSP1CON1bits 000FC6  
                       _SSP1CON2bits 000FC5                        __size_of_main 0056  
               _I2C1_MasterTRBInsert 0D18                           _RC1STAbits 000FAB  
               LEDblinkRate@i2c_addr 00A7   __end_of_INTERRUPT_InterruptManager 00C2  
         _INTERRUPT_InterruptManager 0008                            printf@val 00AA  
                _EUSART1_Receive_ISR 1116                   LEDBsetBrightness@b 00A5  
                         _INTCONbits 000FF2                      ??_TMR0_CallBack 0025  
             ??_INTERRUPT_Initialize 0039                             intlevel2 0000  
               ?_EUSART1_Receive_ISR 0025                     ___lwmod@dividend 0040  
            ?_PIN_MANAGER_Initialize 0025             __end_of_I2C1_MasterWrite 0FB0  
     __size_of_I2C1_FunctionComplete 001A        __end_of_I2C1_FunctionComplete 1216  
              ?_I2C1_MasterTRBInsert 0039         __end_of_EUSART1_Transmit_ISR 1116  
                   ??_ADC_Initialize 0039                             printf@ap 00A6  
           __size_of_I2C1_Initialize 002E               __size_of_EUSART1_Write 0040  
                    ___lwmod@divisor 0042                      _TMR0_Initialize 11DE  
                    ___lwmod@counter 0044             _I2C1_MasterWriteTRBBuild 0FB0  
                  __CFG_T3CMX$PORTC0 000000             __size_of_ReadButtonState 0118  
              ??_EUSART1_Receive_ISR 0025       __end_of_PIN_MANAGER_Initialize 0F18  
            __size_of_GetButtonState 002A                   __size_of_I2C1_Stop 0040  
                      _displaybuffer 0060                    __CFG_FOSC$INTIO67 000000  
