

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Mar 27 03:12:30 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    49  0000                     
    50                           	psect	smallconst
    51  000600                     __psmallconst:
    52                           	opt stack 0
    53  000600  00                 	db	0
    54  000601                     log@coeff:
    55                           	opt stack 0
    56  000601  00                 	db	0
    57  000602  00                 	db	0
    58  000603  00                 	db	0
    59  000604  00                 	db	0
    60  000605  80                 	db	128
    61  000606  3F                 	db	63
    62  000607  F0                 	db	240
    63  000608  FF                 	db	255
    64  000609  BE                 	db	190
    65  00060A  E2                 	db	226
    66  00060B  A9                 	db	169
    67  00060C  3E                 	db	62
    68  00060D  83                 	db	131
    69  00060E  76                 	db	118
    70  00060F  BE                 	db	190
    71  000610  AE                 	db	174
    72  000611  2B                 	db	43
    73  000612  3E                 	db	62
    74  000613  3C                 	db	60
    75  000614  C3                 	db	195
    76  000615  BD                 	db	189
    77  000616  D2                 	db	210
    78  000617  13                 	db	19
    79  000618  3D                 	db	61
    80  000619  78                 	db	120
    81  00061A  D3                 	db	211
    82  00061B  BB                 	db	187
    83  00061C                     __end_oflog@coeff:
    84                           	opt stack 0
    85  0000                     _TMR1	set	4046
    86  0000                     _ADCON0	set	4034
    87  0000                     _ADCON0bits	set	4034
    88  0000                     _ADCON1	set	4033
    89  0000                     _ADCON2	set	4032
    90  0000                     _ADRESH	set	4036
    91  0000                     _ADRESL	set	4035
    92  0000                     _ANSELA	set	3896
    93  0000                     _ANSELB	set	3897
    94  0000                     _ANSELC	set	3898
    95  0000                     _ANSELD	set	3899
    96  0000                     _ANSELE	set	3900
    97  0000                     _BAUD1CON	set	4024
    98  0000                     _INTCON2bits	set	4081
    99  0000                     _INTCONbits	set	4082
   100  0000                     _IPR1bits	set	3999
   101  0000                     _LATA	set	3977
   102  0000                     _LATB	set	3978
   103  0000                     _LATC	set	3979
   104  0000                     _LATD	set	3980
   105  0000                     _LATE	set	3981
   106  0000                     _OSCCON	set	4051
   107  0000                     _OSCCON2	set	4050
   108  0000                     _OSCTUNE	set	3995
   109  0000                     _PIE1bits	set	3997
   110  0000                     _PIR1bits	set	3998
   111  0000                     _RC1REG	set	4014
   112  0000                     _RC1STA	set	4011
   113  0000                     _RC1STAbits	set	4011
   114  0000                     _RCONbits	set	4048
   115  0000                     _RCREG1	set	4014
   116  0000                     _SPBRG1	set	4015
   117  0000                     _SPBRGH1	set	4016
   118  0000                     _T1CON	set	4045
   119  0000                     _T1CONbits	set	4045
   120  0000                     _T1GCON	set	4044
   121  0000                     _T1GCONbits	set	4044
   122  0000                     _TMR1H	set	4047
   123  0000                     _TMR1L	set	4046
   124  0000                     _TRISA	set	3986
   125  0000                     _TRISB	set	3987
   126  0000                     _TRISC	set	3988
   127  0000                     _TRISD	set	3989
   128  0000                     _TRISE	set	3990
   129  0000                     _TX1REG	set	4013
   130  0000                     _TX1STA	set	4012
   131  0000                     _TXREG1	set	4013
   132  0000                     _WPUB	set	3937
   133  0000                     _LATA6	set	31822
   134  0000                     _LATC0	set	31832
   135  0000                     _LATC1	set	31833
   136  00061C  00                 	db	0	; dummy byte at the end
   137  0000                     
   138                           	psect	nvCOMRAM
   139  00004C                     __pnvCOMRAM:
   140                           	opt stack 0
   141  00004C                     _timer1ReloadVal:
   142                           	opt stack 0
   143  00004C                     	ds	2
   144  00004E                     _eusart1TxBufferRemaining:
   145                           	opt stack 0
   146  00004E                     	ds	1
   147                           
   148                           ; #config settings
   149  0000                     
   150                           	psect	cinit
   151  001672                     __pcinit:
   152                           	opt stack 0
   153  001672                     start_initialization:
   154                           	opt stack 0
   155  001672                     __initialization:
   156                           	opt stack 0
   157                           
   158                           ; Clear objects allocated to BANK1 (110 bytes)
   159  001672  EE01  F000         	lfsr	0,__pbssBANK1
   160  001676  0E6E               	movlw	110
   161  001678                     clear_0:
   162  001678  6AEE               	clrf	postinc0,c
   163  00167A  06E8               	decf	wreg,f,c
   164  00167C  E1FD               	bnz	clear_0
   165                           
   166                           ; Clear objects allocated to BANK0 (136 bytes)
   167  00167E  EE00  F060         	lfsr	0,__pbssBANK0
   168  001682  0E88               	movlw	136
   169  001684                     clear_1:
   170  001684  6AEE               	clrf	postinc0,c
   171  001686  06E8               	decf	wreg,f,c
   172  001688  E1FD               	bnz	clear_1
   173                           
   174                           ; Clear objects allocated to COMRAM (14 bytes)
   175  00168A  EE00  F03E         	lfsr	0,__pbssCOMRAM
   176  00168E  0E0E               	movlw	14
   177  001690                     clear_2:
   178  001690  6AEE               	clrf	postinc0,c
   179  001692  06E8               	decf	wreg,f,c
   180  001694  E1FD               	bnz	clear_2
   181  001696                     end_of_initialization:
   182                           	opt stack 0
   183  001696                     __end_of__initialization:
   184                           	opt stack 0
   185  001696  0E00               	movlw	low (__Lsmallconst shr (0+16))
   186  001698  6EF8               	movwf	tblptru,c
   187  00169A  0E06               	movlw	high __Lsmallconst
   188  00169C  6EF7               	movwf	tblptrh,c
   189  00169E  0100               	movlb	0
   190  0016A0  EF6A  F00B         	goto	_main	;jump to C main() function
   191                           tblptru	equ	0xFF8
   192                           tblptrh	equ	0xFF7
   193                           postinc0	equ	0xFEE
   194                           wreg	equ	0xFE8
   195                           
   196                           	psect	bssCOMRAM
   197  00003E                     __pbssCOMRAM:
   198                           	opt stack 0
   199  00003E                     _Battery_Current:
   200                           	opt stack 0
   201  00003E                     	ds	3
   202  000041                     _ADC_Buffer_Point:
   203                           	opt stack 0
   204  000041                     	ds	2
   205  000043                     _errno:
   206                           	opt stack 0
   207  000043                     	ds	2
   208  000045                     _Temp_Aquire:
   209                           	opt stack 0
   210  000045                     	ds	1
   211  000046                     _Volt_Aquire:
   212                           	opt stack 0
   213  000046                     	ds	1
   214  000047                     _eusart1RxCount:
   215                           	opt stack 0
   216  000047                     	ds	1
   217  000048                     _eusart1RxHead:
   218                           	opt stack 0
   219  000048                     	ds	1
   220  000049                     _eusart1RxTail:
   221                           	opt stack 0
   222  000049                     	ds	1
   223  00004A                     _eusart1TxHead:
   224                           	opt stack 0
   225  00004A                     	ds	1
   226  00004B                     _eusart1TxTail:
   227                           	opt stack 0
   228  00004B                     	ds	1
   229                           tblptru	equ	0xFF8
   230                           tblptrh	equ	0xFF7
   231                           postinc0	equ	0xFEE
   232                           wreg	equ	0xFE8
   233                           
   234                           	psect	bssBANK0
   235  000060                     __pbssBANK0:
   236                           	opt stack 0
   237  000060                     _Battery_Volt:
   238                           	opt stack 0
   239  000060                     	ds	30
   240  00007E                     _Temp_DegF:
   241                           	opt stack 0
   242  00007E                     	ds	30
   243  00009C                     _Battery_Adc:
   244                           	opt stack 0
   245  00009C                     	ds	20
   246  0000B0                     _eusart1RxBuffer:
   247                           	opt stack 0
   248  0000B0                     	ds	8
   249  0000B8                     _eusart1TxBuffer:
   250                           	opt stack 0
   251  0000B8                     	ds	8
   252  0000C0                     _PrevBattery_Current:
   253                           	opt stack 0
   254  0000C0                     	ds	3
   255  0000C3                     _TempBattery_Current:
   256                           	opt stack 0
   257  0000C3                     	ds	3
   258  0000C6                     _Temp_Done:
   259                           	opt stack 0
   260  0000C6                     	ds	2
   261  0000C8                     _Volt_Done:
   262                           	opt stack 0
   263  0000C8                     	ds	2
   264  0000CA                     _TempBattery_Volt:
   265                           	opt stack 0
   266  0000CA                     	ds	30
   267                           tblptru	equ	0xFF8
   268                           tblptrh	equ	0xFF7
   269                           postinc0	equ	0xFEE
   270                           wreg	equ	0xFE8
   271                           
   272                           	psect	bssBANK1
   273  000100                     __pbssBANK1:
   274                           	opt stack 0
   275  000100                     _PrevBattery_Volt:
   276                           	opt stack 0
   277  000100                     	ds	30
   278  00011E                     _PrevTemp_DegF:
   279                           	opt stack 0
   280  00011E                     	ds	30
   281  00013C                     _TmpTemp_DegF:
   282                           	opt stack 0
   283  00013C                     	ds	30
   284  00015A                     _Temp_Adc:
   285                           	opt stack 0
   286  00015A                     	ds	20
   287                           tblptru	equ	0xFF8
   288                           tblptrh	equ	0xFF7
   289                           postinc0	equ	0xFEE
   290                           wreg	equ	0xFE8
   291                           
   292                           	psect	cstackBANK1
   293  00016E                     __pcstackBANK1:
   294                           	opt stack 0
   295  00016E                     _Temp_Convert$1586:
   296                           	opt stack 0
   297                           
   298                           ; 2 bytes @ 0x0
   299  00016E                     	ds	2
   300  000170                     _Temp_Convert$1587:
   301                           	opt stack 0
   302                           
   303                           ; 2 bytes @ 0x2
   304  000170                     	ds	2
   305  000172                     Temp_Convert@x:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x4
   309  000172                     	ds	2
   310  000174                     Temp_Convert@steinhart:
   311                           	opt stack 0
   312                           
   313                           ; 3 bytes @ 0x6
   314  000174                     	ds	3
   315  000177                     
   316                           ; 2 bytes @ 0x9
   317  000177                     	ds	2
   318  000179                     
   319                           ; 3 bytes @ 0xB
   320  000179                     	ds	3
   321                           tblptru	equ	0xFF8
   322                           tblptrh	equ	0xFF7
   323                           postinc0	equ	0xFEE
   324                           wreg	equ	0xFE8
   325                           
   326                           	psect	cstackBANK0
   327  0000E8                     __pcstackBANK0:
   328                           	opt stack 0
   329  0000E8                     ___ftadd@sign:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x0
   333  0000E8                     	ds	1
   334  0000E9                     ___ftadd@exp2:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x1
   338  0000E9                     	ds	1
   339  0000EA                     ___ftadd@exp1:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0x2
   343  0000EA                     	ds	1
   344  0000EB                     ??_Battery_Convert:
   345  0000EB                     ?___ftsub:
   346                           	opt stack 0
   347  0000EB                     ?_eval_poly:
   348                           	opt stack 0
   349  0000EB                     ___ftsub@f1:
   350                           	opt stack 0
   351  0000EB                     eval_poly@x:
   352                           	opt stack 0
   353                           
   354                           ; 3 bytes @ 0x3
   355  0000EB                     	ds	2
   356  0000ED                     Battery_Convert@x:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0x5
   360  0000ED                     	ds	1
   361  0000EE                     eval_poly@d:
   362                           	opt stack 0
   363  0000EE                     ___ftsub@f2:
   364                           	opt stack 0
   365                           
   366                           ; 3 bytes @ 0x6
   367  0000EE                     	ds	2
   368  0000F0                     eval_poly@n:
   369                           	opt stack 0
   370                           
   371                           ; 2 bytes @ 0x8
   372  0000F0                     	ds	2
   373  0000F2                     eval_poly@res:
   374                           	opt stack 0
   375                           
   376                           ; 3 bytes @ 0xA
   377  0000F2                     	ds	3
   378  0000F5                     ?_log:
   379                           	opt stack 0
   380  0000F5                     log@x:
   381                           	opt stack 0
   382                           
   383                           ; 3 bytes @ 0xD
   384  0000F5                     	ds	3
   385  0000F8                     log@exponent:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x10
   389  0000F8                     	ds	2
   390  0000FA                     ??_Temp_Convert:
   391                           
   392                           ; 0 bytes @ 0x12
   393  0000FA                     	ds	2
   394                           tblptru	equ	0xFF8
   395                           tblptrh	equ	0xFF7
   396                           postinc0	equ	0xFEE
   397                           wreg	equ	0xFE8
   398                           
   399                           	psect	cstackCOMRAM
   400  000001                     __pcstackCOMRAM:
   401                           	opt stack 0
   402  000001                     ??_TMR1_ISR:
   403  000001                     
   404                           ; 1 bytes @ 0x0
   405  000001                     	ds	3
   406  000004                     ??_INTERRUPT_InterruptManager:
   407                           
   408                           ; 0 bytes @ 0x3
   409  000004                     	ds	14
   410  000012                     ?___awdiv:
   411                           	opt stack 0
   412  000012                     ?___ftpack:
   413                           	opt stack 0
   414  000012                     ?_frexp:
   415                           	opt stack 0
   416  000012                     ___awdiv@dividend:
   417                           	opt stack 0
   418  000012                     ___ftpack@arg:
   419                           	opt stack 0
   420  000012                     frexp@value:
   421                           	opt stack 0
   422                           
   423                           ; 3 bytes @ 0x11
   424  000012                     	ds	2
   425  000014                     ___awdiv@divisor:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x13
   429  000014                     	ds	1
   430  000015                     ___ftpack@exp:
   431                           	opt stack 0
   432  000015                     frexp@eptr:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x14
   436  000015                     	ds	1
   437  000016                     ___awdiv@counter:
   438                           	opt stack 0
   439  000016                     ___ftpack@sign:
   440                           	opt stack 0
   441                           
   442                           ; 1 bytes @ 0x15
   443  000016                     	ds	1
   444  000017                     ??___ftpack:
   445  000017                     ??_frexp:
   446  000017                     ___awdiv@sign:
   447                           	opt stack 0
   448                           
   449                           ; 1 bytes @ 0x16
   450  000017                     	ds	1
   451  000018                     ___awdiv@quotient:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0x17
   455  000018                     	ds	2
   456  00001A                     ?___wmul:
   457                           	opt stack 0
   458  00001A                     ?___ftdiv:
   459                           	opt stack 0
   460  00001A                     ___wmul@multiplier:
   461                           	opt stack 0
   462  00001A                     ___ftdiv@f1:
   463                           	opt stack 0
   464                           
   465                           ; 3 bytes @ 0x19
   466  00001A                     	ds	2
   467  00001C                     ___wmul@multiplicand:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x1B
   471  00001C                     	ds	1
   472  00001D                     ___ftdiv@f2:
   473                           	opt stack 0
   474                           
   475                           ; 3 bytes @ 0x1C
   476  00001D                     	ds	1
   477  00001E                     ___wmul@product:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x1D
   481  00001E                     	ds	2
   482  000020                     ??___ftdiv:
   483  000020                     ?___awtoft:
   484                           	opt stack 0
   485  000020                     ___awtoft@c:
   486                           	opt stack 0
   487  000020                     ___ftge@ff1:
   488                           	opt stack 0
   489                           
   490                           ; 3 bytes @ 0x1F
   491  000020                     	ds	3
   492  000023                     ___awtoft@sign:
   493                           	opt stack 0
   494  000023                     ___ftdiv@cntr:
   495                           	opt stack 0
   496  000023                     ___ftge@ff2:
   497                           	opt stack 0
   498                           
   499                           ; 3 bytes @ 0x22
   500  000023                     	ds	1
   501  000024                     ?___ftmul:
   502                           	opt stack 0
   503  000024                     ___ftdiv@f3:
   504                           	opt stack 0
   505  000024                     ___ftmul@f1:
   506                           	opt stack 0
   507                           
   508                           ; 3 bytes @ 0x23
   509  000024                     	ds	2
   510  000026                     ??___ftge:
   511                           
   512                           ; 0 bytes @ 0x25
   513  000026                     	ds	1
   514  000027                     ___ftdiv@exp:
   515                           	opt stack 0
   516  000027                     ___ftmul@f2:
   517                           	opt stack 0
   518                           
   519                           ; 3 bytes @ 0x26
   520  000027                     	ds	1
   521  000028                     ___ftdiv@sign:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0x27
   525  000028                     	ds	1
   526  000029                     Battery_Fault@fault:
   527                           	opt stack 0
   528  000029                     Temp_Fault@fault:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0x28
   532  000029                     	ds	1
   533  00002A                     ??___ftmul:
   534  00002A                     Battery_Fault@i:
   535                           	opt stack 0
   536  00002A                     Temp_Fault@i:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x29
   540  00002A                     	ds	3
   541  00002D                     ___ftmul@exp:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x2C
   545  00002D                     	ds	1
   546  00002E                     ___ftmul@f3_as_product:
   547                           	opt stack 0
   548                           
   549                           ; 3 bytes @ 0x2D
   550  00002E                     	ds	3
   551  000031                     ___ftmul@cntr:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x30
   555  000031                     	ds	1
   556  000032                     ___ftmul@sign:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x31
   560  000032                     	ds	1
   561  000033                     ?___ftadd:
   562                           	opt stack 0
   563  000033                     ___ftadd@f1:
   564                           	opt stack 0
   565                           
   566                           ; 3 bytes @ 0x32
   567  000033                     	ds	3
   568  000036                     ___ftadd@f2:
   569                           	opt stack 0
   570                           
   571                           ; 3 bytes @ 0x35
   572  000036                     	ds	3
   573  000039                     ??___ftadd:
   574                           
   575                           ; 0 bytes @ 0x38
   576  000039                     	ds	3
   577  00003C                     ??_eval_poly:
   578  00003C                     Battery_Filter@x:
   579                           	opt stack 0
   580  00003C                     Temp_Filter@x:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x3B
   584  00003C                     	ds	2
   585  00003E                     tblptru	equ	0xFF8
   586                           tblptrh	equ	0xFF7
   587                           postinc0	equ	0xFEE
   588                           wreg	equ	0xFE8
   589                           
   590                           ; 0 bytes @ 0x3D
   591 ;;
   592 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   593 ;;
   594 ;; *************** function _main *****************
   595 ;; Defined at:
   596 ;;		line 31 in file "Main.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;  argc            2    9[BANK1 ] int 
   599 ;;  argv            3   11[BANK1 ] PTR PTR unsigned char 
   600 ;; Auto vars:     Size  Location     Type
   601 ;;		None
   602 ;; Return value:  Size  Location     Type
   603 ;;                  2    9[BANK1 ] int 
   604 ;; Registers used:
   605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   611 ;;      Params:         0       0       5       0       0       0       0
   612 ;;      Locals:         0       0       0       0       0       0       0
   613 ;;      Temps:          0       0       0       0       0       0       0
   614 ;;      Totals:         0       0       5       0       0       0       0
   615 ;;Total ram usage:        5 bytes
   616 ;; Hardware stack levels required when called:    8
   617 ;; This function calls:
   618 ;;		_Battery_Convert
   619 ;;		_Battery_Fault
   620 ;;		_SYSTEM_Initialize
   621 ;;		_Temp_Convert
   622 ;;		_Temp_Fault
   623 ;; This function is called by:
   624 ;;		Startup code after reset
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           	psect	text0
   629  0016D4                     __ptext0:
   630                           	opt stack 0
   631  0016D4                     _main:
   632                           	opt stack 23
   633                           
   634                           ;Main.c: 33: SYSTEM_Initialize();
   635                           
   636                           ;incstack = 0
   637  0016D4  ECA5  F00B         	call	_SYSTEM_Initialize	;wreg free
   638                           
   639                           ;Main.c: 52: (INTCONbits.GIE = 1);
   640  0016D8  8EF2               	bsf	intcon,7,c	;volatile
   641                           
   642                           ;Main.c: 55: (INTCONbits.PEIE = 1);
   643  0016DA  8CF2               	bsf	intcon,6,c	;volatile
   644  0016DC                     l2865:
   645                           
   646                           ;Main.c: 65: {
   647                           ;Main.c: 66: if (Temp_Done)
   648  0016DC  0100               	movlb	0	; () banked
   649  0016DE  51C7               	movf	(_Temp_Done+1)& (0+255),w,b
   650  0016E0  11C6               	iorwf	_Temp_Done& (0+255),w,b
   651  0016E2  B4D8               	btfsc	status,2,c
   652  0016E4  D004               	goto	l2871
   653                           
   654                           ; BSR set to: 0
   655                           ;Main.c: 67: {
   656                           ;Main.c: 68: Temp_Convert();
   657  0016E6  EC0C  F004         	call	_Temp_Convert	;wreg free
   658                           
   659                           ;Main.c: 69: Temp_Fault();
   660  0016EA  EC63  F00A         	call	_Temp_Fault	;wreg free
   661  0016EE                     l2871:
   662                           
   663                           ;Main.c: 70: }
   664                           ;Main.c: 71: if (Volt_Done)
   665  0016EE  0100               	movlb	0	; () banked
   666  0016F0  51C9               	movf	(_Volt_Done+1)& (0+255),w,b
   667  0016F2  11C8               	iorwf	_Volt_Done& (0+255),w,b
   668  0016F4  B4D8               	btfsc	status,2,c
   669  0016F6  D7F2               	goto	l2865
   670                           
   671                           ; BSR set to: 0
   672                           ;Main.c: 72: {
   673                           ;Main.c: 73: Battery_Convert();
   674  0016F8  EC6C  F008         	call	_Battery_Convert	;wreg free
   675                           
   676                           ;Main.c: 74: Battery_Fault();
   677  0016FC  ECD5  F008         	call	_Battery_Fault	;wreg free
   678  001700  D7ED               	goto	l2865
   679  001702                     __end_of_main:
   680                           	opt stack 0
   681                           tblptru	equ	0xFF8
   682                           tblptrh	equ	0xFF7
   683                           intcon	equ	0xFF2
   684                           postinc0	equ	0xFEE
   685                           wreg	equ	0xFE8
   686                           status	equ	0xFD8
   687                           
   688 ;; *************** function _Temp_Fault *****************
   689 ;; Defined at:
   690 ;;		line 12 in file "Tempeture.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;		None
   693 ;; Auto vars:     Size  Location     Type
   694 ;;  i               2   41[COMRAM] int 
   695 ;;  fault           1   40[COMRAM] unsigned char 
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      unsigned char 
   698 ;; Registers used:
   699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   705 ;;      Params:         0       0       0       0       0       0       0
   706 ;;      Locals:         3       0       0       0       0       0       0
   707 ;;      Temps:          0       0       0       0       0       0       0
   708 ;;      Totals:         3       0       0       0       0       0       0
   709 ;;Total ram usage:        3 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; Hardware stack levels required when called:    4
   712 ;; This function calls:
   713 ;;		___ftge
   714 ;;		___wmul
   715 ;; This function is called by:
   716 ;;		_main
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           	psect	text1
   721  0014C6                     __ptext1:
   722                           	opt stack 0
   723  0014C6                     _Temp_Fault:
   724                           	opt stack 26
   725                           
   726                           ;Tempeture.c: 15: char fault = 0;
   727                           
   728                           ;incstack = 0
   729  0014C6  0E00               	movlw	0
   730  0014C8  6E29               	movwf	Temp_Fault@fault,c
   731                           
   732                           ;Tempeture.c: 16: for(int i = 0;i<9;i++)
   733  0014CA  0E00               	movlw	0
   734  0014CC  6E2B               	movwf	Temp_Fault@i+1,c
   735  0014CE  0E00               	movlw	0
   736  0014D0  6E2A               	movwf	Temp_Fault@i,c
   737  0014D2  502B               	movf	Temp_Fault@i+1,w,c
   738  0014D4  0A80               	xorlw	128
   739  0014D6  0F80               	addlw	-128
   740  0014D8  0E09               	movlw	9
   741  0014DA  B4D8               	btfsc	status,2,c
   742  0014DC  5C2A               	subwf	Temp_Fault@i,w,c
   743  0014DE  B0D8               	btfsc	status,0,c
   744  0014E0  0012               	return	
   745                           
   746                           ;Tempeture.c: 17: {
   747                           ;Tempeture.c: 18: if (60.5 > Temp_DegF[i])
   748  0014E2  C02A  F01A         	movff	Temp_Fault@i,___wmul@multiplier
   749  0014E6  C02B  F01B         	movff	Temp_Fault@i+1,___wmul@multiplier+1
   750  0014EA  0E00               	movlw	0
   751  0014EC  6E1D               	movwf	___wmul@multiplicand+1,c
   752  0014EE  0E03               	movlw	3
   753  0014F0  6E1C               	movwf	___wmul@multiplicand,c
   754  0014F2  EC81  F00B         	call	___wmul	;wreg free
   755  0014F6  0100               	movlb	0	; () banked
   756  0014F8  0E7E               	movlw	low _Temp_DegF
   757  0014FA  241A               	addwf	?___wmul,w,c
   758  0014FC  6ED9               	movwf	fsr2l,c
   759  0014FE  0100               	movlb	0	; () banked
   760  001500  0E00               	movlw	high _Temp_DegF
   761  001502  201B               	addwfc	?___wmul+1,w,c
   762  001504  6EDA               	movwf	fsr2h,c
   763  001506  CFDE F020          	movff	postinc2,___ftge@ff1
   764  00150A  CFDE F021          	movff	postinc2,___ftge@ff1+1
   765  00150E  CFDD F022          	movff	postdec2,___ftge@ff1+2
   766  001512  0E00               	movlw	0
   767  001514  6E23               	movwf	___ftge@ff2,c
   768  001516  0E72               	movlw	114
   769  001518  6E24               	movwf	___ftge@ff2+1,c
   770  00151A  0E42               	movlw	66
   771  00151C  6E25               	movwf	___ftge@ff2+2,c
   772  00151E  EC1B  F00A         	call	___ftge	;wreg free
   773  001522  B0D8               	btfsc	status,0,c
   774  001524  D002               	goto	l2815
   775                           
   776                           ;Tempeture.c: 19: {
   777                           ;Tempeture.c: 20: fault = 1;
   778  001526  0E01               	movlw	1
   779  001528  6E29               	movwf	Temp_Fault@fault,c
   780  00152A                     l2815:
   781  00152A  4A2A               	infsnz	Temp_Fault@i,f,c
   782  00152C  2A2B               	incf	Temp_Fault@i+1,f,c
   783  00152E  D7D1               	goto	L1
   784  001530                     __end_of_Temp_Fault:
   785                           	opt stack 0
   786                           tblptru	equ	0xFF8
   787                           tblptrh	equ	0xFF7
   788                           intcon	equ	0xFF2
   789                           postinc0	equ	0xFEE
   790                           wreg	equ	0xFE8
   791                           postinc2	equ	0xFDE
   792                           postdec2	equ	0xFDD
   793                           fsr2h	equ	0xFDA
   794                           fsr2l	equ	0xFD9
   795                           status	equ	0xFD8
   796                           
   797 ;; *************** function _Temp_Convert *****************
   798 ;; Defined at:
   799 ;;		line 50 in file "Tempeture.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;		None
   802 ;; Auto vars:     Size  Location     Type
   803 ;;  steinhart       3    6[BANK1 ] float 
   804 ;;  x               2    4[BANK1 ] int 
   805 ;; Return value:  Size  Location     Type
   806 ;;		None               void
   807 ;; Registers used:
   808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   814 ;;      Params:         0       0       0       0       0       0       0
   815 ;;      Locals:         0       0       9       0       0       0       0
   816 ;;      Temps:          0       2       0       0       0       0       0
   817 ;;      Totals:         0       2       9       0       0       0       0
   818 ;;Total ram usage:       11 bytes
   819 ;; Hardware stack levels used:    1
   820 ;; Hardware stack levels required when called:    7
   821 ;; This function calls:
   822 ;;		_Temp_Filter
   823 ;;		___awdiv
   824 ;;		___awtoft
   825 ;;		___ftadd
   826 ;;		___ftdiv
   827 ;;		___ftmul
   828 ;;		___ftsub
   829 ;;		___wmul
   830 ;;		_log
   831 ;; This function is called by:
   832 ;;		_main
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text2
   837  000818                     __ptext2:
   838                           	opt stack 0
   839  000818                     _Temp_Convert:
   840                           	opt stack 23
   841                           
   842                           ;Tempeture.c: 52: int x;
   843                           ;Tempeture.c: 53: float steinhart;
   844                           ;Tempeture.c: 54: for(x = 0; x < 10; x++)
   845                           
   846                           ;incstack = 0
   847  000818  0E00               	movlw	0
   848  00081A  0101               	movlb	1	; () banked
   849  00081C  6F73               	movwf	(Temp_Convert@x+1)& (0+255),b
   850  00081E  0E00               	movlw	0
   851  000820  0101               	movlb	1	; () banked
   852  000822  6F72               	movwf	Temp_Convert@x& (0+255),b
   853  000824                     
   854                           ; BSR set to: 1
   855  000824  0101               	movlb	1	; () banked
   856  000826  5173               	movf	(Temp_Convert@x+1)& (0+255),w,b
   857  000828  0A80               	xorlw	128
   858  00082A  0F80               	addlw	-128
   859  00082C  0E0A               	movlw	10
   860  00082E  B4D8               	btfsc	status,2,c
   861  000830  5D72               	subwf	Temp_Convert@x& (0+255),w,b
   862  000832  B0D8               	btfsc	status,0,c
   863  000834  D0E9               	goto	l2849
   864                           
   865                           ; BSR set to: 1
   866                           ;Tempeture.c: 55: {
   867                           ;Tempeture.c: 56: steinhart = (10000 / ((1023 / Temp_Adc[x]) - 1)) / 10000;
   868                           
   869                           ; BSR set to: 1
   870                           
   871                           ; BSR set to: 1
   872  000836  0E5A               	movlw	low _Temp_Adc
   873  000838  0100               	movlb	0	; () banked
   874  00083A  6FFA               	movwf	??_Temp_Convert& (0+255),b
   875  00083C  0E01               	movlw	high _Temp_Adc
   876  00083E  6FFB               	movwf	(??_Temp_Convert+1)& (0+255),b
   877  000840  90D8               	bcf	status,0,c
   878  000842  0101               	movlb	1	; () banked
   879  000844  3572               	rlcf	Temp_Convert@x& (0+255),w,b
   880  000846  6ED9               	movwf	fsr2l,c
   881  000848  0101               	movlb	1	; () banked
   882  00084A  3573               	rlcf	(Temp_Convert@x+1)& (0+255),w,b
   883  00084C  6EDA               	movwf	fsr2h,c
   884  00084E  0100               	movlb	0	; () banked
   885  000850  51FA               	movf	??_Temp_Convert& (0+255),w,b
   886  000852  26D9               	addwf	fsr2l,f,c
   887  000854  0100               	movlb	0	; () banked
   888  000856  51FB               	movf	(??_Temp_Convert+1)& (0+255),w,b
   889  000858  22DA               	addwfc	fsr2h,f,c
   890  00085A  CFDE F014          	movff	postinc2,___awdiv@divisor
   891  00085E  CFDD F015          	movff	postdec2,___awdiv@divisor+1
   892  000862  0E03               	movlw	3
   893  000864  6E13               	movwf	___awdiv@dividend+1,c
   894  000866  6812               	setf	___awdiv@dividend,c
   895  000868  EC80  F009         	call	___awdiv	;wreg free
   896  00086C  0EFF               	movlw	255
   897  00086E  2412               	addwf	?___awdiv,w,c
   898  000870  0101               	movlb	1	; () banked
   899  000872  6F6E               	movwf	_Temp_Convert$1586& (0+255),b
   900  000874  0EFF               	movlw	255
   901  000876  2013               	addwfc	?___awdiv+1,w,c
   902  000878  0101               	movlb	1	; () banked
   903  00087A  6F6F               	movwf	(_Temp_Convert$1586+1)& (0+255),b
   904                           
   905                           ; BSR set to: 1
   906                           ;Tempeture.c: 55: {
   907                           ;Tempeture.c: 56: steinhart = (10000 / ((1023 / Temp_Adc[x]) - 1)) / 10000;
   908  00087C  C16E  F014         	movff	_Temp_Convert$1586,___awdiv@divisor
   909  000880  C16F  F015         	movff	_Temp_Convert$1586+1,___awdiv@divisor+1
   910  000884  0E27               	movlw	39
   911  000886  6E13               	movwf	___awdiv@dividend+1,c
   912  000888  0E10               	movlw	16
   913  00088A  6E12               	movwf	___awdiv@dividend,c
   914  00088C  EC80  F009         	call	___awdiv	;wreg free
   915  000890  C012  F170         	movff	?___awdiv,_Temp_Convert$1587
   916  000894  C013  F171         	movff	?___awdiv+1,_Temp_Convert$1587+1
   917                           
   918                           ;Tempeture.c: 55: {
   919                           ;Tempeture.c: 56: steinhart = (10000 / ((1023 / Temp_Adc[x]) - 1)) / 10000;
   920  000898  0E27               	movlw	39
   921  00089A  6E15               	movwf	___awdiv@divisor+1,c
   922  00089C  0E10               	movlw	16
   923  00089E  6E14               	movwf	___awdiv@divisor,c
   924  0008A0  C170  F012         	movff	_Temp_Convert$1587,___awdiv@dividend
   925  0008A4  C171  F013         	movff	_Temp_Convert$1587+1,___awdiv@dividend+1
   926  0008A8  EC80  F009         	call	___awdiv	;wreg free
   927  0008AC  C012  F020         	movff	?___awdiv,___awtoft@c
   928  0008B0  C013  F021         	movff	?___awdiv+1,___awtoft@c+1
   929  0008B4  ECBF  F00A         	call	___awtoft	;wreg free
   930  0008B8  C020  F174         	movff	?___awtoft,Temp_Convert@steinhart
   931  0008BC  C021  F175         	movff	?___awtoft+1,Temp_Convert@steinhart+1
   932  0008C0  C022  F176         	movff	?___awtoft+2,Temp_Convert@steinhart+2
   933                           
   934                           ;Tempeture.c: 57: steinhart = log(steinhart);
   935  0008C4  C174  F0F5         	movff	Temp_Convert@steinhart,log@x
   936  0008C8  C175  F0F6         	movff	Temp_Convert@steinhart+1,log@x+1
   937  0008CC  C176  F0F7         	movff	Temp_Convert@steinhart+2,log@x+2
   938  0008D0  EC67  F006         	call	_log	;wreg free
   939  0008D4  C0F5  F174         	movff	?_log,Temp_Convert@steinhart
   940  0008D8  C0F6  F175         	movff	?_log+1,Temp_Convert@steinhart+1
   941  0008DC  C0F7  F176         	movff	?_log+2,Temp_Convert@steinhart+2
   942                           
   943                           ;Tempeture.c: 58: steinhart /= 3950;
   944  0008E0  C174  F01A         	movff	Temp_Convert@steinhart,___ftdiv@f1
   945  0008E4  C175  F01B         	movff	Temp_Convert@steinhart+1,___ftdiv@f1+1
   946  0008E8  C176  F01C         	movff	Temp_Convert@steinhart+2,___ftdiv@f1+2
   947  0008EC  0EE0               	movlw	224
   948  0008EE  6E1D               	movwf	___ftdiv@f2,c
   949  0008F0  0E76               	movlw	118
   950  0008F2  6E1E               	movwf	___ftdiv@f2+1,c
   951  0008F4  0E45               	movlw	69
   952  0008F6  6E1F               	movwf	___ftdiv@f2+2,c
   953  0008F8  ECFB  F007         	call	___ftdiv	;wreg free
   954  0008FC  C01A  F174         	movff	?___ftdiv,Temp_Convert@steinhart
   955  000900  C01B  F175         	movff	?___ftdiv+1,Temp_Convert@steinhart+1
   956  000904  C01C  F176         	movff	?___ftdiv+2,Temp_Convert@steinhart+2
   957                           
   958                           ;Tempeture.c: 59: steinhart += 1.0 / (25 + 273.15);
   959  000908  C174  F033         	movff	Temp_Convert@steinhart,___ftadd@f1
   960  00090C  C175  F034         	movff	Temp_Convert@steinhart+1,___ftadd@f1+1
   961  000910  C176  F035         	movff	Temp_Convert@steinhart+2,___ftadd@f1+2
   962  000914  0ECF               	movlw	207
   963  000916  6E36               	movwf	___ftadd@f2,c
   964  000918  0E5B               	movlw	91
   965  00091A  6E37               	movwf	___ftadd@f2+1,c
   966  00091C  0E3B               	movlw	59
   967  00091E  6E38               	movwf	___ftadd@f2+2,c
   968  000920  EC0F  F003         	call	___ftadd	;wreg free
   969  000924  C033  F174         	movff	?___ftadd,Temp_Convert@steinhart
   970  000928  C034  F175         	movff	?___ftadd+1,Temp_Convert@steinhart+1
   971  00092C  C035  F176         	movff	?___ftadd+2,Temp_Convert@steinhart+2
   972                           
   973                           ;Tempeture.c: 60: steinhart = 1.0 / steinhart;
   974  000930  0E00               	movlw	0
   975  000932  6E1A               	movwf	___ftdiv@f1,c
   976  000934  0E80               	movlw	128
   977  000936  6E1B               	movwf	___ftdiv@f1+1,c
   978  000938  0E3F               	movlw	63
   979  00093A  6E1C               	movwf	___ftdiv@f1+2,c
   980  00093C  C174  F01D         	movff	Temp_Convert@steinhart,___ftdiv@f2
   981  000940  C175  F01E         	movff	Temp_Convert@steinhart+1,___ftdiv@f2+1
   982  000944  C176  F01F         	movff	Temp_Convert@steinhart+2,___ftdiv@f2+2
   983  000948  ECFB  F007         	call	___ftdiv	;wreg free
   984  00094C  C01A  F174         	movff	?___ftdiv,Temp_Convert@steinhart
   985  000950  C01B  F175         	movff	?___ftdiv+1,Temp_Convert@steinhart+1
   986  000954  C01C  F176         	movff	?___ftdiv+2,Temp_Convert@steinhart+2
   987                           
   988                           ;Tempeture.c: 61: steinhart -= 273.15;
   989  000958  C174  F0EB         	movff	Temp_Convert@steinhart,___ftsub@f1
   990  00095C  C175  F0EC         	movff	Temp_Convert@steinhart+1,___ftsub@f1+1
   991  000960  C176  F0ED         	movff	Temp_Convert@steinhart+2,___ftsub@f1+2
   992  000964  0E93               	movlw	147
   993  000966  0100               	movlb	0	; () banked
   994  000968  6FEE               	movwf	___ftsub@f2& (0+255),b
   995  00096A  0E88               	movlw	136
   996  00096C  0100               	movlb	0	; () banked
   997  00096E  6FEF               	movwf	(___ftsub@f2+1)& (0+255),b
   998  000970  0E43               	movlw	67
   999  000972  0100               	movlb	0	; () banked
  1000  000974  6FF0               	movwf	(___ftsub@f2+2)& (0+255),b
  1001  000976  ECE3  F00A         	call	___ftsub	;wreg free
  1002  00097A  C0EB  F174         	movff	?___ftsub,Temp_Convert@steinhart
  1003  00097E  C0EC  F175         	movff	?___ftsub+1,Temp_Convert@steinhart+1
  1004  000982  C0ED  F176         	movff	?___ftsub+2,Temp_Convert@steinhart+2
  1005                           
  1006                           ;Tempeture.c: 62: steinhart = (steinhart*1.800) + 32.00;
  1007  000986  0E66               	movlw	102
  1008  000988  6E27               	movwf	___ftmul@f2,c
  1009  00098A  0EE6               	movlw	230
  1010  00098C  6E28               	movwf	___ftmul@f2+1,c
  1011  00098E  0E3F               	movlw	63
  1012  000990  6E29               	movwf	___ftmul@f2+2,c
  1013  000992  C174  F024         	movff	Temp_Convert@steinhart,___ftmul@f1
  1014  000996  C175  F025         	movff	Temp_Convert@steinhart+1,___ftmul@f1+1
  1015  00099A  C176  F026         	movff	Temp_Convert@steinhart+2,___ftmul@f1+2
  1016  00099E  EC11  F007         	call	___ftmul	;wreg free
  1017  0009A2  C024  F033         	movff	?___ftmul,___ftadd@f1
  1018  0009A6  C025  F034         	movff	?___ftmul+1,___ftadd@f1+1
  1019  0009AA  C026  F035         	movff	?___ftmul+2,___ftadd@f1+2
  1020  0009AE  0E00               	movlw	0
  1021  0009B0  6E36               	movwf	___ftadd@f2,c
  1022  0009B2  0E00               	movlw	0
  1023  0009B4  6E37               	movwf	___ftadd@f2+1,c
  1024  0009B6  0E42               	movlw	66
  1025  0009B8  6E38               	movwf	___ftadd@f2+2,c
  1026  0009BA  EC0F  F003         	call	___ftadd	;wreg free
  1027  0009BE  C033  F174         	movff	?___ftadd,Temp_Convert@steinhart
  1028  0009C2  C034  F175         	movff	?___ftadd+1,Temp_Convert@steinhart+1
  1029  0009C6  C035  F176         	movff	?___ftadd+2,Temp_Convert@steinhart+2
  1030                           
  1031                           ;Tempeture.c: 63: TmpTemp_DegF[x] = steinhart;
  1032  0009CA  C172  F01A         	movff	Temp_Convert@x,___wmul@multiplier
  1033  0009CE  C173  F01B         	movff	Temp_Convert@x+1,___wmul@multiplier+1
  1034  0009D2  0E00               	movlw	0
  1035  0009D4  6E1D               	movwf	___wmul@multiplicand+1,c
  1036  0009D6  0E03               	movlw	3
  1037  0009D8  6E1C               	movwf	___wmul@multiplicand,c
  1038  0009DA  EC81  F00B         	call	___wmul	;wreg free
  1039  0009DE  0101               	movlb	1	; () banked
  1040  0009E0  0E3C               	movlw	low _TmpTemp_DegF
  1041  0009E2  241A               	addwf	?___wmul,w,c
  1042  0009E4  6ED9               	movwf	fsr2l,c
  1043  0009E6  0101               	movlb	1	; () banked
  1044  0009E8  0E01               	movlw	high _TmpTemp_DegF
  1045  0009EA  201B               	addwfc	?___wmul+1,w,c
  1046  0009EC  6EDA               	movwf	fsr2h,c
  1047  0009EE  0101               	movlb	1	; () banked
  1048  0009F0  C174  FFDE         	movff	Temp_Convert@steinhart,postinc2
  1049  0009F4  0101               	movlb	1	; () banked
  1050  0009F6  C175  FFDE         	movff	Temp_Convert@steinhart+1,postinc2
  1051  0009FA  0101               	movlb	1	; () banked
  1052  0009FC  C176  FFDD         	movff	Temp_Convert@steinhart+2,postdec2
  1053                           
  1054                           ; BSR set to: 1
  1055  000A00  0101               	movlb	1	; () banked
  1056  000A02  4B72               	infsnz	Temp_Convert@x& (0+255),f,b
  1057  000A04  2B73               	incf	(Temp_Convert@x+1)& (0+255),f,b
  1058  000A06  D70E               	goto	L2
  1059  000A08                     l2849:
  1060                           
  1061                           ; BSR set to: 1
  1062                           ;Tempeture.c: 64: }
  1063                           ;Tempeture.c: 65: Temp_Filter();
  1064  000A08  EC07  F005         	call	_Temp_Filter	;wreg free
  1065  000A0C  0012               	return	
  1066  000A0E                     __end_of_Temp_Convert:
  1067                           	opt stack 0
  1068                           tblptru	equ	0xFF8
  1069                           tblptrh	equ	0xFF7
  1070                           intcon	equ	0xFF2
  1071                           postinc0	equ	0xFEE
  1072                           wreg	equ	0xFE8
  1073                           postinc2	equ	0xFDE
  1074                           postdec2	equ	0xFDD
  1075                           fsr2h	equ	0xFDA
  1076                           fsr2l	equ	0xFD9
  1077                           status	equ	0xFD8
  1078                           
  1079 ;; *************** function _log *****************
  1080 ;; Defined at:
  1081 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\log.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  x               3   13[BANK0 ] int 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  exponent        2   16[BANK0 ] int 
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  3   13[BANK0 ] int 
  1088 ;; Registers used:
  1089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1095 ;;      Params:         0       3       0       0       0       0       0
  1096 ;;      Locals:         0       2       0       0       0       0       0
  1097 ;;      Temps:          0       0       0       0       0       0       0
  1098 ;;      Totals:         0       5       0       0       0       0       0
  1099 ;;Total ram usage:        5 bytes
  1100 ;; Hardware stack levels used:    1
  1101 ;; Hardware stack levels required when called:    6
  1102 ;; This function calls:
  1103 ;;		___awtoft
  1104 ;;		___ftadd
  1105 ;;		___ftmul
  1106 ;;		_eval_poly
  1107 ;;		_frexp
  1108 ;; This function is called by:
  1109 ;;		_Temp_Convert
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text3
  1114  000CCE                     __ptext3:
  1115                           	opt stack 0
  1116  000CCE                     _log:
  1117                           	opt stack 23
  1118                           
  1119                           ;incstack = 0
  1120  000CCE  0100               	movlb	0	; () banked
  1121  000CD0  51F7               	movf	(log@x+2)& (0+255),w,b
  1122  000CD2  0A80               	xorlw	128
  1123  000CD4  0F80               	addlw	128
  1124  000CD6  E107               	bnz	u2425
  1125  000CD8  0E00               	movlw	0
  1126  000CDA  0100               	movlb	0	; () banked
  1127  000CDC  5DF6               	subwf	(log@x+1)& (0+255),w,b
  1128  000CDE  E103               	bnz	u2425
  1129  000CE0  0E00               	movlw	0
  1130  000CE2  0100               	movlb	0	; () banked
  1131  000CE4  5DF5               	subwf	log@x& (0+255),w,b
  1132  000CE6                     u2425:
  1133  000CE6  B0D8               	btfsc	status,0,c
  1134  000CE8  D00E               	goto	l2663
  1135                           
  1136                           ; BSR set to: 0
  1137  000CEA  0E00               	movlw	0
  1138  000CEC  6E44               	movwf	_errno+1,c
  1139  000CEE  0E21               	movlw	33
  1140  000CF0  6E43               	movwf	_errno,c
  1141  000CF2  0E00               	movlw	0
  1142  000CF4  0100               	movlb	0	; () banked
  1143  000CF6  6FF5               	movwf	?_log& (0+255),b
  1144  000CF8  0E00               	movlw	0
  1145  000CFA  0100               	movlb	0	; () banked
  1146  000CFC  6FF6               	movwf	(?_log+1)& (0+255),b
  1147  000CFE  0E00               	movlw	0
  1148  000D00  0100               	movlb	0	; () banked
  1149  000D02  6FF7               	movwf	(?_log+2)& (0+255),b
  1150  000D04  0012               	return	
  1151  000D06                     l2663:
  1152                           
  1153                           ; BSR set to: 0
  1154  000D06  0E7F               	movlw	127
  1155  000D08  0100               	movlb	0	; () banked
  1156  000D0A  15F7               	andwf	(log@x+2)& (0+255),w,b
  1157  000D0C  0100               	movlb	0	; () banked
  1158  000D0E  11F6               	iorwf	(log@x+1)& (0+255),w,b
  1159  000D10  0100               	movlb	0	; () banked
  1160  000D12  11F5               	iorwf	log@x& (0+255),w,b
  1161  000D14  A4D8               	btfss	status,2,c
  1162  000D16  D00E               	goto	l2669
  1163                           
  1164                           ; BSR set to: 0
  1165  000D18  0E00               	movlw	0
  1166  000D1A  6E44               	movwf	_errno+1,c
  1167  000D1C  0E22               	movlw	34
  1168  000D1E  6E43               	movwf	_errno,c
  1169  000D20  0E00               	movlw	0
  1170  000D22  0100               	movlb	0	; () banked
  1171  000D24  6FF5               	movwf	?_log& (0+255),b
  1172  000D26  0E00               	movlw	0
  1173  000D28  0100               	movlb	0	; () banked
  1174  000D2A  6FF6               	movwf	(?_log+1)& (0+255),b
  1175  000D2C  0E00               	movlw	0
  1176  000D2E  0100               	movlb	0	; () banked
  1177  000D30  6FF7               	movwf	(?_log+2)& (0+255),b
  1178  000D32  0012               	return	
  1179  000D34                     l2669:
  1180                           
  1181                           ; BSR set to: 0
  1182  000D34  0E00               	movlw	0
  1183  000D36  6E27               	movwf	___ftmul@f2,c
  1184  000D38  0E00               	movlw	0
  1185  000D3A  6E28               	movwf	___ftmul@f2+1,c
  1186  000D3C  0E40               	movlw	64
  1187  000D3E  6E29               	movwf	___ftmul@f2+2,c
  1188  000D40  0100               	movlb	0	; () banked
  1189  000D42  0E00               	movlw	high log@exponent
  1190  000D44  6E16               	movwf	frexp@eptr+1,c
  1191  000D46  0100               	movlb	0	; () banked
  1192  000D48  0EF8               	movlw	low log@exponent
  1193  000D4A  6E15               	movwf	frexp@eptr,c
  1194  000D4C  C0F5  F012         	movff	log@x,frexp@value
  1195  000D50  C0F6  F013         	movff	log@x+1,frexp@value+1
  1196  000D54  C0F7  F014         	movff	log@x+2,frexp@value+2
  1197  000D58  ECD2  F009         	call	_frexp	;wreg free
  1198  000D5C  C012  F024         	movff	?_frexp,___ftmul@f1
  1199  000D60  C013  F025         	movff	?_frexp+1,___ftmul@f1+1
  1200  000D64  C014  F026         	movff	?_frexp+2,___ftmul@f1+2
  1201  000D68  EC11  F007         	call	___ftmul	;wreg free
  1202  000D6C  C024  F033         	movff	?___ftmul,___ftadd@f1
  1203  000D70  C025  F034         	movff	?___ftmul+1,___ftadd@f1+1
  1204  000D74  C026  F035         	movff	?___ftmul+2,___ftadd@f1+2
  1205  000D78  0E00               	movlw	0
  1206  000D7A  6E36               	movwf	___ftadd@f2,c
  1207  000D7C  0E80               	movlw	128
  1208  000D7E  6E37               	movwf	___ftadd@f2+1,c
  1209  000D80  0EBF               	movlw	191
  1210  000D82  6E38               	movwf	___ftadd@f2+2,c
  1211  000D84  EC0F  F003         	call	___ftadd	;wreg free
  1212  000D88  C033  F0F5         	movff	?___ftadd,log@x
  1213  000D8C  C034  F0F6         	movff	?___ftadd+1,log@x+1
  1214  000D90  C035  F0F7         	movff	?___ftadd+2,log@x+2
  1215  000D94  0100               	movlb	0	; () banked
  1216  000D96  07F8               	decf	log@exponent& (0+255),f,b
  1217  000D98  A0D8               	btfss	status,0,c
  1218  000D9A  07F9               	decf	(log@exponent+1)& (0+255),f,b
  1219                           
  1220                           ; BSR set to: 0
  1221  000D9C  C0F5  F0EB         	movff	log@x,eval_poly@x
  1222  000DA0  C0F6  F0EC         	movff	log@x+1,eval_poly@x+1
  1223  000DA4  C0F7  F0ED         	movff	log@x+2,eval_poly@x+2
  1224  000DA8  0E06               	movlw	high log@coeff
  1225  000DAA  0100               	movlb	0	; () banked
  1226  000DAC  6FEF               	movwf	(eval_poly@d+1)& (0+255),b
  1227  000DAE  0E01               	movlw	low log@coeff
  1228  000DB0  0100               	movlb	0	; () banked
  1229  000DB2  6FEE               	movwf	eval_poly@d& (0+255),b
  1230  000DB4  0E00               	movlw	0
  1231  000DB6  0100               	movlb	0	; () banked
  1232  000DB8  6FF1               	movwf	(eval_poly@n+1)& (0+255),b
  1233  000DBA  0E08               	movlw	8
  1234  000DBC  0100               	movlb	0	; () banked
  1235  000DBE  6FF0               	movwf	eval_poly@n& (0+255),b
  1236  000DC0  EC89  F007         	call	_eval_poly	;wreg free
  1237  000DC4  C0EB  F0F5         	movff	?_eval_poly,log@x
  1238  000DC8  C0EC  F0F6         	movff	?_eval_poly+1,log@x+1
  1239  000DCC  C0ED  F0F7         	movff	?_eval_poly+2,log@x+2
  1240  000DD0  0E72               	movlw	114
  1241  000DD2  6E27               	movwf	___ftmul@f2,c
  1242  000DD4  0E31               	movlw	49
  1243  000DD6  6E28               	movwf	___ftmul@f2+1,c
  1244  000DD8  0E3F               	movlw	63
  1245  000DDA  6E29               	movwf	___ftmul@f2+2,c
  1246  000DDC  C0F8  F020         	movff	log@exponent,___awtoft@c
  1247  000DE0  C0F9  F021         	movff	log@exponent+1,___awtoft@c+1
  1248  000DE4  ECBF  F00A         	call	___awtoft	;wreg free
  1249  000DE8  C020  F024         	movff	?___awtoft,___ftmul@f1
  1250  000DEC  C021  F025         	movff	?___awtoft+1,___ftmul@f1+1
  1251  000DF0  C022  F026         	movff	?___awtoft+2,___ftmul@f1+2
  1252  000DF4  EC11  F007         	call	___ftmul	;wreg free
  1253  000DF8  C024  F033         	movff	?___ftmul,___ftadd@f1
  1254  000DFC  C025  F034         	movff	?___ftmul+1,___ftadd@f1+1
  1255  000E00  C026  F035         	movff	?___ftmul+2,___ftadd@f1+2
  1256  000E04  C0F5  F036         	movff	log@x,___ftadd@f2
  1257  000E08  C0F6  F037         	movff	log@x+1,___ftadd@f2+1
  1258  000E0C  C0F7  F038         	movff	log@x+2,___ftadd@f2+2
  1259  000E10  EC0F  F003         	call	___ftadd	;wreg free
  1260  000E14  C033  F0F5         	movff	?___ftadd,?_log
  1261  000E18  C034  F0F6         	movff	?___ftadd+1,?_log+1
  1262  000E1C  C035  F0F7         	movff	?___ftadd+2,?_log+2
  1263  000E20  0012               	return	
  1264  000E22                     __end_of_log:
  1265                           	opt stack 0
  1266                           tblptru	equ	0xFF8
  1267                           tblptrh	equ	0xFF7
  1268                           intcon	equ	0xFF2
  1269                           postinc0	equ	0xFEE
  1270                           wreg	equ	0xFE8
  1271                           postinc2	equ	0xFDE
  1272                           postdec2	equ	0xFDD
  1273                           fsr2h	equ	0xFDA
  1274                           fsr2l	equ	0xFD9
  1275                           status	equ	0xFD8
  1276                           
  1277 ;; *************** function _frexp *****************
  1278 ;; Defined at:
  1279 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\frexp.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;  value           3   17[COMRAM] int 
  1282 ;;  eptr            2   20[COMRAM] PTR int 
  1283 ;;		 -> log@exponent(2), 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;		None
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  3   17[COMRAM] PTR int 
  1288 ;; Registers used:
  1289 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1295 ;;      Params:         5       0       0       0       0       0       0
  1296 ;;      Locals:         0       0       0       0       0       0       0
  1297 ;;      Temps:          2       0       0       0       0       0       0
  1298 ;;      Totals:         7       0       0       0       0       0       0
  1299 ;;Total ram usage:        7 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; Hardware stack levels required when called:    3
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_log
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text4
  1310  0013A4                     __ptext4:
  1311                           	opt stack 0
  1312  0013A4                     _frexp:
  1313                           	opt stack 25
  1314                           
  1315                           ;incstack = 0
  1316  0013A4  0E7F               	movlw	127
  1317  0013A6  1414               	andwf	frexp@value+2,w,c
  1318  0013A8  1013               	iorwf	frexp@value+1,w,c
  1319  0013AA  1012               	iorwf	frexp@value,w,c
  1320  0013AC  A4D8               	btfss	status,2,c
  1321  0013AE  D00F               	goto	l2591
  1322  0013B0  C015  FFD9         	movff	frexp@eptr,fsr2l
  1323  0013B4  C016  FFDA         	movff	frexp@eptr+1,fsr2h
  1324  0013B8  0E00               	movlw	0
  1325  0013BA  6EDE               	movwf	postinc2,c
  1326  0013BC  0E00               	movlw	0
  1327  0013BE  6EDD               	movwf	postdec2,c
  1328  0013C0  0E00               	movlw	0
  1329  0013C2  6E12               	movwf	?_frexp,c
  1330  0013C4  0E00               	movlw	0
  1331  0013C6  6E13               	movwf	?_frexp+1,c
  1332  0013C8  0E00               	movlw	0
  1333  0013CA  6E14               	movwf	?_frexp+2,c
  1334  0013CC  0012               	return	
  1335  0013CE                     l2591:
  1336  0013CE  5014               	movf	frexp@value+2,w,c
  1337  0013D0  0B7F               	andlw	127
  1338  0013D2  6E17               	movwf	??_frexp& (0+255),c
  1339  0013D4  6A18               	clrf	(??_frexp+1)& (0+255),c
  1340  0013D6  90D8               	bcf	status,0,c
  1341  0013D8  3617               	rlcf	??_frexp,f,c
  1342  0013DA  3618               	rlcf	??_frexp+1,f,c
  1343  0013DC  C015  FFD9         	movff	frexp@eptr,fsr2l
  1344  0013E0  C016  FFDA         	movff	frexp@eptr+1,fsr2h
  1345  0013E4  C017  FFDE         	movff	??_frexp,postinc2
  1346  0013E8  C018  FFDD         	movff	??_frexp+1,postdec2
  1347  0013EC  AE13               	btfss	frexp@value+1,7,c
  1348  0013EE  D003               	goto	u2320
  1349  0013F0  6A17               	clrf	??_frexp& (0+255),c
  1350  0013F2  2A17               	incf	??_frexp& (0+255),f,c
  1351  0013F4  D001               	goto	u2328
  1352  0013F6                     u2320:
  1353  0013F6  6A17               	clrf	??_frexp& (0+255),c
  1354  0013F8                     u2328:
  1355  0013F8  5017               	movf	??_frexp,w,c
  1356  0013FA  C015  FFD9         	movff	frexp@eptr,fsr2l
  1357  0013FE  C016  FFDA         	movff	frexp@eptr+1,fsr2h
  1358  001402  12DE               	iorwf	postinc2,f,c
  1359  001404  0E00               	movlw	0
  1360  001406  12DD               	iorwf	postdec2,f,c
  1361  001408  C015  FFD9         	movff	frexp@eptr,fsr2l
  1362  00140C  C016  FFDA         	movff	frexp@eptr+1,fsr2h
  1363  001410  0E82               	movlw	130
  1364  001412  26DE               	addwf	postinc2,f,c
  1365  001414  0EFF               	movlw	255
  1366  001416  22DD               	addwfc	postdec2,f,c
  1367  001418  8014               	bsf	frexp@value+2,0,c
  1368  00141A  8214               	bsf	frexp@value+2,1,c
  1369  00141C  8414               	bsf	frexp@value+2,2,c
  1370  00141E  8614               	bsf	frexp@value+2,3,c
  1371  001420  8814               	bsf	frexp@value+2,4,c
  1372  001422  8A14               	bsf	frexp@value+2,5,c
  1373  001424  9C14               	bcf	frexp@value+2,6,c
  1374  001426  9E13               	bcf	frexp@value+1,7,c
  1375  001428  C012  F012         	movff	frexp@value,?_frexp
  1376  00142C  C013  F013         	movff	frexp@value+1,?_frexp+1
  1377  001430  C014  F014         	movff	frexp@value+2,?_frexp+2
  1378  001434  0012               	return	
  1379  001436                     __end_of_frexp:
  1380                           	opt stack 0
  1381                           tblptru	equ	0xFF8
  1382                           tblptrh	equ	0xFF7
  1383                           intcon	equ	0xFF2
  1384                           postinc0	equ	0xFEE
  1385                           wreg	equ	0xFE8
  1386                           postinc2	equ	0xFDE
  1387                           postdec2	equ	0xFDD
  1388                           fsr2h	equ	0xFDA
  1389                           fsr2l	equ	0xFD9
  1390                           status	equ	0xFD8
  1391                           
  1392 ;; *************** function _eval_poly *****************
  1393 ;; Defined at:
  1394 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\evalpoly.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;  x               3    3[BANK0 ] PTR int 
  1397 ;;  d               2    6[BANK0 ] PTR const 
  1398 ;;		 -> log@coeff(27), 
  1399 ;;  n               2    8[BANK0 ] int 
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  res             3   10[BANK0 ] int 
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  3    3[BANK0 ] int 
  1404 ;; Registers used:
  1405 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1411 ;;      Params:         0       7       0       0       0       0       0
  1412 ;;      Locals:         0       3       0       0       0       0       0
  1413 ;;      Temps:          2       0       0       0       0       0       0
  1414 ;;      Totals:         2      10       0       0       0       0       0
  1415 ;;Total ram usage:       12 bytes
  1416 ;; Hardware stack levels used:    1
  1417 ;; Hardware stack levels required when called:    5
  1418 ;; This function calls:
  1419 ;;		___ftadd
  1420 ;;		___ftmul
  1421 ;;		___wmul
  1422 ;; This function is called by:
  1423 ;;		_log
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text5
  1428  000F12                     __ptext5:
  1429                           	opt stack 0
  1430  000F12                     _eval_poly:
  1431                           	opt stack 23
  1432                           
  1433                           ;incstack = 0
  1434  000F12  C0F0  F01A         	movff	eval_poly@n,___wmul@multiplier
  1435  000F16  C0F1  F01B         	movff	eval_poly@n+1,___wmul@multiplier+1
  1436  000F1A  0E00               	movlw	0
  1437  000F1C  6E1D               	movwf	___wmul@multiplicand+1,c
  1438  000F1E  0E03               	movlw	3
  1439  000F20  6E1C               	movwf	___wmul@multiplicand,c
  1440  000F22  EC81  F00B         	call	___wmul	;wreg free
  1441  000F26  0100               	movlb	0	; () banked
  1442  000F28  C0EE  F03C         	movff	eval_poly@d,??_eval_poly
  1443  000F2C  0100               	movlb	0	; () banked
  1444  000F2E  C0EF  F03D         	movff	eval_poly@d+1,??_eval_poly+1
  1445  000F32  501A               	movf	?___wmul,w,c
  1446  000F34  263C               	addwf	??_eval_poly,f,c
  1447  000F36  501B               	movf	?___wmul+1,w,c
  1448  000F38  223D               	addwfc	??_eval_poly+1,f,c
  1449  000F3A  C03C  FFF6         	movff	??_eval_poly,tblptrl
  1450  000F3E  C03D  FFF7         	movff	??_eval_poly+1,tblptrh
  1451  000F42                     	if	0	;tblptru may be non-zero
  1452  000F42                     	endif
  1453  000F42                     	if	0	;tblptru may be non-zero
  1454  000F42                     	endif
  1455  000F42  0009               	tblrd		*+
  1456  000F44  0100               	movlb	0	; () banked
  1457  000F46  CFF5 F0F2          	movff	tablat,eval_poly@res
  1458  000F4A  0009               	tblrd		*+
  1459  000F4C  0100               	movlb	0	; () banked
  1460  000F4E  CFF5 F0F3          	movff	tablat,eval_poly@res+1
  1461  000F52  000A               	tblrd		*-
  1462  000F54  0100               	movlb	0	; () banked
  1463  000F56  CFF5 F0F4          	movff	tablat,eval_poly@res+2
  1464  000F5A  D041               	goto	l2607
  1465  000F5C                     l2605:
  1466                           
  1467                           ; BSR set to: 0
  1468  000F5C  C0F2  F027         	movff	eval_poly@res,___ftmul@f2
  1469  000F60  C0F3  F028         	movff	eval_poly@res+1,___ftmul@f2+1
  1470  000F64  C0F4  F029         	movff	eval_poly@res+2,___ftmul@f2+2
  1471  000F68  C0EB  F024         	movff	eval_poly@x,___ftmul@f1
  1472  000F6C  C0EC  F025         	movff	eval_poly@x+1,___ftmul@f1+1
  1473  000F70  C0ED  F026         	movff	eval_poly@x+2,___ftmul@f1+2
  1474  000F74  EC11  F007         	call	___ftmul	;wreg free
  1475  000F78  C024  F033         	movff	?___ftmul,___ftadd@f1
  1476  000F7C  C025  F034         	movff	?___ftmul+1,___ftadd@f1+1
  1477  000F80  C026  F035         	movff	?___ftmul+2,___ftadd@f1+2
  1478  000F84  0E00               	movlw	0
  1479  000F86  6E1D               	movwf	___wmul@multiplicand+1,c
  1480  000F88  0E03               	movlw	3
  1481  000F8A  6E1C               	movwf	___wmul@multiplicand,c
  1482  000F8C  0100               	movlb	0	; () banked
  1483  000F8E  07F0               	decf	eval_poly@n& (0+255),f,b
  1484  000F90  A0D8               	btfss	status,0,c
  1485  000F92  07F1               	decf	(eval_poly@n+1)& (0+255),f,b
  1486  000F94  C0F0  F01A         	movff	eval_poly@n,___wmul@multiplier
  1487  000F98  C0F1  F01B         	movff	eval_poly@n+1,___wmul@multiplier+1
  1488  000F9C  EC81  F00B         	call	___wmul	;wreg free
  1489  000FA0  0100               	movlb	0	; () banked
  1490  000FA2  C0EE  F03C         	movff	eval_poly@d,??_eval_poly
  1491  000FA6  0100               	movlb	0	; () banked
  1492  000FA8  C0EF  F03D         	movff	eval_poly@d+1,??_eval_poly+1
  1493  000FAC  501A               	movf	?___wmul,w,c
  1494  000FAE  263C               	addwf	??_eval_poly,f,c
  1495  000FB0  501B               	movf	?___wmul+1,w,c
  1496  000FB2  223D               	addwfc	??_eval_poly+1,f,c
  1497  000FB4  C03C  FFF6         	movff	??_eval_poly,tblptrl
  1498  000FB8  C03D  FFF7         	movff	??_eval_poly+1,tblptrh
  1499  000FBC                     	if	0	;tblptru may be non-zero
  1500  000FBC                     	endif
  1501  000FBC                     	if	0	;tblptru may be non-zero
  1502  000FBC                     	endif
  1503  000FBC  0009               	tblrd		*+
  1504  000FBE  CFF5 F036          	movff	tablat,___ftadd@f2
  1505  000FC2  0009               	tblrd		*+
  1506  000FC4  CFF5 F037          	movff	tablat,___ftadd@f2+1
  1507  000FC8  000A               	tblrd		*-
  1508  000FCA  CFF5 F038          	movff	tablat,___ftadd@f2+2
  1509  000FCE  EC0F  F003         	call	___ftadd	;wreg free
  1510  000FD2  C033  F0F2         	movff	?___ftadd,eval_poly@res
  1511  000FD6  C034  F0F3         	movff	?___ftadd+1,eval_poly@res+1
  1512  000FDA  C035  F0F4         	movff	?___ftadd+2,eval_poly@res+2
  1513  000FDE                     l2607:
  1514  000FDE  0100               	movlb	0	; () banked
  1515  000FE0  51F1               	movf	(eval_poly@n+1)& (0+255),w,b
  1516  000FE2  11F0               	iorwf	eval_poly@n& (0+255),w,b
  1517  000FE4  A4D8               	btfss	status,2,c
  1518  000FE6  D7BA               	goto	l2605
  1519                           
  1520                           ; BSR set to: 0
  1521  000FE8  C0F2  F0EB         	movff	eval_poly@res,?_eval_poly
  1522  000FEC  C0F3  F0EC         	movff	eval_poly@res+1,?_eval_poly+1
  1523  000FF0  C0F4  F0ED         	movff	eval_poly@res+2,?_eval_poly+2
  1524                           
  1525                           ; BSR set to: 0
  1526  000FF4  0012               	return	
  1527  000FF6                     __end_of_eval_poly:
  1528                           	opt stack 0
  1529                           tblptru	equ	0xFF8
  1530                           tblptrh	equ	0xFF7
  1531                           tblptrl	equ	0xFF6
  1532                           tablat	equ	0xFF5
  1533                           intcon	equ	0xFF2
  1534                           postinc0	equ	0xFEE
  1535                           wreg	equ	0xFE8
  1536                           postinc2	equ	0xFDE
  1537                           postdec2	equ	0xFDD
  1538                           fsr2h	equ	0xFDA
  1539                           fsr2l	equ	0xFD9
  1540                           status	equ	0xFD8
  1541                           
  1542 ;; *************** function ___ftsub *****************
  1543 ;; Defined at:
  1544 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftsub.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;  f1              3    3[BANK0 ] float 
  1547 ;;  f2              3    6[BANK0 ] float 
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;		None
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  3    3[BANK0 ] float 
  1552 ;; Registers used:
  1553 ;;		wreg, status,2, status,0, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1559 ;;      Params:         0       6       0       0       0       0       0
  1560 ;;      Locals:         0       0       0       0       0       0       0
  1561 ;;      Temps:          0       0       0       0       0       0       0
  1562 ;;      Totals:         0       6       0       0       0       0       0
  1563 ;;Total ram usage:        6 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:    5
  1566 ;; This function calls:
  1567 ;;		___ftadd
  1568 ;; This function is called by:
  1569 ;;		_Temp_Convert
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           	psect	text6
  1574  0015C6                     __ptext6:
  1575                           	opt stack 0
  1576  0015C6                     ___ftsub:
  1577                           	opt stack 24
  1578                           
  1579                           ; BSR set to: 0
  1580                           ;incstack = 0
  1581  0015C6  0E00               	movlw	0
  1582  0015C8  0100               	movlb	0	; () banked
  1583  0015CA  1BEE               	xorwf	___ftsub@f2& (0+255),f,b
  1584  0015CC  0E00               	movlw	0
  1585  0015CE  0100               	movlb	0	; () banked
  1586  0015D0  1BEF               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  1587  0015D2  0E80               	movlw	128
  1588  0015D4  0100               	movlb	0	; () banked
  1589  0015D6  1BF0               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  1590                           
  1591                           ; BSR set to: 0
  1592  0015D8  C0EB  F033         	movff	___ftsub@f1,___ftadd@f1
  1593  0015DC  C0EC  F034         	movff	___ftsub@f1+1,___ftadd@f1+1
  1594  0015E0  C0ED  F035         	movff	___ftsub@f1+2,___ftadd@f1+2
  1595  0015E4  C0EE  F036         	movff	___ftsub@f2,___ftadd@f2
  1596  0015E8  C0EF  F037         	movff	___ftsub@f2+1,___ftadd@f2+1
  1597  0015EC  C0F0  F038         	movff	___ftsub@f2+2,___ftadd@f2+2
  1598  0015F0  EC0F  F003         	call	___ftadd	;wreg free
  1599  0015F4  C033  F0EB         	movff	?___ftadd,?___ftsub
  1600  0015F8  C034  F0EC         	movff	?___ftadd+1,?___ftsub+1
  1601  0015FC  C035  F0ED         	movff	?___ftadd+2,?___ftsub+2
  1602  001600  0012               	return	
  1603  001602                     __end_of___ftsub:
  1604                           	opt stack 0
  1605                           tblptru	equ	0xFF8
  1606                           tblptrh	equ	0xFF7
  1607                           tblptrl	equ	0xFF6
  1608                           tablat	equ	0xFF5
  1609                           intcon	equ	0xFF2
  1610                           postinc0	equ	0xFEE
  1611                           wreg	equ	0xFE8
  1612                           postinc2	equ	0xFDE
  1613                           postdec2	equ	0xFDD
  1614                           fsr2h	equ	0xFDA
  1615                           fsr2l	equ	0xFD9
  1616                           status	equ	0xFD8
  1617                           
  1618 ;; *************** function ___ftdiv *****************
  1619 ;; Defined at:
  1620 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdiv.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  f1              3   25[COMRAM] float 
  1623 ;;  f2              3   28[COMRAM] float 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  f3              3   35[COMRAM] float 
  1626 ;;  sign            1   39[COMRAM] unsigned char 
  1627 ;;  exp             1   38[COMRAM] unsigned char 
  1628 ;;  cntr            1   34[COMRAM] unsigned char 
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  3   25[COMRAM] float 
  1631 ;; Registers used:
  1632 ;;		wreg, status,2, status,0, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1638 ;;      Params:         6       0       0       0       0       0       0
  1639 ;;      Locals:         6       0       0       0       0       0       0
  1640 ;;      Temps:          3       0       0       0       0       0       0
  1641 ;;      Totals:        15       0       0       0       0       0       0
  1642 ;;Total ram usage:       15 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    4
  1645 ;; This function calls:
  1646 ;;		___ftpack
  1647 ;; This function is called by:
  1648 ;;		_Temp_Convert
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text7
  1653  000FF6                     __ptext7:
  1654                           	opt stack 0
  1655  000FF6                     ___ftdiv:
  1656                           	opt stack 25
  1657                           
  1658                           ;incstack = 0
  1659  000FF6  C01C  F020         	movff	___ftdiv@f1+2,??___ftdiv
  1660  000FFA  6A21               	clrf	(??___ftdiv+1)& (0+255),c
  1661  000FFC  6A22               	clrf	(??___ftdiv+2)& (0+255),c
  1662  000FFE  341B               	rlcf	___ftdiv@f1+1,w,c
  1663  001000  3620               	rlcf	??___ftdiv& (0+255),f,c
  1664  001002  E301               	bnc	u2441
  1665  001004  8021               	bsf	(??___ftdiv+1)& (0+255),0,c
  1666  001006                     u2441:
  1667  001006  5020               	movf	??___ftdiv,w,c
  1668  001008  6E27               	movwf	___ftdiv@exp,c
  1669  00100A  6627               	tstfsz	___ftdiv@exp& (0+255),c
  1670  00100C  D007               	goto	l2685
  1671  00100E  0E00               	movlw	0
  1672  001010  6E1A               	movwf	?___ftdiv,c
  1673  001012  0E00               	movlw	0
  1674  001014  6E1B               	movwf	?___ftdiv+1,c
  1675  001016  0E00               	movlw	0
  1676  001018  6E1C               	movwf	?___ftdiv+2,c
  1677  00101A  0012               	return	
  1678  00101C                     l2685:
  1679  00101C  C01F  F020         	movff	___ftdiv@f2+2,??___ftdiv
  1680  001020  6A21               	clrf	(??___ftdiv+1)& (0+255),c
  1681  001022  6A22               	clrf	(??___ftdiv+2)& (0+255),c
  1682  001024  341E               	rlcf	___ftdiv@f2+1,w,c
  1683  001026  3620               	rlcf	??___ftdiv& (0+255),f,c
  1684  001028  E301               	bnc	u2461
  1685  00102A  8021               	bsf	(??___ftdiv+1)& (0+255),0,c
  1686  00102C                     u2461:
  1687  00102C  5020               	movf	??___ftdiv,w,c
  1688  00102E  6E28               	movwf	___ftdiv@sign,c
  1689  001030  6628               	tstfsz	___ftdiv@sign& (0+255),c
  1690  001032  D007               	goto	l2691
  1691  001034  0E00               	movlw	0
  1692  001036  6E1A               	movwf	?___ftdiv,c
  1693  001038  0E00               	movlw	0
  1694  00103A  6E1B               	movwf	?___ftdiv+1,c
  1695  00103C  0E00               	movlw	0
  1696  00103E  6E1C               	movwf	?___ftdiv+2,c
  1697  001040  0012               	return	
  1698  001042                     l2691:
  1699  001042  0E00               	movlw	0
  1700  001044  6E24               	movwf	___ftdiv@f3,c
  1701  001046  0E00               	movlw	0
  1702  001048  6E25               	movwf	___ftdiv@f3+1,c
  1703  00104A  0E00               	movlw	0
  1704  00104C  6E26               	movwf	___ftdiv@f3+2,c
  1705  00104E  5028               	movf	___ftdiv@sign,w,c
  1706  001050  0F89               	addlw	137
  1707  001052  5E27               	subwf	___ftdiv@exp,f,c
  1708  001054  C01C  F028         	movff	___ftdiv@f1+2,___ftdiv@sign
  1709  001058  501F               	movf	___ftdiv@f2+2,w,c
  1710  00105A  1A28               	xorwf	___ftdiv@sign,f,c
  1711  00105C  0E80               	movlw	128
  1712  00105E  1628               	andwf	___ftdiv@sign,f,c
  1713  001060  8E1B               	bsf	___ftdiv@f1+1,7,c
  1714  001062  0EFF               	movlw	255
  1715  001064  161A               	andwf	___ftdiv@f1,f,c
  1716  001066  0EFF               	movlw	255
  1717  001068  161B               	andwf	___ftdiv@f1+1,f,c
  1718  00106A  0E00               	movlw	0
  1719  00106C  161C               	andwf	___ftdiv@f1+2,f,c
  1720  00106E  8E1E               	bsf	___ftdiv@f2+1,7,c
  1721  001070  0EFF               	movlw	255
  1722  001072  161D               	andwf	___ftdiv@f2,f,c
  1723  001074  0EFF               	movlw	255
  1724  001076  161E               	andwf	___ftdiv@f2+1,f,c
  1725  001078  0E00               	movlw	0
  1726  00107A  161F               	andwf	___ftdiv@f2+2,f,c
  1727  00107C  0E18               	movlw	24
  1728  00107E  6E23               	movwf	___ftdiv@cntr,c
  1729  001080                     l2711:
  1730  001080  90D8               	bcf	status,0,c
  1731  001082  3624               	rlcf	___ftdiv@f3,f,c
  1732  001084  3625               	rlcf	___ftdiv@f3+1,f,c
  1733  001086  3626               	rlcf	___ftdiv@f3+2,f,c
  1734  001088  501D               	movf	___ftdiv@f2,w,c
  1735  00108A  5C1A               	subwf	___ftdiv@f1,w,c
  1736  00108C  501E               	movf	___ftdiv@f2+1,w,c
  1737  00108E  581B               	subwfb	___ftdiv@f1+1,w,c
  1738  001090  501F               	movf	___ftdiv@f2+2,w,c
  1739  001092  581C               	subwfb	___ftdiv@f1+2,w,c
  1740  001094  A0D8               	btfss	status,0,c
  1741  001096  D007               	goto	l808
  1742  001098  501D               	movf	___ftdiv@f2,w,c
  1743  00109A  5E1A               	subwf	___ftdiv@f1,f,c
  1744  00109C  501E               	movf	___ftdiv@f2+1,w,c
  1745  00109E  5A1B               	subwfb	___ftdiv@f1+1,f,c
  1746  0010A0  501F               	movf	___ftdiv@f2+2,w,c
  1747  0010A2  5A1C               	subwfb	___ftdiv@f1+2,f,c
  1748  0010A4  8024               	bsf	___ftdiv@f3,0,c
  1749  0010A6                     l808:
  1750  0010A6  90D8               	bcf	status,0,c
  1751  0010A8  361A               	rlcf	___ftdiv@f1,f,c
  1752  0010AA  361B               	rlcf	___ftdiv@f1+1,f,c
  1753  0010AC  361C               	rlcf	___ftdiv@f1+2,f,c
  1754  0010AE  2E23               	decfsz	___ftdiv@cntr,f,c
  1755  0010B0  D7E7               	goto	l2711
  1756  0010B2  C024  F012         	movff	___ftdiv@f3,___ftpack@arg
  1757  0010B6  C025  F013         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1758  0010BA  C026  F014         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1759  0010BE  C027  F015         	movff	___ftdiv@exp,___ftpack@exp
  1760  0010C2  C028  F016         	movff	___ftdiv@sign,___ftpack@sign
  1761  0010C6  EC2C  F009         	call	___ftpack	;wreg free
  1762  0010CA  C012  F01A         	movff	?___ftpack,?___ftdiv
  1763  0010CE  C013  F01B         	movff	?___ftpack+1,?___ftdiv+1
  1764  0010D2  C014  F01C         	movff	?___ftpack+2,?___ftdiv+2
  1765  0010D6  0012               	return	
  1766  0010D8                     __end_of___ftdiv:
  1767                           	opt stack 0
  1768                           tblptru	equ	0xFF8
  1769                           tblptrh	equ	0xFF7
  1770                           tblptrl	equ	0xFF6
  1771                           tablat	equ	0xFF5
  1772                           intcon	equ	0xFF2
  1773                           postinc0	equ	0xFEE
  1774                           wreg	equ	0xFE8
  1775                           postinc2	equ	0xFDE
  1776                           postdec2	equ	0xFDD
  1777                           fsr2h	equ	0xFDA
  1778                           fsr2l	equ	0xFD9
  1779                           status	equ	0xFD8
  1780                           
  1781 ;; *************** function _Temp_Filter *****************
  1782 ;; Defined at:
  1783 ;;		line 36 in file "Tempeture.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;		None
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;  x               2   59[COMRAM] int 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;		None               void
  1790 ;; Registers used:
  1791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1797 ;;      Params:         0       0       0       0       0       0       0
  1798 ;;      Locals:         2       0       0       0       0       0       0
  1799 ;;      Temps:          0       0       0       0       0       0       0
  1800 ;;      Totals:         2       0       0       0       0       0       0
  1801 ;;Total ram usage:        2 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    5
  1804 ;; This function calls:
  1805 ;;		___ftadd
  1806 ;;		___ftmul
  1807 ;;		___wmul
  1808 ;; This function is called by:
  1809 ;;		_Temp_Convert
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           	psect	text8
  1814  000A0E                     __ptext8:
  1815                           	opt stack 0
  1816  000A0E                     _Temp_Filter:
  1817                           	opt stack 24
  1818                           
  1819                           ;Tempeture.c: 39: int x;
  1820                           ;Tempeture.c: 40: for(x = 0; x < 10; x++)
  1821                           
  1822                           ;incstack = 0
  1823  000A0E  0E00               	movlw	0
  1824  000A10  6E3D               	movwf	Temp_Filter@x+1,c
  1825  000A12  0E00               	movlw	0
  1826  000A14  6E3C               	movwf	Temp_Filter@x,c
  1827  000A16  503D               	movf	Temp_Filter@x+1,w,c
  1828  000A18  0A80               	xorlw	128
  1829  000A1A  0F80               	addlw	-128
  1830  000A1C  0E0A               	movlw	10
  1831  000A1E  B4D8               	btfsc	status,2,c
  1832  000A20  5C3C               	subwf	Temp_Filter@x,w,c
  1833  000A22  B0D8               	btfsc	status,0,c
  1834  000A24  D06A               	goto	l2645
  1835                           
  1836                           ;Tempeture.c: 41: {
  1837                           ;Tempeture.c: 42: Temp_DegF[x] = (0.88*TmpTemp_DegF[x] + ((1- 0.88)*PrevTemp_DegF[x]));
  1838  000A26  C03C  F01A         	movff	Temp_Filter@x,___wmul@multiplier
  1839  000A2A  C03D  F01B         	movff	Temp_Filter@x+1,___wmul@multiplier+1
  1840  000A2E  0E00               	movlw	0
  1841  000A30  6E1D               	movwf	___wmul@multiplicand+1,c
  1842  000A32  0E03               	movlw	3
  1843  000A34  6E1C               	movwf	___wmul@multiplicand,c
  1844  000A36  EC81  F00B         	call	___wmul	;wreg free
  1845  000A3A  0100               	movlb	0	; () banked
  1846  000A3C  0E7E               	movlw	low _Temp_DegF
  1847  000A3E  241A               	addwf	?___wmul,w,c
  1848  000A40  6ED9               	movwf	fsr2l,c
  1849  000A42  0100               	movlb	0	; () banked
  1850  000A44  0E00               	movlw	high _Temp_DegF
  1851  000A46  201B               	addwfc	?___wmul+1,w,c
  1852  000A48  6EDA               	movwf	fsr2h,c
  1853  000A4A  0E48               	movlw	72
  1854  000A4C  6E27               	movwf	___ftmul@f2,c
  1855  000A4E  0E61               	movlw	97
  1856  000A50  6E28               	movwf	___ftmul@f2+1,c
  1857  000A52  0E3F               	movlw	63
  1858  000A54  6E29               	movwf	___ftmul@f2+2,c
  1859  000A56  C03C  F01A         	movff	Temp_Filter@x,___wmul@multiplier
  1860  000A5A  C03D  F01B         	movff	Temp_Filter@x+1,___wmul@multiplier+1
  1861  000A5E  0E00               	movlw	0
  1862  000A60  6E1D               	movwf	___wmul@multiplicand+1,c
  1863  000A62  0E03               	movlw	3
  1864  000A64  6E1C               	movwf	___wmul@multiplicand,c
  1865  000A66  EC81  F00B         	call	___wmul	;wreg free
  1866  000A6A  0101               	movlb	1	; () banked
  1867  000A6C  0E3C               	movlw	low _TmpTemp_DegF
  1868  000A6E  241A               	addwf	?___wmul,w,c
  1869  000A70  6EE1               	movwf	fsr1l,c
  1870  000A72  0101               	movlb	1	; () banked
  1871  000A74  0E01               	movlw	high _TmpTemp_DegF
  1872  000A76  201B               	addwfc	?___wmul+1,w,c
  1873  000A78  6EE2               	movwf	fsr1h,c
  1874  000A7A  CFE6 F024          	movff	postinc1,___ftmul@f1
  1875  000A7E  CFE6 F025          	movff	postinc1,___ftmul@f1+1
  1876  000A82  CFE5 F026          	movff	postdec1,___ftmul@f1+2
  1877  000A86  EC11  F007         	call	___ftmul	;wreg free
  1878  000A8A  C024  F033         	movff	?___ftmul,___ftadd@f1
  1879  000A8E  C025  F034         	movff	?___ftmul+1,___ftadd@f1+1
  1880  000A92  C026  F035         	movff	?___ftmul+2,___ftadd@f1+2
  1881  000A96  0EC3               	movlw	195
  1882  000A98  6E27               	movwf	___ftmul@f2,c
  1883  000A9A  0EF5               	movlw	245
  1884  000A9C  6E28               	movwf	___ftmul@f2+1,c
  1885  000A9E  0E3D               	movlw	61
  1886  000AA0  6E29               	movwf	___ftmul@f2+2,c
  1887  000AA2  0E00               	movlw	0
  1888  000AA4  6E1D               	movwf	___wmul@multiplicand+1,c
  1889  000AA6  0E03               	movlw	3
  1890  000AA8  6E1C               	movwf	___wmul@multiplicand,c
  1891  000AAA  C03C  F01A         	movff	Temp_Filter@x,___wmul@multiplier
  1892  000AAE  C03D  F01B         	movff	Temp_Filter@x+1,___wmul@multiplier+1
  1893  000AB2  EC81  F00B         	call	___wmul	;wreg free
  1894  000AB6  0101               	movlb	1	; () banked
  1895  000AB8  0E1E               	movlw	low _PrevTemp_DegF
  1896  000ABA  241A               	addwf	?___wmul,w,c
  1897  000ABC  6EE1               	movwf	fsr1l,c
  1898  000ABE  0101               	movlb	1	; () banked
  1899  000AC0  0E01               	movlw	high _PrevTemp_DegF
  1900  000AC2  201B               	addwfc	?___wmul+1,w,c
  1901  000AC4  6EE2               	movwf	fsr1h,c
  1902  000AC6  CFE6 F024          	movff	postinc1,___ftmul@f1
  1903  000ACA  CFE6 F025          	movff	postinc1,___ftmul@f1+1
  1904  000ACE  CFE5 F026          	movff	postdec1,___ftmul@f1+2
  1905  000AD2  EC11  F007         	call	___ftmul	;wreg free
  1906  000AD6  C024  F036         	movff	?___ftmul,___ftadd@f2
  1907  000ADA  C025  F037         	movff	?___ftmul+1,___ftadd@f2+1
  1908  000ADE  C026  F038         	movff	?___ftmul+2,___ftadd@f2+2
  1909  000AE2  EC0F  F003         	call	___ftadd	;wreg free
  1910  000AE6  C033  FFDE         	movff	?___ftadd,postinc2
  1911  000AEA  C034  FFDE         	movff	?___ftadd+1,postinc2
  1912  000AEE  C035  FFDD         	movff	?___ftadd+2,postdec2
  1913  000AF2  52DD               	movf	postdec2,f,c
  1914  000AF4  4A3C               	infsnz	Temp_Filter@x,f,c
  1915  000AF6  2A3D               	incf	Temp_Filter@x+1,f,c
  1916  000AF8  D78E               	goto	L3
  1917  000AFA                     l2645:
  1918                           
  1919                           ;Tempeture.c: 43: }
  1920                           ;Tempeture.c: 44: for(x = 0; x < 10; x++)
  1921  000AFA  0E00               	movlw	0
  1922  000AFC  6E3D               	movwf	Temp_Filter@x+1,c
  1923  000AFE  0E00               	movlw	0
  1924  000B00  6E3C               	movwf	Temp_Filter@x,c
  1925  000B02  503D               	movf	Temp_Filter@x+1,w,c
  1926  000B04  0A80               	xorlw	128
  1927  000B06  0F80               	addlw	-128
  1928  000B08  0E0A               	movlw	10
  1929  000B0A  B4D8               	btfsc	status,2,c
  1930  000B0C  5C3C               	subwf	Temp_Filter@x,w,c
  1931  000B0E  B0D8               	btfsc	status,0,c
  1932  000B10  0012               	return	
  1933                           
  1934                           ;Tempeture.c: 45: {
  1935                           ;Tempeture.c: 46: PrevTemp_DegF[x] = Temp_DegF[x];
  1936  000B12  C03C  F01A         	movff	Temp_Filter@x,___wmul@multiplier
  1937  000B16  C03D  F01B         	movff	Temp_Filter@x+1,___wmul@multiplier+1
  1938  000B1A  0E00               	movlw	0
  1939  000B1C  6E1D               	movwf	___wmul@multiplicand+1,c
  1940  000B1E  0E03               	movlw	3
  1941  000B20  6E1C               	movwf	___wmul@multiplicand,c
  1942  000B22  EC81  F00B         	call	___wmul	;wreg free
  1943  000B26  0100               	movlb	0	; () banked
  1944  000B28  0E7E               	movlw	low _Temp_DegF
  1945  000B2A  241A               	addwf	?___wmul,w,c
  1946  000B2C  6ED9               	movwf	fsr2l,c
  1947  000B2E  0100               	movlb	0	; () banked
  1948  000B30  0E00               	movlw	high _Temp_DegF
  1949  000B32  201B               	addwfc	?___wmul+1,w,c
  1950  000B34  6EDA               	movwf	fsr2h,c
  1951  000B36  C03C  F01A         	movff	Temp_Filter@x,___wmul@multiplier
  1952  000B3A  C03D  F01B         	movff	Temp_Filter@x+1,___wmul@multiplier+1
  1953  000B3E  0E00               	movlw	0
  1954  000B40  6E1D               	movwf	___wmul@multiplicand+1,c
  1955  000B42  0E03               	movlw	3
  1956  000B44  6E1C               	movwf	___wmul@multiplicand,c
  1957  000B46  EC81  F00B         	call	___wmul	;wreg free
  1958  000B4A  0101               	movlb	1	; () banked
  1959  000B4C  0E1E               	movlw	low _PrevTemp_DegF
  1960  000B4E  241A               	addwf	?___wmul,w,c
  1961  000B50  6EE1               	movwf	fsr1l,c
  1962  000B52  0101               	movlb	1	; () banked
  1963  000B54  0E01               	movlw	high _PrevTemp_DegF
  1964  000B56  201B               	addwfc	?___wmul+1,w,c
  1965  000B58  6EE2               	movwf	fsr1h,c
  1966  000B5A  CFDE FFE6          	movff	postinc2,postinc1
  1967  000B5E  CFDE FFE6          	movff	postinc2,postinc1
  1968  000B62  CFDE FFE5          	movff	postinc2,postdec1
  1969  000B66  52E5               	movf	postdec1,f,c
  1970                           
  1971                           ; BSR set to: 1
  1972  000B68  4A3C               	infsnz	Temp_Filter@x,f,c
  1973  000B6A  2A3D               	incf	Temp_Filter@x+1,f,c
  1974  000B6C  D7CA               	goto	L4
  1975  000B6E                     __end_of_Temp_Filter:
  1976                           	opt stack 0
  1977                           tblptru	equ	0xFF8
  1978                           tblptrh	equ	0xFF7
  1979                           tblptrl	equ	0xFF6
  1980                           tablat	equ	0xFF5
  1981                           intcon	equ	0xFF2
  1982                           postinc0	equ	0xFEE
  1983                           wreg	equ	0xFE8
  1984                           postinc1	equ	0xFE6
  1985                           postdec1	equ	0xFE5
  1986                           fsr1h	equ	0xFE2
  1987                           fsr1l	equ	0xFE1
  1988                           postinc2	equ	0xFDE
  1989                           postdec2	equ	0xFDD
  1990                           fsr2h	equ	0xFDA
  1991                           fsr2l	equ	0xFD9
  1992                           status	equ	0xFD8
  1993                           
  1994 ;; *************** function _SYSTEM_Initialize *****************
  1995 ;; Defined at:
  1996 ;;		line 112 in file "mcc_generated_files/mcc.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;		None
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;		None
  2001 ;; Return value:  Size  Location     Type
  2002 ;;		None               void
  2003 ;; Registers used:
  2004 ;;		wreg, status,2, cstack
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2010 ;;      Params:         0       0       0       0       0       0       0
  2011 ;;      Locals:         0       0       0       0       0       0       0
  2012 ;;      Temps:          0       0       0       0       0       0       0
  2013 ;;      Totals:         0       0       0       0       0       0       0
  2014 ;;Total ram usage:        0 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; Hardware stack levels required when called:    5
  2017 ;; This function calls:
  2018 ;;		_ADC_Initialize
  2019 ;;		_EUSART1_Initialize
  2020 ;;		_INTERRUPT_Initialize
  2021 ;;		_OSCILLATOR_Initialize
  2022 ;;		_PIN_MANAGER_Initialize
  2023 ;;		_TMR1_Initialize
  2024 ;; This function is called by:
  2025 ;;		_main
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           	psect	text9
  2030  00174A                     __ptext9:
  2031                           	opt stack 0
  2032  00174A                     _SYSTEM_Initialize:
  2033                           	opt stack 25
  2034                           
  2035                           ;mcc.c: 114: OSCILLATOR_Initialize();
  2036                           
  2037                           ;incstack = 0
  2038  00174A  ECCB  F00B         	call	_OSCILLATOR_Initialize	;wreg free
  2039                           
  2040                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  2041  00174E  EC98  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
  2042                           
  2043                           ;mcc.c: 116: INTERRUPT_Initialize();
  2044  001752  ECD2  F00B         	call	_INTERRUPT_Initialize	;wreg free
  2045                           
  2046                           ;mcc.c: 117: ADC_Initialize();
  2047  001756  ECBF  F00B         	call	_ADC_Initialize	;wreg free
  2048                           
  2049                           ;mcc.c: 118: EUSART1_Initialize();
  2050  00175A  EC01  F00B         	call	_EUSART1_Initialize	;wreg free
  2051                           
  2052                           ;mcc.c: 119: TMR1_Initialize();
  2053  00175E  EC94  F00B         	call	_TMR1_Initialize	;wreg free
  2054  001762  0012               	return	
  2055  001764                     __end_of_SYSTEM_Initialize:
  2056                           	opt stack 0
  2057                           tblptru	equ	0xFF8
  2058                           tblptrh	equ	0xFF7
  2059                           tblptrl	equ	0xFF6
  2060                           tablat	equ	0xFF5
  2061                           intcon	equ	0xFF2
  2062                           postinc0	equ	0xFEE
  2063                           wreg	equ	0xFE8
  2064                           postinc1	equ	0xFE6
  2065                           postdec1	equ	0xFE5
  2066                           fsr1h	equ	0xFE2
  2067                           fsr1l	equ	0xFE1
  2068                           postinc2	equ	0xFDE
  2069                           postdec2	equ	0xFDD
  2070                           fsr2h	equ	0xFDA
  2071                           fsr2l	equ	0xFD9
  2072                           status	equ	0xFD8
  2073                           
  2074 ;; *************** function _TMR1_Initialize *****************
  2075 ;; Defined at:
  2076 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;		None
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;		None
  2081 ;; Return value:  Size  Location     Type
  2082 ;;		None               void
  2083 ;; Registers used:
  2084 ;;		wreg, status,2, cstack
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2090 ;;      Params:         0       0       0       0       0       0       0
  2091 ;;      Locals:         0       0       0       0       0       0       0
  2092 ;;      Temps:          0       0       0       0       0       0       0
  2093 ;;      Totals:         0       0       0       0       0       0       0
  2094 ;;Total ram usage:        0 bytes
  2095 ;; Hardware stack levels used:    1
  2096 ;; Hardware stack levels required when called:    4
  2097 ;; This function calls:
  2098 ;;		_TMR1_StartTimer
  2099 ;; This function is called by:
  2100 ;;		_SYSTEM_Initialize
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104                           	psect	text10
  2105  001728                     __ptext10:
  2106                           	opt stack 0
  2107  001728                     _TMR1_Initialize:
  2108                           	opt stack 25
  2109                           
  2110                           ;tmr1.c: 68: T1CON = 0x00;
  2111                           
  2112                           ;incstack = 0
  2113  001728  0E00               	movlw	0
  2114  00172A  6ECD               	movwf	4045,c	;volatile
  2115                           
  2116                           ;tmr1.c: 71: T1GCON = 0x00;
  2117  00172C  0E00               	movlw	0
  2118  00172E  6ECC               	movwf	4044,c	;volatile
  2119                           
  2120                           ;tmr1.c: 74: TMR1H = 0xB1;
  2121  001730  0EB1               	movlw	177
  2122  001732  6ECF               	movwf	4047,c	;volatile
  2123                           
  2124                           ;tmr1.c: 77: TMR1L = 0xE0;
  2125  001734  0EE0               	movlw	224
  2126  001736  6ECE               	movwf	4046,c	;volatile
  2127                           
  2128                           ;tmr1.c: 80: timer1ReloadVal=TMR1;
  2129  001738  CFCE F04C          	movff	4046,_timer1ReloadVal	;volatile
  2130  00173C  CFCF F04D          	movff	4047,_timer1ReloadVal+1	;volatile
  2131                           
  2132                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
  2133  001740  909E               	bcf	3998,0,c	;volatile
  2134                           
  2135                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
  2136  001742  809D               	bsf	3997,0,c	;volatile
  2137                           
  2138                           ;tmr1.c: 89: TMR1_StartTimer();
  2139  001744  ECD8  F00B         	call	_TMR1_StartTimer	;wreg free
  2140  001748  0012               	return	
  2141  00174A                     __end_of_TMR1_Initialize:
  2142                           	opt stack 0
  2143                           tblptru	equ	0xFF8
  2144                           tblptrh	equ	0xFF7
  2145                           tblptrl	equ	0xFF6
  2146                           tablat	equ	0xFF5
  2147                           intcon	equ	0xFF2
  2148                           postinc0	equ	0xFEE
  2149                           wreg	equ	0xFE8
  2150                           postinc1	equ	0xFE6
  2151                           postdec1	equ	0xFE5
  2152                           fsr1h	equ	0xFE2
  2153                           fsr1l	equ	0xFE1
  2154                           postinc2	equ	0xFDE
  2155                           postdec2	equ	0xFDD
  2156                           fsr2h	equ	0xFDA
  2157                           fsr2l	equ	0xFD9
  2158                           status	equ	0xFD8
  2159                           
  2160 ;; *************** function _TMR1_StartTimer *****************
  2161 ;; Defined at:
  2162 ;;		line 92 in file "mcc_generated_files/tmr1.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;		None
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;		None
  2167 ;; Return value:  Size  Location     Type
  2168 ;;		None               void
  2169 ;; Registers used:
  2170 ;;		None
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2176 ;;      Params:         0       0       0       0       0       0       0
  2177 ;;      Locals:         0       0       0       0       0       0       0
  2178 ;;      Temps:          0       0       0       0       0       0       0
  2179 ;;      Totals:         0       0       0       0       0       0       0
  2180 ;;Total ram usage:        0 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; Hardware stack levels required when called:    3
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_TMR1_Initialize
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text11
  2191  0017B0                     __ptext11:
  2192                           	opt stack 0
  2193  0017B0                     _TMR1_StartTimer:
  2194                           	opt stack 25
  2195                           
  2196                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
  2197                           
  2198                           ;incstack = 0
  2199  0017B0  80CD               	bsf	4045,0,c	;volatile
  2200  0017B2  0012               	return	
  2201  0017B4                     __end_of_TMR1_StartTimer:
  2202                           	opt stack 0
  2203                           tblptru	equ	0xFF8
  2204                           tblptrh	equ	0xFF7
  2205                           tblptrl	equ	0xFF6
  2206                           tablat	equ	0xFF5
  2207                           intcon	equ	0xFF2
  2208                           postinc0	equ	0xFEE
  2209                           wreg	equ	0xFE8
  2210                           postinc1	equ	0xFE6
  2211                           postdec1	equ	0xFE5
  2212                           fsr1h	equ	0xFE2
  2213                           fsr1l	equ	0xFE1
  2214                           postinc2	equ	0xFDE
  2215                           postdec2	equ	0xFDD
  2216                           fsr2h	equ	0xFDA
  2217                           fsr2l	equ	0xFD9
  2218                           status	equ	0xFD8
  2219                           
  2220 ;; *************** function _PIN_MANAGER_Initialize *****************
  2221 ;; Defined at:
  2222 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;		None
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;		None
  2227 ;; Return value:  Size  Location     Type
  2228 ;;		None               void
  2229 ;; Registers used:
  2230 ;;		wreg, status,2
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2236 ;;      Params:         0       0       0       0       0       0       0
  2237 ;;      Locals:         0       0       0       0       0       0       0
  2238 ;;      Temps:          0       0       0       0       0       0       0
  2239 ;;      Totals:         0       0       0       0       0       0       0
  2240 ;;Total ram usage:        0 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:    3
  2243 ;; This function calls:
  2244 ;;		Nothing
  2245 ;; This function is called by:
  2246 ;;		_SYSTEM_Initialize
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text12
  2251  001530                     __ptext12:
  2252                           	opt stack 0
  2253  001530                     _PIN_MANAGER_Initialize:
  2254                           	opt stack 26
  2255                           
  2256                           ;pin_manager.c: 52: LATA = 0x00;
  2257                           
  2258                           ;incstack = 0
  2259  001530  0E00               	movlw	0
  2260  001532  6E89               	movwf	3977,c	;volatile
  2261                           
  2262                           ;pin_manager.c: 53: TRISA = 0xBE;
  2263  001534  0EBE               	movlw	190
  2264  001536  6E92               	movwf	3986,c	;volatile
  2265                           
  2266                           ;pin_manager.c: 54: ANSELA = 0x2E;
  2267  001538  0E2E               	movlw	46
  2268  00153A  010F               	movlb	15	; () banked
  2269  00153C  6F38               	movwf	56,b	;volatile
  2270                           
  2271                           ;pin_manager.c: 56: LATB = 0x00;
  2272  00153E  0E00               	movlw	0
  2273  001540  6E8A               	movwf	3978,c	;volatile
  2274                           
  2275                           ;pin_manager.c: 57: TRISB = 0xF4;
  2276  001542  0EF4               	movlw	244
  2277  001544  6E93               	movwf	3987,c	;volatile
  2278                           
  2279                           ;pin_manager.c: 58: ANSELB = 0x34;
  2280  001546  0E34               	movlw	52
  2281  001548  010F               	movlb	15	; () banked
  2282  00154A  6F39               	movwf	57,b	;volatile
  2283                           
  2284                           ;pin_manager.c: 59: WPUB = 0x00;
  2285  00154C  0E00               	movlw	0
  2286  00154E  6E61               	movwf	3937,c	;volatile
  2287                           
  2288                           ;pin_manager.c: 61: LATC = 0x08;
  2289  001550  0E08               	movlw	8
  2290  001552  6E8B               	movwf	3979,c	;volatile
  2291                           
  2292                           ;pin_manager.c: 62: TRISC = 0xC4;
  2293  001554  0EC4               	movlw	196
  2294  001556  6E94               	movwf	3988,c	;volatile
  2295                           
  2296                           ;pin_manager.c: 63: ANSELC = 0x04;
  2297  001558  0E04               	movlw	4
  2298  00155A  010F               	movlb	15	; () banked
  2299  00155C  6F3A               	movwf	58,b	;volatile
  2300                           
  2301                           ;pin_manager.c: 65: LATD = 0x00;
  2302  00155E  0E00               	movlw	0
  2303  001560  6E8C               	movwf	3980,c	;volatile
  2304                           
  2305                           ;pin_manager.c: 66: TRISD = 0xD1;
  2306  001562  0ED1               	movlw	209
  2307  001564  6E95               	movwf	3989,c	;volatile
  2308                           
  2309                           ;pin_manager.c: 67: ANSELD = 0xD1;
  2310  001566  0ED1               	movlw	209
  2311  001568  010F               	movlb	15	; () banked
  2312  00156A  6F3B               	movwf	59,b	;volatile
  2313                           
  2314                           ;pin_manager.c: 69: LATE = 0x00;
  2315  00156C  0E00               	movlw	0
  2316  00156E  6E8D               	movwf	3981,c	;volatile
  2317                           
  2318                           ;pin_manager.c: 70: TRISE = 0x05;
  2319  001570  0E05               	movlw	5
  2320  001572  6E96               	movwf	3990,c	;volatile
  2321                           
  2322                           ;pin_manager.c: 71: ANSELE = 0x05;
  2323  001574  0E05               	movlw	5
  2324  001576  010F               	movlb	15	; () banked
  2325  001578  6F3C               	movwf	60,b	;volatile
  2326                           
  2327                           ; BSR set to: 15
  2328                           ;pin_manager.c: 73: INTCON2bits.nRBPU = 0x01;
  2329  00157A  8EF1               	bsf	intcon2,7,c	;volatile
  2330                           
  2331                           ; BSR set to: 15
  2332  00157C  0012               	return	
  2333  00157E                     __end_of_PIN_MANAGER_Initialize:
  2334                           	opt stack 0
  2335                           tblptru	equ	0xFF8
  2336                           tblptrh	equ	0xFF7
  2337                           tblptrl	equ	0xFF6
  2338                           tablat	equ	0xFF5
  2339                           intcon	equ	0xFF2
  2340                           intcon2	equ	0xFF1
  2341                           postinc0	equ	0xFEE
  2342                           wreg	equ	0xFE8
  2343                           postinc1	equ	0xFE6
  2344                           postdec1	equ	0xFE5
  2345                           fsr1h	equ	0xFE2
  2346                           fsr1l	equ	0xFE1
  2347                           postinc2	equ	0xFDE
  2348                           postdec2	equ	0xFDD
  2349                           fsr2h	equ	0xFDA
  2350                           fsr2l	equ	0xFD9
  2351                           status	equ	0xFD8
  2352                           
  2353 ;; *************** function _OSCILLATOR_Initialize *****************
  2354 ;; Defined at:
  2355 ;;		line 122 in file "mcc_generated_files/mcc.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;		None
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;		None
  2360 ;; Return value:  Size  Location     Type
  2361 ;;		None               void
  2362 ;; Registers used:
  2363 ;;		wreg, status,2
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2369 ;;      Params:         0       0       0       0       0       0       0
  2370 ;;      Locals:         0       0       0       0       0       0       0
  2371 ;;      Temps:          0       0       0       0       0       0       0
  2372 ;;      Totals:         0       0       0       0       0       0       0
  2373 ;;Total ram usage:        0 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:    3
  2376 ;; This function calls:
  2377 ;;		Nothing
  2378 ;; This function is called by:
  2379 ;;		_SYSTEM_Initialize
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           	psect	text13
  2384  001796                     __ptext13:
  2385                           	opt stack 0
  2386  001796                     _OSCILLATOR_Initialize:
  2387                           	opt stack 26
  2388                           
  2389                           ;mcc.c: 125: OSCCON = 0x62;
  2390                           
  2391                           ; BSR set to: 15
  2392                           ;incstack = 0
  2393  001796  0E62               	movlw	98
  2394  001798  6ED3               	movwf	4051,c	;volatile
  2395                           
  2396                           ;mcc.c: 127: OSCCON2 = 0x04;
  2397  00179A  0E04               	movlw	4
  2398  00179C  6ED2               	movwf	4050,c	;volatile
  2399                           
  2400                           ;mcc.c: 129: OSCTUNE = 0x00;
  2401  00179E  0E00               	movlw	0
  2402  0017A0  6E9B               	movwf	3995,c	;volatile
  2403  0017A2  0012               	return	
  2404  0017A4                     __end_of_OSCILLATOR_Initialize:
  2405                           	opt stack 0
  2406                           tblptru	equ	0xFF8
  2407                           tblptrh	equ	0xFF7
  2408                           tblptrl	equ	0xFF6
  2409                           tablat	equ	0xFF5
  2410                           intcon	equ	0xFF2
  2411                           intcon2	equ	0xFF1
  2412                           postinc0	equ	0xFEE
  2413                           wreg	equ	0xFE8
  2414                           postinc1	equ	0xFE6
  2415                           postdec1	equ	0xFE5
  2416                           fsr1h	equ	0xFE2
  2417                           fsr1l	equ	0xFE1
  2418                           postinc2	equ	0xFDE
  2419                           postdec2	equ	0xFDD
  2420                           fsr2h	equ	0xFDA
  2421                           fsr2l	equ	0xFD9
  2422                           status	equ	0xFD8
  2423                           
  2424 ;; *************** function _INTERRUPT_Initialize *****************
  2425 ;; Defined at:
  2426 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;		None
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;		None
  2431 ;; Return value:  Size  Location     Type
  2432 ;;		None               void
  2433 ;; Registers used:
  2434 ;;		None
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2440 ;;      Params:         0       0       0       0       0       0       0
  2441 ;;      Locals:         0       0       0       0       0       0       0
  2442 ;;      Temps:          0       0       0       0       0       0       0
  2443 ;;      Totals:         0       0       0       0       0       0       0
  2444 ;;Total ram usage:        0 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; Hardware stack levels required when called:    3
  2447 ;; This function calls:
  2448 ;;		Nothing
  2449 ;; This function is called by:
  2450 ;;		_SYSTEM_Initialize
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text14
  2455  0017A4                     __ptext14:
  2456                           	opt stack 0
  2457  0017A4                     _INTERRUPT_Initialize:
  2458                           	opt stack 26
  2459                           
  2460                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  2461                           
  2462                           ;incstack = 0
  2463  0017A4  9ED0               	bcf	4048,7,c	;volatile
  2464                           
  2465                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
  2466  0017A6  9A9F               	bcf	3999,5,c	;volatile
  2467                           
  2468                           ;interrupt_manager.c: 62: IPR1bits.ADIP = 0;
  2469  0017A8  9C9F               	bcf	3999,6,c	;volatile
  2470                           
  2471                           ;interrupt_manager.c: 64: IPR1bits.TMR1IP = 0;
  2472  0017AA  909F               	bcf	3999,0,c	;volatile
  2473                           
  2474                           ;interrupt_manager.c: 66: IPR1bits.TX1IP = 0;
  2475  0017AC  989F               	bcf	3999,4,c	;volatile
  2476  0017AE  0012               	return	
  2477  0017B0                     __end_of_INTERRUPT_Initialize:
  2478                           	opt stack 0
  2479                           tblptru	equ	0xFF8
  2480                           tblptrh	equ	0xFF7
  2481                           tblptrl	equ	0xFF6
  2482                           tablat	equ	0xFF5
  2483                           intcon	equ	0xFF2
  2484                           intcon2	equ	0xFF1
  2485                           postinc0	equ	0xFEE
  2486                           wreg	equ	0xFE8
  2487                           postinc1	equ	0xFE6
  2488                           postdec1	equ	0xFE5
  2489                           fsr1h	equ	0xFE2
  2490                           fsr1l	equ	0xFE1
  2491                           postinc2	equ	0xFDE
  2492                           postdec2	equ	0xFDD
  2493                           fsr2h	equ	0xFDA
  2494                           fsr2l	equ	0xFD9
  2495                           status	equ	0xFD8
  2496                           
  2497 ;; *************** function _EUSART1_Initialize *****************
  2498 ;; Defined at:
  2499 ;;		line 76 in file "mcc_generated_files/eusart1.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;		None
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;		None
  2504 ;; Return value:  Size  Location     Type
  2505 ;;		None               void
  2506 ;; Registers used:
  2507 ;;		wreg, status,2
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2513 ;;      Params:         0       0       0       0       0       0       0
  2514 ;;      Locals:         0       0       0       0       0       0       0
  2515 ;;      Temps:          0       0       0       0       0       0       0
  2516 ;;      Totals:         0       0       0       0       0       0       0
  2517 ;;Total ram usage:        0 bytes
  2518 ;; Hardware stack levels used:    1
  2519 ;; Hardware stack levels required when called:    3
  2520 ;; This function calls:
  2521 ;;		Nothing
  2522 ;; This function is called by:
  2523 ;;		_SYSTEM_Initialize
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           	psect	text15
  2528  001602                     __ptext15:
  2529                           	opt stack 0
  2530  001602                     _EUSART1_Initialize:
  2531                           	opt stack 26
  2532                           
  2533                           ;eusart1.c: 79: PIE1bits.RC1IE = 0;
  2534                           
  2535                           ;incstack = 0
  2536  001602  9A9D               	bcf	3997,5,c	;volatile
  2537                           
  2538                           ;eusart1.c: 80: PIE1bits.TX1IE = 0;
  2539  001604  989D               	bcf	3997,4,c	;volatile
  2540                           
  2541                           ;eusart1.c: 85: BAUD1CON = 0x48;
  2542  001606  0E48               	movlw	72
  2543  001608  6EB8               	movwf	4024,c	;volatile
  2544                           
  2545                           ;eusart1.c: 88: RC1STA = 0x98;
  2546  00160A  0E98               	movlw	152
  2547  00160C  6EAB               	movwf	4011,c	;volatile
  2548                           
  2549                           ;eusart1.c: 91: TX1STA = 0x26;
  2550  00160E  0E26               	movlw	38
  2551  001610  6EAC               	movwf	4012,c	;volatile
  2552                           
  2553                           ;eusart1.c: 94: SPBRG1 = 0x22;
  2554  001612  0E22               	movlw	34
  2555  001614  6EAF               	movwf	4015,c	;volatile
  2556                           
  2557                           ;eusart1.c: 97: SPBRGH1 = 0x00;
  2558  001616  0E00               	movlw	0
  2559  001618  6EB0               	movwf	4016,c	;volatile
  2560                           
  2561                           ;eusart1.c: 100: TXREG1 = 0x00;
  2562  00161A  0E00               	movlw	0
  2563  00161C  6EAD               	movwf	4013,c	;volatile
  2564                           
  2565                           ;eusart1.c: 103: RCREG1 = 0x00;
  2566  00161E  0E00               	movlw	0
  2567  001620  6EAE               	movwf	4014,c	;volatile
  2568                           
  2569                           ;eusart1.c: 107: eusart1TxHead = 0;
  2570  001622  0E00               	movlw	0
  2571  001624  6E4A               	movwf	_eusart1TxHead,c
  2572                           
  2573                           ;eusart1.c: 108: eusart1TxTail = 0;
  2574  001626  0E00               	movlw	0
  2575  001628  6E4B               	movwf	_eusart1TxTail,c
  2576                           
  2577                           ;eusart1.c: 109: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  2578  00162A  0E08               	movlw	8
  2579  00162C  6E4E               	movwf	_eusart1TxBufferRemaining,c	;volatile
  2580                           
  2581                           ;eusart1.c: 111: eusart1RxHead = 0;
  2582  00162E  0E00               	movlw	0
  2583  001630  6E48               	movwf	_eusart1RxHead,c
  2584                           
  2585                           ;eusart1.c: 112: eusart1RxTail = 0;
  2586  001632  0E00               	movlw	0
  2587  001634  6E49               	movwf	_eusart1RxTail,c
  2588                           
  2589                           ;eusart1.c: 113: eusart1RxCount = 0;
  2590  001636  0E00               	movlw	0
  2591  001638  6E47               	movwf	_eusart1RxCount,c	;volatile
  2592                           
  2593                           ;eusart1.c: 116: PIE1bits.RC1IE = 1;
  2594  00163A  8A9D               	bsf	3997,5,c	;volatile
  2595  00163C  0012               	return	
  2596  00163E                     __end_of_EUSART1_Initialize:
  2597                           	opt stack 0
  2598                           tblptru	equ	0xFF8
  2599                           tblptrh	equ	0xFF7
  2600                           tblptrl	equ	0xFF6
  2601                           tablat	equ	0xFF5
  2602                           intcon	equ	0xFF2
  2603                           intcon2	equ	0xFF1
  2604                           postinc0	equ	0xFEE
  2605                           wreg	equ	0xFE8
  2606                           postinc1	equ	0xFE6
  2607                           postdec1	equ	0xFE5
  2608                           fsr1h	equ	0xFE2
  2609                           fsr1l	equ	0xFE1
  2610                           postinc2	equ	0xFDE
  2611                           postdec2	equ	0xFDD
  2612                           fsr2h	equ	0xFDA
  2613                           fsr2l	equ	0xFD9
  2614                           status	equ	0xFD8
  2615                           
  2616 ;; *************** function _ADC_Initialize *****************
  2617 ;; Defined at:
  2618 ;;		line 59 in file "mcc_generated_files/adc.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;		None
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;		None
  2623 ;; Return value:  Size  Location     Type
  2624 ;;		None               void
  2625 ;; Registers used:
  2626 ;;		wreg, status,2
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2632 ;;      Params:         0       0       0       0       0       0       0
  2633 ;;      Locals:         0       0       0       0       0       0       0
  2634 ;;      Temps:          0       0       0       0       0       0       0
  2635 ;;      Totals:         0       0       0       0       0       0       0
  2636 ;;Total ram usage:        0 bytes
  2637 ;; Hardware stack levels used:    1
  2638 ;; Hardware stack levels required when called:    3
  2639 ;; This function calls:
  2640 ;;		Nothing
  2641 ;; This function is called by:
  2642 ;;		_SYSTEM_Initialize
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           	psect	text16
  2647  00177E                     __ptext16:
  2648                           	opt stack 0
  2649  00177E                     _ADC_Initialize:
  2650                           	opt stack 26
  2651                           
  2652                           ;adc.c: 64: ADCON0 = 0x01;
  2653                           
  2654                           ;incstack = 0
  2655  00177E  0E01               	movlw	1
  2656  001780  6EC2               	movwf	4034,c	;volatile
  2657                           
  2658                           ;adc.c: 67: ADCON1 = 0x81;
  2659  001782  0E81               	movlw	129
  2660  001784  6EC1               	movwf	4033,c	;volatile
  2661                           
  2662                           ;adc.c: 70: ADCON2 = 0x0A;
  2663  001786  0E0A               	movlw	10
  2664  001788  6EC0               	movwf	4032,c	;volatile
  2665                           
  2666                           ;adc.c: 73: ADRESL = 0x00;
  2667  00178A  0E00               	movlw	0
  2668  00178C  6EC3               	movwf	4035,c	;volatile
  2669                           
  2670                           ;adc.c: 76: ADRESH = 0x00;
  2671  00178E  0E00               	movlw	0
  2672  001790  6EC4               	movwf	4036,c	;volatile
  2673                           
  2674                           ;adc.c: 79: PIE1bits.ADIE = 1;
  2675  001792  8C9D               	bsf	3997,6,c	;volatile
  2676  001794  0012               	return	
  2677  001796                     __end_of_ADC_Initialize:
  2678                           	opt stack 0
  2679                           tblptru	equ	0xFF8
  2680                           tblptrh	equ	0xFF7
  2681                           tblptrl	equ	0xFF6
  2682                           tablat	equ	0xFF5
  2683                           intcon	equ	0xFF2
  2684                           intcon2	equ	0xFF1
  2685                           postinc0	equ	0xFEE
  2686                           wreg	equ	0xFE8
  2687                           postinc1	equ	0xFE6
  2688                           postdec1	equ	0xFE5
  2689                           fsr1h	equ	0xFE2
  2690                           fsr1l	equ	0xFE1
  2691                           postinc2	equ	0xFDE
  2692                           postdec2	equ	0xFDD
  2693                           fsr2h	equ	0xFDA
  2694                           fsr2l	equ	0xFD9
  2695                           status	equ	0xFD8
  2696                           
  2697 ;; *************** function _Battery_Fault *****************
  2698 ;; Defined at:
  2699 ;;		line 11 in file "Battery.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;		None
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;  i               2   41[COMRAM] int 
  2704 ;;  fault           1   40[COMRAM] unsigned char 
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      unsigned char 
  2707 ;; Registers used:
  2708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2714 ;;      Params:         0       0       0       0       0       0       0
  2715 ;;      Locals:         3       0       0       0       0       0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0
  2717 ;;      Totals:         3       0       0       0       0       0       0
  2718 ;;Total ram usage:        3 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:    4
  2721 ;; This function calls:
  2722 ;;		___ftge
  2723 ;;		___wmul
  2724 ;; This function is called by:
  2725 ;;		_main
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           	psect	text17
  2730  0011AA                     __ptext17:
  2731                           	opt stack 0
  2732  0011AA                     _Battery_Fault:
  2733                           	opt stack 26
  2734                           
  2735                           ;Battery.c: 13: char fault = 0;
  2736                           
  2737                           ;incstack = 0
  2738  0011AA  0E00               	movlw	0
  2739  0011AC  6E29               	movwf	Battery_Fault@fault,c
  2740                           
  2741                           ;Battery.c: 14: for(int i = 0;i<9;i++)
  2742  0011AE  0E00               	movlw	0
  2743  0011B0  6E2B               	movwf	Battery_Fault@i+1,c
  2744  0011B2  0E00               	movlw	0
  2745  0011B4  6E2A               	movwf	Battery_Fault@i,c
  2746  0011B6  502B               	movf	Battery_Fault@i+1,w,c
  2747  0011B8  0A80               	xorlw	128
  2748  0011BA  0F80               	addlw	-128
  2749  0011BC  0E09               	movlw	9
  2750  0011BE  B4D8               	btfsc	status,2,c
  2751  0011C0  5C2A               	subwf	Battery_Fault@i,w,c
  2752  0011C2  B0D8               	btfsc	status,0,c
  2753  0011C4  0012               	return	
  2754                           
  2755                           ;Battery.c: 15: {
  2756                           ;Battery.c: 16: if ((3.00 < Battery_Volt[i]) && (4.21 > Battery_Volt[i]))
  2757  0011C6  0E00               	movlw	0
  2758  0011C8  6E20               	movwf	___ftge@ff1,c
  2759  0011CA  0E40               	movlw	64
  2760  0011CC  6E21               	movwf	___ftge@ff1+1,c
  2761  0011CE  0E40               	movlw	64
  2762  0011D0  6E22               	movwf	___ftge@ff1+2,c
  2763  0011D2  C02A  F01A         	movff	Battery_Fault@i,___wmul@multiplier
  2764  0011D6  C02B  F01B         	movff	Battery_Fault@i+1,___wmul@multiplier+1
  2765  0011DA  0E00               	movlw	0
  2766  0011DC  6E1D               	movwf	___wmul@multiplicand+1,c
  2767  0011DE  0E03               	movlw	3
  2768  0011E0  6E1C               	movwf	___wmul@multiplicand,c
  2769  0011E2  EC81  F00B         	call	___wmul	;wreg free
  2770  0011E6  0100               	movlb	0	; () banked
  2771  0011E8  0E60               	movlw	low _Battery_Volt
  2772  0011EA  241A               	addwf	?___wmul,w,c
  2773  0011EC  6ED9               	movwf	fsr2l,c
  2774  0011EE  0100               	movlb	0	; () banked
  2775  0011F0  0E00               	movlw	high _Battery_Volt
  2776  0011F2  201B               	addwfc	?___wmul+1,w,c
  2777  0011F4  6EDA               	movwf	fsr2h,c
  2778  0011F6  CFDE F023          	movff	postinc2,___ftge@ff2
  2779  0011FA  CFDE F024          	movff	postinc2,___ftge@ff2+1
  2780  0011FE  CFDD F025          	movff	postdec2,___ftge@ff2+2
  2781  001202  EC1B  F00A         	call	___ftge	;wreg free
  2782  001206  B0D8               	btfsc	status,0,c
  2783  001208  D024               	goto	l2787
  2784  00120A  C02A  F01A         	movff	Battery_Fault@i,___wmul@multiplier
  2785  00120E  C02B  F01B         	movff	Battery_Fault@i+1,___wmul@multiplier+1
  2786  001212  0E00               	movlw	0
  2787  001214  6E1D               	movwf	___wmul@multiplicand+1,c
  2788  001216  0E03               	movlw	3
  2789  001218  6E1C               	movwf	___wmul@multiplicand,c
  2790  00121A  EC81  F00B         	call	___wmul	;wreg free
  2791  00121E  0100               	movlb	0	; () banked
  2792  001220  0E60               	movlw	low _Battery_Volt
  2793  001222  241A               	addwf	?___wmul,w,c
  2794  001224  6ED9               	movwf	fsr2l,c
  2795  001226  0100               	movlb	0	; () banked
  2796  001228  0E00               	movlw	high _Battery_Volt
  2797  00122A  201B               	addwfc	?___wmul+1,w,c
  2798  00122C  6EDA               	movwf	fsr2h,c
  2799  00122E  CFDE F020          	movff	postinc2,___ftge@ff1
  2800  001232  CFDE F021          	movff	postinc2,___ftge@ff1+1
  2801  001236  CFDD F022          	movff	postdec2,___ftge@ff1+2
  2802  00123A  0EB8               	movlw	184
  2803  00123C  6E23               	movwf	___ftge@ff2,c
  2804  00123E  0E86               	movlw	134
  2805  001240  6E24               	movwf	___ftge@ff2+1,c
  2806  001242  0E40               	movlw	64
  2807  001244  6E25               	movwf	___ftge@ff2+2,c
  2808  001246  EC1B  F00A         	call	___ftge	;wreg free
  2809  00124A  B0D8               	btfsc	status,0,c
  2810  00124C  D002               	goto	l2787
  2811                           
  2812                           ;Battery.c: 17: {
  2813                           ;Battery.c: 18: fault = 1;
  2814  00124E  0E01               	movlw	1
  2815  001250  6E29               	movwf	Battery_Fault@fault,c
  2816  001252                     l2787:
  2817  001252  4A2A               	infsnz	Battery_Fault@i,f,c
  2818  001254  2A2B               	incf	Battery_Fault@i+1,f,c
  2819  001256  D7AF               	goto	L5
  2820  001258                     __end_of_Battery_Fault:
  2821                           	opt stack 0
  2822                           tblptru	equ	0xFF8
  2823                           tblptrh	equ	0xFF7
  2824                           tblptrl	equ	0xFF6
  2825                           tablat	equ	0xFF5
  2826                           intcon	equ	0xFF2
  2827                           intcon2	equ	0xFF1
  2828                           postinc0	equ	0xFEE
  2829                           wreg	equ	0xFE8
  2830                           postinc1	equ	0xFE6
  2831                           postdec1	equ	0xFE5
  2832                           fsr1h	equ	0xFE2
  2833                           fsr1l	equ	0xFE1
  2834                           postinc2	equ	0xFDE
  2835                           postdec2	equ	0xFDD
  2836                           fsr2h	equ	0xFDA
  2837                           fsr2l	equ	0xFD9
  2838                           status	equ	0xFD8
  2839                           
  2840 ;; *************** function ___ftge *****************
  2841 ;; Defined at:
  2842 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  ff1             3   31[COMRAM] float 
  2845 ;;  ff2             3   34[COMRAM] float 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;		None
  2848 ;; Return value:  Size  Location     Type
  2849 ;;		None               void
  2850 ;; Registers used:
  2851 ;;		wreg, status,2, status,0
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2857 ;;      Params:         6       0       0       0       0       0       0
  2858 ;;      Locals:         0       0       0       0       0       0       0
  2859 ;;      Temps:          3       0       0       0       0       0       0
  2860 ;;      Totals:         9       0       0       0       0       0       0
  2861 ;;Total ram usage:        9 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:    3
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_Battery_Fault
  2868 ;;		_Temp_Fault
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text18
  2873  001436                     __ptext18:
  2874                           	opt stack 0
  2875  001436                     ___ftge:
  2876                           	opt stack 26
  2877                           
  2878                           ;incstack = 0
  2879  001436  AE22               	btfss	___ftge@ff1+2,7,c
  2880  001438  D016               	goto	l2199
  2881  00143A  C020  F026         	movff	___ftge@ff1,??___ftge
  2882  00143E  C021  F027         	movff	___ftge@ff1+1,??___ftge+1
  2883  001442  C022  F028         	movff	___ftge@ff1+2,??___ftge+2
  2884  001446  1E26               	comf	??___ftge,f,c
  2885  001448  1E27               	comf	??___ftge+1,f,c
  2886  00144A  1E28               	comf	??___ftge+2,f,c
  2887  00144C  2A26               	incf	??___ftge,f,c
  2888  00144E  0E00               	movlw	0
  2889  001450  2227               	addwfc	??___ftge+1,f,c
  2890  001452  2228               	addwfc	??___ftge+2,f,c
  2891  001454  0E00               	movlw	0
  2892  001456  2426               	addwf	??___ftge,w,c
  2893  001458  6E20               	movwf	___ftge@ff1,c
  2894  00145A  0E00               	movlw	0
  2895  00145C  2027               	addwfc	??___ftge+1,w,c
  2896  00145E  6E21               	movwf	___ftge@ff1+1,c
  2897  001460  0E80               	movlw	128
  2898  001462  2028               	addwfc	??___ftge+2,w,c
  2899  001464  6E22               	movwf	___ftge@ff1+2,c
  2900  001466                     l2199:
  2901  001466  AE25               	btfss	___ftge@ff2+2,7,c
  2902  001468  D016               	goto	l2203
  2903  00146A  C023  F026         	movff	___ftge@ff2,??___ftge
  2904  00146E  C024  F027         	movff	___ftge@ff2+1,??___ftge+1
  2905  001472  C025  F028         	movff	___ftge@ff2+2,??___ftge+2
  2906  001476  1E26               	comf	??___ftge,f,c
  2907  001478  1E27               	comf	??___ftge+1,f,c
  2908  00147A  1E28               	comf	??___ftge+2,f,c
  2909  00147C  2A26               	incf	??___ftge,f,c
  2910  00147E  0E00               	movlw	0
  2911  001480  2227               	addwfc	??___ftge+1,f,c
  2912  001482  2228               	addwfc	??___ftge+2,f,c
  2913  001484  0E00               	movlw	0
  2914  001486  2426               	addwf	??___ftge,w,c
  2915  001488  6E23               	movwf	___ftge@ff2,c
  2916  00148A  0E00               	movlw	0
  2917  00148C  2027               	addwfc	??___ftge+1,w,c
  2918  00148E  6E24               	movwf	___ftge@ff2+1,c
  2919  001490  0E80               	movlw	128
  2920  001492  2028               	addwfc	??___ftge+2,w,c
  2921  001494  6E25               	movwf	___ftge@ff2+2,c
  2922  001496                     l2203:
  2923  001496  0E00               	movlw	0
  2924  001498  1A20               	xorwf	___ftge@ff1,f,c
  2925  00149A  0E00               	movlw	0
  2926  00149C  1A21               	xorwf	___ftge@ff1+1,f,c
  2927  00149E  0E80               	movlw	128
  2928  0014A0  1A22               	xorwf	___ftge@ff1+2,f,c
  2929  0014A2  0E00               	movlw	0
  2930  0014A4  1A23               	xorwf	___ftge@ff2,f,c
  2931  0014A6  0E00               	movlw	0
  2932  0014A8  1A24               	xorwf	___ftge@ff2+1,f,c
  2933  0014AA  0E80               	movlw	128
  2934  0014AC  1A25               	xorwf	___ftge@ff2+2,f,c
  2935  0014AE  5023               	movf	___ftge@ff2,w,c
  2936  0014B0  5C20               	subwf	___ftge@ff1,w,c
  2937  0014B2  5024               	movf	___ftge@ff2+1,w,c
  2938  0014B4  5821               	subwfb	___ftge@ff1+1,w,c
  2939  0014B6  5025               	movf	___ftge@ff2+2,w,c
  2940  0014B8  5822               	subwfb	___ftge@ff1+2,w,c
  2941  0014BA  B0D8               	btfsc	status,0,c
  2942  0014BC  D002               	goto	l2209
  2943  0014BE  90D8               	bcf	status,0,c
  2944  0014C0  0012               	return	
  2945  0014C2                     l2209:
  2946  0014C2  80D8               	bsf	status,0,c
  2947  0014C4  0012               	return	
  2948  0014C6                     __end_of___ftge:
  2949                           	opt stack 0
  2950                           tblptru	equ	0xFF8
  2951                           tblptrh	equ	0xFF7
  2952                           tblptrl	equ	0xFF6
  2953                           tablat	equ	0xFF5
  2954                           intcon	equ	0xFF2
  2955                           intcon2	equ	0xFF1
  2956                           postinc0	equ	0xFEE
  2957                           wreg	equ	0xFE8
  2958                           postinc1	equ	0xFE6
  2959                           postdec1	equ	0xFE5
  2960                           fsr1h	equ	0xFE2
  2961                           fsr1l	equ	0xFE1
  2962                           postinc2	equ	0xFDE
  2963                           postdec2	equ	0xFDD
  2964                           fsr2h	equ	0xFDA
  2965                           fsr2l	equ	0xFD9
  2966                           status	equ	0xFD8
  2967                           
  2968 ;; *************** function _Battery_Convert *****************
  2969 ;; Defined at:
  2970 ;;		line 47 in file "Battery.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;		None
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;  x               2    5[BANK0 ] int 
  2975 ;; Return value:  Size  Location     Type
  2976 ;;		None               void
  2977 ;; Registers used:
  2978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2984 ;;      Params:         0       0       0       0       0       0       0
  2985 ;;      Locals:         0       2       0       0       0       0       0
  2986 ;;      Temps:          0       2       0       0       0       0       0
  2987 ;;      Totals:         0       4       0       0       0       0       0
  2988 ;;Total ram usage:        4 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    6
  2991 ;; This function calls:
  2992 ;;		_Battery_Filter
  2993 ;;		___awdiv
  2994 ;;		___awtoft
  2995 ;;		___ftadd
  2996 ;;		___wmul
  2997 ;; This function is called by:
  2998 ;;		_main
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           	psect	text19
  3003  0010D8                     __ptext19:
  3004                           	opt stack 0
  3005  0010D8                     _Battery_Convert:
  3006                           	opt stack 24
  3007                           
  3008                           ;Battery.c: 49: int x;
  3009                           ;Battery.c: 50: for(x = 0; x < 10; x++)
  3010                           
  3011                           ;incstack = 0
  3012  0010D8  0E00               	movlw	0
  3013  0010DA  0100               	movlb	0	; () banked
  3014  0010DC  6FEE               	movwf	(Battery_Convert@x+1)& (0+255),b
  3015  0010DE  0E00               	movlw	0
  3016  0010E0  0100               	movlb	0	; () banked
  3017  0010E2  6FED               	movwf	Battery_Convert@x& (0+255),b
  3018  0010E4                     
  3019                           ; BSR set to: 0
  3020  0010E4  0100               	movlb	0	; () banked
  3021  0010E6  51EE               	movf	(Battery_Convert@x+1)& (0+255),w,b
  3022  0010E8  0A80               	xorlw	128
  3023  0010EA  0F80               	addlw	-128
  3024  0010EC  0E0A               	movlw	10
  3025  0010EE  B4D8               	btfsc	status,2,c
  3026  0010F0  5DED               	subwf	Battery_Convert@x& (0+255),w,b
  3027  0010F2  B0D8               	btfsc	status,0,c
  3028  0010F4  D057               	goto	l2803
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;Battery.c: 51: {
  3032                           ;Battery.c: 52: TempBattery_Volt[x] = ((Battery_Adc[x]/1024)*5) + 2.5;
  3033                           
  3034                           ; BSR set to: 0
  3035                           
  3036                           ; BSR set to: 0
  3037  0010F6  C0ED  F01A         	movff	Battery_Convert@x,___wmul@multiplier
  3038  0010FA  C0EE  F01B         	movff	Battery_Convert@x+1,___wmul@multiplier+1
  3039  0010FE  0E00               	movlw	0
  3040  001100  6E1D               	movwf	___wmul@multiplicand+1,c
  3041  001102  0E03               	movlw	3
  3042  001104  6E1C               	movwf	___wmul@multiplicand,c
  3043  001106  EC81  F00B         	call	___wmul	;wreg free
  3044  00110A  0100               	movlb	0	; () banked
  3045  00110C  0ECA               	movlw	low _TempBattery_Volt
  3046  00110E  241A               	addwf	?___wmul,w,c
  3047  001110  6ED9               	movwf	fsr2l,c
  3048  001112  0100               	movlb	0	; () banked
  3049  001114  0E00               	movlw	high _TempBattery_Volt
  3050  001116  201B               	addwfc	?___wmul+1,w,c
  3051  001118  6EDA               	movwf	fsr2h,c
  3052  00111A  0E04               	movlw	4
  3053  00111C  6E15               	movwf	___awdiv@divisor+1,c
  3054  00111E  0E00               	movlw	0
  3055  001120  6E14               	movwf	___awdiv@divisor,c
  3056  001122  0E9C               	movlw	low _Battery_Adc
  3057  001124  0100               	movlb	0	; () banked
  3058  001126  6FEB               	movwf	??_Battery_Convert& (0+255),b
  3059  001128  0E00               	movlw	high _Battery_Adc
  3060  00112A  6FEC               	movwf	(??_Battery_Convert+1)& (0+255),b
  3061  00112C  90D8               	bcf	status,0,c
  3062  00112E  0100               	movlb	0	; () banked
  3063  001130  35ED               	rlcf	Battery_Convert@x& (0+255),w,b
  3064  001132  6EE1               	movwf	fsr1l,c
  3065  001134  0100               	movlb	0	; () banked
  3066  001136  35EE               	rlcf	(Battery_Convert@x+1)& (0+255),w,b
  3067  001138  6EE2               	movwf	fsr1h,c
  3068  00113A  0100               	movlb	0	; () banked
  3069  00113C  51EB               	movf	??_Battery_Convert& (0+255),w,b
  3070  00113E  26E1               	addwf	fsr1l,f,c
  3071  001140  0100               	movlb	0	; () banked
  3072  001142  51EC               	movf	(??_Battery_Convert+1)& (0+255),w,b
  3073  001144  22E2               	addwfc	fsr1h,f,c
  3074  001146  CFE6 F012          	movff	postinc1,___awdiv@dividend
  3075  00114A  CFE5 F013          	movff	postdec1,___awdiv@dividend+1
  3076  00114E  EC80  F009         	call	___awdiv	;wreg free
  3077  001152  C012  F01A         	movff	?___awdiv,___wmul@multiplier
  3078  001156  C013  F01B         	movff	?___awdiv+1,___wmul@multiplier+1
  3079  00115A  0E00               	movlw	0
  3080  00115C  6E1D               	movwf	___wmul@multiplicand+1,c
  3081  00115E  0E05               	movlw	5
  3082  001160  6E1C               	movwf	___wmul@multiplicand,c
  3083  001162  EC81  F00B         	call	___wmul	;wreg free
  3084  001166  C01A  F020         	movff	?___wmul,___awtoft@c
  3085  00116A  C01B  F021         	movff	?___wmul+1,___awtoft@c+1
  3086  00116E  ECBF  F00A         	call	___awtoft	;wreg free
  3087  001172  C020  F033         	movff	?___awtoft,___ftadd@f1
  3088  001176  C021  F034         	movff	?___awtoft+1,___ftadd@f1+1
  3089  00117A  C022  F035         	movff	?___awtoft+2,___ftadd@f1+2
  3090  00117E  0E00               	movlw	0
  3091  001180  6E36               	movwf	___ftadd@f2,c
  3092  001182  0E20               	movlw	32
  3093  001184  6E37               	movwf	___ftadd@f2+1,c
  3094  001186  0E40               	movlw	64
  3095  001188  6E38               	movwf	___ftadd@f2+2,c
  3096  00118A  EC0F  F003         	call	___ftadd	;wreg free
  3097  00118E  C033  FFDE         	movff	?___ftadd,postinc2
  3098  001192  C034  FFDE         	movff	?___ftadd+1,postinc2
  3099  001196  C035  FFDD         	movff	?___ftadd+2,postdec2
  3100  00119A  52DD               	movf	postdec2,f,c
  3101  00119C  0100               	movlb	0	; () banked
  3102  00119E  4BED               	infsnz	Battery_Convert@x& (0+255),f,b
  3103  0011A0  2BEE               	incf	(Battery_Convert@x+1)& (0+255),f,b
  3104  0011A2  D7A0               	goto	L6
  3105  0011A4                     l2803:
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;Battery.c: 53: }
  3109                           ;Battery.c: 54: Battery_Filter();
  3110  0011A4  ECB7  F005         	call	_Battery_Filter	;wreg free
  3111  0011A8  0012               	return	
  3112  0011AA                     __end_of_Battery_Convert:
  3113                           	opt stack 0
  3114                           tblptru	equ	0xFF8
  3115                           tblptrh	equ	0xFF7
  3116                           tblptrl	equ	0xFF6
  3117                           tablat	equ	0xFF5
  3118                           intcon	equ	0xFF2
  3119                           intcon2	equ	0xFF1
  3120                           postinc0	equ	0xFEE
  3121                           wreg	equ	0xFE8
  3122                           postinc1	equ	0xFE6
  3123                           postdec1	equ	0xFE5
  3124                           fsr1h	equ	0xFE2
  3125                           fsr1l	equ	0xFE1
  3126                           postinc2	equ	0xFDE
  3127                           postdec2	equ	0xFDD
  3128                           fsr2h	equ	0xFDA
  3129                           fsr2l	equ	0xFD9
  3130                           status	equ	0xFD8
  3131                           
  3132 ;; *************** function ___awtoft *****************
  3133 ;; Defined at:
  3134 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;  c               2   31[COMRAM] int 
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;  sign            1   34[COMRAM] unsigned char 
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  3   31[COMRAM] float 
  3141 ;; Registers used:
  3142 ;;		wreg, status,2, status,0, prodl, cstack
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3148 ;;      Params:         3       0       0       0       0       0       0
  3149 ;;      Locals:         1       0       0       0       0       0       0
  3150 ;;      Temps:          0       0       0       0       0       0       0
  3151 ;;      Totals:         4       0       0       0       0       0       0
  3152 ;;Total ram usage:        4 bytes
  3153 ;; Hardware stack levels used:    1
  3154 ;; Hardware stack levels required when called:    4
  3155 ;; This function calls:
  3156 ;;		___ftpack
  3157 ;; This function is called by:
  3158 ;;		_Battery_Convert
  3159 ;;		_Temp_Convert
  3160 ;;		_log
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           	psect	text20
  3165  00157E                     __ptext20:
  3166                           	opt stack 0
  3167  00157E                     ___awtoft:
  3168                           	opt stack 24
  3169                           
  3170                           ;incstack = 0
  3171  00157E  0E00               	movlw	0
  3172  001580  6E23               	movwf	___awtoft@sign,c
  3173  001582  5021               	movf	___awtoft@c+1,w,c
  3174  001584  0A80               	xorlw	128
  3175  001586  6EF3               	movwf	prodl,c
  3176  001588  0E80               	movlw	128
  3177  00158A  5CF3               	subwf	prodl,w,c
  3178  00158C  0E00               	movlw	0
  3179  00158E  B4D8               	btfsc	status,2,c
  3180  001590  5C20               	subwf	___awtoft@c,w,c
  3181  001592  B0D8               	btfsc	status,0,c
  3182  001594  D006               	goto	l2579
  3183  001596  6C20               	negf	___awtoft@c,c
  3184  001598  1E21               	comf	___awtoft@c+1,f,c
  3185  00159A  B0D8               	btfsc	status,0,c
  3186  00159C  2A21               	incf	___awtoft@c+1,f,c
  3187  00159E  0E01               	movlw	1
  3188  0015A0  6E23               	movwf	___awtoft@sign,c
  3189  0015A2                     l2579:
  3190  0015A2  C020  F012         	movff	___awtoft@c,___ftpack@arg
  3191  0015A6  C021  F013         	movff	___awtoft@c+1,___ftpack@arg+1
  3192  0015AA  6A14               	clrf	___ftpack@arg+2,c
  3193  0015AC  0E8E               	movlw	142
  3194  0015AE  6E15               	movwf	___ftpack@exp,c
  3195  0015B0  C023  F016         	movff	___awtoft@sign,___ftpack@sign
  3196  0015B4  EC2C  F009         	call	___ftpack	;wreg free
  3197  0015B8  C012  F020         	movff	?___ftpack,?___awtoft
  3198  0015BC  C013  F021         	movff	?___ftpack+1,?___awtoft+1
  3199  0015C0  C014  F022         	movff	?___ftpack+2,?___awtoft+2
  3200  0015C4  0012               	return	
  3201  0015C6                     __end_of___awtoft:
  3202                           	opt stack 0
  3203                           tblptru	equ	0xFF8
  3204                           tblptrh	equ	0xFF7
  3205                           tblptrl	equ	0xFF6
  3206                           tablat	equ	0xFF5
  3207                           prodl	equ	0xFF3
  3208                           intcon	equ	0xFF2
  3209                           intcon2	equ	0xFF1
  3210                           postinc0	equ	0xFEE
  3211                           wreg	equ	0xFE8
  3212                           postinc1	equ	0xFE6
  3213                           postdec1	equ	0xFE5
  3214                           fsr1h	equ	0xFE2
  3215                           fsr1l	equ	0xFE1
  3216                           postinc2	equ	0xFDE
  3217                           postdec2	equ	0xFDD
  3218                           fsr2h	equ	0xFDA
  3219                           fsr2l	equ	0xFD9
  3220                           status	equ	0xFD8
  3221                           
  3222 ;; *************** function ___awdiv *****************
  3223 ;; Defined at:
  3224 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;  dividend        2   17[COMRAM] int 
  3227 ;;  divisor         2   19[COMRAM] int 
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;  quotient        2   23[COMRAM] int 
  3230 ;;  sign            1   22[COMRAM] unsigned char 
  3231 ;;  counter         1   21[COMRAM] unsigned char 
  3232 ;; Return value:  Size  Location     Type
  3233 ;;                  2   17[COMRAM] int 
  3234 ;; Registers used:
  3235 ;;		wreg, status,2, status,0, prodl
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3241 ;;      Params:         4       0       0       0       0       0       0
  3242 ;;      Locals:         4       0       0       0       0       0       0
  3243 ;;      Temps:          0       0       0       0       0       0       0
  3244 ;;      Totals:         8       0       0       0       0       0       0
  3245 ;;Total ram usage:        8 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; Hardware stack levels required when called:    3
  3248 ;; This function calls:
  3249 ;;		Nothing
  3250 ;; This function is called by:
  3251 ;;		_Battery_Convert
  3252 ;;		_Temp_Convert
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           	psect	text21
  3257  001300                     __ptext21:
  3258                           	opt stack 0
  3259  001300                     ___awdiv:
  3260                           	opt stack 26
  3261                           
  3262                           ;incstack = 0
  3263  001300  0E00               	movlw	0
  3264  001302  6E17               	movwf	___awdiv@sign,c
  3265  001304  5015               	movf	___awdiv@divisor+1,w,c
  3266  001306  0A80               	xorlw	128
  3267  001308  6EF3               	movwf	prodl,c
  3268  00130A  0E80               	movlw	128
  3269  00130C  5CF3               	subwf	prodl,w,c
  3270  00130E  0E00               	movlw	0
  3271  001310  B4D8               	btfsc	status,2,c
  3272  001312  5C14               	subwf	___awdiv@divisor,w,c
  3273  001314  B0D8               	btfsc	status,0,c
  3274  001316  D006               	goto	l2739
  3275  001318  6C14               	negf	___awdiv@divisor,c
  3276  00131A  1E15               	comf	___awdiv@divisor+1,f,c
  3277  00131C  B0D8               	btfsc	status,0,c
  3278  00131E  2A15               	incf	___awdiv@divisor+1,f,c
  3279  001320  0E01               	movlw	1
  3280  001322  6E17               	movwf	___awdiv@sign,c
  3281  001324                     l2739:
  3282  001324  5013               	movf	___awdiv@dividend+1,w,c
  3283  001326  0A80               	xorlw	128
  3284  001328  6EF3               	movwf	prodl,c
  3285  00132A  0E80               	movlw	128
  3286  00132C  5CF3               	subwf	prodl,w,c
  3287  00132E  0E00               	movlw	0
  3288  001330  B4D8               	btfsc	status,2,c
  3289  001332  5C12               	subwf	___awdiv@dividend,w,c
  3290  001334  B0D8               	btfsc	status,0,c
  3291  001336  D006               	goto	l2745
  3292  001338  6C12               	negf	___awdiv@dividend,c
  3293  00133A  1E13               	comf	___awdiv@dividend+1,f,c
  3294  00133C  B0D8               	btfsc	status,0,c
  3295  00133E  2A13               	incf	___awdiv@dividend+1,f,c
  3296  001340  0E01               	movlw	1
  3297  001342  1A17               	xorwf	___awdiv@sign,f,c
  3298  001344                     l2745:
  3299  001344  0E00               	movlw	0
  3300  001346  6E19               	movwf	___awdiv@quotient+1,c
  3301  001348  0E00               	movlw	0
  3302  00134A  6E18               	movwf	___awdiv@quotient,c
  3303  00134C  5015               	movf	___awdiv@divisor+1,w,c
  3304  00134E  1014               	iorwf	___awdiv@divisor,w,c
  3305  001350  B4D8               	btfsc	status,2,c
  3306  001352  D01C               	goto	l2767
  3307  001354  0E01               	movlw	1
  3308  001356  6E16               	movwf	___awdiv@counter,c
  3309  001358  D004               	goto	l2753
  3310  00135A                     l2751:
  3311  00135A  90D8               	bcf	status,0,c
  3312  00135C  3614               	rlcf	___awdiv@divisor,f,c
  3313  00135E  3615               	rlcf	___awdiv@divisor+1,f,c
  3314  001360  2A16               	incf	___awdiv@counter,f,c
  3315  001362                     l2753:
  3316  001362  AE15               	btfss	___awdiv@divisor+1,7,c
  3317  001364  D7FA               	goto	l2751
  3318  001366                     l2755:
  3319  001366  90D8               	bcf	status,0,c
  3320  001368  3618               	rlcf	___awdiv@quotient,f,c
  3321  00136A  3619               	rlcf	___awdiv@quotient+1,f,c
  3322  00136C  5014               	movf	___awdiv@divisor,w,c
  3323  00136E  5C12               	subwf	___awdiv@dividend,w,c
  3324  001370  5015               	movf	___awdiv@divisor+1,w,c
  3325  001372  5813               	subwfb	___awdiv@dividend+1,w,c
  3326  001374  A0D8               	btfss	status,0,c
  3327  001376  D005               	goto	l2763
  3328  001378  5014               	movf	___awdiv@divisor,w,c
  3329  00137A  5E12               	subwf	___awdiv@dividend,f,c
  3330  00137C  5015               	movf	___awdiv@divisor+1,w,c
  3331  00137E  5A13               	subwfb	___awdiv@dividend+1,f,c
  3332  001380  8018               	bsf	___awdiv@quotient,0,c
  3333  001382                     l2763:
  3334  001382  90D8               	bcf	status,0,c
  3335  001384  3215               	rrcf	___awdiv@divisor+1,f,c
  3336  001386  3214               	rrcf	___awdiv@divisor,f,c
  3337  001388  2E16               	decfsz	___awdiv@counter,f,c
  3338  00138A  D7ED               	goto	l2755
  3339  00138C                     l2767:
  3340  00138C  5017               	movf	___awdiv@sign,w,c
  3341  00138E  B4D8               	btfsc	status,2,c
  3342  001390  D004               	goto	l2771
  3343  001392  6C18               	negf	___awdiv@quotient,c
  3344  001394  1E19               	comf	___awdiv@quotient+1,f,c
  3345  001396  B0D8               	btfsc	status,0,c
  3346  001398  2A19               	incf	___awdiv@quotient+1,f,c
  3347  00139A                     l2771:
  3348  00139A  C018  F012         	movff	___awdiv@quotient,?___awdiv
  3349  00139E  C019  F013         	movff	___awdiv@quotient+1,?___awdiv+1
  3350  0013A2  0012               	return	
  3351  0013A4                     __end_of___awdiv:
  3352                           	opt stack 0
  3353                           tblptru	equ	0xFF8
  3354                           tblptrh	equ	0xFF7
  3355                           tblptrl	equ	0xFF6
  3356                           tablat	equ	0xFF5
  3357                           prodl	equ	0xFF3
  3358                           intcon	equ	0xFF2
  3359                           intcon2	equ	0xFF1
  3360                           postinc0	equ	0xFEE
  3361                           wreg	equ	0xFE8
  3362                           postinc1	equ	0xFE6
  3363                           postdec1	equ	0xFE5
  3364                           fsr1h	equ	0xFE2
  3365                           fsr1l	equ	0xFE1
  3366                           postinc2	equ	0xFDE
  3367                           postdec2	equ	0xFDD
  3368                           fsr2h	equ	0xFDA
  3369                           fsr2l	equ	0xFD9
  3370                           status	equ	0xFD8
  3371                           
  3372 ;; *************** function _Battery_Filter *****************
  3373 ;; Defined at:
  3374 ;;		line 33 in file "Battery.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;		None
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;  x               2   59[COMRAM] int 
  3379 ;; Return value:  Size  Location     Type
  3380 ;;		None               void
  3381 ;; Registers used:
  3382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3388 ;;      Params:         0       0       0       0       0       0       0
  3389 ;;      Locals:         2       0       0       0       0       0       0
  3390 ;;      Temps:          0       0       0       0       0       0       0
  3391 ;;      Totals:         2       0       0       0       0       0       0
  3392 ;;Total ram usage:        2 bytes
  3393 ;; Hardware stack levels used:    1
  3394 ;; Hardware stack levels required when called:    5
  3395 ;; This function calls:
  3396 ;;		___ftadd
  3397 ;;		___ftmul
  3398 ;;		___wmul
  3399 ;; This function is called by:
  3400 ;;		_Battery_Convert
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           	psect	text22
  3405  000B6E                     __ptext22:
  3406                           	opt stack 0
  3407  000B6E                     _Battery_Filter:
  3408                           	opt stack 24
  3409                           
  3410                           ;Battery.c: 36: int x;
  3411                           ;Battery.c: 37: for(x = 0; x < 10; x++)
  3412                           
  3413                           ;incstack = 0
  3414  000B6E  0E00               	movlw	0
  3415  000B70  6E3D               	movwf	Battery_Filter@x+1,c
  3416  000B72  0E00               	movlw	0
  3417  000B74  6E3C               	movwf	Battery_Filter@x,c
  3418  000B76  503D               	movf	Battery_Filter@x+1,w,c
  3419  000B78  0A80               	xorlw	128
  3420  000B7A  0F80               	addlw	-128
  3421  000B7C  0E0A               	movlw	10
  3422  000B7E  B4D8               	btfsc	status,2,c
  3423  000B80  5C3C               	subwf	Battery_Filter@x,w,c
  3424  000B82  B0D8               	btfsc	status,0,c
  3425  000B84  D06A               	goto	l2621
  3426                           
  3427                           ;Battery.c: 38: {
  3428                           ;Battery.c: 39: Battery_Volt[x] = (0.88*TempBattery_Volt[x] + ((1- 0.88)*PrevBattery_Vol
      +                          t[x]));
  3429  000B86  C03C  F01A         	movff	Battery_Filter@x,___wmul@multiplier
  3430  000B8A  C03D  F01B         	movff	Battery_Filter@x+1,___wmul@multiplier+1
  3431  000B8E  0E00               	movlw	0
  3432  000B90  6E1D               	movwf	___wmul@multiplicand+1,c
  3433  000B92  0E03               	movlw	3
  3434  000B94  6E1C               	movwf	___wmul@multiplicand,c
  3435  000B96  EC81  F00B         	call	___wmul	;wreg free
  3436  000B9A  0100               	movlb	0	; () banked
  3437  000B9C  0E60               	movlw	low _Battery_Volt
  3438  000B9E  241A               	addwf	?___wmul,w,c
  3439  000BA0  6ED9               	movwf	fsr2l,c
  3440  000BA2  0100               	movlb	0	; () banked
  3441  000BA4  0E00               	movlw	high _Battery_Volt
  3442  000BA6  201B               	addwfc	?___wmul+1,w,c
  3443  000BA8  6EDA               	movwf	fsr2h,c
  3444  000BAA  0E48               	movlw	72
  3445  000BAC  6E27               	movwf	___ftmul@f2,c
  3446  000BAE  0E61               	movlw	97
  3447  000BB0  6E28               	movwf	___ftmul@f2+1,c
  3448  000BB2  0E3F               	movlw	63
  3449  000BB4  6E29               	movwf	___ftmul@f2+2,c
  3450  000BB6  C03C  F01A         	movff	Battery_Filter@x,___wmul@multiplier
  3451  000BBA  C03D  F01B         	movff	Battery_Filter@x+1,___wmul@multiplier+1
  3452  000BBE  0E00               	movlw	0
  3453  000BC0  6E1D               	movwf	___wmul@multiplicand+1,c
  3454  000BC2  0E03               	movlw	3
  3455  000BC4  6E1C               	movwf	___wmul@multiplicand,c
  3456  000BC6  EC81  F00B         	call	___wmul	;wreg free
  3457  000BCA  0100               	movlb	0	; () banked
  3458  000BCC  0ECA               	movlw	low _TempBattery_Volt
  3459  000BCE  241A               	addwf	?___wmul,w,c
  3460  000BD0  6EE1               	movwf	fsr1l,c
  3461  000BD2  0100               	movlb	0	; () banked
  3462  000BD4  0E00               	movlw	high _TempBattery_Volt
  3463  000BD6  201B               	addwfc	?___wmul+1,w,c
  3464  000BD8  6EE2               	movwf	fsr1h,c
  3465  000BDA  CFE6 F024          	movff	postinc1,___ftmul@f1
  3466  000BDE  CFE6 F025          	movff	postinc1,___ftmul@f1+1
  3467  000BE2  CFE5 F026          	movff	postdec1,___ftmul@f1+2
  3468  000BE6  EC11  F007         	call	___ftmul	;wreg free
  3469  000BEA  C024  F033         	movff	?___ftmul,___ftadd@f1
  3470  000BEE  C025  F034         	movff	?___ftmul+1,___ftadd@f1+1
  3471  000BF2  C026  F035         	movff	?___ftmul+2,___ftadd@f1+2
  3472  000BF6  0EC3               	movlw	195
  3473  000BF8  6E27               	movwf	___ftmul@f2,c
  3474  000BFA  0EF5               	movlw	245
  3475  000BFC  6E28               	movwf	___ftmul@f2+1,c
  3476  000BFE  0E3D               	movlw	61
  3477  000C00  6E29               	movwf	___ftmul@f2+2,c
  3478  000C02  0E00               	movlw	0
  3479  000C04  6E1D               	movwf	___wmul@multiplicand+1,c
  3480  000C06  0E03               	movlw	3
  3481  000C08  6E1C               	movwf	___wmul@multiplicand,c
  3482  000C0A  C03C  F01A         	movff	Battery_Filter@x,___wmul@multiplier
  3483  000C0E  C03D  F01B         	movff	Battery_Filter@x+1,___wmul@multiplier+1
  3484  000C12  EC81  F00B         	call	___wmul	;wreg free
  3485  000C16  0101               	movlb	1	; () banked
  3486  000C18  0E00               	movlw	low _PrevBattery_Volt
  3487  000C1A  241A               	addwf	?___wmul,w,c
  3488  000C1C  6EE1               	movwf	fsr1l,c
  3489  000C1E  0101               	movlb	1	; () banked
  3490  000C20  0E01               	movlw	high _PrevBattery_Volt
  3491  000C22  201B               	addwfc	?___wmul+1,w,c
  3492  000C24  6EE2               	movwf	fsr1h,c
  3493  000C26  CFE6 F024          	movff	postinc1,___ftmul@f1
  3494  000C2A  CFE6 F025          	movff	postinc1,___ftmul@f1+1
  3495  000C2E  CFE5 F026          	movff	postdec1,___ftmul@f1+2
  3496  000C32  EC11  F007         	call	___ftmul	;wreg free
  3497  000C36  C024  F036         	movff	?___ftmul,___ftadd@f2
  3498  000C3A  C025  F037         	movff	?___ftmul+1,___ftadd@f2+1
  3499  000C3E  C026  F038         	movff	?___ftmul+2,___ftadd@f2+2
  3500  000C42  EC0F  F003         	call	___ftadd	;wreg free
  3501  000C46  C033  FFDE         	movff	?___ftadd,postinc2
  3502  000C4A  C034  FFDE         	movff	?___ftadd+1,postinc2
  3503  000C4E  C035  FFDD         	movff	?___ftadd+2,postdec2
  3504  000C52  52DD               	movf	postdec2,f,c
  3505  000C54  4A3C               	infsnz	Battery_Filter@x,f,c
  3506  000C56  2A3D               	incf	Battery_Filter@x+1,f,c
  3507  000C58  D78E               	goto	L7
  3508  000C5A                     l2621:
  3509                           
  3510                           ;Battery.c: 40: }
  3511                           ;Battery.c: 41: for(x = 0; x < 10; x++)
  3512  000C5A  0E00               	movlw	0
  3513  000C5C  6E3D               	movwf	Battery_Filter@x+1,c
  3514  000C5E  0E00               	movlw	0
  3515  000C60  6E3C               	movwf	Battery_Filter@x,c
  3516  000C62  503D               	movf	Battery_Filter@x+1,w,c
  3517  000C64  0A80               	xorlw	128
  3518  000C66  0F80               	addlw	-128
  3519  000C68  0E0A               	movlw	10
  3520  000C6A  B4D8               	btfsc	status,2,c
  3521  000C6C  5C3C               	subwf	Battery_Filter@x,w,c
  3522  000C6E  B0D8               	btfsc	status,0,c
  3523  000C70  0012               	return	
  3524                           
  3525                           ;Battery.c: 42: {
  3526                           ;Battery.c: 43: PrevBattery_Volt[x] = Battery_Volt[x];
  3527  000C72  C03C  F01A         	movff	Battery_Filter@x,___wmul@multiplier
  3528  000C76  C03D  F01B         	movff	Battery_Filter@x+1,___wmul@multiplier+1
  3529  000C7A  0E00               	movlw	0
  3530  000C7C  6E1D               	movwf	___wmul@multiplicand+1,c
  3531  000C7E  0E03               	movlw	3
  3532  000C80  6E1C               	movwf	___wmul@multiplicand,c
  3533  000C82  EC81  F00B         	call	___wmul	;wreg free
  3534  000C86  0100               	movlb	0	; () banked
  3535  000C88  0E60               	movlw	low _Battery_Volt
  3536  000C8A  241A               	addwf	?___wmul,w,c
  3537  000C8C  6ED9               	movwf	fsr2l,c
  3538  000C8E  0100               	movlb	0	; () banked
  3539  000C90  0E00               	movlw	high _Battery_Volt
  3540  000C92  201B               	addwfc	?___wmul+1,w,c
  3541  000C94  6EDA               	movwf	fsr2h,c
  3542  000C96  C03C  F01A         	movff	Battery_Filter@x,___wmul@multiplier
  3543  000C9A  C03D  F01B         	movff	Battery_Filter@x+1,___wmul@multiplier+1
  3544  000C9E  0E00               	movlw	0
  3545  000CA0  6E1D               	movwf	___wmul@multiplicand+1,c
  3546  000CA2  0E03               	movlw	3
  3547  000CA4  6E1C               	movwf	___wmul@multiplicand,c
  3548  000CA6  EC81  F00B         	call	___wmul	;wreg free
  3549  000CAA  0101               	movlb	1	; () banked
  3550  000CAC  0E00               	movlw	low _PrevBattery_Volt
  3551  000CAE  241A               	addwf	?___wmul,w,c
  3552  000CB0  6EE1               	movwf	fsr1l,c
  3553  000CB2  0101               	movlb	1	; () banked
  3554  000CB4  0E01               	movlw	high _PrevBattery_Volt
  3555  000CB6  201B               	addwfc	?___wmul+1,w,c
  3556  000CB8  6EE2               	movwf	fsr1h,c
  3557  000CBA  CFDE FFE6          	movff	postinc2,postinc1
  3558  000CBE  CFDE FFE6          	movff	postinc2,postinc1
  3559  000CC2  CFDE FFE5          	movff	postinc2,postdec1
  3560  000CC6  52E5               	movf	postdec1,f,c
  3561                           
  3562                           ; BSR set to: 1
  3563  000CC8  4A3C               	infsnz	Battery_Filter@x,f,c
  3564  000CCA  2A3D               	incf	Battery_Filter@x+1,f,c
  3565  000CCC  D7CA               	goto	L8
  3566  000CCE                     __end_of_Battery_Filter:
  3567                           	opt stack 0
  3568                           tblptru	equ	0xFF8
  3569                           tblptrh	equ	0xFF7
  3570                           tblptrl	equ	0xFF6
  3571                           tablat	equ	0xFF5
  3572                           prodl	equ	0xFF3
  3573                           intcon	equ	0xFF2
  3574                           intcon2	equ	0xFF1
  3575                           postinc0	equ	0xFEE
  3576                           wreg	equ	0xFE8
  3577                           postinc1	equ	0xFE6
  3578                           postdec1	equ	0xFE5
  3579                           fsr1h	equ	0xFE2
  3580                           fsr1l	equ	0xFE1
  3581                           postinc2	equ	0xFDE
  3582                           postdec2	equ	0xFDD
  3583                           fsr2h	equ	0xFDA
  3584                           fsr2l	equ	0xFD9
  3585                           status	equ	0xFD8
  3586                           
  3587 ;; *************** function ___wmul *****************
  3588 ;; Defined at:
  3589 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;  multiplier      2   25[COMRAM] unsigned int 
  3592 ;;  multiplicand    2   27[COMRAM] unsigned int 
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;  product         2   29[COMRAM] unsigned int 
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  2   25[COMRAM] unsigned int 
  3597 ;; Registers used:
  3598 ;;		wreg, status,2, status,0, prodl, prodh
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3604 ;;      Params:         4       0       0       0       0       0       0
  3605 ;;      Locals:         2       0       0       0       0       0       0
  3606 ;;      Temps:          0       0       0       0       0       0       0
  3607 ;;      Totals:         6       0       0       0       0       0       0
  3608 ;;Total ram usage:        6 bytes
  3609 ;; Hardware stack levels used:    1
  3610 ;; Hardware stack levels required when called:    3
  3611 ;; This function calls:
  3612 ;;		Nothing
  3613 ;; This function is called by:
  3614 ;;		_Battery_Fault
  3615 ;;		_Battery_Filter
  3616 ;;		_Battery_Convert
  3617 ;;		_Temp_Fault
  3618 ;;		_Temp_Filter
  3619 ;;		_Temp_Convert
  3620 ;;		_eval_poly
  3621 ;;		_Battery_Get
  3622 ;;		_Tempeture_Get
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text23
  3627  001702                     __ptext23:
  3628                           	opt stack 0
  3629  001702                     ___wmul:
  3630                           	opt stack 26
  3631                           
  3632                           ;incstack = 0
  3633  001702  501A               	movf	___wmul@multiplier,w,c
  3634  001704  021C               	mulwf	___wmul@multiplicand,c
  3635  001706  CFF3 F01E          	movff	prodl,___wmul@product
  3636  00170A  CFF4 F01F          	movff	prodh,___wmul@product+1
  3637  00170E  501A               	movf	___wmul@multiplier,w,c
  3638  001710  021D               	mulwf	___wmul@multiplicand+1,c
  3639  001712  50F3               	movf	prodl,w,c
  3640  001714  261F               	addwf	___wmul@product+1,f,c
  3641  001716  501B               	movf	___wmul@multiplier+1,w,c
  3642  001718  021C               	mulwf	___wmul@multiplicand,c
  3643  00171A  50F3               	movf	prodl,w,c
  3644  00171C  261F               	addwf	___wmul@product+1,f,c
  3645  00171E  C01E  F01A         	movff	___wmul@product,?___wmul
  3646  001722  C01F  F01B         	movff	___wmul@product+1,?___wmul+1
  3647  001726  0012               	return	
  3648  001728                     __end_of___wmul:
  3649                           	opt stack 0
  3650                           tblptru	equ	0xFF8
  3651                           tblptrh	equ	0xFF7
  3652                           tblptrl	equ	0xFF6
  3653                           tablat	equ	0xFF5
  3654                           prodh	equ	0xFF4
  3655                           prodl	equ	0xFF3
  3656                           intcon	equ	0xFF2
  3657                           intcon2	equ	0xFF1
  3658                           postinc0	equ	0xFEE
  3659                           wreg	equ	0xFE8
  3660                           postinc1	equ	0xFE6
  3661                           postdec1	equ	0xFE5
  3662                           fsr1h	equ	0xFE2
  3663                           fsr1l	equ	0xFE1
  3664                           postinc2	equ	0xFDE
  3665                           postdec2	equ	0xFDD
  3666                           fsr2h	equ	0xFDA
  3667                           fsr2l	equ	0xFD9
  3668                           status	equ	0xFD8
  3669                           
  3670 ;; *************** function ___ftmul *****************
  3671 ;; Defined at:
  3672 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;  f1              3   35[COMRAM] float 
  3675 ;;  f2              3   38[COMRAM] float 
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;  f3_as_produc    3   45[COMRAM] unsigned um
  3678 ;;  sign            1   49[COMRAM] unsigned char 
  3679 ;;  cntr            1   48[COMRAM] unsigned char 
  3680 ;;  exp             1   44[COMRAM] unsigned char 
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  3   35[COMRAM] float 
  3683 ;; Registers used:
  3684 ;;		wreg, status,2, status,0, cstack
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3690 ;;      Params:         6       0       0       0       0       0       0
  3691 ;;      Locals:         6       0       0       0       0       0       0
  3692 ;;      Temps:          3       0       0       0       0       0       0
  3693 ;;      Totals:        15       0       0       0       0       0       0
  3694 ;;Total ram usage:       15 bytes
  3695 ;; Hardware stack levels used:    1
  3696 ;; Hardware stack levels required when called:    4
  3697 ;; This function calls:
  3698 ;;		___ftpack
  3699 ;; This function is called by:
  3700 ;;		_Battery_Filter
  3701 ;;		_Temp_Filter
  3702 ;;		_Temp_Convert
  3703 ;;		_log
  3704 ;;		_eval_poly
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           	psect	text24
  3709  000E22                     __ptext24:
  3710                           	opt stack 0
  3711  000E22                     ___ftmul:
  3712                           	opt stack 23
  3713                           
  3714                           ;incstack = 0
  3715  000E22  C026  F02A         	movff	___ftmul@f1+2,??___ftmul
  3716  000E26  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  3717  000E28  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  3718  000E2A  3425               	rlcf	___ftmul@f1+1,w,c
  3719  000E2C  362A               	rlcf	??___ftmul& (0+255),f,c
  3720  000E2E  E301               	bnc	u2241
  3721  000E30  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  3722  000E32                     u2241:
  3723  000E32  502A               	movf	??___ftmul,w,c
  3724  000E34  6E2D               	movwf	___ftmul@exp,c
  3725  000E36  662D               	tstfsz	___ftmul@exp& (0+255),c
  3726  000E38  D007               	goto	l2529
  3727  000E3A  0E00               	movlw	0
  3728  000E3C  6E24               	movwf	?___ftmul,c
  3729  000E3E  0E00               	movlw	0
  3730  000E40  6E25               	movwf	?___ftmul+1,c
  3731  000E42  0E00               	movlw	0
  3732  000E44  6E26               	movwf	?___ftmul+2,c
  3733  000E46  0012               	return	
  3734  000E48                     l2529:
  3735  000E48  C029  F02A         	movff	___ftmul@f2+2,??___ftmul
  3736  000E4C  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  3737  000E4E  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  3738  000E50  3428               	rlcf	___ftmul@f2+1,w,c
  3739  000E52  362A               	rlcf	??___ftmul& (0+255),f,c
  3740  000E54  E301               	bnc	u2261
  3741  000E56  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  3742  000E58                     u2261:
  3743  000E58  502A               	movf	??___ftmul,w,c
  3744  000E5A  6E32               	movwf	___ftmul@sign,c
  3745  000E5C  6632               	tstfsz	___ftmul@sign& (0+255),c
  3746  000E5E  D007               	goto	l2535
  3747  000E60  0E00               	movlw	0
  3748  000E62  6E24               	movwf	?___ftmul,c
  3749  000E64  0E00               	movlw	0
  3750  000E66  6E25               	movwf	?___ftmul+1,c
  3751  000E68  0E00               	movlw	0
  3752  000E6A  6E26               	movwf	?___ftmul+2,c
  3753  000E6C  0012               	return	
  3754  000E6E                     l2535:
  3755  000E6E  5032               	movf	___ftmul@sign,w,c
  3756  000E70  0F7B               	addlw	123
  3757  000E72  262D               	addwf	___ftmul@exp,f,c
  3758  000E74  C026  F032         	movff	___ftmul@f1+2,___ftmul@sign
  3759  000E78  5029               	movf	___ftmul@f2+2,w,c
  3760  000E7A  1A32               	xorwf	___ftmul@sign,f,c
  3761  000E7C  0E80               	movlw	128
  3762  000E7E  1632               	andwf	___ftmul@sign,f,c
  3763  000E80  8E25               	bsf	___ftmul@f1+1,7,c
  3764  000E82  8E28               	bsf	___ftmul@f2+1,7,c
  3765  000E84  0EFF               	movlw	255
  3766  000E86  1627               	andwf	___ftmul@f2,f,c
  3767  000E88  0EFF               	movlw	255
  3768  000E8A  1628               	andwf	___ftmul@f2+1,f,c
  3769  000E8C  0E00               	movlw	0
  3770  000E8E  1629               	andwf	___ftmul@f2+2,f,c
  3771  000E90  0E00               	movlw	0
  3772  000E92  6E2E               	movwf	___ftmul@f3_as_product,c
  3773  000E94  0E00               	movlw	0
  3774  000E96  6E2F               	movwf	___ftmul@f3_as_product+1,c
  3775  000E98  0E00               	movlw	0
  3776  000E9A  6E30               	movwf	___ftmul@f3_as_product+2,c
  3777  000E9C  0E07               	movlw	7
  3778  000E9E  6E31               	movwf	___ftmul@cntr,c
  3779  000EA0                     l2549:
  3780  000EA0  A024               	btfss	___ftmul@f1,0,c
  3781  000EA2  D006               	goto	l2553
  3782  000EA4  5027               	movf	___ftmul@f2,w,c
  3783  000EA6  262E               	addwf	___ftmul@f3_as_product,f,c
  3784  000EA8  5028               	movf	___ftmul@f2+1,w,c
  3785  000EAA  222F               	addwfc	___ftmul@f3_as_product+1,f,c
  3786  000EAC  5029               	movf	___ftmul@f2+2,w,c
  3787  000EAE  2230               	addwfc	___ftmul@f3_as_product+2,f,c
  3788  000EB0                     l2553:
  3789  000EB0  90D8               	bcf	status,0,c
  3790  000EB2  3226               	rrcf	___ftmul@f1+2,f,c
  3791  000EB4  3225               	rrcf	___ftmul@f1+1,f,c
  3792  000EB6  3224               	rrcf	___ftmul@f1,f,c
  3793  000EB8  90D8               	bcf	status,0,c
  3794  000EBA  3627               	rlcf	___ftmul@f2,f,c
  3795  000EBC  3628               	rlcf	___ftmul@f2+1,f,c
  3796  000EBE  3629               	rlcf	___ftmul@f2+2,f,c
  3797  000EC0  2E31               	decfsz	___ftmul@cntr,f,c
  3798  000EC2  D7EE               	goto	l2549
  3799  000EC4  0E09               	movlw	9
  3800  000EC6  6E31               	movwf	___ftmul@cntr,c
  3801  000EC8                     l2559:
  3802  000EC8  A024               	btfss	___ftmul@f1,0,c
  3803  000ECA  D006               	goto	l2563
  3804  000ECC  5027               	movf	___ftmul@f2,w,c
  3805  000ECE  262E               	addwf	___ftmul@f3_as_product,f,c
  3806  000ED0  5028               	movf	___ftmul@f2+1,w,c
  3807  000ED2  222F               	addwfc	___ftmul@f3_as_product+1,f,c
  3808  000ED4  5029               	movf	___ftmul@f2+2,w,c
  3809  000ED6  2230               	addwfc	___ftmul@f3_as_product+2,f,c
  3810  000ED8                     l2563:
  3811  000ED8  90D8               	bcf	status,0,c
  3812  000EDA  3226               	rrcf	___ftmul@f1+2,f,c
  3813  000EDC  3225               	rrcf	___ftmul@f1+1,f,c
  3814  000EDE  3224               	rrcf	___ftmul@f1,f,c
  3815  000EE0  90D8               	bcf	status,0,c
  3816  000EE2  3230               	rrcf	___ftmul@f3_as_product+2,f,c
  3817  000EE4  322F               	rrcf	___ftmul@f3_as_product+1,f,c
  3818  000EE6  322E               	rrcf	___ftmul@f3_as_product,f,c
  3819  000EE8  2E31               	decfsz	___ftmul@cntr,f,c
  3820  000EEA  D7EE               	goto	l2559
  3821  000EEC  C02E  F012         	movff	___ftmul@f3_as_product,___ftpack@arg
  3822  000EF0  C02F  F013         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3823  000EF4  C030  F014         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3824  000EF8  C02D  F015         	movff	___ftmul@exp,___ftpack@exp
  3825  000EFC  C032  F016         	movff	___ftmul@sign,___ftpack@sign
  3826  000F00  EC2C  F009         	call	___ftpack	;wreg free
  3827  000F04  C012  F024         	movff	?___ftpack,?___ftmul
  3828  000F08  C013  F025         	movff	?___ftpack+1,?___ftmul+1
  3829  000F0C  C014  F026         	movff	?___ftpack+2,?___ftmul+2
  3830  000F10  0012               	return	
  3831  000F12                     __end_of___ftmul:
  3832                           	opt stack 0
  3833                           tblptru	equ	0xFF8
  3834                           tblptrh	equ	0xFF7
  3835                           tblptrl	equ	0xFF6
  3836                           tablat	equ	0xFF5
  3837                           prodh	equ	0xFF4
  3838                           prodl	equ	0xFF3
  3839                           intcon	equ	0xFF2
  3840                           intcon2	equ	0xFF1
  3841                           postinc0	equ	0xFEE
  3842                           wreg	equ	0xFE8
  3843                           postinc1	equ	0xFE6
  3844                           postdec1	equ	0xFE5
  3845                           fsr1h	equ	0xFE2
  3846                           fsr1l	equ	0xFE1
  3847                           postinc2	equ	0xFDE
  3848                           postdec2	equ	0xFDD
  3849                           fsr2h	equ	0xFDA
  3850                           fsr2l	equ	0xFD9
  3851                           status	equ	0xFD8
  3852                           
  3853 ;; *************** function ___ftadd *****************
  3854 ;; Defined at:
  3855 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;  f1              3   50[COMRAM] float 
  3858 ;;  f2              3   53[COMRAM] float 
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;  exp1            1    2[BANK0 ] unsigned char 
  3861 ;;  exp2            1    1[BANK0 ] unsigned char 
  3862 ;;  sign            1    0[BANK0 ] unsigned char 
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  3   50[COMRAM] float 
  3865 ;; Registers used:
  3866 ;;		wreg, status,2, status,0, cstack
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3872 ;;      Params:         6       0       0       0       0       0       0
  3873 ;;      Locals:         0       3       0       0       0       0       0
  3874 ;;      Temps:          3       0       0       0       0       0       0
  3875 ;;      Totals:         9       3       0       0       0       0       0
  3876 ;;Total ram usage:       12 bytes
  3877 ;; Hardware stack levels used:    1
  3878 ;; Hardware stack levels required when called:    4
  3879 ;; This function calls:
  3880 ;;		___ftpack
  3881 ;; This function is called by:
  3882 ;;		_Battery_Filter
  3883 ;;		_Battery_Convert
  3884 ;;		_Temp_Filter
  3885 ;;		_Temp_Convert
  3886 ;;		___ftsub
  3887 ;;		_log
  3888 ;;		_eval_poly
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           	psect	text25
  3893  00061E                     __ptext25:
  3894                           	opt stack 0
  3895  00061E                     ___ftadd:
  3896                           	opt stack 23
  3897                           
  3898                           ;incstack = 0
  3899  00061E  C035  F039         	movff	___ftadd@f1+2,??___ftadd
  3900  000622  6A3A               	clrf	(??___ftadd+1)& (0+255),c
  3901  000624  6A3B               	clrf	(??___ftadd+2)& (0+255),c
  3902  000626  3434               	rlcf	___ftadd@f1+1,w,c
  3903  000628  3639               	rlcf	??___ftadd& (0+255),f,c
  3904  00062A  E301               	bnc	u2031
  3905  00062C  803A               	bsf	(??___ftadd+1)& (0+255),0,c
  3906  00062E                     u2031:
  3907  00062E  5039               	movf	??___ftadd,w,c
  3908  000630  0100               	movlb	0	; () banked
  3909  000632  6FEA               	movwf	___ftadd@exp1& (0+255),b
  3910  000634  C038  F039         	movff	___ftadd@f2+2,??___ftadd
  3911  000638  6A3A               	clrf	(??___ftadd+1)& (0+255),c
  3912  00063A  6A3B               	clrf	(??___ftadd+2)& (0+255),c
  3913  00063C  3437               	rlcf	___ftadd@f2+1,w,c
  3914  00063E  3639               	rlcf	??___ftadd& (0+255),f,c
  3915  000640  E301               	bnc	u2041
  3916  000642  803A               	bsf	(??___ftadd+1)& (0+255),0,c
  3917  000644                     u2041:
  3918  000644  5039               	movf	??___ftadd,w,c
  3919  000646  0100               	movlb	0	; () banked
  3920  000648  6FE9               	movwf	___ftadd@exp2& (0+255),b
  3921                           
  3922                           ; BSR set to: 0
  3923  00064A  0100               	movlb	0	; () banked
  3924  00064C  51EA               	movf	___ftadd@exp1& (0+255),w,b
  3925  00064E  B4D8               	btfsc	status,2,c
  3926  000650  D010               	goto	l773
  3927                           
  3928                           ; BSR set to: 0
  3929  000652  0100               	movlb	0	; () banked
  3930  000654  51E9               	movf	___ftadd@exp2& (0+255),w,b
  3931  000656  0100               	movlb	0	; () banked
  3932  000658  5DEA               	subwf	___ftadd@exp1& (0+255),w,b
  3933  00065A  B0D8               	btfsc	status,0,c
  3934  00065C  D011               	goto	l2461
  3935                           
  3936                           ; BSR set to: 0
  3937  00065E  0100               	movlb	0	; () banked
  3938  000660  51EA               	movf	___ftadd@exp1& (0+255),w,b
  3939  000662  0800               	sublw	0
  3940  000664  0100               	movlb	0	; () banked
  3941  000666  25E9               	addwf	___ftadd@exp2& (0+255),w,b
  3942  000668  6E39               	movwf	??___ftadd& (0+255),c
  3943  00066A  0E19               	movlw	25
  3944  00066C  5C39               	subwf	??___ftadd,w,c
  3945  00066E  A0D8               	btfss	status,0,c
  3946  000670  D007               	goto	l2461
  3947  000672                     l773:
  3948                           
  3949                           ; BSR set to: 0
  3950  000672  C036  F033         	movff	___ftadd@f2,?___ftadd
  3951  000676  C037  F034         	movff	___ftadd@f2+1,?___ftadd+1
  3952  00067A  C038  F035         	movff	___ftadd@f2+2,?___ftadd+2
  3953  00067E  0012               	return	
  3954  000680                     l2461:
  3955                           
  3956                           ; BSR set to: 0
  3957  000680  0100               	movlb	0	; () banked
  3958  000682  51E9               	movf	___ftadd@exp2& (0+255),w,b
  3959  000684  B4D8               	btfsc	status,2,c
  3960  000686  D010               	goto	l777
  3961                           
  3962                           ; BSR set to: 0
  3963  000688  0100               	movlb	0	; () banked
  3964  00068A  51EA               	movf	___ftadd@exp1& (0+255),w,b
  3965  00068C  0100               	movlb	0	; () banked
  3966  00068E  5DE9               	subwf	___ftadd@exp2& (0+255),w,b
  3967  000690  B0D8               	btfsc	status,0,c
  3968  000692  D011               	goto	l2467
  3969                           
  3970                           ; BSR set to: 0
  3971  000694  0100               	movlb	0	; () banked
  3972  000696  51E9               	movf	___ftadd@exp2& (0+255),w,b
  3973  000698  0800               	sublw	0
  3974  00069A  0100               	movlb	0	; () banked
  3975  00069C  25EA               	addwf	___ftadd@exp1& (0+255),w,b
  3976  00069E  6E39               	movwf	??___ftadd& (0+255),c
  3977  0006A0  0E19               	movlw	25
  3978  0006A2  5C39               	subwf	??___ftadd,w,c
  3979  0006A4  A0D8               	btfss	status,0,c
  3980  0006A6  D007               	goto	l2467
  3981  0006A8                     l777:
  3982                           
  3983                           ; BSR set to: 0
  3984  0006A8  C033  F033         	movff	___ftadd@f1,?___ftadd
  3985  0006AC  C034  F034         	movff	___ftadd@f1+1,?___ftadd+1
  3986  0006B0  C035  F035         	movff	___ftadd@f1+2,?___ftadd+2
  3987  0006B4  0012               	return	
  3988  0006B6                     l2467:
  3989                           
  3990                           ; BSR set to: 0
  3991  0006B6  0E06               	movlw	6
  3992  0006B8  0100               	movlb	0	; () banked
  3993  0006BA  6FE8               	movwf	___ftadd@sign& (0+255),b
  3994                           
  3995                           ; BSR set to: 0
  3996  0006BC  AE35               	btfss	___ftadd@f1+2,7,c
  3997  0006BE  D002               	goto	l2473
  3998                           
  3999                           ; BSR set to: 0
  4000  0006C0  0100               	movlb	0	; () banked
  4001  0006C2  8FE8               	bsf	___ftadd@sign& (0+255),7,b
  4002  0006C4                     l2473:
  4003                           
  4004                           ; BSR set to: 0
  4005  0006C4  AE38               	btfss	___ftadd@f2+2,7,c
  4006  0006C6  D002               	goto	l779
  4007                           
  4008                           ; BSR set to: 0
  4009  0006C8  0100               	movlb	0	; () banked
  4010  0006CA  8DE8               	bsf	___ftadd@sign& (0+255),6,b
  4011  0006CC                     l779:
  4012                           
  4013                           ; BSR set to: 0
  4014  0006CC  8E34               	bsf	___ftadd@f1+1,7,c
  4015                           
  4016                           ; BSR set to: 0
  4017  0006CE  0EFF               	movlw	255
  4018  0006D0  1633               	andwf	___ftadd@f1,f,c
  4019  0006D2  0EFF               	movlw	255
  4020  0006D4  1634               	andwf	___ftadd@f1+1,f,c
  4021  0006D6  0E00               	movlw	0
  4022  0006D8  1635               	andwf	___ftadd@f1+2,f,c
  4023  0006DA  8E37               	bsf	___ftadd@f2+1,7,c
  4024                           
  4025                           ; BSR set to: 0
  4026  0006DC  0EFF               	movlw	255
  4027  0006DE  1636               	andwf	___ftadd@f2,f,c
  4028  0006E0  0EFF               	movlw	255
  4029  0006E2  1637               	andwf	___ftadd@f2+1,f,c
  4030  0006E4  0E00               	movlw	0
  4031  0006E6  1638               	andwf	___ftadd@f2+2,f,c
  4032                           
  4033                           ; BSR set to: 0
  4034  0006E8  0100               	movlb	0	; () banked
  4035  0006EA  51E9               	movf	___ftadd@exp2& (0+255),w,b
  4036  0006EC  0100               	movlb	0	; () banked
  4037  0006EE  5DEA               	subwf	___ftadd@exp1& (0+255),w,b
  4038  0006F0  B0D8               	btfsc	status,0,c
  4039  0006F2  D021               	goto	l2493
  4040  0006F4                     l2483:
  4041                           
  4042                           ; BSR set to: 0
  4043  0006F4  90D8               	bcf	status,0,c
  4044  0006F6  3636               	rlcf	___ftadd@f2,f,c
  4045  0006F8  3637               	rlcf	___ftadd@f2+1,f,c
  4046  0006FA  3638               	rlcf	___ftadd@f2+2,f,c
  4047  0006FC  0100               	movlb	0	; () banked
  4048  0006FE  07E9               	decf	___ftadd@exp2& (0+255),f,b
  4049                           
  4050                           ; BSR set to: 0
  4051  000700  0100               	movlb	0	; () banked
  4052  000702  51E9               	movf	___ftadd@exp2& (0+255),w,b
  4053  000704  0100               	movlb	0	; () banked
  4054  000706  19EA               	xorwf	___ftadd@exp1& (0+255),w,b
  4055  000708  B4D8               	btfsc	status,2,c
  4056  00070A  D00F               	goto	l2491
  4057                           
  4058                           ; BSR set to: 0
  4059  00070C  0100               	movlb	0	; () banked
  4060  00070E  07E8               	decf	___ftadd@sign& (0+255),f,b
  4061  000710  C0E8  F039         	movff	___ftadd@sign,??___ftadd
  4062  000714  0E07               	movlw	7
  4063  000716  1639               	andwf	??___ftadd,f,c
  4064  000718  B4D8               	btfsc	status,2,c
  4065  00071A  D007               	goto	l2491
  4066  00071C  D7EB               	goto	l2483
  4067  00071E                     l2489:
  4068                           
  4069                           ; BSR set to: 0
  4070  00071E  90D8               	bcf	status,0,c
  4071  000720  3235               	rrcf	___ftadd@f1+2,f,c
  4072  000722  3234               	rrcf	___ftadd@f1+1,f,c
  4073  000724  3233               	rrcf	___ftadd@f1,f,c
  4074  000726  0100               	movlb	0	; () banked
  4075  000728  2BEA               	incf	___ftadd@exp1& (0+255),f,b
  4076  00072A                     l2491:
  4077                           
  4078                           ; BSR set to: 0
  4079  00072A  0100               	movlb	0	; () banked
  4080  00072C  51E9               	movf	___ftadd@exp2& (0+255),w,b
  4081  00072E  0100               	movlb	0	; () banked
  4082  000730  63EA               	cpfseq	___ftadd@exp1& (0+255),b
  4083  000732  D7F5               	goto	l2489
  4084  000734  D026               	goto	l788
  4085  000736                     l2493:
  4086                           
  4087                           ; BSR set to: 0
  4088  000736  0100               	movlb	0	; () banked
  4089  000738  51EA               	movf	___ftadd@exp1& (0+255),w,b
  4090  00073A  0100               	movlb	0	; () banked
  4091  00073C  5DE9               	subwf	___ftadd@exp2& (0+255),w,b
  4092  00073E  B0D8               	btfsc	status,0,c
  4093  000740  D020               	goto	l788
  4094  000742                     l2495:
  4095                           
  4096                           ; BSR set to: 0
  4097  000742  90D8               	bcf	status,0,c
  4098  000744  3633               	rlcf	___ftadd@f1,f,c
  4099  000746  3634               	rlcf	___ftadd@f1+1,f,c
  4100  000748  3635               	rlcf	___ftadd@f1+2,f,c
  4101  00074A  0100               	movlb	0	; () banked
  4102  00074C  07EA               	decf	___ftadd@exp1& (0+255),f,b
  4103                           
  4104                           ; BSR set to: 0
  4105  00074E  0100               	movlb	0	; () banked
  4106  000750  51E9               	movf	___ftadd@exp2& (0+255),w,b
  4107  000752  0100               	movlb	0	; () banked
  4108  000754  19EA               	xorwf	___ftadd@exp1& (0+255),w,b
  4109  000756  B4D8               	btfsc	status,2,c
  4110  000758  D00F               	goto	l2503
  4111                           
  4112                           ; BSR set to: 0
  4113  00075A  0100               	movlb	0	; () banked
  4114  00075C  07E8               	decf	___ftadd@sign& (0+255),f,b
  4115  00075E  C0E8  F039         	movff	___ftadd@sign,??___ftadd
  4116  000762  0E07               	movlw	7
  4117  000764  1639               	andwf	??___ftadd,f,c
  4118  000766  B4D8               	btfsc	status,2,c
  4119  000768  D007               	goto	l2503
  4120  00076A  D7EB               	goto	l2495
  4121  00076C                     l2501:
  4122                           
  4123                           ; BSR set to: 0
  4124  00076C  90D8               	bcf	status,0,c
  4125  00076E  3238               	rrcf	___ftadd@f2+2,f,c
  4126  000770  3237               	rrcf	___ftadd@f2+1,f,c
  4127  000772  3236               	rrcf	___ftadd@f2,f,c
  4128  000774  0100               	movlb	0	; () banked
  4129  000776  2BE9               	incf	___ftadd@exp2& (0+255),f,b
  4130  000778                     l2503:
  4131                           
  4132                           ; BSR set to: 0
  4133  000778  0100               	movlb	0	; () banked
  4134  00077A  51E9               	movf	___ftadd@exp2& (0+255),w,b
  4135  00077C  0100               	movlb	0	; () banked
  4136  00077E  63EA               	cpfseq	___ftadd@exp1& (0+255),b
  4137  000780  D7F5               	goto	l2501
  4138  000782                     l788:
  4139                           
  4140                           ; BSR set to: 0
  4141  000782  0100               	movlb	0	; () banked
  4142  000784  AFE8               	btfss	___ftadd@sign& (0+255),7,b
  4143  000786  D00C               	goto	l797
  4144                           
  4145                           ; BSR set to: 0
  4146  000788  0EFF               	movlw	255
  4147  00078A  1A33               	xorwf	___ftadd@f1,f,c
  4148  00078C  0EFF               	movlw	255
  4149  00078E  1A34               	xorwf	___ftadd@f1+1,f,c
  4150  000790  0EFF               	movlw	255
  4151  000792  1A35               	xorwf	___ftadd@f1+2,f,c
  4152  000794  0E01               	movlw	1
  4153  000796  2633               	addwf	___ftadd@f1,f,c
  4154  000798  0E00               	movlw	0
  4155  00079A  2234               	addwfc	___ftadd@f1+1,f,c
  4156  00079C  0E00               	movlw	0
  4157  00079E  2235               	addwfc	___ftadd@f1+2,f,c
  4158  0007A0                     l797:
  4159                           
  4160                           ; BSR set to: 0
  4161  0007A0  0100               	movlb	0	; () banked
  4162  0007A2  ADE8               	btfss	___ftadd@sign& (0+255),6,b
  4163  0007A4  D00C               	goto	l2509
  4164                           
  4165                           ; BSR set to: 0
  4166  0007A6  0EFF               	movlw	255
  4167  0007A8  1A36               	xorwf	___ftadd@f2,f,c
  4168  0007AA  0EFF               	movlw	255
  4169  0007AC  1A37               	xorwf	___ftadd@f2+1,f,c
  4170  0007AE  0EFF               	movlw	255
  4171  0007B0  1A38               	xorwf	___ftadd@f2+2,f,c
  4172  0007B2  0E01               	movlw	1
  4173  0007B4  2636               	addwf	___ftadd@f2,f,c
  4174  0007B6  0E00               	movlw	0
  4175  0007B8  2237               	addwfc	___ftadd@f2+1,f,c
  4176  0007BA  0E00               	movlw	0
  4177  0007BC  2238               	addwfc	___ftadd@f2+2,f,c
  4178  0007BE                     l2509:
  4179                           
  4180                           ; BSR set to: 0
  4181  0007BE  0E00               	movlw	0
  4182  0007C0  0100               	movlb	0	; () banked
  4183  0007C2  6FE8               	movwf	___ftadd@sign& (0+255),b
  4184                           
  4185                           ; BSR set to: 0
  4186  0007C4  5033               	movf	___ftadd@f1,w,c
  4187  0007C6  2636               	addwf	___ftadd@f2,f,c
  4188  0007C8  5034               	movf	___ftadd@f1+1,w,c
  4189  0007CA  2237               	addwfc	___ftadd@f2+1,f,c
  4190  0007CC  5035               	movf	___ftadd@f1+2,w,c
  4191  0007CE  2238               	addwfc	___ftadd@f2+2,f,c
  4192                           
  4193                           ; BSR set to: 0
  4194  0007D0  AE38               	btfss	___ftadd@f2+2,7,c
  4195  0007D2  D00F               	goto	l2519
  4196                           
  4197                           ; BSR set to: 0
  4198  0007D4  0EFF               	movlw	255
  4199  0007D6  1A36               	xorwf	___ftadd@f2,f,c
  4200  0007D8  0EFF               	movlw	255
  4201  0007DA  1A37               	xorwf	___ftadd@f2+1,f,c
  4202  0007DC  0EFF               	movlw	255
  4203  0007DE  1A38               	xorwf	___ftadd@f2+2,f,c
  4204  0007E0  0E01               	movlw	1
  4205  0007E2  2636               	addwf	___ftadd@f2,f,c
  4206  0007E4  0E00               	movlw	0
  4207  0007E6  2237               	addwfc	___ftadd@f2+1,f,c
  4208  0007E8  0E00               	movlw	0
  4209  0007EA  2238               	addwfc	___ftadd@f2+2,f,c
  4210                           
  4211                           ; BSR set to: 0
  4212  0007EC  0E01               	movlw	1
  4213  0007EE  0100               	movlb	0	; () banked
  4214  0007F0  6FE8               	movwf	___ftadd@sign& (0+255),b
  4215  0007F2                     l2519:
  4216                           
  4217                           ; BSR set to: 0
  4218  0007F2  C036  F012         	movff	___ftadd@f2,___ftpack@arg
  4219  0007F6  C037  F013         	movff	___ftadd@f2+1,___ftpack@arg+1
  4220  0007FA  C038  F014         	movff	___ftadd@f2+2,___ftpack@arg+2
  4221  0007FE  C0EA  F015         	movff	___ftadd@exp1,___ftpack@exp
  4222  000802  C0E8  F016         	movff	___ftadd@sign,___ftpack@sign
  4223  000806  EC2C  F009         	call	___ftpack	;wreg free
  4224  00080A  C012  F033         	movff	?___ftpack,?___ftadd
  4225  00080E  C013  F034         	movff	?___ftpack+1,?___ftadd+1
  4226  000812  C014  F035         	movff	?___ftpack+2,?___ftadd+2
  4227  000816  0012               	return	
  4228  000818                     __end_of___ftadd:
  4229                           	opt stack 0
  4230                           tblptru	equ	0xFF8
  4231                           tblptrh	equ	0xFF7
  4232                           tblptrl	equ	0xFF6
  4233                           tablat	equ	0xFF5
  4234                           prodh	equ	0xFF4
  4235                           prodl	equ	0xFF3
  4236                           intcon	equ	0xFF2
  4237                           intcon2	equ	0xFF1
  4238                           postinc0	equ	0xFEE
  4239                           wreg	equ	0xFE8
  4240                           postinc1	equ	0xFE6
  4241                           postdec1	equ	0xFE5
  4242                           fsr1h	equ	0xFE2
  4243                           fsr1l	equ	0xFE1
  4244                           postinc2	equ	0xFDE
  4245                           postdec2	equ	0xFDD
  4246                           fsr2h	equ	0xFDA
  4247                           fsr2l	equ	0xFD9
  4248                           status	equ	0xFD8
  4249                           
  4250 ;; *************** function ___ftpack *****************
  4251 ;; Defined at:
  4252 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;  arg             3   17[COMRAM] unsigned um
  4255 ;;  exp             1   20[COMRAM] unsigned char 
  4256 ;;  sign            1   21[COMRAM] unsigned char 
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;		None
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  3   17[COMRAM] float 
  4261 ;; Registers used:
  4262 ;;		wreg, status,2, status,0
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4268 ;;      Params:         5       0       0       0       0       0       0
  4269 ;;      Locals:         0       0       0       0       0       0       0
  4270 ;;      Temps:          3       0       0       0       0       0       0
  4271 ;;      Totals:         8       0       0       0       0       0       0
  4272 ;;Total ram usage:        8 bytes
  4273 ;; Hardware stack levels used:    1
  4274 ;; Hardware stack levels required when called:    3
  4275 ;; This function calls:
  4276 ;;		Nothing
  4277 ;; This function is called by:
  4278 ;;		___awtoft
  4279 ;;		___ftadd
  4280 ;;		___ftdiv
  4281 ;;		___ftmul
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           	psect	text26
  4286  001258                     __ptext26:
  4287                           	opt stack 0
  4288  001258                     ___ftpack:
  4289                           	opt stack 23
  4290                           
  4291                           ;incstack = 0
  4292  001258  5015               	movf	___ftpack@exp,w,c
  4293  00125A  B4D8               	btfsc	status,2,c
  4294  00125C  D005               	goto	l2417
  4295  00125E  5012               	movf	___ftpack@arg,w,c
  4296  001260  1013               	iorwf	___ftpack@arg+1,w,c
  4297  001262  1014               	iorwf	___ftpack@arg+2,w,c
  4298  001264  A4D8               	btfss	status,2,c
  4299  001266  D00C               	goto	l2423
  4300  001268                     l2417:
  4301  001268  0E00               	movlw	0
  4302  00126A  6E12               	movwf	?___ftpack,c
  4303  00126C  0E00               	movlw	0
  4304  00126E  6E13               	movwf	?___ftpack+1,c
  4305  001270  0E00               	movlw	0
  4306  001272  6E14               	movwf	?___ftpack+2,c
  4307  001274  0012               	return	
  4308  001276                     l2421:
  4309  001276  2A15               	incf	___ftpack@exp,f,c
  4310  001278  90D8               	bcf	status,0,c
  4311  00127A  3214               	rrcf	___ftpack@arg+2,f,c
  4312  00127C  3213               	rrcf	___ftpack@arg+1,f,c
  4313  00127E  3212               	rrcf	___ftpack@arg,f,c
  4314  001280                     l2423:
  4315  001280  0E00               	movlw	0
  4316  001282  1412               	andwf	___ftpack@arg,w,c
  4317  001284  6E17               	movwf	??___ftpack& (0+255),c
  4318  001286  0E00               	movlw	0
  4319  001288  1413               	andwf	___ftpack@arg+1,w,c
  4320  00128A  6E18               	movwf	(??___ftpack+1)& (0+255),c
  4321  00128C  0EFE               	movlw	254
  4322  00128E  1414               	andwf	___ftpack@arg+2,w,c
  4323  001290  6E19               	movwf	(??___ftpack+2)& (0+255),c
  4324  001292  5017               	movf	??___ftpack,w,c
  4325  001294  1018               	iorwf	??___ftpack+1,w,c
  4326  001296  1019               	iorwf	??___ftpack+2,w,c
  4327  001298  B4D8               	btfsc	status,2,c
  4328  00129A  D00C               	goto	l2429
  4329  00129C  D7EC               	goto	l2421
  4330  00129E                     l2425:
  4331  00129E  2A15               	incf	___ftpack@exp,f,c
  4332  0012A0  0E01               	movlw	1
  4333  0012A2  2612               	addwf	___ftpack@arg,f,c
  4334  0012A4  0E00               	movlw	0
  4335  0012A6  2213               	addwfc	___ftpack@arg+1,f,c
  4336  0012A8  0E00               	movlw	0
  4337  0012AA  2214               	addwfc	___ftpack@arg+2,f,c
  4338  0012AC  90D8               	bcf	status,0,c
  4339  0012AE  3214               	rrcf	___ftpack@arg+2,f,c
  4340  0012B0  3213               	rrcf	___ftpack@arg+1,f,c
  4341  0012B2  3212               	rrcf	___ftpack@arg,f,c
  4342  0012B4                     l2429:
  4343  0012B4  0E00               	movlw	0
  4344  0012B6  1412               	andwf	___ftpack@arg,w,c
  4345  0012B8  6E17               	movwf	??___ftpack& (0+255),c
  4346  0012BA  0E00               	movlw	0
  4347  0012BC  1413               	andwf	___ftpack@arg+1,w,c
  4348  0012BE  6E18               	movwf	(??___ftpack+1)& (0+255),c
  4349  0012C0  0EFF               	movlw	255
  4350  0012C2  1414               	andwf	___ftpack@arg+2,w,c
  4351  0012C4  6E19               	movwf	(??___ftpack+2)& (0+255),c
  4352  0012C6  5017               	movf	??___ftpack,w,c
  4353  0012C8  1018               	iorwf	??___ftpack+1,w,c
  4354  0012CA  1019               	iorwf	??___ftpack+2,w,c
  4355  0012CC  B4D8               	btfsc	status,2,c
  4356  0012CE  D006               	goto	l2433
  4357  0012D0  D7E6               	goto	l2425
  4358  0012D2                     l2431:
  4359  0012D2  0615               	decf	___ftpack@exp,f,c
  4360  0012D4  90D8               	bcf	status,0,c
  4361  0012D6  3612               	rlcf	___ftpack@arg,f,c
  4362  0012D8  3613               	rlcf	___ftpack@arg+1,f,c
  4363  0012DA  3614               	rlcf	___ftpack@arg+2,f,c
  4364  0012DC                     l2433:
  4365  0012DC  AE13               	btfss	___ftpack@arg+1,7,c
  4366  0012DE  D7F9               	goto	l2431
  4367  0012E0  A015               	btfss	___ftpack@exp,0,c
  4368  0012E2  9E13               	bcf	___ftpack@arg+1,7,c
  4369  0012E4  90D8               	bcf	status,0,c
  4370  0012E6  3215               	rrcf	___ftpack@exp,f,c
  4371  0012E8  5015               	movf	___ftpack@exp,w,c
  4372  0012EA  1214               	iorwf	___ftpack@arg+2,f,c
  4373  0012EC  5016               	movf	___ftpack@sign,w,c
  4374  0012EE  A4D8               	btfss	status,2,c
  4375  0012F0  8E14               	bsf	___ftpack@arg+2,7,c
  4376  0012F2  C012  F012         	movff	___ftpack@arg,?___ftpack
  4377  0012F6  C013  F013         	movff	___ftpack@arg+1,?___ftpack+1
  4378  0012FA  C014  F014         	movff	___ftpack@arg+2,?___ftpack+2
  4379  0012FE  0012               	return	
  4380  001300                     __end_of___ftpack:
  4381                           	opt stack 0
  4382                           tblptru	equ	0xFF8
  4383                           tblptrh	equ	0xFF7
  4384                           tblptrl	equ	0xFF6
  4385                           tablat	equ	0xFF5
  4386                           prodh	equ	0xFF4
  4387                           prodl	equ	0xFF3
  4388                           intcon	equ	0xFF2
  4389                           intcon2	equ	0xFF1
  4390                           postinc0	equ	0xFEE
  4391                           wreg	equ	0xFE8
  4392                           postinc1	equ	0xFE6
  4393                           postdec1	equ	0xFE5
  4394                           fsr1h	equ	0xFE2
  4395                           fsr1l	equ	0xFE1
  4396                           postinc2	equ	0xFDE
  4397                           postdec2	equ	0xFDD
  4398                           fsr2h	equ	0xFDA
  4399                           fsr2l	equ	0xFD9
  4400                           status	equ	0xFD8
  4401                           
  4402 ;; *************** function _INTERRUPT_InterruptManager *****************
  4403 ;; Defined at:
  4404 ;;		line 69 in file "mcc_generated_files/interrupt_manager.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;		None
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;		None
  4409 ;; Return value:  Size  Location     Type
  4410 ;;		None               void
  4411 ;; Registers used:
  4412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4418 ;;      Params:         0       0       0       0       0       0       0
  4419 ;;      Locals:         0       0       0       0       0       0       0
  4420 ;;      Temps:         14       0       0       0       0       0       0
  4421 ;;      Totals:        14       0       0       0       0       0       0
  4422 ;;Total ram usage:       14 bytes
  4423 ;; Hardware stack levels used:    1
  4424 ;; Hardware stack levels required when called:    2
  4425 ;; This function calls:
  4426 ;;		_ADC_ISR
  4427 ;;		_EUSART1_Receive_ISR
  4428 ;;		_EUSART1_Transmit_ISR
  4429 ;;		_TMR1_ISR
  4430 ;; This function is called by:
  4431 ;;		Interrupt level 2
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435                           	psect	intcode
  4436  000008                     __pintcode:
  4437                           	opt stack 0
  4438  000008                     _INTERRUPT_InterruptManager:
  4439                           	opt stack 23
  4440                           
  4441                           ;incstack = 0
  4442  000008  CFFA F004          	movff	pclath,??_INTERRUPT_InterruptManager
  4443  00000C  CFFB F005          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4444  000010  CFE9 F006          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  4445  000014  CFEA F007          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  4446  000018  CFE1 F008          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  4447  00001C  CFE2 F009          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  4448  000020  CFD9 F00A          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  4449  000024  CFDA F00B          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  4450  000028  CFF3 F00C          	movff	prodl,??_INTERRUPT_InterruptManager+8
  4451  00002C  CFF4 F00D          	movff	prodh,??_INTERRUPT_InterruptManager+9
  4452  000030  CFF6 F00E          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  4453  000034  CFF7 F00F          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  4454  000038  CFF8 F010          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  4455  00003C  CFF5 F011          	movff	tablat,??_INTERRUPT_InterruptManager+13
  4456                           
  4457                           ;interrupt_manager.c: 72: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  4458  000040  BA9D               	btfsc	3997,5,c	;volatile
  4459  000042  AA9E               	btfss	3998,5,c	;volatile
  4460  000044  D003               	goto	i2l226
  4461                           
  4462                           ;interrupt_manager.c: 73: {
  4463                           ;interrupt_manager.c: 74: EUSART1_Receive_ISR();
  4464  000046  EC52  F00B         	call	_EUSART1_Receive_ISR	;wreg free
  4465                           
  4466                           ;interrupt_manager.c: 75: }
  4467  00004A  D011               	goto	i2l234
  4468  00004C                     i2l226:
  4469                           
  4470                           ;interrupt_manager.c: 76: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  4471  00004C  BC9D               	btfsc	3997,6,c	;volatile
  4472  00004E  AC9E               	btfss	3998,6,c	;volatile
  4473  000050  D003               	goto	i2l228
  4474                           
  4475                           ;interrupt_manager.c: 77: {
  4476                           ;interrupt_manager.c: 78: ADC_ISR();
  4477  000052  ECDA  F00B         	call	_ADC_ISR	;wreg free
  4478                           
  4479                           ;interrupt_manager.c: 79: }
  4480  000056  D00B               	goto	i2l234
  4481  000058                     i2l228:
  4482                           
  4483                           ;interrupt_manager.c: 80: else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  4484  000058  B09D               	btfsc	3997,0,c	;volatile
  4485  00005A  A09E               	btfss	3998,0,c	;volatile
  4486  00005C  D003               	goto	i2l230
  4487                           
  4488                           ;interrupt_manager.c: 81: {
  4489                           ;interrupt_manager.c: 82: TMR1_ISR();
  4490  00005E  ECB2  F00B         	call	_TMR1_ISR	;wreg free
  4491                           
  4492                           ;interrupt_manager.c: 83: }
  4493  000062  D005               	goto	i2l234
  4494  000064                     i2l230:
  4495                           
  4496                           ;interrupt_manager.c: 84: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  4497  000064  B89D               	btfsc	3997,4,c	;volatile
  4498  000066  A89E               	btfss	3998,4,c	;volatile
  4499  000068  D002               	goto	i2l234
  4500                           
  4501                           ;interrupt_manager.c: 85: {
  4502                           ;interrupt_manager.c: 86: EUSART1_Transmit_ISR();
  4503  00006A  EC1F  F00B         	call	_EUSART1_Transmit_ISR	;wreg free
  4504  00006E                     i2l234:
  4505  00006E  C011  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  4506  000072  C010  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  4507  000076  C00F  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  4508  00007A  C00E  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  4509  00007E  C00D  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4510  000082  C00C  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4511  000086  C00B  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4512  00008A  C00A  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4513  00008E  C009  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4514  000092  C008  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4515  000096  C007  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4516  00009A  C006  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4517  00009E  C005  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4518  0000A2  C004  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4519  0000A6  0011               	retfie		f
  4520  0000A8                     __end_of_INTERRUPT_InterruptManager:
  4521                           	opt stack 0
  4522                           pclatu	equ	0xFFB
  4523                           pclath	equ	0xFFA
  4524                           tblptru	equ	0xFF8
  4525                           tblptrh	equ	0xFF7
  4526                           tblptrl	equ	0xFF6
  4527                           tablat	equ	0xFF5
  4528                           prodh	equ	0xFF4
  4529                           prodl	equ	0xFF3
  4530                           intcon	equ	0xFF2
  4531                           intcon2	equ	0xFF1
  4532                           postinc0	equ	0xFEE
  4533                           fsr0h	equ	0xFEA
  4534                           fsr0l	equ	0xFE9
  4535                           wreg	equ	0xFE8
  4536                           postinc1	equ	0xFE6
  4537                           postdec1	equ	0xFE5
  4538                           fsr1h	equ	0xFE2
  4539                           fsr1l	equ	0xFE1
  4540                           postinc2	equ	0xFDE
  4541                           postdec2	equ	0xFDD
  4542                           fsr2h	equ	0xFDA
  4543                           fsr2l	equ	0xFD9
  4544                           status	equ	0xFD8
  4545                           
  4546 ;; *************** function _TMR1_ISR *****************
  4547 ;; Defined at:
  4548 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;		None
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;		None
  4553 ;; Return value:  Size  Location     Type
  4554 ;;		None               void
  4555 ;; Registers used:
  4556 ;;		wreg, status,2, cstack
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4562 ;;      Params:         0       0       0       0       0       0       0
  4563 ;;      Locals:         0       0       0       0       0       0       0
  4564 ;;      Temps:          3       0       0       0       0       0       0
  4565 ;;      Totals:         3       0       0       0       0       0       0
  4566 ;;Total ram usage:        3 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:    1
  4569 ;; This function calls:
  4570 ;;		_TMR1_CallBack
  4571 ;; This function is called by:
  4572 ;;		_INTERRUPT_InterruptManager
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text28
  4577  001764                     __ptext28:
  4578                           	opt stack 0
  4579  001764                     _TMR1_ISR:
  4580                           	opt stack 23
  4581                           
  4582                           ;tmr1.c: 161: PIR1bits.TMR1IF = 0;
  4583                           
  4584                           ;incstack = 0
  4585  001764  909E               	bcf	3998,0,c	;volatile
  4586                           
  4587                           ;tmr1.c: 164: TMR1H = (timer1ReloadVal >> 8);
  4588  001766  C04D  F001         	movff	_timer1ReloadVal+1,??_TMR1_ISR	;volatile
  4589  00176A  C001  F002         	movff	??_TMR1_ISR,??_TMR1_ISR+1
  4590  00176E  6A03               	clrf	(??_TMR1_ISR+2)& (0+255),c
  4591  001770  5002               	movf	??_TMR1_ISR+1,w,c
  4592  001772  6ECF               	movwf	4047,c	;volatile
  4593                           
  4594                           ;tmr1.c: 165: TMR1L = (uint8_t) timer1ReloadVal;
  4595  001774  C04C  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  4596                           
  4597                           ;tmr1.c: 169: TMR1_CallBack();
  4598  001778  ECDC  F00B         	call	_TMR1_CallBack	;wreg free
  4599  00177C  0012               	return	
  4600  00177E                     __end_of_TMR1_ISR:
  4601                           	opt stack 0
  4602                           pclatu	equ	0xFFB
  4603                           pclath	equ	0xFFA
  4604                           tblptru	equ	0xFF8
  4605                           tblptrh	equ	0xFF7
  4606                           tblptrl	equ	0xFF6
  4607                           tablat	equ	0xFF5
  4608                           prodh	equ	0xFF4
  4609                           prodl	equ	0xFF3
  4610                           intcon	equ	0xFF2
  4611                           intcon2	equ	0xFF1
  4612                           postinc0	equ	0xFEE
  4613                           fsr0h	equ	0xFEA
  4614                           fsr0l	equ	0xFE9
  4615                           wreg	equ	0xFE8
  4616                           postinc1	equ	0xFE6
  4617                           postdec1	equ	0xFE5
  4618                           fsr1h	equ	0xFE2
  4619                           fsr1l	equ	0xFE1
  4620                           postinc2	equ	0xFDE
  4621                           postdec2	equ	0xFDD
  4622                           fsr2h	equ	0xFDA
  4623                           fsr2l	equ	0xFD9
  4624                           status	equ	0xFD8
  4625                           
  4626 ;; *************** function _TMR1_CallBack *****************
  4627 ;; Defined at:
  4628 ;;		line 173 in file "mcc_generated_files/tmr1.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;		None
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;		None
  4633 ;; Return value:  Size  Location     Type
  4634 ;;		None               void
  4635 ;; Registers used:
  4636 ;;		None
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4642 ;;      Params:         0       0       0       0       0       0       0
  4643 ;;      Locals:         0       0       0       0       0       0       0
  4644 ;;      Temps:          0       0       0       0       0       0       0
  4645 ;;      Totals:         0       0       0       0       0       0       0
  4646 ;;Total ram usage:        0 bytes
  4647 ;; Hardware stack levels used:    1
  4648 ;; This function calls:
  4649 ;;		Nothing
  4650 ;; This function is called by:
  4651 ;;		_TMR1_ISR
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655                           	psect	text29
  4656  0017B8                     __ptext29:
  4657                           	opt stack 0
  4658  0017B8                     _TMR1_CallBack:
  4659                           	opt stack 23
  4660                           
  4661                           ;incstack = 0
  4662  0017B8  0012               	return	
  4663  0017BA                     __end_of_TMR1_CallBack:
  4664                           	opt stack 0
  4665                           pclatu	equ	0xFFB
  4666                           pclath	equ	0xFFA
  4667                           tblptru	equ	0xFF8
  4668                           tblptrh	equ	0xFF7
  4669                           tblptrl	equ	0xFF6
  4670                           tablat	equ	0xFF5
  4671                           prodh	equ	0xFF4
  4672                           prodl	equ	0xFF3
  4673                           intcon	equ	0xFF2
  4674                           intcon2	equ	0xFF1
  4675                           postinc0	equ	0xFEE
  4676                           fsr0h	equ	0xFEA
  4677                           fsr0l	equ	0xFE9
  4678                           wreg	equ	0xFE8
  4679                           postinc1	equ	0xFE6
  4680                           postdec1	equ	0xFE5
  4681                           fsr1h	equ	0xFE2
  4682                           fsr1l	equ	0xFE1
  4683                           postinc2	equ	0xFDE
  4684                           postdec2	equ	0xFDD
  4685                           fsr2h	equ	0xFDA
  4686                           fsr2l	equ	0xFD9
  4687                           status	equ	0xFD8
  4688                           
  4689 ;; *************** function _EUSART1_Transmit_ISR *****************
  4690 ;; Defined at:
  4691 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;		None
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;		None
  4696 ;; Return value:  Size  Location     Type
  4697 ;;		None               void
  4698 ;; Registers used:
  4699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4705 ;;      Params:         0       0       0       0       0       0       0
  4706 ;;      Locals:         0       0       0       0       0       0       0
  4707 ;;      Temps:          0       0       0       0       0       0       0
  4708 ;;      Totals:         0       0       0       0       0       0       0
  4709 ;;Total ram usage:        0 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; This function calls:
  4712 ;;		Nothing
  4713 ;; This function is called by:
  4714 ;;		_INTERRUPT_InterruptManager
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718                           	psect	text30
  4719  00163E                     __ptext30:
  4720                           	opt stack 0
  4721  00163E                     _EUSART1_Transmit_ISR:
  4722                           	opt stack 24
  4723                           
  4724                           ;eusart1.c: 177: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  4725                           
  4726                           ;incstack = 0
  4727  00163E  0E08               	movlw	8
  4728  001640  5C4E               	subwf	_eusart1TxBufferRemaining,w,c	;volatile
  4729  001642  B0D8               	btfsc	status,0,c
  4730  001644  D014               	goto	i2l122
  4731                           
  4732                           ;eusart1.c: 178: {
  4733                           ;eusart1.c: 179: TX1REG = eusart1TxBuffer[eusart1TxTail++];
  4734  001646  504B               	movf	_eusart1TxTail,w,c
  4735  001648  0D01               	mullw	1
  4736  00164A  0100               	movlb	0	; () banked
  4737  00164C  0EB8               	movlw	low _eusart1TxBuffer
  4738  00164E  24F3               	addwf	prodl,w,c
  4739  001650  6ED9               	movwf	fsr2l,c
  4740  001652  0100               	movlb	0	; () banked
  4741  001654  0E00               	movlw	high _eusart1TxBuffer
  4742  001656  20F4               	addwfc	prodh,w,c
  4743  001658  6EDA               	movwf	fsr2h,c
  4744  00165A  50DF               	movf	indf2,w,c
  4745  00165C  6EAD               	movwf	4013,c	;volatile
  4746                           
  4747                           ; BSR set to: 0
  4748  00165E  2A4B               	incf	_eusart1TxTail,f,c
  4749                           
  4750                           ; BSR set to: 0
  4751                           ;eusart1.c: 180: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  4752  001660  0E07               	movlw	7
  4753  001662  644B               	cpfsgt	_eusart1TxTail,c
  4754  001664  D002               	goto	i2l2261
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;eusart1.c: 181: {
  4758                           ;eusart1.c: 182: eusart1TxTail = 0;
  4759  001666  0E00               	movlw	0
  4760  001668  6E4B               	movwf	_eusart1TxTail,c
  4761  00166A                     i2l2261:
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;eusart1.c: 183: }
  4765                           ;eusart1.c: 184: eusart1TxBufferRemaining++;
  4766  00166A  2A4E               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  4767                           
  4768                           ;eusart1.c: 185: }
  4769  00166C  0012               	return	
  4770  00166E                     i2l122:
  4771                           
  4772                           ;eusart1.c: 186: else
  4773                           ;eusart1.c: 187: {
  4774                           ;eusart1.c: 188: PIE1bits.TX1IE = 0;
  4775  00166E  989D               	bcf	3997,4,c	;volatile
  4776  001670  0012               	return	
  4777  001672                     __end_of_EUSART1_Transmit_ISR:
  4778                           	opt stack 0
  4779                           pclatu	equ	0xFFB
  4780                           pclath	equ	0xFFA
  4781                           tblptru	equ	0xFF8
  4782                           tblptrh	equ	0xFF7
  4783                           tblptrl	equ	0xFF6
  4784                           tablat	equ	0xFF5
  4785                           prodh	equ	0xFF4
  4786                           prodl	equ	0xFF3
  4787                           intcon	equ	0xFF2
  4788                           intcon2	equ	0xFF1
  4789                           postinc0	equ	0xFEE
  4790                           fsr0h	equ	0xFEA
  4791                           fsr0l	equ	0xFE9
  4792                           wreg	equ	0xFE8
  4793                           postinc1	equ	0xFE6
  4794                           postdec1	equ	0xFE5
  4795                           fsr1h	equ	0xFE2
  4796                           fsr1l	equ	0xFE1
  4797                           indf2	equ	0xFDF
  4798                           postinc2	equ	0xFDE
  4799                           postdec2	equ	0xFDD
  4800                           fsr2h	equ	0xFDA
  4801                           fsr2l	equ	0xFD9
  4802                           status	equ	0xFD8
  4803                           
  4804 ;; *************** function _EUSART1_Receive_ISR *****************
  4805 ;; Defined at:
  4806 ;;		line 192 in file "mcc_generated_files/eusart1.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;		None
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;		None
  4811 ;; Return value:  Size  Location     Type
  4812 ;;		None               void
  4813 ;; Registers used:
  4814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4820 ;;      Params:         0       0       0       0       0       0       0
  4821 ;;      Locals:         0       0       0       0       0       0       0
  4822 ;;      Temps:          0       0       0       0       0       0       0
  4823 ;;      Totals:         0       0       0       0       0       0       0
  4824 ;;Total ram usage:        0 bytes
  4825 ;; Hardware stack levels used:    1
  4826 ;; This function calls:
  4827 ;;		Nothing
  4828 ;; This function is called by:
  4829 ;;		_INTERRUPT_InterruptManager
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           	psect	text31
  4834  0016A4                     __ptext31:
  4835                           	opt stack 0
  4836  0016A4                     _EUSART1_Receive_ISR:
  4837                           	opt stack 24
  4838                           
  4839                           ;eusart1.c: 194: if(1 == RC1STAbits.OERR)
  4840                           
  4841                           ;incstack = 0
  4842  0016A4  A2AB               	btfss	4011,1,c	;volatile
  4843  0016A6  D002               	goto	i2l2267
  4844                           
  4845                           ;eusart1.c: 195: {
  4846                           ;eusart1.c: 198: RC1STAbits.CREN = 0;
  4847  0016A8  98AB               	bcf	4011,4,c	;volatile
  4848                           
  4849                           ;eusart1.c: 199: RC1STAbits.CREN = 1;
  4850  0016AA  88AB               	bsf	4011,4,c	;volatile
  4851  0016AC                     i2l2267:
  4852                           
  4853                           ;eusart1.c: 200: }
  4854                           ;eusart1.c: 203: eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  4855  0016AC  5048               	movf	_eusart1RxHead,w,c
  4856  0016AE  0D01               	mullw	1
  4857  0016B0  0100               	movlb	0	; () banked
  4858  0016B2  0EB0               	movlw	low _eusart1RxBuffer
  4859  0016B4  24F3               	addwf	prodl,w,c
  4860  0016B6  6ED9               	movwf	fsr2l,c
  4861  0016B8  0100               	movlb	0	; () banked
  4862  0016BA  0E00               	movlw	high _eusart1RxBuffer
  4863  0016BC  20F4               	addwfc	prodh,w,c
  4864  0016BE  6EDA               	movwf	fsr2h,c
  4865  0016C0  CFAE FFDF          	movff	4014,indf2	;volatile
  4866                           
  4867                           ; BSR set to: 0
  4868  0016C4  2A48               	incf	_eusart1RxHead,f,c
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;eusart1.c: 204: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  4872  0016C6  0E07               	movlw	7
  4873  0016C8  6448               	cpfsgt	_eusart1RxHead,c
  4874  0016CA  D002               	goto	i2l2275
  4875                           
  4876                           ; BSR set to: 0
  4877                           ;eusart1.c: 205: {
  4878                           ;eusart1.c: 206: eusart1RxHead = 0;
  4879  0016CC  0E00               	movlw	0
  4880  0016CE  6E48               	movwf	_eusart1RxHead,c
  4881  0016D0                     i2l2275:
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;eusart1.c: 207: }
  4885                           ;eusart1.c: 208: eusart1RxCount++;
  4886  0016D0  2A47               	incf	_eusart1RxCount,f,c	;volatile
  4887                           
  4888                           ; BSR set to: 0
  4889  0016D2  0012               	return	
  4890  0016D4                     __end_of_EUSART1_Receive_ISR:
  4891                           	opt stack 0
  4892                           pclatu	equ	0xFFB
  4893                           pclath	equ	0xFFA
  4894                           tblptru	equ	0xFF8
  4895                           tblptrh	equ	0xFF7
  4896                           tblptrl	equ	0xFF6
  4897                           tablat	equ	0xFF5
  4898                           prodh	equ	0xFF4
  4899                           prodl	equ	0xFF3
  4900                           intcon	equ	0xFF2
  4901                           intcon2	equ	0xFF1
  4902                           postinc0	equ	0xFEE
  4903                           fsr0h	equ	0xFEA
  4904                           fsr0l	equ	0xFE9
  4905                           wreg	equ	0xFE8
  4906                           postinc1	equ	0xFE6
  4907                           postdec1	equ	0xFE5
  4908                           fsr1h	equ	0xFE2
  4909                           fsr1l	equ	0xFE1
  4910                           indf2	equ	0xFDF
  4911                           postinc2	equ	0xFDE
  4912                           postdec2	equ	0xFDD
  4913                           fsr2h	equ	0xFDA
  4914                           fsr2l	equ	0xFD9
  4915                           status	equ	0xFD8
  4916                           
  4917 ;; *************** function _ADC_ISR *****************
  4918 ;; Defined at:
  4919 ;;		line 128 in file "mcc_generated_files/adc.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;		None
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;		None
  4924 ;; Return value:  Size  Location     Type
  4925 ;;		None               void
  4926 ;; Registers used:
  4927 ;;		None
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4933 ;;      Params:         0       0       0       0       0       0       0
  4934 ;;      Locals:         0       0       0       0       0       0       0
  4935 ;;      Temps:          0       0       0       0       0       0       0
  4936 ;;      Totals:         0       0       0       0       0       0       0
  4937 ;;Total ram usage:        0 bytes
  4938 ;; Hardware stack levels used:    1
  4939 ;; This function calls:
  4940 ;;		Nothing
  4941 ;; This function is called by:
  4942 ;;		_INTERRUPT_InterruptManager
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           	psect	text32
  4947  0017B4                     __ptext32:
  4948                           	opt stack 0
  4949  0017B4                     _ADC_ISR:
  4950                           	opt stack 24
  4951                           
  4952                           ;adc.c: 131: PIR1bits.ADIF = 0;
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;incstack = 0
  4956  0017B4  9C9E               	bcf	3998,6,c	;volatile
  4957  0017B6  0012               	return	
  4958  0017B8                     __end_of_ADC_ISR:
  4959                           	opt stack 0
  4960                           pclatu	equ	0xFFB
  4961                           pclath	equ	0xFFA
  4962                           tblptru	equ	0xFF8
  4963                           tblptrh	equ	0xFF7
  4964                           tblptrl	equ	0xFF6
  4965                           tablat	equ	0xFF5
  4966                           prodh	equ	0xFF4
  4967                           prodl	equ	0xFF3
  4968                           intcon	equ	0xFF2
  4969                           intcon2	equ	0xFF1
  4970                           postinc0	equ	0xFEE
  4971                           fsr0h	equ	0xFEA
  4972                           fsr0l	equ	0xFE9
  4973                           wreg	equ	0xFE8
  4974                           postinc1	equ	0xFE6
  4975                           postdec1	equ	0xFE5
  4976                           fsr1h	equ	0xFE2
  4977                           fsr1l	equ	0xFE1
  4978                           indf2	equ	0xFDF
  4979                           postinc2	equ	0xFDE
  4980                           postdec2	equ	0xFDD
  4981                           fsr2h	equ	0xFDA
  4982                           fsr2l	equ	0xFD9
  4983                           status	equ	0xFD8
  4984                           pclatu	equ	0xFFB
  4985                           pclath	equ	0xFFA
  4986                           tblptru	equ	0xFF8
  4987                           tblptrh	equ	0xFF7
  4988                           tblptrl	equ	0xFF6
  4989                           tablat	equ	0xFF5
  4990                           prodh	equ	0xFF4
  4991                           prodl	equ	0xFF3
  4992                           intcon	equ	0xFF2
  4993                           intcon2	equ	0xFF1
  4994                           postinc0	equ	0xFEE
  4995                           fsr0h	equ	0xFEA
  4996                           fsr0l	equ	0xFE9
  4997                           wreg	equ	0xFE8
  4998                           postinc1	equ	0xFE6
  4999                           postdec1	equ	0xFE5
  5000                           fsr1h	equ	0xFE2
  5001                           fsr1l	equ	0xFE1
  5002                           indf2	equ	0xFDF
  5003                           postinc2	equ	0xFDE
  5004                           postdec2	equ	0xFDD
  5005                           fsr2h	equ	0xFDA
  5006                           fsr2l	equ	0xFD9
  5007                           status	equ	0xFD8
  5008                           
  5009                           	psect	rparam
  5010  0000                     pclatu	equ	0xFFB
  5011                           pclath	equ	0xFFA
  5012                           tblptru	equ	0xFF8
  5013                           tblptrh	equ	0xFF7
  5014                           tblptrl	equ	0xFF6
  5015                           tablat	equ	0xFF5
  5016                           prodh	equ	0xFF4
  5017                           prodl	equ	0xFF3
  5018                           intcon	equ	0xFF2
  5019                           intcon2	equ	0xFF1
  5020                           postinc0	equ	0xFEE
  5021                           fsr0h	equ	0xFEA
  5022                           fsr0l	equ	0xFE9
  5023                           wreg	equ	0xFE8
  5024                           postinc1	equ	0xFE6
  5025                           postdec1	equ	0xFE5
  5026                           fsr1h	equ	0xFE2
  5027                           fsr1l	equ	0xFE1
  5028                           indf2	equ	0xFDF
  5029                           postinc2	equ	0xFDE
  5030                           postdec2	equ	0xFDD
  5031                           fsr2h	equ	0xFDA
  5032                           fsr2l	equ	0xFD9
  5033                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    27
    Data        0
    BSS         260
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     61      78
    BANK0           160     20     156
    BANK1           256     14     124
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 


Critical Paths under _main in COMRAM

    _Temp_Fault->___ftge
    _Temp_Convert->_Temp_Filter
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftdiv->___ftpack
    _Temp_Filter->___ftadd
    _Battery_Fault->___ftge
    ___ftge->___wmul
    _Battery_Convert->_Battery_Filter
    ___awtoft->___wmul
    _Battery_Filter->___ftadd
    ___wmul->___awdiv
    ___ftmul->___awtoft
    ___ftadd->___ftmul

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_TMR1_ISR

Critical Paths under _main in BANK0

    _main->_Temp_Convert
    _Temp_Convert->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    _Temp_Filter->___ftadd
    _Battery_Convert->___ftadd
    _Battery_Filter->___ftadd

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Temp_Convert

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5   98782
                                              9 BANK1      5     0      5
                    _Battery_Convert
                      _Battery_Fault
                  _SYSTEM_Initialize
                       _Temp_Convert
                         _Temp_Fault
 ---------------------------------------------------------------------------------
 (1) _Temp_Fault                                           3     3      0    3944
                                             40 COMRAM     3     3      0
                             ___ftge
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _Temp_Convert                                        11    11      0   65355
                                             18 BANK0      2     2      0
                                              0 BANK1      9     9      0
                        _Temp_Filter
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                             ___wmul
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  5     2      3   26440
                                             13 BANK0      5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5     476
                                             17 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           12     5      7   13290
                                             59 COMRAM     2     2      0
                                              3 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    5445
                                              3 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3275
                                             25 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _Temp_Filter                                          2     2      0   13096
                                             59 COMRAM     2     2      0
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Battery_Fault                                        3     3      0    3975
                                             40 COMRAM     3     3      0
                             ___ftge
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     520
                                             31 COMRAM     9     3      6
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Battery_Convert                                      4     4      0   25508
                                              3 BANK0      4     4      0
                     _Battery_Filter
                            ___awdiv
                           ___awtoft
                            ___ftadd
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2797
                                             31 COMRAM     4     1      3
                            ___awdiv (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1061
                                             17 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Battery_Filter                                       2     2      0   13096
                                             59 COMRAM     2     2      0
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    3312
                                             25 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    4381
                                             35 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    5112
                                             50 COMRAM     9     3      6
                                              0 BANK0      3     3      0
                            ___awdiv (ARG)
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2433
                                             17 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          14    14      0       0
                                              3 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             3     3      0       0
                                              0 COMRAM     3     3      0
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (8) _TMR1_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Battery_Convert
     _Battery_Filter
       ___ftadd
         ___awdiv (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___awdiv (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       ___wmul
         ___awdiv (ARG)
     ___awdiv
     ___awtoft
       ___awdiv (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___ftadd
       ___awdiv (ARG)
       ___awtoft (ARG)
         ___awdiv (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
       _frexp (ARG)
     ___wmul
       ___awdiv (ARG)
   _Battery_Fault
     ___ftge
       ___wmul (ARG)
         ___awdiv (ARG)
     ___wmul
       ___awdiv (ARG)
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
   _Temp_Convert
     _Temp_Filter
       ___ftadd
         ___awdiv (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___awdiv (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       ___wmul
         ___awdiv (ARG)
     ___awdiv
     ___awtoft
       ___awdiv (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
     ___ftadd
       ___awdiv (ARG)
       ___awtoft (ARG)
         ___awdiv (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
       _frexp (ARG)
     ___ftdiv
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___awdiv (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awdiv (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
     ___wmul
       ___awdiv (ARG)
     _log
       ___awtoft
         ___awdiv (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
       ___ftadd
         ___awdiv (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___awdiv (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awdiv (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___awdiv (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
           _frexp (ARG)
         ___wmul
           ___awdiv (ARG)
       _frexp
   _Temp_Fault
     ___ftge
       ___wmul (ARG)
         ___awdiv (ARG)
     ___wmul
       ___awdiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _TMR1_ISR
     _TMR1_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      E      7C       6       48.4%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     14      9C       4       97.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3D      4E       1       82.1%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     166       9        0.0%
DATA                 0      0     166      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Mar 27 03:12:30 2015

           _eusart1TxBufferRemaining 004E                         ___awdiv@sign 0017  
                ___wmul@multiplicand 001C                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                         ___ftadd@exp1 00EA  
                       ___ftadd@exp2 00E9                         ___ftadd@sign 00E8  
                                l808 10A6                                  l773 0672  
                                l777 06A8                                  l779 06CC  
                                l788 0782                                  l797 07A0  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                    _timer1ReloadVal 004C                                  _log 0CCE  
                    __end_of_ADC_ISR 17B8                                  prod 000FF3  
                                wreg 000FE8                         __CFG_LVP$OFF 000000  
                    ?_Battery_Filter 0001                         ___ftdiv@cntr 0023  
                       ___ftdiv@sign 0028                                 l2203 1496  
                               l2209 14C2                                 l2421 1276  
                               l2501 076C                                 l2431 12D2  
                               l2423 1280                                 l2503 0778  
                               l2433 12DC                                 l2425 129E  
                               l2417 1268                                 l2429 12B4  
                               l2509 07BE                                 l2461 0680  
                               l2621 0C5A                                 l2605 0F5C  
                               l2519 07F2                                 l2535 0E6E  
                               l2199 1466                                 l2711 1080  
                               l2607 0FDE                                 l2473 06C4  
                               l2553 0EB0                                 l2529 0E48  
                               l2491 072A                                 l2483 06F4  
                               l2467 06B6                                 l2563 0ED8  
                               l2803 11A4                                 l2493 0736  
                               l2549 0EA0                                 l2645 0AFA  
                               l2495 0742                                 l2559 0EC8  
                               l2751 135A                                 l2591 13CE  
                               l2663 0D06                                 l2815 152A  
                               l2489 071E                                 l2753 1362  
                               l2745 1344                                 l2771 139A  
                               l2763 1382                                 l2755 1366  
                               l2739 1324                                 l2579 15A2  
                               l2691 1042                                 l2685 101C  
                               l2669 0D34                                 l2767 138C  
                               l2871 16EE                                 l2849 0A08  
                               l2865 16DC                                 l2787 1252  
                               ?_log 00F5                                 u2031 062E  
                               u2041 0644                                 _LATA 000F89  
                               _LATB 000F8A                                 _LATC 000F8B  
                               u2320 13F6                                 _LATD 000F8C  
                               u2241 0E32                                 _LATE 000F8D  
                               u2261 0E58                                 u2328 13F8  
                               u2441 1006                                 u2425 0CE6  
                               u2461 102C                                 _TMR1 000FCE  
                               _WPUB 000F61                                 _main 16D4  
                       ___ftpack@arg 0012                         ___ftpack@exp 0015  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                        __CFG_BORV$190 000000  
                               log@x 00F5                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 00A8                        __CFG_IESO$OFF 000000  
                       ___ftmul@cntr 0031                         ___ftmul@sign 0032  
                              ??_log 003E                     ?_Battery_Convert 0001  
     __size_of_OSCILLATOR_Initialize 000E        __end_of_OSCILLATOR_Initialize 17A4  
                              ?_main 0177                      __end_of___awdiv 13A4  
                    __end_of___ftadd 0818                      __end_of___ftdiv 10D8  
                    _TMR1_StartTimer 17B0                      __end_of___ftmul 0F12  
                    ___awdiv@divisor 0014                                _T1CON 000FCD  
                    __end_of___ftsub 1602                                _LATC0 007C58  
                              _LATC1 007C59                                _LATA6 007C4E  
                     __CFG_DEBUG$OFF 000000                                i2l122 166E  
                              i2l230 0064                                i2l234 006E  
                              i2l226 004C                                i2l228 0058  
                    ___awdiv@counter 0016                                _TMR1H 000FCF  
                              _TMR1L 000FCE                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
               _EUSART1_Transmit_ISR 163E                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                   __end_of_TMR1_ISR 177E                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                        ___awtoft@sign 0023  
                              _frexp 13A4                                _errno 0043  
                 __CFG_MCLRE$EXTMCLR 000000                        ___ftpack@sign 0016  
            __end_of_TMR1_Initialize 174A                          _Battery_Adc 009C  
                              tablat 000FF5                                status 000FD8  
                     __CFG_HFOFST$ON 000000                       __CFG_PBADEN$ON 000000  
                    __initialization 1672                          log@exponent 00F8  
         __end_of_EUSART1_Initialize 163E                         __end_of_main 1702  
                          ??_ADC_ISR 0001          ?_INTERRUPT_InterruptManager 0001  
                             ??_main 003E                        __activetblptr 000001  
              ?_EUSART1_Transmit_ISR 0001                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                             ?_frexp 0012                               _ADRESH 000FC4  
                             _ADRESL 000FC3                     ___awdiv@dividend 0012  
                   __end_of___awtoft 15C6                               _ANSELA 000F38  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             _ANSELD 000F3B                               _ANSELE 000F3C  
                   __end_of___ftpack 1300                               _T1GCON 000FCC  
                             _RC1REG 000FAE                               _RC1STA 000FAB  
                             i2l2261 166A                               i2l2275 16D0  
                             i2l2267 16AC                       __CFG_WDTEN$OFF 000000  
                             _RCREG1 000FAE                        ??_Temp_Filter 003C  
                             _OSCCON 000FD3                               _SPBRG1 000FAF  
                             _TX1REG 000FAD                               _TX1STA 000FAC  
                             _TXREG1 000FAD                           _Temp_Fault 14C6  
                     __CFG_XINST$OFF 000000                               ___ftge 1436  
            __end_of_TMR1_StartTimer 17B4                               ___wmul 1702  
                          ??___awdiv 0016                            ??___ftadd 0039  
                     __CFG_STVREN$ON 000000                            ??___ftdiv 0020  
                          ??___ftmul 002A                            ??___ftsub 003C  
                             clear_0 1678                               clear_1 1684  
                             clear_2 1690                     ___awdiv@quotient 0018  
              ___ftmul@f3_as_product 002E                         _Battery_Volt 0060  
                       __mediumconst 0000                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                    _eusart1RxBuffer 00B0        __size_of_INTERRUPT_Initialize 000C  
              __end_of_TMR1_CallBack 17BA                      _eusart1TxBuffer 00B8  
                   ?_TMR1_Initialize 0001                    _SYSTEM_Initialize 174A  
                   __end_oflog@coeff 061C                           __accesstop 0060  
            __end_of__initialization 1696                           ___ftadd@f1 0033  
                         ___ftadd@f2 0036                           ___ftge@ff1 0020  
                         ___ftge@ff2 0023                   ?_SYSTEM_Initialize 0001  
                       eval_poly@res 00F2                           ___ftdiv@f1 001A  
                         ___ftdiv@f2 001D                           ___ftdiv@f3 0024  
                         ___awtoft@c 0020                           ___ftmul@f1 0024  
                         ___ftmul@f2 0027                           ___ftsub@f1 00EB  
                         ___ftsub@f2 00EE                  __end_of_Temp_Filter 0B6E  
                     __pcstackCOMRAM 0001                  ??_SYSTEM_Initialize 0012  
                          ?_TMR1_ISR 0001                        __end_of_frexp 1436  
             ??_EUSART1_Transmit_ISR 0001                     ??_Battery_Filter 003C  
        __end_of_EUSART1_Receive_ISR 16D4                        ?_Temp_Convert 0001  
                            ??_frexp 0017            __end_of_SYSTEM_Initialize 1764  
                      _eusart1RxHead 0048                        _eusart1TxHead 004A  
                      _eusart1RxTail 0049                           __pbssBANK0 0060  
                         __pbssBANK1 0100                        _eusart1TxTail 004B  
                 __size_of_eval_poly 00E4                      __CFG_PLLCFG$OFF 000000  
                         __pnvCOMRAM 004C                Temp_Convert@steinhart 0174  
                        ?_Temp_Fault 0001                   __CFG_CCP2MX$PORTC1 000000  
                        Temp_Fault@i 002A                  _TempBattery_Current 00C3  
                            ?___ftge 0020                              ?___wmul 001A  
                   ?_TMR1_StartTimer 0001                           ??_TMR1_ISR 0001  
                 __CFG_CCP3MX$PORTB5 000000                              _ADC_ISR 17B4  
                          ?___awtoft 0020                            ?___ftpack 0012  
            __size_of_ADC_Initialize 0018                        Temp_Convert@x 0172  
             __size_of_Battery_Fault 00AE                      Temp_Fault@fault 0029  
                     Battery_Fault@i 002A                              _OSCCON2 000FD2  
                     ??_Temp_Convert 00FA                    __CFG_PRICLKEN$OFF 000000  
                            _OSCTUNE 000F9B                              _SPBRGH1 000FB0  
                        _Temp_Filter 0A0E                          _Temp_Aquire 0045  
                    __CFG_PWRTEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000                      __size_of___ftge 0090  
                            ___awdiv 1300                              ___ftadd 061E  
                            ___ftdiv 0FF6                      __size_of___wmul 0026  
                            ___ftmul 0E22                              ___ftsub 15C6  
                       __psmallconst 0600                              __pcinit 1672  
                         ??___awtoft 0023                           ??___ftpack 0017  
                  __end_of_eval_poly 0FF6                              __ramtop 0600  
                            __ptext0 16D4                              __ptext1 14C6  
                            __ptext2 0818                              __ptext3 0CCE  
                            __ptext4 13A4                              __ptext5 0F12  
                            __ptext6 15C6                              __ptext7 0FF6  
                            __ptext8 0A0E                              __ptext9 174A  
                          _T1CONbits 000FCD                _OSCILLATOR_Initialize 1796  
                       __size_of_log 0154                  __size_of_Temp_Fault 006A  
                 _EUSART1_Initialize 1602             ??_PIN_MANAGER_Initialize 0012  
           __size_of_Battery_Convert 00D2           __size_of_SYSTEM_Initialize 001A  
               end_of_initialization 1696                  ?_EUSART1_Initialize 0001  
                      _Battery_Fault 11AA                              postdec1 000FE5  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc1 000FE6                              postinc2 000FDE  
                   Battery_Convert@x 00ED                 ??_EUSART1_Initialize 0012  
                        _Volt_Aquire 0046                       ?_Battery_Fault 0001  
                        ___ftdiv@exp 0027                          ___ftmul@exp 002D  
               __end_of_Temp_Convert 0A0E         __end_of_INTERRUPT_Initialize 17B0  
                     __end_of___ftge 14C6                       __end_of___wmul 1728  
                  __size_of_TMR1_ISR 001A                       _ADC_Initialize 177E  
             ?_OSCILLATOR_Initialize 0001                  start_initialization 1672  
                         eval_poly@d 00EE                           eval_poly@n 00F0  
                         eval_poly@x 00EB      __size_of_PIN_MANAGER_Initialize 004E  
                        __end_of_log 0E22                           frexp@value 0012  
                  ??_Battery_Convert 00EB                         ??_Temp_Fault 0029  
                          _Temp_DegF 007E                     _PrevBattery_Volt 0100  
                          _Temp_Done 00C6             __size_of_TMR1_Initialize 0022  
                           ??___ftge 0026                             ??___wmul 001E  
             __end_of_ADC_Initialize 1796                             ?_ADC_ISR 0001  
             __size_of_TMR1_CallBack 0002                       _eusart1RxCount 0047  
                  __size_of___awtoft 0048                    __size_of___ftpack 00A8  
                          _Volt_Done 00C8                          __pbssCOMRAM 003E  
      __size_of_EUSART1_Transmit_ISR 0034                        __pcstackBANK0 00E8  
                      __pcstackBANK1 016E                   __end_of_Temp_Fault 1530  
                      _PrevTemp_DegF 011E                      ??_Battery_Fault 0029  
       __size_of_EUSART1_Receive_ISR 0030                         ?_Temp_Filter 0001  
             _PIN_MANAGER_Initialize 1530                            __pintcode 0008  
                  _Temp_Convert$1586 016E                    _Temp_Convert$1587 0170  
                           ?___awdiv 0012                             ?___ftadd 0033  
                           ?___ftdiv 001A                             ?___ftmul 0024  
                           ?___ftsub 00EB                         Temp_Filter@x 003C  
                    ?_ADC_Initialize 0001         ??_INTERRUPT_InterruptManager 0004  
                           _BAUD1CON 000FB8                          __smallconst 0600  
           __size_of_TMR1_StartTimer 0004                            _eval_poly 0F12  
                     __size_of_frexp 0092                 _INTERRUPT_Initialize 17A4  
                      _TMR1_CallBack 17B8              __size_of_Battery_Filter 0160  
                     ___wmul@product 001E                __size_of_Temp_Convert 01F6  
                           _IPR1bits 000F9F                             _PIE1bits 000F9D  
__size_of_INTERRUPT_InterruptManager 00A0                             _PIR1bits 000F9E  
                    Battery_Filter@x 003C                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                             _TMR1_ISR 1764  
                  ??_TMR1_Initialize 0012                     __size_of_ADC_ISR 0004  
                _PrevBattery_Current 00C0                           _ADCON0bits 000FC2  
                  ___wmul@multiplier 001A                           ?_eval_poly 00EB  
                       _Temp_Convert 0818                          _INTCON2bits 000FF1  
              ?_INTERRUPT_Initialize 0001                       ?_TMR1_CallBack 0001  
                          frexp@eptr 0015                             __Hrparam 0000  
                           _Temp_Adc 015A                             __Lrparam 0000  
                       __Lsmallconst 0600                   __CFG_BOREN$SBORDIS 000000  
                  __CFG_P2BMX$PORTD2 000000              ??_OSCILLATOR_Initialize 0012  
                   __size_of___awdiv 00A4                     __size_of___ftadd 01FA  
                   __size_of___ftdiv 00E2                     __size_of___ftmul 00F0  
                   __size_of___ftsub 003C          __size_of_EUSART1_Initialize 003C  
                           ___awtoft 157E                             ___ftpack 1258  
                    _Battery_Convert 10D8                   Battery_Fault@fault 0029  
                    _Battery_Current 003E                             __ptext10 1728  
                           __ptext11 17B0                             __ptext20 157E  
                           __ptext12 1530                             __ptext21 1300  
                           __ptext13 1796                           _T1GCONbits 000FCC  
                           __ptext30 163E                             __ptext22 0B6E  
                           __ptext14 17A4                             __ptext31 16A4  
                           __ptext23 1702                             __ptext15 1602  
                           __ptext32 17B4                             __ptext24 0E22  
                           __ptext16 177E                             __ptext25 061E  
                           __ptext17 11AA                             __ptext26 1258  
                           __ptext18 1436                             __ptext19 10D8  
                           __ptext28 1764                             __ptext29 17B8  
                  ??_TMR1_StartTimer 0012                        __size_of_main 002E  
                       _TmpTemp_DegF 013C                 __size_of_Temp_Filter 0160  
                         _RC1STAbits 000FAB   __end_of_INTERRUPT_InterruptManager 00A8  
         _INTERRUPT_InterruptManager 0008                             main@argc 0177  
                           main@argv 0179                  _EUSART1_Receive_ISR 16A4  
                           log@coeff 0601                           _INTCONbits 000FF2  
                        ??_eval_poly 003C               ??_INTERRUPT_Initialize 0012  
                    ??_TMR1_CallBack 0001                             intlevel2 0000  
                     _Battery_Filter 0B6E                 ?_EUSART1_Receive_ISR 0001  
                   _TempBattery_Volt 00CA              ?_PIN_MANAGER_Initialize 0001  
       __end_of_EUSART1_Transmit_ISR 1672                     ??_ADC_Initialize 0012  
            __end_of_Battery_Convert 11AA                    __CFG_T3CMX$PORTC0 000000  
             __end_of_Battery_Filter 0CCE                ??_EUSART1_Receive_ISR 0001  
     __end_of_PIN_MANAGER_Initialize 157E                __end_of_Battery_Fault 1258  
                  __CFG_FOSC$INTIO67 000000                      _TMR1_Initialize 1728  
                   _ADC_Buffer_Point 0041  
