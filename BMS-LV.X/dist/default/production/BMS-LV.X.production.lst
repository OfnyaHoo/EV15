

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Mar 30 00:27:39 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    51  0000                     
    52                           	psect	smallconst
    53  000600                     __psmallconst:
    54                           	opt stack 0
    55  000600  00                 	db	0
    56  000601                     log@coeff:
    57                           	opt stack 0
    58  000601  00                 	db	0
    59  000602  00                 	db	0
    60  000603  00                 	db	0
    61  000604  00                 	db	0
    62  000605  80                 	db	128
    63  000606  3F                 	db	63
    64  000607  F0                 	db	240
    65  000608  FF                 	db	255
    66  000609  BE                 	db	190
    67  00060A  E2                 	db	226
    68  00060B  A9                 	db	169
    69  00060C  3E                 	db	62
    70  00060D  83                 	db	131
    71  00060E  76                 	db	118
    72  00060F  BE                 	db	190
    73  000610  AE                 	db	174
    74  000611  2B                 	db	43
    75  000612  3E                 	db	62
    76  000613  3C                 	db	60
    77  000614  C3                 	db	195
    78  000615  BD                 	db	189
    79  000616  D2                 	db	210
    80  000617  13                 	db	19
    81  000618  3D                 	db	61
    82  000619  78                 	db	120
    83  00061A  D3                 	db	211
    84  00061B  BB                 	db	187
    85  00061C                     __end_oflog@coeff:
    86                           	opt stack 0
    87  0000                     _TMR1	set	4046
    88  0000                     _ADCON0	set	4034
    89  0000                     _ADCON0bits	set	4034
    90  0000                     _ADCON1	set	4033
    91  0000                     _ADCON2	set	4032
    92  0000                     _ADRESH	set	4036
    93  0000                     _ADRESL	set	4035
    94  0000                     _ANSELA	set	3896
    95  0000                     _ANSELB	set	3897
    96  0000                     _ANSELC	set	3898
    97  0000                     _ANSELD	set	3899
    98  0000                     _ANSELE	set	3900
    99  0000                     _BAUD1CON	set	4024
   100  0000                     _INTCON2bits	set	4081
   101  0000                     _INTCONbits	set	4082
   102  0000                     _IPR1bits	set	3999
   103  0000                     _LATA	set	3977
   104  0000                     _LATB	set	3978
   105  0000                     _LATC	set	3979
   106  0000                     _LATD	set	3980
   107  0000                     _LATE	set	3981
   108  0000                     _OSCCON	set	4051
   109  0000                     _OSCCON2	set	4050
   110  0000                     _OSCTUNE	set	3995
   111  0000                     _PIE1bits	set	3997
   112  0000                     _PIR1bits	set	3998
   113  0000                     _RC1REG	set	4014
   114  0000                     _RC1STA	set	4011
   115  0000                     _RC1STAbits	set	4011
   116  0000                     _RCONbits	set	4048
   117  0000                     _RCREG1	set	4014
   118  0000                     _SPBRG1	set	4015
   119  0000                     _SPBRGH1	set	4016
   120  0000                     _T1CON	set	4045
   121  0000                     _T1CONbits	set	4045
   122  0000                     _T1GCON	set	4044
   123  0000                     _T1GCONbits	set	4044
   124  0000                     _TMR1H	set	4047
   125  0000                     _TMR1L	set	4046
   126  0000                     _TRISA	set	3986
   127  0000                     _TRISB	set	3987
   128  0000                     _TRISC	set	3988
   129  0000                     _TRISD	set	3989
   130  0000                     _TRISE	set	3990
   131  0000                     _TX1REG	set	4013
   132  0000                     _TX1STA	set	4012
   133  0000                     _TXREG1	set	4013
   134  0000                     _WPUB	set	3937
   135  0000                     _LATA6	set	31822
   136  0000                     _LATA7	set	31823
   137  0000                     _LATC0	set	31832
   138  00061C  00                 	db	0	; dummy byte at the end
   139  0000                     
   140                           	psect	nvCOMRAM
   141  000049                     __pnvCOMRAM:
   142                           	opt stack 0
   143  000049                     _timer1ReloadVal:
   144                           	opt stack 0
   145  000049                     	ds	2
   146  00004B                     _eusart1TxBufferRemaining:
   147                           	opt stack 0
   148  00004B                     	ds	1
   149                           
   150                           ; #config settings
   151  0000                     
   152                           	psect	cinit
   153  001744                     __pcinit:
   154                           	opt stack 0
   155  001744                     start_initialization:
   156                           	opt stack 0
   157  001744                     __initialization:
   158                           	opt stack 0
   159                           
   160                           ; Clear objects allocated to BANK1 (220 bytes)
   161  001744  EE01  F000         	lfsr	0,__pbssBANK1
   162  001748  0EDC               	movlw	220
   163  00174A                     clear_0:
   164  00174A  6AEE               	clrf	postinc0,c
   165  00174C  06E8               	decf	wreg,f,c
   166  00174E  E1FD               	bnz	clear_0
   167                           
   168                           ; Clear objects allocated to BANK0 (112 bytes)
   169  001750  EE00  F060         	lfsr	0,__pbssBANK0
   170  001754  0E70               	movlw	112
   171  001756                     clear_1:
   172  001756  6AEE               	clrf	postinc0,c
   173  001758  06E8               	decf	wreg,f,c
   174  00175A  E1FD               	bnz	clear_1
   175                           
   176                           ; Clear objects allocated to COMRAM (11 bytes)
   177  00175C  EE00  F03E         	lfsr	0,__pbssCOMRAM
   178  001760  0E0B               	movlw	11
   179  001762                     clear_2:
   180  001762  6AEE               	clrf	postinc0,c
   181  001764  06E8               	decf	wreg,f,c
   182  001766  E1FD               	bnz	clear_2
   183  001768                     end_of_initialization:
   184                           	opt stack 0
   185  001768                     __end_of__initialization:
   186                           	opt stack 0
   187  001768  0E00               	movlw	low (__Lsmallconst shr (0+16))
   188  00176A  6EF8               	movwf	tblptru,c
   189  00176C  0E06               	movlw	high __Lsmallconst
   190  00176E  6EF7               	movwf	tblptrh,c
   191  001770  0100               	movlb	0
   192  001772  EFD3  F00B         	goto	_main	;jump to C main() function
   193                           tblptru	equ	0xFF8
   194                           tblptrh	equ	0xFF7
   195                           postinc0	equ	0xFEE
   196                           wreg	equ	0xFE8
   197                           
   198                           	psect	bssCOMRAM
   199  00003E                     __pbssCOMRAM:
   200                           	opt stack 0
   201  00003E                     TMR1_ISR@CountCallBack:
   202                           	opt stack 0
   203  00003E                     	ds	2
   204  000040                     _ADC_Buffer_Point:
   205                           	opt stack 0
   206  000040                     	ds	2
   207  000042                     _Temp_Aquire:
   208                           	opt stack 0
   209  000042                     	ds	1
   210  000043                     _Volt_Aquire:
   211                           	opt stack 0
   212  000043                     	ds	1
   213  000044                     _eusart1RxCount:
   214                           	opt stack 0
   215  000044                     	ds	1
   216  000045                     _eusart1RxHead:
   217                           	opt stack 0
   218  000045                     	ds	1
   219  000046                     _eusart1RxTail:
   220                           	opt stack 0
   221  000046                     	ds	1
   222  000047                     _eusart1TxHead:
   223                           	opt stack 0
   224  000047                     	ds	1
   225  000048                     _eusart1TxTail:
   226                           	opt stack 0
   227  000048                     	ds	1
   228                           tblptru	equ	0xFF8
   229                           tblptrh	equ	0xFF7
   230                           postinc0	equ	0xFEE
   231                           wreg	equ	0xFE8
   232                           
   233                           	psect	bssBANK0
   234  000060                     __pbssBANK0:
   235                           	opt stack 0
   236  000060                     _Battery_Volt:
   237                           	opt stack 0
   238  000060                     	ds	30
   239  00007E                     _Temp_DegF:
   240                           	opt stack 0
   241  00007E                     	ds	30
   242  00009C                     _eusart1RxBuffer:
   243                           	opt stack 0
   244  00009C                     	ds	8
   245  0000A4                     _eusart1TxBuffer:
   246                           	opt stack 0
   247  0000A4                     	ds	8
   248  0000AC                     _Temp_Done:
   249                           	opt stack 0
   250  0000AC                     	ds	2
   251  0000AE                     _Volt_Done:
   252                           	opt stack 0
   253  0000AE                     	ds	2
   254  0000B0                     _errno:
   255                           	opt stack 0
   256  0000B0                     	ds	2
   257  0000B2                     _TempBattery_Volt:
   258                           	opt stack 0
   259  0000B2                     	ds	30
   260                           tblptru	equ	0xFF8
   261                           tblptrh	equ	0xFF7
   262                           postinc0	equ	0xFEE
   263                           wreg	equ	0xFE8
   264                           
   265                           	psect	bssBANK1
   266  000100                     __pbssBANK1:
   267                           	opt stack 0
   268  000100                     _Battery_Current:
   269                           	opt stack 0
   270  000100                     	ds	30
   271  00011E                     _PrevBattery_Current:
   272                           	opt stack 0
   273  00011E                     	ds	30
   274  00013C                     _PrevBattery_Volt:
   275                           	opt stack 0
   276  00013C                     	ds	30
   277  00015A                     _PrevTemp_DegF:
   278                           	opt stack 0
   279  00015A                     	ds	30
   280  000178                     _TempBattery_Current:
   281                           	opt stack 0
   282  000178                     	ds	30
   283  000196                     _Battery_Adc:
   284                           	opt stack 0
   285  000196                     	ds	20
   286  0001AA                     _TmpTemp_DegF:
   287                           	opt stack 0
   288  0001AA                     	ds	30
   289  0001C8                     _Temp_Adc:
   290                           	opt stack 0
   291  0001C8                     	ds	20
   292                           tblptru	equ	0xFF8
   293                           tblptrh	equ	0xFF7
   294                           postinc0	equ	0xFEE
   295                           wreg	equ	0xFE8
   296                           
   297                           	psect	cstackBANK0
   298  0000D0                     __pcstackBANK0:
   299                           	opt stack 0
   300  0000D0                     ?___ftadd:
   301                           	opt stack 0
   302  0000D0                     ___ftadd@f1:
   303                           	opt stack 0
   304                           
   305                           ; 3 bytes @ 0x0
   306  0000D0                     	ds	3
   307  0000D3                     ___ftadd@f2:
   308                           	opt stack 0
   309                           
   310                           ; 3 bytes @ 0x3
   311  0000D3                     	ds	3
   312  0000D6                     ??___ftadd:
   313                           
   314                           ; 0 bytes @ 0x6
   315  0000D6                     	ds	3
   316  0000D9                     ___ftadd@sign:
   317                           	opt stack 0
   318                           
   319                           ; 1 bytes @ 0x9
   320  0000D9                     	ds	1
   321  0000DA                     ___ftadd@exp2:
   322                           	opt stack 0
   323                           
   324                           ; 1 bytes @ 0xA
   325  0000DA                     	ds	1
   326  0000DB                     ___ftadd@exp1:
   327                           	opt stack 0
   328                           
   329                           ; 1 bytes @ 0xB
   330  0000DB                     	ds	1
   331  0000DC                     ?___ftsub:
   332                           	opt stack 0
   333  0000DC                     ?_eval_poly:
   334                           	opt stack 0
   335  0000DC                     Battery_Filter@x:
   336                           	opt stack 0
   337  0000DC                     Temp_Filter@x:
   338                           	opt stack 0
   339  0000DC                     ___ftsub@f1:
   340                           	opt stack 0
   341  0000DC                     eval_poly@x:
   342                           	opt stack 0
   343                           
   344                           ; 3 bytes @ 0xC
   345  0000DC                     	ds	2
   346  0000DE                     ??_Battery_Convert:
   347                           
   348                           ; 0 bytes @ 0xE
   349  0000DE                     	ds	1
   350  0000DF                     eval_poly@d:
   351                           	opt stack 0
   352  0000DF                     ___ftsub@f2:
   353                           	opt stack 0
   354                           
   355                           ; 3 bytes @ 0xF
   356  0000DF                     	ds	1
   357  0000E0                     Battery_Convert@x:
   358                           	opt stack 0
   359                           
   360                           ; 2 bytes @ 0x10
   361  0000E0                     	ds	1
   362  0000E1                     eval_poly@n:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x11
   366  0000E1                     	ds	2
   367  0000E3                     ??_eval_poly:
   368                           
   369                           ; 0 bytes @ 0x13
   370  0000E3                     	ds	2
   371  0000E5                     eval_poly@res:
   372                           	opt stack 0
   373                           
   374                           ; 3 bytes @ 0x15
   375  0000E5                     	ds	3
   376  0000E8                     ?_log:
   377                           	opt stack 0
   378  0000E8                     log@x:
   379                           	opt stack 0
   380                           
   381                           ; 3 bytes @ 0x18
   382  0000E8                     	ds	3
   383  0000EB                     log@exponent:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x1B
   387  0000EB                     	ds	2
   388  0000ED                     ??_Temp_Convert:
   389                           
   390                           ; 0 bytes @ 0x1D
   391  0000ED                     	ds	2
   392  0000EF                     _Temp_Convert$1604:
   393                           	opt stack 0
   394                           
   395                           ; 3 bytes @ 0x1F
   396  0000EF                     	ds	3
   397  0000F2                     _Temp_Convert$1605:
   398                           	opt stack 0
   399                           
   400                           ; 3 bytes @ 0x22
   401  0000F2                     	ds	3
   402  0000F5                     Temp_Convert@x:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0x25
   406  0000F5                     	ds	2
   407  0000F7                     Temp_Convert@steinhart:
   408                           	opt stack 0
   409                           
   410                           ; 3 bytes @ 0x27
   411  0000F7                     	ds	3
   412  0000FA                     
   413                           ; 2 bytes @ 0x2A
   414  0000FA                     	ds	2
   415  0000FC                     
   416                           ; 3 bytes @ 0x2C
   417  0000FC                     	ds	3
   418                           tblptru	equ	0xFF8
   419                           tblptrh	equ	0xFF7
   420                           postinc0	equ	0xFEE
   421                           wreg	equ	0xFE8
   422                           
   423                           	psect	cstackCOMRAM
   424  000001                     __pcstackCOMRAM:
   425                           	opt stack 0
   426  000001                     ??_ADC_StartConversion:
   427  000001                     
   428                           ; 1 bytes @ 0x0
   429  000001                     	ds	1
   430  000002                     ADC_StartConversion@channel:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0x1
   434  000002                     	ds	1
   435  000003                     ??_TMR1_ISR:
   436                           
   437                           ; 0 bytes @ 0x2
   438  000003                     	ds	3
   439  000006                     ??_INTERRUPT_InterruptManager:
   440                           
   441                           ; 0 bytes @ 0x5
   442  000006                     	ds	14
   443  000014                     ?___wmul:
   444                           	opt stack 0
   445  000014                     ?___ftpack:
   446                           	opt stack 0
   447  000014                     ?_frexp:
   448                           	opt stack 0
   449  000014                     ___wmul@multiplier:
   450                           	opt stack 0
   451  000014                     ___ftpack@arg:
   452                           	opt stack 0
   453  000014                     frexp@value:
   454                           	opt stack 0
   455                           
   456                           ; 3 bytes @ 0x13
   457  000014                     	ds	2
   458  000016                     ___wmul@multiplicand:
   459                           	opt stack 0
   460                           
   461                           ; 2 bytes @ 0x15
   462  000016                     	ds	1
   463  000017                     ___ftpack@exp:
   464                           	opt stack 0
   465  000017                     frexp@eptr:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x16
   469  000017                     	ds	1
   470  000018                     ___ftpack@sign:
   471                           	opt stack 0
   472  000018                     ___wmul@product:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x17
   476  000018                     	ds	1
   477  000019                     ??___ftpack:
   478  000019                     ??_frexp:
   479                           
   480                           ; 0 bytes @ 0x18
   481  000019                     	ds	1
   482  00001A                     ___ftge@ff1:
   483                           	opt stack 0
   484                           
   485                           ; 3 bytes @ 0x19
   486  00001A                     	ds	2
   487  00001C                     ?___awtoft:
   488                           	opt stack 0
   489  00001C                     ___awtoft@c:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0x1B
   493  00001C                     	ds	1
   494  00001D                     ___ftge@ff2:
   495                           	opt stack 0
   496                           
   497                           ; 3 bytes @ 0x1C
   498  00001D                     	ds	2
   499  00001F                     ___awtoft@sign:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x1E
   503  00001F                     	ds	1
   504  000020                     ??___ftge:
   505  000020                     ?___ftdiv:
   506                           	opt stack 0
   507  000020                     ___ftdiv@f1:
   508                           	opt stack 0
   509                           
   510                           ; 3 bytes @ 0x1F
   511  000020                     	ds	3
   512  000023                     Battery_Fault@fault:
   513                           	opt stack 0
   514  000023                     Temp_Fault@fault:
   515                           	opt stack 0
   516  000023                     ___ftdiv@f2:
   517                           	opt stack 0
   518                           
   519                           ; 3 bytes @ 0x22
   520  000023                     	ds	1
   521  000024                     Battery_Fault@i:
   522                           	opt stack 0
   523  000024                     Temp_Fault@i:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x23
   527  000024                     	ds	2
   528  000026                     ??___ftdiv:
   529                           
   530                           ; 0 bytes @ 0x25
   531  000026                     	ds	3
   532  000029                     ___ftdiv@cntr:
   533                           	opt stack 0
   534                           
   535                           ; 1 bytes @ 0x28
   536  000029                     	ds	1
   537  00002A                     ___ftdiv@f3:
   538                           	opt stack 0
   539                           
   540                           ; 3 bytes @ 0x29
   541  00002A                     	ds	3
   542  00002D                     ___ftdiv@exp:
   543                           	opt stack 0
   544                           
   545                           ; 1 bytes @ 0x2C
   546  00002D                     	ds	1
   547  00002E                     ___ftdiv@sign:
   548                           	opt stack 0
   549                           
   550                           ; 1 bytes @ 0x2D
   551  00002E                     	ds	1
   552  00002F                     ?___ftmul:
   553                           	opt stack 0
   554  00002F                     ___ftmul@f1:
   555                           	opt stack 0
   556                           
   557                           ; 3 bytes @ 0x2E
   558  00002F                     	ds	3
   559  000032                     ___ftmul@f2:
   560                           	opt stack 0
   561                           
   562                           ; 3 bytes @ 0x31
   563  000032                     	ds	3
   564  000035                     ??___ftmul:
   565                           
   566                           ; 0 bytes @ 0x34
   567  000035                     	ds	3
   568  000038                     ___ftmul@exp:
   569                           	opt stack 0
   570                           
   571                           ; 1 bytes @ 0x37
   572  000038                     	ds	1
   573  000039                     ___ftmul@f3_as_product:
   574                           	opt stack 0
   575                           
   576                           ; 3 bytes @ 0x38
   577  000039                     	ds	3
   578  00003C                     ___ftmul@cntr:
   579                           	opt stack 0
   580                           
   581                           ; 1 bytes @ 0x3B
   582  00003C                     	ds	1
   583  00003D                     ___ftmul@sign:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0x3C
   587  00003D                     	ds	1
   588  00003E                     tblptru	equ	0xFF8
   589                           tblptrh	equ	0xFF7
   590                           postinc0	equ	0xFEE
   591                           wreg	equ	0xFE8
   592                           
   593                           ; 0 bytes @ 0x3D
   594 ;;
   595 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   596 ;;
   597 ;; *************** function _main *****************
   598 ;; Defined at:
   599 ;;		line 31 in file "Main.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;  argc            2   42[BANK0 ] int 
   602 ;;  argv            3   44[BANK0 ] PTR PTR unsigned char 
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;                  2   42[BANK0 ] int 
   607 ;; Registers used:
   608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   614 ;;      Params:         0       5       0       0       0       0       0
   615 ;;      Locals:         0       0       0       0       0       0       0
   616 ;;      Temps:          0       0       0       0       0       0       0
   617 ;;      Totals:         0       5       0       0       0       0       0
   618 ;;Total ram usage:        5 bytes
   619 ;; Hardware stack levels required when called:    9
   620 ;; This function calls:
   621 ;;		_Battery_Convert
   622 ;;		_Battery_Fault
   623 ;;		_SYSTEM_Initialize
   624 ;;		_Temp_Convert
   625 ;;		_Temp_Fault
   626 ;; This function is called by:
   627 ;;		Startup code after reset
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           	psect	text0
   632  0017A6                     __ptext0:
   633                           	opt stack 0
   634  0017A6                     _main:
   635                           	opt stack 22
   636                           
   637                           ;Main.c: 33: SYSTEM_Initialize();
   638                           
   639                           ;incstack = 0
   640  0017A6  EC0E  F00C         	call	_SYSTEM_Initialize	;wreg free
   641                           
   642                           ;Main.c: 52: (INTCONbits.GIE = 1);
   643  0017AA  8EF2               	bsf	intcon,7,c	;volatile
   644                           
   645                           ;Main.c: 55: (INTCONbits.PEIE = 1);
   646  0017AC  8CF2               	bsf	intcon,6,c	;volatile
   647  0017AE                     l2825:
   648                           
   649                           ;Main.c: 65: {
   650                           ;Main.c: 66: if (Temp_Done)
   651  0017AE  0100               	movlb	0	; () banked
   652  0017B0  51AD               	movf	(_Temp_Done+1)& (0+255),w,b
   653  0017B2  11AC               	iorwf	_Temp_Done& (0+255),w,b
   654  0017B4  B4D8               	btfsc	status,2,c
   655  0017B6  D004               	goto	l2831
   656                           
   657                           ; BSR set to: 0
   658                           ;Main.c: 67: {
   659                           ;Main.c: 68: Temp_Convert();
   660  0017B8  EC4F  F004         	call	_Temp_Convert	;wreg free
   661                           
   662                           ;Main.c: 69: Temp_Fault();
   663  0017BC  ECA1  F00A         	call	_Temp_Fault	;wreg free
   664  0017C0                     l2831:
   665                           
   666                           ;Main.c: 70: }
   667                           ;Main.c: 71: if (Volt_Done)
   668  0017C0  0100               	movlb	0	; () banked
   669  0017C2  51AF               	movf	(_Volt_Done+1)& (0+255),w,b
   670  0017C4  11AE               	iorwf	_Volt_Done& (0+255),w,b
   671  0017C6  B4D8               	btfsc	status,2,c
   672  0017C8  D7F2               	goto	l2825
   673                           
   674                           ; BSR set to: 0
   675                           ;Main.c: 72: {
   676                           ;Main.c: 73: Battery_Convert();
   677  0017CA  EC80  F008         	call	_Battery_Convert	;wreg free
   678                           
   679                           ;Main.c: 74: Battery_Fault();
   680  0017CE  EC65  F009         	call	_Battery_Fault	;wreg free
   681  0017D2  D7ED               	goto	l2825
   682  0017D4                     __end_of_main:
   683                           	opt stack 0
   684                           tblptru	equ	0xFF8
   685                           tblptrh	equ	0xFF7
   686                           intcon	equ	0xFF2
   687                           postinc0	equ	0xFEE
   688                           wreg	equ	0xFE8
   689                           status	equ	0xFD8
   690                           
   691 ;; *************** function _Temp_Fault *****************
   692 ;; Defined at:
   693 ;;		line 12 in file "Tempeture.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;  i               2   35[COMRAM] int 
   698 ;;  fault           1   34[COMRAM] unsigned char 
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      unsigned char 
   701 ;; Registers used:
   702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   708 ;;      Params:         0       0       0       0       0       0       0
   709 ;;      Locals:         3       0       0       0       0       0       0
   710 ;;      Temps:          0       0       0       0       0       0       0
   711 ;;      Totals:         3       0       0       0       0       0       0
   712 ;;Total ram usage:        3 bytes
   713 ;; Hardware stack levels used:    1
   714 ;; Hardware stack levels required when called:    5
   715 ;; This function calls:
   716 ;;		___ftge
   717 ;;		___wmul
   718 ;; This function is called by:
   719 ;;		_main
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           	psect	text1
   724  001542                     __ptext1:
   725                           	opt stack 0
   726  001542                     _Temp_Fault:
   727                           	opt stack 25
   728                           
   729                           ;Tempeture.c: 15: char fault = 0;
   730                           
   731                           ;incstack = 0
   732  001542  0E00               	movlw	0
   733  001544  6E23               	movwf	Temp_Fault@fault,c
   734                           
   735                           ;Tempeture.c: 16: for(int i = 0;i<9;i++)
   736  001546  0E00               	movlw	0
   737  001548  6E25               	movwf	Temp_Fault@i+1,c
   738  00154A  0E00               	movlw	0
   739  00154C  6E24               	movwf	Temp_Fault@i,c
   740  00154E  5025               	movf	Temp_Fault@i+1,w,c
   741  001550  0A80               	xorlw	128
   742  001552  0F80               	addlw	-128
   743  001554  0E09               	movlw	9
   744  001556  B4D8               	btfsc	status,2,c
   745  001558  5C24               	subwf	Temp_Fault@i,w,c
   746  00155A  B0D8               	btfsc	status,0,c
   747  00155C  0012               	return	
   748                           
   749                           ;Tempeture.c: 17: {
   750                           ;Tempeture.c: 18: if (60.5 < Temp_DegF[i])
   751  00155E  0E00               	movlw	0
   752  001560  6E1A               	movwf	___ftge@ff1,c
   753  001562  0E72               	movlw	114
   754  001564  6E1B               	movwf	___ftge@ff1+1,c
   755  001566  0E42               	movlw	66
   756  001568  6E1C               	movwf	___ftge@ff1+2,c
   757  00156A  C024  F014         	movff	Temp_Fault@i,___wmul@multiplier
   758  00156E  C025  F015         	movff	Temp_Fault@i+1,___wmul@multiplier+1
   759  001572  0E00               	movlw	0
   760  001574  6E17               	movwf	___wmul@multiplicand+1,c
   761  001576  0E03               	movlw	3
   762  001578  6E16               	movwf	___wmul@multiplicand,c
   763  00157A  ECEA  F00B         	call	___wmul	;wreg free
   764  00157E  0100               	movlb	0	; () banked
   765  001580  0E7E               	movlw	low _Temp_DegF
   766  001582  2414               	addwf	?___wmul,w,c
   767  001584  6ED9               	movwf	fsr2l,c
   768  001586  0100               	movlb	0	; () banked
   769  001588  0E00               	movlw	high _Temp_DegF
   770  00158A  2015               	addwfc	?___wmul+1,w,c
   771  00158C  6EDA               	movwf	fsr2h,c
   772  00158E  CFDE F01D          	movff	postinc2,___ftge@ff2
   773  001592  CFDE F01E          	movff	postinc2,___ftge@ff2+1
   774  001596  CFDD F01F          	movff	postdec2,___ftge@ff2+2
   775  00159A  EC59  F00A         	call	___ftge	;wreg free
   776  00159E  B0D8               	btfsc	status,0,c
   777  0015A0  D002               	goto	l2775
   778                           
   779                           ;Tempeture.c: 19: {
   780                           ;Tempeture.c: 20: fault = 1;
   781  0015A2  0E01               	movlw	1
   782  0015A4  6E23               	movwf	Temp_Fault@fault,c
   783  0015A6                     l2775:
   784  0015A6  4A24               	infsnz	Temp_Fault@i,f,c
   785  0015A8  2A25               	incf	Temp_Fault@i+1,f,c
   786  0015AA  D7D1               	goto	L1
   787  0015AC                     __end_of_Temp_Fault:
   788                           	opt stack 0
   789                           tblptru	equ	0xFF8
   790                           tblptrh	equ	0xFF7
   791                           intcon	equ	0xFF2
   792                           postinc0	equ	0xFEE
   793                           wreg	equ	0xFE8
   794                           postinc2	equ	0xFDE
   795                           postdec2	equ	0xFDD
   796                           fsr2h	equ	0xFDA
   797                           fsr2l	equ	0xFD9
   798                           status	equ	0xFD8
   799                           
   800 ;; *************** function _Temp_Convert *****************
   801 ;; Defined at:
   802 ;;		line 50 in file "Tempeture.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;  steinhart       3   39[BANK0 ] float 
   807 ;;  x               2   37[BANK0 ] int 
   808 ;; Return value:  Size  Location     Type
   809 ;;		None               void
   810 ;; Registers used:
   811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   817 ;;      Params:         0       0       0       0       0       0       0
   818 ;;      Locals:         0      11       0       0       0       0       0
   819 ;;      Temps:          0       2       0       0       0       0       0
   820 ;;      Totals:         0      13       0       0       0       0       0
   821 ;;Total ram usage:       13 bytes
   822 ;; Hardware stack levels used:    1
   823 ;; Hardware stack levels required when called:    8
   824 ;; This function calls:
   825 ;;		_Temp_Filter
   826 ;;		___awtoft
   827 ;;		___ftadd
   828 ;;		___ftdiv
   829 ;;		___ftmul
   830 ;;		___ftsub
   831 ;;		___wmul
   832 ;;		_log
   833 ;; This function is called by:
   834 ;;		_main
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           	psect	text2
   839  00089E                     __ptext2:
   840                           	opt stack 0
   841  00089E                     _Temp_Convert:
   842                           	opt stack 22
   843                           
   844                           ;Tempeture.c: 52: int x;
   845                           ;Tempeture.c: 53: float steinhart;
   846                           ;Tempeture.c: 54: for(x = 0; x < 10; x++)
   847                           
   848                           ;incstack = 0
   849  00089E  0E00               	movlw	0
   850  0008A0  0100               	movlb	0	; () banked
   851  0008A2  6FF6               	movwf	(Temp_Convert@x+1)& (0+255),b
   852  0008A4  0E00               	movlw	0
   853  0008A6  0100               	movlb	0	; () banked
   854  0008A8  6FF5               	movwf	Temp_Convert@x& (0+255),b
   855  0008AA                     
   856                           ; BSR set to: 0
   857  0008AA  0100               	movlb	0	; () banked
   858  0008AC  51F6               	movf	(Temp_Convert@x+1)& (0+255),w,b
   859  0008AE  0A80               	xorlw	128
   860  0008B0  0F80               	addlw	-128
   861  0008B2  0E0A               	movlw	10
   862  0008B4  B4D8               	btfsc	status,2,c
   863  0008B6  5DF5               	subwf	Temp_Convert@x& (0+255),w,b
   864  0008B8  B0D8               	btfsc	status,0,c
   865  0008BA  D10D               	goto	l2809
   866                           
   867                           ; BSR set to: 0
   868                           ;Tempeture.c: 55: {
   869                           ;Tempeture.c: 56: steinhart = (10000 / ((1023.0 / Temp_Adc[x]) - 1)) / 10000;
   870                           
   871                           ; BSR set to: 0
   872                           
   873                           ; BSR set to: 0
   874  0008BC  0E00               	movlw	0
   875  0008BE  0100               	movlb	0	; () banked
   876  0008C0  6FD3               	movwf	___ftadd@f2& (0+255),b
   877  0008C2  0E80               	movlw	128
   878  0008C4  0100               	movlb	0	; () banked
   879  0008C6  6FD4               	movwf	(___ftadd@f2+1)& (0+255),b
   880  0008C8  0EBF               	movlw	191
   881  0008CA  0100               	movlb	0	; () banked
   882  0008CC  6FD5               	movwf	(___ftadd@f2+2)& (0+255),b
   883  0008CE  0EC8               	movlw	low _Temp_Adc
   884  0008D0  0100               	movlb	0	; () banked
   885  0008D2  6FED               	movwf	??_Temp_Convert& (0+255),b
   886  0008D4  0E01               	movlw	high _Temp_Adc
   887  0008D6  6FEE               	movwf	(??_Temp_Convert+1)& (0+255),b
   888  0008D8  90D8               	bcf	status,0,c
   889  0008DA  0100               	movlb	0	; () banked
   890  0008DC  35F5               	rlcf	Temp_Convert@x& (0+255),w,b
   891  0008DE  6ED9               	movwf	fsr2l,c
   892  0008E0  0100               	movlb	0	; () banked
   893  0008E2  35F6               	rlcf	(Temp_Convert@x+1)& (0+255),w,b
   894  0008E4  6EDA               	movwf	fsr2h,c
   895  0008E6  0100               	movlb	0	; () banked
   896  0008E8  51ED               	movf	??_Temp_Convert& (0+255),w,b
   897  0008EA  26D9               	addwf	fsr2l,f,c
   898  0008EC  0100               	movlb	0	; () banked
   899  0008EE  51EE               	movf	(??_Temp_Convert+1)& (0+255),w,b
   900  0008F0  22DA               	addwfc	fsr2h,f,c
   901  0008F2  CFDE F01C          	movff	postinc2,___awtoft@c
   902  0008F6  CFDD F01D          	movff	postdec2,___awtoft@c+1
   903  0008FA  EC28  F00B         	call	___awtoft	;wreg free
   904  0008FE  C01C  F023         	movff	?___awtoft,___ftdiv@f2
   905  000902  C01D  F024         	movff	?___awtoft+1,___ftdiv@f2+1
   906  000906  C01E  F025         	movff	?___awtoft+2,___ftdiv@f2+2
   907  00090A  0EC0               	movlw	192
   908  00090C  6E20               	movwf	___ftdiv@f1,c
   909  00090E  0E7F               	movlw	127
   910  000910  6E21               	movwf	___ftdiv@f1+1,c
   911  000912  0E44               	movlw	68
   912  000914  6E22               	movwf	___ftdiv@f1+2,c
   913  000916  ECF4  F008         	call	___ftdiv	;wreg free
   914  00091A  C020  F0D0         	movff	?___ftdiv,___ftadd@f1
   915  00091E  C021  F0D1         	movff	?___ftdiv+1,___ftadd@f1+1
   916  000922  C022  F0D2         	movff	?___ftdiv+2,___ftadd@f1+2
   917  000926  EC0F  F003         	call	___ftadd	;wreg free
   918  00092A  C0D0  F0EF         	movff	?___ftadd,_Temp_Convert$1604
   919  00092E  C0D1  F0F0         	movff	?___ftadd+1,_Temp_Convert$1604+1
   920  000932  C0D2  F0F1         	movff	?___ftadd+2,_Temp_Convert$1604+2
   921                           
   922                           ;Tempeture.c: 55: {
   923                           ;Tempeture.c: 56: steinhart = (10000 / ((1023.0 / Temp_Adc[x]) - 1)) / 10000;
   924  000936  C0EF  F023         	movff	_Temp_Convert$1604,___ftdiv@f2
   925  00093A  C0F0  F024         	movff	_Temp_Convert$1604+1,___ftdiv@f2+1
   926  00093E  C0F1  F025         	movff	_Temp_Convert$1604+2,___ftdiv@f2+2
   927  000942  0E40               	movlw	64
   928  000944  6E20               	movwf	___ftdiv@f1,c
   929  000946  0E1C               	movlw	28
   930  000948  6E21               	movwf	___ftdiv@f1+1,c
   931  00094A  0E46               	movlw	70
   932  00094C  6E22               	movwf	___ftdiv@f1+2,c
   933  00094E  ECF4  F008         	call	___ftdiv	;wreg free
   934  000952  C020  F0F2         	movff	?___ftdiv,_Temp_Convert$1605
   935  000956  C021  F0F3         	movff	?___ftdiv+1,_Temp_Convert$1605+1
   936  00095A  C022  F0F4         	movff	?___ftdiv+2,_Temp_Convert$1605+2
   937                           
   938                           ;Tempeture.c: 55: {
   939                           ;Tempeture.c: 56: steinhart = (10000 / ((1023.0 / Temp_Adc[x]) - 1)) / 10000;
   940  00095E  C0F2  F020         	movff	_Temp_Convert$1605,___ftdiv@f1
   941  000962  C0F3  F021         	movff	_Temp_Convert$1605+1,___ftdiv@f1+1
   942  000966  C0F4  F022         	movff	_Temp_Convert$1605+2,___ftdiv@f1+2
   943  00096A  0E40               	movlw	64
   944  00096C  6E23               	movwf	___ftdiv@f2,c
   945  00096E  0E1C               	movlw	28
   946  000970  6E24               	movwf	___ftdiv@f2+1,c
   947  000972  0E46               	movlw	70
   948  000974  6E25               	movwf	___ftdiv@f2+2,c
   949  000976  ECF4  F008         	call	___ftdiv	;wreg free
   950  00097A  C020  F0F7         	movff	?___ftdiv,Temp_Convert@steinhart
   951  00097E  C021  F0F8         	movff	?___ftdiv+1,Temp_Convert@steinhart+1
   952  000982  C022  F0F9         	movff	?___ftdiv+2,Temp_Convert@steinhart+2
   953                           
   954                           ;Tempeture.c: 57: steinhart = log(steinhart);
   955  000986  C0F7  F0E8         	movff	Temp_Convert@steinhart,log@x
   956  00098A  C0F8  F0E9         	movff	Temp_Convert@steinhart+1,log@x+1
   957  00098E  C0F9  F0EA         	movff	Temp_Convert@steinhart+2,log@x+2
   958  000992  ECDE  F006         	call	_log	;wreg free
   959  000996  C0E8  F0F7         	movff	?_log,Temp_Convert@steinhart
   960  00099A  C0E9  F0F8         	movff	?_log+1,Temp_Convert@steinhart+1
   961  00099E  C0EA  F0F9         	movff	?_log+2,Temp_Convert@steinhart+2
   962                           
   963                           ;Tempeture.c: 58: steinhart /= 3950;
   964  0009A2  C0F7  F020         	movff	Temp_Convert@steinhart,___ftdiv@f1
   965  0009A6  C0F8  F021         	movff	Temp_Convert@steinhart+1,___ftdiv@f1+1
   966  0009AA  C0F9  F022         	movff	Temp_Convert@steinhart+2,___ftdiv@f1+2
   967  0009AE  0EE0               	movlw	224
   968  0009B0  6E23               	movwf	___ftdiv@f2,c
   969  0009B2  0E76               	movlw	118
   970  0009B4  6E24               	movwf	___ftdiv@f2+1,c
   971  0009B6  0E45               	movlw	69
   972  0009B8  6E25               	movwf	___ftdiv@f2+2,c
   973  0009BA  ECF4  F008         	call	___ftdiv	;wreg free
   974  0009BE  C020  F0F7         	movff	?___ftdiv,Temp_Convert@steinhart
   975  0009C2  C021  F0F8         	movff	?___ftdiv+1,Temp_Convert@steinhart+1
   976  0009C6  C022  F0F9         	movff	?___ftdiv+2,Temp_Convert@steinhart+2
   977                           
   978                           ;Tempeture.c: 59: steinhart += 1.0 / (25 + 273.15);
   979  0009CA  C0F7  F0D0         	movff	Temp_Convert@steinhart,___ftadd@f1
   980  0009CE  C0F8  F0D1         	movff	Temp_Convert@steinhart+1,___ftadd@f1+1
   981  0009D2  C0F9  F0D2         	movff	Temp_Convert@steinhart+2,___ftadd@f1+2
   982  0009D6  0ECF               	movlw	207
   983  0009D8  0100               	movlb	0	; () banked
   984  0009DA  6FD3               	movwf	___ftadd@f2& (0+255),b
   985  0009DC  0E5B               	movlw	91
   986  0009DE  0100               	movlb	0	; () banked
   987  0009E0  6FD4               	movwf	(___ftadd@f2+1)& (0+255),b
   988  0009E2  0E3B               	movlw	59
   989  0009E4  0100               	movlb	0	; () banked
   990  0009E6  6FD5               	movwf	(___ftadd@f2+2)& (0+255),b
   991  0009E8  EC0F  F003         	call	___ftadd	;wreg free
   992  0009EC  C0D0  F0F7         	movff	?___ftadd,Temp_Convert@steinhart
   993  0009F0  C0D1  F0F8         	movff	?___ftadd+1,Temp_Convert@steinhart+1
   994  0009F4  C0D2  F0F9         	movff	?___ftadd+2,Temp_Convert@steinhart+2
   995                           
   996                           ;Tempeture.c: 60: steinhart = 1.0 / steinhart;
   997  0009F8  0E00               	movlw	0
   998  0009FA  6E20               	movwf	___ftdiv@f1,c
   999  0009FC  0E80               	movlw	128
  1000  0009FE  6E21               	movwf	___ftdiv@f1+1,c
  1001  000A00  0E3F               	movlw	63
  1002  000A02  6E22               	movwf	___ftdiv@f1+2,c
  1003  000A04  C0F7  F023         	movff	Temp_Convert@steinhart,___ftdiv@f2
  1004  000A08  C0F8  F024         	movff	Temp_Convert@steinhart+1,___ftdiv@f2+1
  1005  000A0C  C0F9  F025         	movff	Temp_Convert@steinhart+2,___ftdiv@f2+2
  1006  000A10  ECF4  F008         	call	___ftdiv	;wreg free
  1007  000A14  C020  F0F7         	movff	?___ftdiv,Temp_Convert@steinhart
  1008  000A18  C021  F0F8         	movff	?___ftdiv+1,Temp_Convert@steinhart+1
  1009  000A1C  C022  F0F9         	movff	?___ftdiv+2,Temp_Convert@steinhart+2
  1010                           
  1011                           ;Tempeture.c: 61: steinhart -= 273.15;
  1012  000A20  C0F7  F0DC         	movff	Temp_Convert@steinhart,___ftsub@f1
  1013  000A24  C0F8  F0DD         	movff	Temp_Convert@steinhart+1,___ftsub@f1+1
  1014  000A28  C0F9  F0DE         	movff	Temp_Convert@steinhart+2,___ftsub@f1+2
  1015  000A2C  0E93               	movlw	147
  1016  000A2E  0100               	movlb	0	; () banked
  1017  000A30  6FDF               	movwf	___ftsub@f2& (0+255),b
  1018  000A32  0E88               	movlw	136
  1019  000A34  0100               	movlb	0	; () banked
  1020  000A36  6FE0               	movwf	(___ftsub@f2+1)& (0+255),b
  1021  000A38  0E43               	movlw	67
  1022  000A3A  0100               	movlb	0	; () banked
  1023  000A3C  6FE1               	movwf	(___ftsub@f2+2)& (0+255),b
  1024  000A3E  EC4C  F00B         	call	___ftsub	;wreg free
  1025  000A42  C0DC  F0F7         	movff	?___ftsub,Temp_Convert@steinhart
  1026  000A46  C0DD  F0F8         	movff	?___ftsub+1,Temp_Convert@steinhart+1
  1027  000A4A  C0DE  F0F9         	movff	?___ftsub+2,Temp_Convert@steinhart+2
  1028                           
  1029                           ;Tempeture.c: 62: steinhart = (steinhart*1.8) + 32.0;
  1030  000A4E  0E66               	movlw	102
  1031  000A50  6E32               	movwf	___ftmul@f2,c
  1032  000A52  0EE6               	movlw	230
  1033  000A54  6E33               	movwf	___ftmul@f2+1,c
  1034  000A56  0E3F               	movlw	63
  1035  000A58  6E34               	movwf	___ftmul@f2+2,c
  1036  000A5A  C0F7  F02F         	movff	Temp_Convert@steinhart,___ftmul@f1
  1037  000A5E  C0F8  F030         	movff	Temp_Convert@steinhart+1,___ftmul@f1+1
  1038  000A62  C0F9  F031         	movff	Temp_Convert@steinhart+2,___ftmul@f1+2
  1039  000A66  EC08  F008         	call	___ftmul	;wreg free
  1040  000A6A  C02F  F0D0         	movff	?___ftmul,___ftadd@f1
  1041  000A6E  C030  F0D1         	movff	?___ftmul+1,___ftadd@f1+1
  1042  000A72  C031  F0D2         	movff	?___ftmul+2,___ftadd@f1+2
  1043  000A76  0E00               	movlw	0
  1044  000A78  0100               	movlb	0	; () banked
  1045  000A7A  6FD3               	movwf	___ftadd@f2& (0+255),b
  1046  000A7C  0E00               	movlw	0
  1047  000A7E  0100               	movlb	0	; () banked
  1048  000A80  6FD4               	movwf	(___ftadd@f2+1)& (0+255),b
  1049  000A82  0E42               	movlw	66
  1050  000A84  0100               	movlb	0	; () banked
  1051  000A86  6FD5               	movwf	(___ftadd@f2+2)& (0+255),b
  1052  000A88  EC0F  F003         	call	___ftadd	;wreg free
  1053  000A8C  C0D0  F0F7         	movff	?___ftadd,Temp_Convert@steinhart
  1054  000A90  C0D1  F0F8         	movff	?___ftadd+1,Temp_Convert@steinhart+1
  1055  000A94  C0D2  F0F9         	movff	?___ftadd+2,Temp_Convert@steinhart+2
  1056                           
  1057                           ;Tempeture.c: 63: TmpTemp_DegF[x] = steinhart;
  1058  000A98  C0F5  F014         	movff	Temp_Convert@x,___wmul@multiplier
  1059  000A9C  C0F6  F015         	movff	Temp_Convert@x+1,___wmul@multiplier+1
  1060  000AA0  0E00               	movlw	0
  1061  000AA2  6E17               	movwf	___wmul@multiplicand+1,c
  1062  000AA4  0E03               	movlw	3
  1063  000AA6  6E16               	movwf	___wmul@multiplicand,c
  1064  000AA8  ECEA  F00B         	call	___wmul	;wreg free
  1065  000AAC  0101               	movlb	1	; () banked
  1066  000AAE  0EAA               	movlw	low _TmpTemp_DegF
  1067  000AB0  2414               	addwf	?___wmul,w,c
  1068  000AB2  6ED9               	movwf	fsr2l,c
  1069  000AB4  0101               	movlb	1	; () banked
  1070  000AB6  0E01               	movlw	high _TmpTemp_DegF
  1071  000AB8  2015               	addwfc	?___wmul+1,w,c
  1072  000ABA  6EDA               	movwf	fsr2h,c
  1073  000ABC  0100               	movlb	0	; () banked
  1074  000ABE  C0F7  FFDE         	movff	Temp_Convert@steinhart,postinc2
  1075  000AC2  0100               	movlb	0	; () banked
  1076  000AC4  C0F8  FFDE         	movff	Temp_Convert@steinhart+1,postinc2
  1077  000AC8  0100               	movlb	0	; () banked
  1078  000ACA  C0F9  FFDD         	movff	Temp_Convert@steinhart+2,postdec2
  1079                           
  1080                           ; BSR set to: 0
  1081  000ACE  0100               	movlb	0	; () banked
  1082  000AD0  4BF5               	infsnz	Temp_Convert@x& (0+255),f,b
  1083  000AD2  2BF6               	incf	(Temp_Convert@x+1)& (0+255),f,b
  1084  000AD4  D6EA               	goto	L2
  1085  000AD6                     l2809:
  1086                           
  1087                           ; BSR set to: 0
  1088                           ;Tempeture.c: 64: }
  1089                           ;Tempeture.c: 65: Temp_Filter();
  1090  000AD6  EC6E  F005         	call	_Temp_Filter	;wreg free
  1091  000ADA  0012               	return	
  1092  000ADC                     __end_of_Temp_Convert:
  1093                           	opt stack 0
  1094                           tblptru	equ	0xFF8
  1095                           tblptrh	equ	0xFF7
  1096                           intcon	equ	0xFF2
  1097                           postinc0	equ	0xFEE
  1098                           wreg	equ	0xFE8
  1099                           postinc2	equ	0xFDE
  1100                           postdec2	equ	0xFDD
  1101                           fsr2h	equ	0xFDA
  1102                           fsr2l	equ	0xFD9
  1103                           status	equ	0xFD8
  1104                           
  1105 ;; *************** function _log *****************
  1106 ;; Defined at:
  1107 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\log.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;  x               3   24[BANK0 ] int 
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;  exponent        2   27[BANK0 ] int 
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  3   24[BANK0 ] int 
  1114 ;; Registers used:
  1115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1121 ;;      Params:         0       3       0       0       0       0       0
  1122 ;;      Locals:         0       2       0       0       0       0       0
  1123 ;;      Temps:          0       0       0       0       0       0       0
  1124 ;;      Totals:         0       5       0       0       0       0       0
  1125 ;;Total ram usage:        5 bytes
  1126 ;; Hardware stack levels used:    1
  1127 ;; Hardware stack levels required when called:    7
  1128 ;; This function calls:
  1129 ;;		___awtoft
  1130 ;;		___ftadd
  1131 ;;		___ftmul
  1132 ;;		_eval_poly
  1133 ;;		_frexp
  1134 ;; This function is called by:
  1135 ;;		_Temp_Convert
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text3
  1140  000DBC                     __ptext3:
  1141                           	opt stack 0
  1142  000DBC                     _log:
  1143                           	opt stack 22
  1144                           
  1145                           ;incstack = 0
  1146  000DBC  0100               	movlb	0	; () banked
  1147  000DBE  51EA               	movf	(log@x+2)& (0+255),w,b
  1148  000DC0  0A80               	xorlw	128
  1149  000DC2  0F80               	addlw	128
  1150  000DC4  E107               	bnz	u2445
  1151  000DC6  0E00               	movlw	0
  1152  000DC8  0100               	movlb	0	; () banked
  1153  000DCA  5DE9               	subwf	(log@x+1)& (0+255),w,b
  1154  000DCC  E103               	bnz	u2445
  1155  000DCE  0E00               	movlw	0
  1156  000DD0  0100               	movlb	0	; () banked
  1157  000DD2  5DE8               	subwf	log@x& (0+255),w,b
  1158  000DD4                     u2445:
  1159  000DD4  B0D8               	btfsc	status,0,c
  1160  000DD6  D010               	goto	l2667
  1161                           
  1162                           ; BSR set to: 0
  1163  000DD8  0E00               	movlw	0
  1164  000DDA  0100               	movlb	0	; () banked
  1165  000DDC  6FB1               	movwf	(_errno+1)& (0+255),b
  1166  000DDE  0E21               	movlw	33
  1167  000DE0  0100               	movlb	0	; () banked
  1168  000DE2  6FB0               	movwf	_errno& (0+255),b
  1169  000DE4  0E00               	movlw	0
  1170  000DE6  0100               	movlb	0	; () banked
  1171  000DE8  6FE8               	movwf	?_log& (0+255),b
  1172  000DEA  0E00               	movlw	0
  1173  000DEC  0100               	movlb	0	; () banked
  1174  000DEE  6FE9               	movwf	(?_log+1)& (0+255),b
  1175  000DF0  0E00               	movlw	0
  1176  000DF2  0100               	movlb	0	; () banked
  1177  000DF4  6FEA               	movwf	(?_log+2)& (0+255),b
  1178  000DF6  0012               	return	
  1179  000DF8                     l2667:
  1180                           
  1181                           ; BSR set to: 0
  1182  000DF8  0E7F               	movlw	127
  1183  000DFA  0100               	movlb	0	; () banked
  1184  000DFC  15EA               	andwf	(log@x+2)& (0+255),w,b
  1185  000DFE  0100               	movlb	0	; () banked
  1186  000E00  11E9               	iorwf	(log@x+1)& (0+255),w,b
  1187  000E02  0100               	movlb	0	; () banked
  1188  000E04  11E8               	iorwf	log@x& (0+255),w,b
  1189  000E06  A4D8               	btfss	status,2,c
  1190  000E08  D010               	goto	l2673
  1191                           
  1192                           ; BSR set to: 0
  1193  000E0A  0E00               	movlw	0
  1194  000E0C  0100               	movlb	0	; () banked
  1195  000E0E  6FB1               	movwf	(_errno+1)& (0+255),b
  1196  000E10  0E22               	movlw	34
  1197  000E12  0100               	movlb	0	; () banked
  1198  000E14  6FB0               	movwf	_errno& (0+255),b
  1199  000E16  0E00               	movlw	0
  1200  000E18  0100               	movlb	0	; () banked
  1201  000E1A  6FE8               	movwf	?_log& (0+255),b
  1202  000E1C  0E00               	movlw	0
  1203  000E1E  0100               	movlb	0	; () banked
  1204  000E20  6FE9               	movwf	(?_log+1)& (0+255),b
  1205  000E22  0E00               	movlw	0
  1206  000E24  0100               	movlb	0	; () banked
  1207  000E26  6FEA               	movwf	(?_log+2)& (0+255),b
  1208  000E28  0012               	return	
  1209  000E2A                     l2673:
  1210                           
  1211                           ; BSR set to: 0
  1212  000E2A  0E00               	movlw	0
  1213  000E2C  6E32               	movwf	___ftmul@f2,c
  1214  000E2E  0E00               	movlw	0
  1215  000E30  6E33               	movwf	___ftmul@f2+1,c
  1216  000E32  0E40               	movlw	64
  1217  000E34  6E34               	movwf	___ftmul@f2+2,c
  1218  000E36  0100               	movlb	0	; () banked
  1219  000E38  0E00               	movlw	high log@exponent
  1220  000E3A  6E18               	movwf	frexp@eptr+1,c
  1221  000E3C  0100               	movlb	0	; () banked
  1222  000E3E  0EEB               	movlw	low log@exponent
  1223  000E40  6E17               	movwf	frexp@eptr,c
  1224  000E42  C0E8  F014         	movff	log@x,frexp@value
  1225  000E46  C0E9  F015         	movff	log@x+1,frexp@value+1
  1226  000E4A  C0EA  F016         	movff	log@x+2,frexp@value+2
  1227  000E4E  EC10  F00A         	call	_frexp	;wreg free
  1228  000E52  C014  F02F         	movff	?_frexp,___ftmul@f1
  1229  000E56  C015  F030         	movff	?_frexp+1,___ftmul@f1+1
  1230  000E5A  C016  F031         	movff	?_frexp+2,___ftmul@f1+2
  1231  000E5E  EC08  F008         	call	___ftmul	;wreg free
  1232  000E62  C02F  F0D0         	movff	?___ftmul,___ftadd@f1
  1233  000E66  C030  F0D1         	movff	?___ftmul+1,___ftadd@f1+1
  1234  000E6A  C031  F0D2         	movff	?___ftmul+2,___ftadd@f1+2
  1235  000E6E  0E00               	movlw	0
  1236  000E70  0100               	movlb	0	; () banked
  1237  000E72  6FD3               	movwf	___ftadd@f2& (0+255),b
  1238  000E74  0E80               	movlw	128
  1239  000E76  0100               	movlb	0	; () banked
  1240  000E78  6FD4               	movwf	(___ftadd@f2+1)& (0+255),b
  1241  000E7A  0EBF               	movlw	191
  1242  000E7C  0100               	movlb	0	; () banked
  1243  000E7E  6FD5               	movwf	(___ftadd@f2+2)& (0+255),b
  1244  000E80  EC0F  F003         	call	___ftadd	;wreg free
  1245  000E84  C0D0  F0E8         	movff	?___ftadd,log@x
  1246  000E88  C0D1  F0E9         	movff	?___ftadd+1,log@x+1
  1247  000E8C  C0D2  F0EA         	movff	?___ftadd+2,log@x+2
  1248  000E90  0100               	movlb	0	; () banked
  1249  000E92  07EB               	decf	log@exponent& (0+255),f,b
  1250  000E94  A0D8               	btfss	status,0,c
  1251  000E96  07EC               	decf	(log@exponent+1)& (0+255),f,b
  1252                           
  1253                           ; BSR set to: 0
  1254  000E98  C0E8  F0DC         	movff	log@x,eval_poly@x
  1255  000E9C  C0E9  F0DD         	movff	log@x+1,eval_poly@x+1
  1256  000EA0  C0EA  F0DE         	movff	log@x+2,eval_poly@x+2
  1257  000EA4  0E06               	movlw	high log@coeff
  1258  000EA6  0100               	movlb	0	; () banked
  1259  000EA8  6FE0               	movwf	(eval_poly@d+1)& (0+255),b
  1260  000EAA  0E01               	movlw	low log@coeff
  1261  000EAC  0100               	movlb	0	; () banked
  1262  000EAE  6FDF               	movwf	eval_poly@d& (0+255),b
  1263  000EB0  0E00               	movlw	0
  1264  000EB2  0100               	movlb	0	; () banked
  1265  000EB4  6FE2               	movwf	(eval_poly@n+1)& (0+255),b
  1266  000EB6  0E08               	movlw	8
  1267  000EB8  0100               	movlb	0	; () banked
  1268  000EBA  6FE1               	movwf	eval_poly@n& (0+255),b
  1269  000EBC  EC8F  F007         	call	_eval_poly	;wreg free
  1270  000EC0  C0DC  F0E8         	movff	?_eval_poly,log@x
  1271  000EC4  C0DD  F0E9         	movff	?_eval_poly+1,log@x+1
  1272  000EC8  C0DE  F0EA         	movff	?_eval_poly+2,log@x+2
  1273  000ECC  0E72               	movlw	114
  1274  000ECE  6E32               	movwf	___ftmul@f2,c
  1275  000ED0  0E31               	movlw	49
  1276  000ED2  6E33               	movwf	___ftmul@f2+1,c
  1277  000ED4  0E3F               	movlw	63
  1278  000ED6  6E34               	movwf	___ftmul@f2+2,c
  1279  000ED8  C0EB  F01C         	movff	log@exponent,___awtoft@c
  1280  000EDC  C0EC  F01D         	movff	log@exponent+1,___awtoft@c+1
  1281  000EE0  EC28  F00B         	call	___awtoft	;wreg free
  1282  000EE4  C01C  F02F         	movff	?___awtoft,___ftmul@f1
  1283  000EE8  C01D  F030         	movff	?___awtoft+1,___ftmul@f1+1
  1284  000EEC  C01E  F031         	movff	?___awtoft+2,___ftmul@f1+2
  1285  000EF0  EC08  F008         	call	___ftmul	;wreg free
  1286  000EF4  C02F  F0D0         	movff	?___ftmul,___ftadd@f1
  1287  000EF8  C030  F0D1         	movff	?___ftmul+1,___ftadd@f1+1
  1288  000EFC  C031  F0D2         	movff	?___ftmul+2,___ftadd@f1+2
  1289  000F00  C0E8  F0D3         	movff	log@x,___ftadd@f2
  1290  000F04  C0E9  F0D4         	movff	log@x+1,___ftadd@f2+1
  1291  000F08  C0EA  F0D5         	movff	log@x+2,___ftadd@f2+2
  1292  000F0C  EC0F  F003         	call	___ftadd	;wreg free
  1293  000F10  C0D0  F0E8         	movff	?___ftadd,?_log
  1294  000F14  C0D1  F0E9         	movff	?___ftadd+1,?_log+1
  1295  000F18  C0D2  F0EA         	movff	?___ftadd+2,?_log+2
  1296  000F1C  0012               	return	
  1297  000F1E                     __end_of_log:
  1298                           	opt stack 0
  1299                           tblptru	equ	0xFF8
  1300                           tblptrh	equ	0xFF7
  1301                           intcon	equ	0xFF2
  1302                           postinc0	equ	0xFEE
  1303                           wreg	equ	0xFE8
  1304                           postinc2	equ	0xFDE
  1305                           postdec2	equ	0xFDD
  1306                           fsr2h	equ	0xFDA
  1307                           fsr2l	equ	0xFD9
  1308                           status	equ	0xFD8
  1309                           
  1310 ;; *************** function _frexp *****************
  1311 ;; Defined at:
  1312 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\frexp.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;  value           3   19[COMRAM] int 
  1315 ;;  eptr            2   22[COMRAM] PTR int 
  1316 ;;		 -> log@exponent(2), 
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;		None
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  3   19[COMRAM] PTR int 
  1321 ;; Registers used:
  1322 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1328 ;;      Params:         5       0       0       0       0       0       0
  1329 ;;      Locals:         0       0       0       0       0       0       0
  1330 ;;      Temps:          2       0       0       0       0       0       0
  1331 ;;      Totals:         7       0       0       0       0       0       0
  1332 ;;Total ram usage:        7 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:    4
  1335 ;; This function calls:
  1336 ;;		Nothing
  1337 ;; This function is called by:
  1338 ;;		_log
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text4
  1343  001420                     __ptext4:
  1344                           	opt stack 0
  1345  001420                     _frexp:
  1346                           	opt stack 24
  1347                           
  1348                           ;incstack = 0
  1349  001420  0E7F               	movlw	127
  1350  001422  1416               	andwf	frexp@value+2,w,c
  1351  001424  1015               	iorwf	frexp@value+1,w,c
  1352  001426  1014               	iorwf	frexp@value,w,c
  1353  001428  A4D8               	btfss	status,2,c
  1354  00142A  D00F               	goto	l2011
  1355  00142C  C017  FFD9         	movff	frexp@eptr,fsr2l
  1356  001430  C018  FFDA         	movff	frexp@eptr+1,fsr2h
  1357  001434  0E00               	movlw	0
  1358  001436  6EDE               	movwf	postinc2,c
  1359  001438  0E00               	movlw	0
  1360  00143A  6EDD               	movwf	postdec2,c
  1361  00143C  0E00               	movlw	0
  1362  00143E  6E14               	movwf	?_frexp,c
  1363  001440  0E00               	movlw	0
  1364  001442  6E15               	movwf	?_frexp+1,c
  1365  001444  0E00               	movlw	0
  1366  001446  6E16               	movwf	?_frexp+2,c
  1367  001448  0012               	return	
  1368  00144A                     l2011:
  1369  00144A  5016               	movf	frexp@value+2,w,c
  1370  00144C  0B7F               	andlw	127
  1371  00144E  6E19               	movwf	??_frexp& (0+255),c
  1372  001450  6A1A               	clrf	(??_frexp+1)& (0+255),c
  1373  001452  90D8               	bcf	status,0,c
  1374  001454  3619               	rlcf	??_frexp,f,c
  1375  001456  361A               	rlcf	??_frexp+1,f,c
  1376  001458  C017  FFD9         	movff	frexp@eptr,fsr2l
  1377  00145C  C018  FFDA         	movff	frexp@eptr+1,fsr2h
  1378  001460  C019  FFDE         	movff	??_frexp,postinc2
  1379  001464  C01A  FFDD         	movff	??_frexp+1,postdec2
  1380  001468  AE15               	btfss	frexp@value+1,7,c
  1381  00146A  D003               	goto	u1440
  1382  00146C  6A19               	clrf	??_frexp& (0+255),c
  1383  00146E  2A19               	incf	??_frexp& (0+255),f,c
  1384  001470  D001               	goto	u1448
  1385  001472                     u1440:
  1386  001472  6A19               	clrf	??_frexp& (0+255),c
  1387  001474                     u1448:
  1388  001474  5019               	movf	??_frexp,w,c
  1389  001476  C017  FFD9         	movff	frexp@eptr,fsr2l
  1390  00147A  C018  FFDA         	movff	frexp@eptr+1,fsr2h
  1391  00147E  12DE               	iorwf	postinc2,f,c
  1392  001480  0E00               	movlw	0
  1393  001482  12DD               	iorwf	postdec2,f,c
  1394  001484  C017  FFD9         	movff	frexp@eptr,fsr2l
  1395  001488  C018  FFDA         	movff	frexp@eptr+1,fsr2h
  1396  00148C  0E82               	movlw	130
  1397  00148E  26DE               	addwf	postinc2,f,c
  1398  001490  0EFF               	movlw	255
  1399  001492  22DD               	addwfc	postdec2,f,c
  1400  001494  8016               	bsf	frexp@value+2,0,c
  1401  001496  8216               	bsf	frexp@value+2,1,c
  1402  001498  8416               	bsf	frexp@value+2,2,c
  1403  00149A  8616               	bsf	frexp@value+2,3,c
  1404  00149C  8816               	bsf	frexp@value+2,4,c
  1405  00149E  8A16               	bsf	frexp@value+2,5,c
  1406  0014A0  9C16               	bcf	frexp@value+2,6,c
  1407  0014A2  9E15               	bcf	frexp@value+1,7,c
  1408  0014A4  C014  F014         	movff	frexp@value,?_frexp
  1409  0014A8  C015  F015         	movff	frexp@value+1,?_frexp+1
  1410  0014AC  C016  F016         	movff	frexp@value+2,?_frexp+2
  1411  0014B0  0012               	return	
  1412  0014B2                     __end_of_frexp:
  1413                           	opt stack 0
  1414                           tblptru	equ	0xFF8
  1415                           tblptrh	equ	0xFF7
  1416                           intcon	equ	0xFF2
  1417                           postinc0	equ	0xFEE
  1418                           wreg	equ	0xFE8
  1419                           postinc2	equ	0xFDE
  1420                           postdec2	equ	0xFDD
  1421                           fsr2h	equ	0xFDA
  1422                           fsr2l	equ	0xFD9
  1423                           status	equ	0xFD8
  1424                           
  1425 ;; *************** function _eval_poly *****************
  1426 ;; Defined at:
  1427 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\evalpoly.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;  x               3   12[BANK0 ] PTR int 
  1430 ;;  d               2   15[BANK0 ] PTR const 
  1431 ;;		 -> log@coeff(27), 
  1432 ;;  n               2   17[BANK0 ] int 
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;  res             3   21[BANK0 ] int 
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  3   12[BANK0 ] int 
  1437 ;; Registers used:
  1438 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1444 ;;      Params:         0       7       0       0       0       0       0
  1445 ;;      Locals:         0       3       0       0       0       0       0
  1446 ;;      Temps:          0       2       0       0       0       0       0
  1447 ;;      Totals:         0      12       0       0       0       0       0
  1448 ;;Total ram usage:       12 bytes
  1449 ;; Hardware stack levels used:    1
  1450 ;; Hardware stack levels required when called:    6
  1451 ;; This function calls:
  1452 ;;		___ftadd
  1453 ;;		___ftmul
  1454 ;;		___wmul
  1455 ;; This function is called by:
  1456 ;;		_log
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text5
  1461  000F1E                     __ptext5:
  1462                           	opt stack 0
  1463  000F1E                     _eval_poly:
  1464                           	opt stack 22
  1465                           
  1466                           ;incstack = 0
  1467  000F1E  C0E1  F014         	movff	eval_poly@n,___wmul@multiplier
  1468  000F22  C0E2  F015         	movff	eval_poly@n+1,___wmul@multiplier+1
  1469  000F26  0E00               	movlw	0
  1470  000F28  6E17               	movwf	___wmul@multiplicand+1,c
  1471  000F2A  0E03               	movlw	3
  1472  000F2C  6E16               	movwf	___wmul@multiplicand,c
  1473  000F2E  ECEA  F00B         	call	___wmul	;wreg free
  1474  000F32  0100               	movlb	0	; () banked
  1475  000F34  C0DF  F0E3         	movff	eval_poly@d,??_eval_poly
  1476  000F38  0100               	movlb	0	; () banked
  1477  000F3A  C0E0  F0E4         	movff	eval_poly@d+1,??_eval_poly+1
  1478  000F3E  5014               	movf	?___wmul,w,c
  1479  000F40  0100               	movlb	0	; () banked
  1480  000F42  27E3               	addwf	??_eval_poly& (0+255),f,b
  1481  000F44  5015               	movf	?___wmul+1,w,c
  1482  000F46  0100               	movlb	0	; () banked
  1483  000F48  23E4               	addwfc	(??_eval_poly+1)& (0+255),f,b
  1484  000F4A  C0E3  FFF6         	movff	??_eval_poly,tblptrl
  1485  000F4E  C0E4  FFF7         	movff	??_eval_poly+1,tblptrh
  1486  000F52                     	if	0	;tblptru may be non-zero
  1487  000F52                     	endif
  1488  000F52                     	if	0	;tblptru may be non-zero
  1489  000F52                     	endif
  1490  000F52  0009               	tblrd		*+
  1491  000F54  0100               	movlb	0	; () banked
  1492  000F56  CFF5 F0E5          	movff	tablat,eval_poly@res
  1493  000F5A  0009               	tblrd		*+
  1494  000F5C  0100               	movlb	0	; () banked
  1495  000F5E  CFF5 F0E6          	movff	tablat,eval_poly@res+1
  1496  000F62  000A               	tblrd		*-
  1497  000F64  0100               	movlb	0	; () banked
  1498  000F66  CFF5 F0E7          	movff	tablat,eval_poly@res+2
  1499  000F6A  D046               	goto	l2611
  1500  000F6C                     l2609:
  1501                           
  1502                           ; BSR set to: 0
  1503  000F6C  C0E5  F032         	movff	eval_poly@res,___ftmul@f2
  1504  000F70  C0E6  F033         	movff	eval_poly@res+1,___ftmul@f2+1
  1505  000F74  C0E7  F034         	movff	eval_poly@res+2,___ftmul@f2+2
  1506  000F78  C0DC  F02F         	movff	eval_poly@x,___ftmul@f1
  1507  000F7C  C0DD  F030         	movff	eval_poly@x+1,___ftmul@f1+1
  1508  000F80  C0DE  F031         	movff	eval_poly@x+2,___ftmul@f1+2
  1509  000F84  EC08  F008         	call	___ftmul	;wreg free
  1510  000F88  C02F  F0D0         	movff	?___ftmul,___ftadd@f1
  1511  000F8C  C030  F0D1         	movff	?___ftmul+1,___ftadd@f1+1
  1512  000F90  C031  F0D2         	movff	?___ftmul+2,___ftadd@f1+2
  1513  000F94  0E00               	movlw	0
  1514  000F96  6E17               	movwf	___wmul@multiplicand+1,c
  1515  000F98  0E03               	movlw	3
  1516  000F9A  6E16               	movwf	___wmul@multiplicand,c
  1517  000F9C  0100               	movlb	0	; () banked
  1518  000F9E  07E1               	decf	eval_poly@n& (0+255),f,b
  1519  000FA0  A0D8               	btfss	status,0,c
  1520  000FA2  07E2               	decf	(eval_poly@n+1)& (0+255),f,b
  1521  000FA4  C0E1  F014         	movff	eval_poly@n,___wmul@multiplier
  1522  000FA8  C0E2  F015         	movff	eval_poly@n+1,___wmul@multiplier+1
  1523  000FAC  ECEA  F00B         	call	___wmul	;wreg free
  1524  000FB0  0100               	movlb	0	; () banked
  1525  000FB2  C0DF  F0E3         	movff	eval_poly@d,??_eval_poly
  1526  000FB6  0100               	movlb	0	; () banked
  1527  000FB8  C0E0  F0E4         	movff	eval_poly@d+1,??_eval_poly+1
  1528  000FBC  5014               	movf	?___wmul,w,c
  1529  000FBE  0100               	movlb	0	; () banked
  1530  000FC0  27E3               	addwf	??_eval_poly& (0+255),f,b
  1531  000FC2  5015               	movf	?___wmul+1,w,c
  1532  000FC4  0100               	movlb	0	; () banked
  1533  000FC6  23E4               	addwfc	(??_eval_poly+1)& (0+255),f,b
  1534  000FC8  C0E3  FFF6         	movff	??_eval_poly,tblptrl
  1535  000FCC  C0E4  FFF7         	movff	??_eval_poly+1,tblptrh
  1536  000FD0                     	if	0	;tblptru may be non-zero
  1537  000FD0                     	endif
  1538  000FD0                     	if	0	;tblptru may be non-zero
  1539  000FD0                     	endif
  1540  000FD0  0009               	tblrd		*+
  1541  000FD2  0100               	movlb	0	; () banked
  1542  000FD4  CFF5 F0D3          	movff	tablat,___ftadd@f2
  1543  000FD8  0009               	tblrd		*+
  1544  000FDA  0100               	movlb	0	; () banked
  1545  000FDC  CFF5 F0D4          	movff	tablat,___ftadd@f2+1
  1546  000FE0  000A               	tblrd		*-
  1547  000FE2  0100               	movlb	0	; () banked
  1548  000FE4  CFF5 F0D5          	movff	tablat,___ftadd@f2+2
  1549  000FE8  EC0F  F003         	call	___ftadd	;wreg free
  1550  000FEC  C0D0  F0E5         	movff	?___ftadd,eval_poly@res
  1551  000FF0  C0D1  F0E6         	movff	?___ftadd+1,eval_poly@res+1
  1552  000FF4  C0D2  F0E7         	movff	?___ftadd+2,eval_poly@res+2
  1553  000FF8                     l2611:
  1554  000FF8  0100               	movlb	0	; () banked
  1555  000FFA  51E2               	movf	(eval_poly@n+1)& (0+255),w,b
  1556  000FFC  11E1               	iorwf	eval_poly@n& (0+255),w,b
  1557  000FFE  A4D8               	btfss	status,2,c
  1558  001000  D7B5               	goto	l2609
  1559                           
  1560                           ; BSR set to: 0
  1561  001002  C0E5  F0DC         	movff	eval_poly@res,?_eval_poly
  1562  001006  C0E6  F0DD         	movff	eval_poly@res+1,?_eval_poly+1
  1563  00100A  C0E7  F0DE         	movff	eval_poly@res+2,?_eval_poly+2
  1564                           
  1565                           ; BSR set to: 0
  1566  00100E  0012               	return	
  1567  001010                     __end_of_eval_poly:
  1568                           	opt stack 0
  1569                           tblptru	equ	0xFF8
  1570                           tblptrh	equ	0xFF7
  1571                           tblptrl	equ	0xFF6
  1572                           tablat	equ	0xFF5
  1573                           intcon	equ	0xFF2
  1574                           postinc0	equ	0xFEE
  1575                           wreg	equ	0xFE8
  1576                           postinc2	equ	0xFDE
  1577                           postdec2	equ	0xFDD
  1578                           fsr2h	equ	0xFDA
  1579                           fsr2l	equ	0xFD9
  1580                           status	equ	0xFD8
  1581                           
  1582 ;; *************** function ___ftsub *****************
  1583 ;; Defined at:
  1584 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftsub.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  f1              3   12[BANK0 ] float 
  1587 ;;  f2              3   15[BANK0 ] float 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;		None
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  3   12[BANK0 ] float 
  1592 ;; Registers used:
  1593 ;;		wreg, status,2, status,0, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1599 ;;      Params:         0       6       0       0       0       0       0
  1600 ;;      Locals:         0       0       0       0       0       0       0
  1601 ;;      Temps:          0       0       0       0       0       0       0
  1602 ;;      Totals:         0       6       0       0       0       0       0
  1603 ;;Total ram usage:        6 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; Hardware stack levels required when called:    6
  1606 ;; This function calls:
  1607 ;;		___ftadd
  1608 ;; This function is called by:
  1609 ;;		_Temp_Convert
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           	psect	text6
  1614  001698                     __ptext6:
  1615                           	opt stack 0
  1616  001698                     ___ftsub:
  1617                           	opt stack 23
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;incstack = 0
  1621  001698  0E00               	movlw	0
  1622  00169A  0100               	movlb	0	; () banked
  1623  00169C  1BDF               	xorwf	___ftsub@f2& (0+255),f,b
  1624  00169E  0E00               	movlw	0
  1625  0016A0  0100               	movlb	0	; () banked
  1626  0016A2  1BE0               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  1627  0016A4  0E80               	movlw	128
  1628  0016A6  0100               	movlb	0	; () banked
  1629  0016A8  1BE1               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  1630                           
  1631                           ; BSR set to: 0
  1632  0016AA  C0DC  F0D0         	movff	___ftsub@f1,___ftadd@f1
  1633  0016AE  C0DD  F0D1         	movff	___ftsub@f1+1,___ftadd@f1+1
  1634  0016B2  C0DE  F0D2         	movff	___ftsub@f1+2,___ftadd@f1+2
  1635  0016B6  C0DF  F0D3         	movff	___ftsub@f2,___ftadd@f2
  1636  0016BA  C0E0  F0D4         	movff	___ftsub@f2+1,___ftadd@f2+1
  1637  0016BE  C0E1  F0D5         	movff	___ftsub@f2+2,___ftadd@f2+2
  1638  0016C2  EC0F  F003         	call	___ftadd	;wreg free
  1639  0016C6  C0D0  F0DC         	movff	?___ftadd,?___ftsub
  1640  0016CA  C0D1  F0DD         	movff	?___ftadd+1,?___ftsub+1
  1641  0016CE  C0D2  F0DE         	movff	?___ftadd+2,?___ftsub+2
  1642  0016D2  0012               	return	
  1643  0016D4                     __end_of___ftsub:
  1644                           	opt stack 0
  1645                           tblptru	equ	0xFF8
  1646                           tblptrh	equ	0xFF7
  1647                           tblptrl	equ	0xFF6
  1648                           tablat	equ	0xFF5
  1649                           intcon	equ	0xFF2
  1650                           postinc0	equ	0xFEE
  1651                           wreg	equ	0xFE8
  1652                           postinc2	equ	0xFDE
  1653                           postdec2	equ	0xFDD
  1654                           fsr2h	equ	0xFDA
  1655                           fsr2l	equ	0xFD9
  1656                           status	equ	0xFD8
  1657                           
  1658 ;; *************** function _Temp_Filter *****************
  1659 ;; Defined at:
  1660 ;;		line 36 in file "Tempeture.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;		None
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  x               2   12[BANK0 ] int 
  1665 ;; Return value:  Size  Location     Type
  1666 ;;		None               void
  1667 ;; Registers used:
  1668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1674 ;;      Params:         0       0       0       0       0       0       0
  1675 ;;      Locals:         0       2       0       0       0       0       0
  1676 ;;      Temps:          0       0       0       0       0       0       0
  1677 ;;      Totals:         0       2       0       0       0       0       0
  1678 ;;Total ram usage:        2 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; Hardware stack levels required when called:    6
  1681 ;; This function calls:
  1682 ;;		___ftadd
  1683 ;;		___ftmul
  1684 ;;		___wmul
  1685 ;; This function is called by:
  1686 ;;		_Temp_Convert
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text7
  1691  000ADC                     __ptext7:
  1692                           	opt stack 0
  1693  000ADC                     _Temp_Filter:
  1694                           	opt stack 23
  1695                           
  1696                           ;Tempeture.c: 39: int x;
  1697                           ;Tempeture.c: 40: for(x = 0; x < 10; x++)
  1698                           
  1699                           ;incstack = 0
  1700  000ADC  0E00               	movlw	0
  1701  000ADE  0100               	movlb	0	; () banked
  1702  000AE0  6FDD               	movwf	(Temp_Filter@x+1)& (0+255),b
  1703  000AE2  0E00               	movlw	0
  1704  000AE4  0100               	movlb	0	; () banked
  1705  000AE6  6FDC               	movwf	Temp_Filter@x& (0+255),b
  1706  000AE8                     
  1707                           ; BSR set to: 0
  1708  000AE8  0100               	movlb	0	; () banked
  1709  000AEA  51DD               	movf	(Temp_Filter@x+1)& (0+255),w,b
  1710  000AEC  0A80               	xorlw	128
  1711  000AEE  0F80               	addlw	-128
  1712  000AF0  0E0A               	movlw	10
  1713  000AF2  B4D8               	btfsc	status,2,c
  1714  000AF4  5DDC               	subwf	Temp_Filter@x& (0+255),w,b
  1715  000AF6  B0D8               	btfsc	status,0,c
  1716  000AF8  D06B               	goto	l2649
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;Tempeture.c: 41: {
  1720                           ;Tempeture.c: 42: Temp_DegF[x] = (0.88*TmpTemp_DegF[x] + ((1- 0.88)*PrevTemp_DegF[x]));
  1721                           
  1722                           ; BSR set to: 0
  1723                           
  1724                           ; BSR set to: 0
  1725  000AFA  C0DC  F014         	movff	Temp_Filter@x,___wmul@multiplier
  1726  000AFE  C0DD  F015         	movff	Temp_Filter@x+1,___wmul@multiplier+1
  1727  000B02  0E00               	movlw	0
  1728  000B04  6E17               	movwf	___wmul@multiplicand+1,c
  1729  000B06  0E03               	movlw	3
  1730  000B08  6E16               	movwf	___wmul@multiplicand,c
  1731  000B0A  ECEA  F00B         	call	___wmul	;wreg free
  1732  000B0E  0100               	movlb	0	; () banked
  1733  000B10  0E7E               	movlw	low _Temp_DegF
  1734  000B12  2414               	addwf	?___wmul,w,c
  1735  000B14  6ED9               	movwf	fsr2l,c
  1736  000B16  0100               	movlb	0	; () banked
  1737  000B18  0E00               	movlw	high _Temp_DegF
  1738  000B1A  2015               	addwfc	?___wmul+1,w,c
  1739  000B1C  6EDA               	movwf	fsr2h,c
  1740  000B1E  0E48               	movlw	72
  1741  000B20  6E32               	movwf	___ftmul@f2,c
  1742  000B22  0E61               	movlw	97
  1743  000B24  6E33               	movwf	___ftmul@f2+1,c
  1744  000B26  0E3F               	movlw	63
  1745  000B28  6E34               	movwf	___ftmul@f2+2,c
  1746  000B2A  C0DC  F014         	movff	Temp_Filter@x,___wmul@multiplier
  1747  000B2E  C0DD  F015         	movff	Temp_Filter@x+1,___wmul@multiplier+1
  1748  000B32  0E00               	movlw	0
  1749  000B34  6E17               	movwf	___wmul@multiplicand+1,c
  1750  000B36  0E03               	movlw	3
  1751  000B38  6E16               	movwf	___wmul@multiplicand,c
  1752  000B3A  ECEA  F00B         	call	___wmul	;wreg free
  1753  000B3E  0101               	movlb	1	; () banked
  1754  000B40  0EAA               	movlw	low _TmpTemp_DegF
  1755  000B42  2414               	addwf	?___wmul,w,c
  1756  000B44  6EE1               	movwf	fsr1l,c
  1757  000B46  0101               	movlb	1	; () banked
  1758  000B48  0E01               	movlw	high _TmpTemp_DegF
  1759  000B4A  2015               	addwfc	?___wmul+1,w,c
  1760  000B4C  6EE2               	movwf	fsr1h,c
  1761  000B4E  CFE6 F02F          	movff	postinc1,___ftmul@f1
  1762  000B52  CFE6 F030          	movff	postinc1,___ftmul@f1+1
  1763  000B56  CFE5 F031          	movff	postdec1,___ftmul@f1+2
  1764  000B5A  EC08  F008         	call	___ftmul	;wreg free
  1765  000B5E  C02F  F0D0         	movff	?___ftmul,___ftadd@f1
  1766  000B62  C030  F0D1         	movff	?___ftmul+1,___ftadd@f1+1
  1767  000B66  C031  F0D2         	movff	?___ftmul+2,___ftadd@f1+2
  1768  000B6A  0EC3               	movlw	195
  1769  000B6C  6E32               	movwf	___ftmul@f2,c
  1770  000B6E  0EF5               	movlw	245
  1771  000B70  6E33               	movwf	___ftmul@f2+1,c
  1772  000B72  0E3D               	movlw	61
  1773  000B74  6E34               	movwf	___ftmul@f2+2,c
  1774  000B76  0E00               	movlw	0
  1775  000B78  6E17               	movwf	___wmul@multiplicand+1,c
  1776  000B7A  0E03               	movlw	3
  1777  000B7C  6E16               	movwf	___wmul@multiplicand,c
  1778  000B7E  C0DC  F014         	movff	Temp_Filter@x,___wmul@multiplier
  1779  000B82  C0DD  F015         	movff	Temp_Filter@x+1,___wmul@multiplier+1
  1780  000B86  ECEA  F00B         	call	___wmul	;wreg free
  1781  000B8A  0101               	movlb	1	; () banked
  1782  000B8C  0E5A               	movlw	low _PrevTemp_DegF
  1783  000B8E  2414               	addwf	?___wmul,w,c
  1784  000B90  6EE1               	movwf	fsr1l,c
  1785  000B92  0101               	movlb	1	; () banked
  1786  000B94  0E01               	movlw	high _PrevTemp_DegF
  1787  000B96  2015               	addwfc	?___wmul+1,w,c
  1788  000B98  6EE2               	movwf	fsr1h,c
  1789  000B9A  CFE6 F02F          	movff	postinc1,___ftmul@f1
  1790  000B9E  CFE6 F030          	movff	postinc1,___ftmul@f1+1
  1791  000BA2  CFE5 F031          	movff	postdec1,___ftmul@f1+2
  1792  000BA6  EC08  F008         	call	___ftmul	;wreg free
  1793  000BAA  C02F  F0D3         	movff	?___ftmul,___ftadd@f2
  1794  000BAE  C030  F0D4         	movff	?___ftmul+1,___ftadd@f2+1
  1795  000BB2  C031  F0D5         	movff	?___ftmul+2,___ftadd@f2+2
  1796  000BB6  EC0F  F003         	call	___ftadd	;wreg free
  1797  000BBA  C0D0  FFDE         	movff	?___ftadd,postinc2
  1798  000BBE  C0D1  FFDE         	movff	?___ftadd+1,postinc2
  1799  000BC2  C0D2  FFDD         	movff	?___ftadd+2,postdec2
  1800  000BC6  52DD               	movf	postdec2,f,c
  1801  000BC8  0100               	movlb	0	; () banked
  1802  000BCA  4BDC               	infsnz	Temp_Filter@x& (0+255),f,b
  1803  000BCC  2BDD               	incf	(Temp_Filter@x+1)& (0+255),f,b
  1804  000BCE  D78C               	goto	L3
  1805  000BD0                     l2649:
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;Tempeture.c: 43: }
  1809                           ;Tempeture.c: 44: for(x = 0; x < 10; x++)
  1810  000BD0  0E00               	movlw	0
  1811  000BD2  0100               	movlb	0	; () banked
  1812  000BD4  6FDD               	movwf	(Temp_Filter@x+1)& (0+255),b
  1813  000BD6  0E00               	movlw	0
  1814  000BD8  0100               	movlb	0	; () banked
  1815  000BDA  6FDC               	movwf	Temp_Filter@x& (0+255),b
  1816  000BDC                     
  1817                           ; BSR set to: 0
  1818  000BDC  0100               	movlb	0	; () banked
  1819  000BDE  51DD               	movf	(Temp_Filter@x+1)& (0+255),w,b
  1820  000BE0  0A80               	xorlw	128
  1821  000BE2  0F80               	addlw	-128
  1822  000BE4  0E0A               	movlw	10
  1823  000BE6  B4D8               	btfsc	status,2,c
  1824  000BE8  5DDC               	subwf	Temp_Filter@x& (0+255),w,b
  1825  000BEA  B0D8               	btfsc	status,0,c
  1826  000BEC  0012               	return	
  1827                           
  1828                           ; BSR set to: 0
  1829                           ;Tempeture.c: 45: {
  1830                           ;Tempeture.c: 46: PrevTemp_DegF[x] = Temp_DegF[x];
  1831                           
  1832                           ; BSR set to: 0
  1833                           
  1834                           ; BSR set to: 0
  1835  000BEE  C0DC  F014         	movff	Temp_Filter@x,___wmul@multiplier
  1836  000BF2  C0DD  F015         	movff	Temp_Filter@x+1,___wmul@multiplier+1
  1837  000BF6  0E00               	movlw	0
  1838  000BF8  6E17               	movwf	___wmul@multiplicand+1,c
  1839  000BFA  0E03               	movlw	3
  1840  000BFC  6E16               	movwf	___wmul@multiplicand,c
  1841  000BFE  ECEA  F00B         	call	___wmul	;wreg free
  1842  000C02  0100               	movlb	0	; () banked
  1843  000C04  0E7E               	movlw	low _Temp_DegF
  1844  000C06  2414               	addwf	?___wmul,w,c
  1845  000C08  6ED9               	movwf	fsr2l,c
  1846  000C0A  0100               	movlb	0	; () banked
  1847  000C0C  0E00               	movlw	high _Temp_DegF
  1848  000C0E  2015               	addwfc	?___wmul+1,w,c
  1849  000C10  6EDA               	movwf	fsr2h,c
  1850  000C12  C0DC  F014         	movff	Temp_Filter@x,___wmul@multiplier
  1851  000C16  C0DD  F015         	movff	Temp_Filter@x+1,___wmul@multiplier+1
  1852  000C1A  0E00               	movlw	0
  1853  000C1C  6E17               	movwf	___wmul@multiplicand+1,c
  1854  000C1E  0E03               	movlw	3
  1855  000C20  6E16               	movwf	___wmul@multiplicand,c
  1856  000C22  ECEA  F00B         	call	___wmul	;wreg free
  1857  000C26  0101               	movlb	1	; () banked
  1858  000C28  0E5A               	movlw	low _PrevTemp_DegF
  1859  000C2A  2414               	addwf	?___wmul,w,c
  1860  000C2C  6EE1               	movwf	fsr1l,c
  1861  000C2E  0101               	movlb	1	; () banked
  1862  000C30  0E01               	movlw	high _PrevTemp_DegF
  1863  000C32  2015               	addwfc	?___wmul+1,w,c
  1864  000C34  6EE2               	movwf	fsr1h,c
  1865  000C36  CFDE FFE6          	movff	postinc2,postinc1
  1866  000C3A  CFDE FFE6          	movff	postinc2,postinc1
  1867  000C3E  CFDE FFE5          	movff	postinc2,postdec1
  1868  000C42  52E5               	movf	postdec1,f,c
  1869                           
  1870                           ; BSR set to: 1
  1871  000C44  0100               	movlb	0	; () banked
  1872  000C46  4BDC               	infsnz	Temp_Filter@x& (0+255),f,b
  1873  000C48  2BDD               	incf	(Temp_Filter@x+1)& (0+255),f,b
  1874  000C4A  D7C8               	goto	L4
  1875  000C4C                     __end_of_Temp_Filter:
  1876                           	opt stack 0
  1877                           tblptru	equ	0xFF8
  1878                           tblptrh	equ	0xFF7
  1879                           tblptrl	equ	0xFF6
  1880                           tablat	equ	0xFF5
  1881                           intcon	equ	0xFF2
  1882                           postinc0	equ	0xFEE
  1883                           wreg	equ	0xFE8
  1884                           postinc1	equ	0xFE6
  1885                           postdec1	equ	0xFE5
  1886                           fsr1h	equ	0xFE2
  1887                           fsr1l	equ	0xFE1
  1888                           postinc2	equ	0xFDE
  1889                           postdec2	equ	0xFDD
  1890                           fsr2h	equ	0xFDA
  1891                           fsr2l	equ	0xFD9
  1892                           status	equ	0xFD8
  1893                           
  1894 ;; *************** function _SYSTEM_Initialize *****************
  1895 ;; Defined at:
  1896 ;;		line 112 in file "mcc_generated_files/mcc.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;		None
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;		None
  1901 ;; Return value:  Size  Location     Type
  1902 ;;		None               void
  1903 ;; Registers used:
  1904 ;;		wreg, status,2, cstack
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1910 ;;      Params:         0       0       0       0       0       0       0
  1911 ;;      Locals:         0       0       0       0       0       0       0
  1912 ;;      Temps:          0       0       0       0       0       0       0
  1913 ;;      Totals:         0       0       0       0       0       0       0
  1914 ;;Total ram usage:        0 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; Hardware stack levels required when called:    6
  1917 ;; This function calls:
  1918 ;;		_ADC_Initialize
  1919 ;;		_EUSART1_Initialize
  1920 ;;		_INTERRUPT_Initialize
  1921 ;;		_OSCILLATOR_Initialize
  1922 ;;		_PIN_MANAGER_Initialize
  1923 ;;		_TMR1_Initialize
  1924 ;; This function is called by:
  1925 ;;		_main
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text8
  1930  00181C                     __ptext8:
  1931                           	opt stack 0
  1932  00181C                     _SYSTEM_Initialize:
  1933                           	opt stack 24
  1934                           
  1935                           ;mcc.c: 114: OSCILLATOR_Initialize();
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;incstack = 0
  1939  00181C  EC56  F00C         	call	_OSCILLATOR_Initialize	;wreg free
  1940                           
  1941                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1942  001820  EC01  F00B         	call	_PIN_MANAGER_Initialize	;wreg free
  1943                           
  1944                           ;mcc.c: 116: INTERRUPT_Initialize();
  1945  001824  EC5D  F00C         	call	_INTERRUPT_Initialize	;wreg free
  1946                           
  1947                           ;mcc.c: 117: ADC_Initialize();
  1948  001828  EC28  F00C         	call	_ADC_Initialize	;wreg free
  1949                           
  1950                           ;mcc.c: 118: EUSART1_Initialize();
  1951  00182C  EC6A  F00B         	call	_EUSART1_Initialize	;wreg free
  1952                           
  1953                           ;mcc.c: 119: TMR1_Initialize();
  1954  001830  ECFD  F00B         	call	_TMR1_Initialize	;wreg free
  1955  001834  0012               	return	
  1956  001836                     __end_of_SYSTEM_Initialize:
  1957                           	opt stack 0
  1958                           tblptru	equ	0xFF8
  1959                           tblptrh	equ	0xFF7
  1960                           tblptrl	equ	0xFF6
  1961                           tablat	equ	0xFF5
  1962                           intcon	equ	0xFF2
  1963                           postinc0	equ	0xFEE
  1964                           wreg	equ	0xFE8
  1965                           postinc1	equ	0xFE6
  1966                           postdec1	equ	0xFE5
  1967                           fsr1h	equ	0xFE2
  1968                           fsr1l	equ	0xFE1
  1969                           postinc2	equ	0xFDE
  1970                           postdec2	equ	0xFDD
  1971                           fsr2h	equ	0xFDA
  1972                           fsr2l	equ	0xFD9
  1973                           status	equ	0xFD8
  1974                           
  1975 ;; *************** function _TMR1_Initialize *****************
  1976 ;; Defined at:
  1977 ;;		line 21 in file "mcc_generated_files/tmr1.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;		None
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;		None
  1982 ;; Return value:  Size  Location     Type
  1983 ;;		None               void
  1984 ;; Registers used:
  1985 ;;		wreg, status,2, cstack
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1991 ;;      Params:         0       0       0       0       0       0       0
  1992 ;;      Locals:         0       0       0       0       0       0       0
  1993 ;;      Temps:          0       0       0       0       0       0       0
  1994 ;;      Totals:         0       0       0       0       0       0       0
  1995 ;;Total ram usage:        0 bytes
  1996 ;; Hardware stack levels used:    1
  1997 ;; Hardware stack levels required when called:    5
  1998 ;; This function calls:
  1999 ;;		_TMR1_StartTimer
  2000 ;; This function is called by:
  2001 ;;		_SYSTEM_Initialize
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           	psect	text9
  2006  0017FA                     __ptext9:
  2007                           	opt stack 0
  2008  0017FA                     _TMR1_Initialize:
  2009                           	opt stack 24
  2010                           
  2011                           ;tmr1.c: 26: T1CON = 0x34;
  2012                           
  2013                           ;incstack = 0
  2014  0017FA  0E34               	movlw	52
  2015  0017FC  6ECD               	movwf	4045,c	;volatile
  2016                           
  2017                           ;tmr1.c: 29: T1GCON = 0x00;
  2018  0017FE  0E00               	movlw	0
  2019  001800  6ECC               	movwf	4044,c	;volatile
  2020                           
  2021                           ;tmr1.c: 32: TMR1H = 0x0B;
  2022  001802  0E0B               	movlw	11
  2023  001804  6ECF               	movwf	4047,c	;volatile
  2024                           
  2025                           ;tmr1.c: 35: TMR1L = 0xDC;
  2026  001806  0EDC               	movlw	220
  2027  001808  6ECE               	movwf	4046,c	;volatile
  2028                           
  2029                           ;tmr1.c: 38: timer1ReloadVal=TMR1;
  2030  00180A  CFCE F049          	movff	4046,_timer1ReloadVal	;volatile
  2031  00180E  CFCF F04A          	movff	4047,_timer1ReloadVal+1	;volatile
  2032                           
  2033                           ;tmr1.c: 41: PIR1bits.TMR1IF = 0;
  2034  001812  909E               	bcf	3998,0,c	;volatile
  2035                           
  2036                           ;tmr1.c: 44: PIE1bits.TMR1IE = 1;
  2037  001814  809D               	bsf	3997,0,c	;volatile
  2038                           
  2039                           ;tmr1.c: 47: TMR1_StartTimer();
  2040  001816  EC63  F00C         	call	_TMR1_StartTimer	;wreg free
  2041  00181A  0012               	return	
  2042  00181C                     __end_of_TMR1_Initialize:
  2043                           	opt stack 0
  2044                           tblptru	equ	0xFF8
  2045                           tblptrh	equ	0xFF7
  2046                           tblptrl	equ	0xFF6
  2047                           tablat	equ	0xFF5
  2048                           intcon	equ	0xFF2
  2049                           postinc0	equ	0xFEE
  2050                           wreg	equ	0xFE8
  2051                           postinc1	equ	0xFE6
  2052                           postdec1	equ	0xFE5
  2053                           fsr1h	equ	0xFE2
  2054                           fsr1l	equ	0xFE1
  2055                           postinc2	equ	0xFDE
  2056                           postdec2	equ	0xFDD
  2057                           fsr2h	equ	0xFDA
  2058                           fsr2l	equ	0xFD9
  2059                           status	equ	0xFD8
  2060                           
  2061 ;; *************** function _TMR1_StartTimer *****************
  2062 ;; Defined at:
  2063 ;;		line 50 in file "mcc_generated_files/tmr1.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;		None
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;		None               void
  2070 ;; Registers used:
  2071 ;;		None
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2077 ;;      Params:         0       0       0       0       0       0       0
  2078 ;;      Locals:         0       0       0       0       0       0       0
  2079 ;;      Temps:          0       0       0       0       0       0       0
  2080 ;;      Totals:         0       0       0       0       0       0       0
  2081 ;;Total ram usage:        0 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:    4
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_TMR1_Initialize
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text10
  2092  0018C6                     __ptext10:
  2093                           	opt stack 0
  2094  0018C6                     _TMR1_StartTimer:
  2095                           	opt stack 24
  2096                           
  2097                           ;tmr1.c: 53: T1CONbits.TMR1ON = 1;
  2098                           
  2099                           ;incstack = 0
  2100  0018C6  80CD               	bsf	4045,0,c	;volatile
  2101  0018C8  0012               	return	
  2102  0018CA                     __end_of_TMR1_StartTimer:
  2103                           	opt stack 0
  2104                           tblptru	equ	0xFF8
  2105                           tblptrh	equ	0xFF7
  2106                           tblptrl	equ	0xFF6
  2107                           tablat	equ	0xFF5
  2108                           intcon	equ	0xFF2
  2109                           postinc0	equ	0xFEE
  2110                           wreg	equ	0xFE8
  2111                           postinc1	equ	0xFE6
  2112                           postdec1	equ	0xFE5
  2113                           fsr1h	equ	0xFE2
  2114                           fsr1l	equ	0xFE1
  2115                           postinc2	equ	0xFDE
  2116                           postdec2	equ	0xFDD
  2117                           fsr2h	equ	0xFDA
  2118                           fsr2l	equ	0xFD9
  2119                           status	equ	0xFD8
  2120                           
  2121 ;; *************** function _PIN_MANAGER_Initialize *****************
  2122 ;; Defined at:
  2123 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;		None               void
  2130 ;; Registers used:
  2131 ;;		wreg, status,2
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2137 ;;      Params:         0       0       0       0       0       0       0
  2138 ;;      Locals:         0       0       0       0       0       0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0
  2140 ;;      Totals:         0       0       0       0       0       0       0
  2141 ;;Total ram usage:        0 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; Hardware stack levels required when called:    4
  2144 ;; This function calls:
  2145 ;;		Nothing
  2146 ;; This function is called by:
  2147 ;;		_SYSTEM_Initialize
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           	psect	text11
  2152  001602                     __ptext11:
  2153                           	opt stack 0
  2154  001602                     _PIN_MANAGER_Initialize:
  2155                           	opt stack 25
  2156                           
  2157                           ;pin_manager.c: 52: LATA = 0x00;
  2158                           
  2159                           ;incstack = 0
  2160  001602  0E00               	movlw	0
  2161  001604  6E89               	movwf	3977,c	;volatile
  2162                           
  2163                           ;pin_manager.c: 53: TRISA = 0x2F;
  2164  001606  0E2F               	movlw	47
  2165  001608  6E92               	movwf	3986,c	;volatile
  2166                           
  2167                           ;pin_manager.c: 54: ANSELA = 0x2F;
  2168  00160A  0E2F               	movlw	47
  2169  00160C  010F               	movlb	15	; () banked
  2170  00160E  6F38               	movwf	56,b	;volatile
  2171                           
  2172                           ;pin_manager.c: 56: LATB = 0x00;
  2173  001610  0E00               	movlw	0
  2174  001612  6E8A               	movwf	3978,c	;volatile
  2175                           
  2176                           ;pin_manager.c: 57: TRISB = 0xF8;
  2177  001614  0EF8               	movlw	248
  2178  001616  6E93               	movwf	3987,c	;volatile
  2179                           
  2180                           ;pin_manager.c: 58: ANSELB = 0x38;
  2181  001618  0E38               	movlw	56
  2182  00161A  010F               	movlb	15	; () banked
  2183  00161C  6F39               	movwf	57,b	;volatile
  2184                           
  2185                           ;pin_manager.c: 59: WPUB = 0x00;
  2186  00161E  0E00               	movlw	0
  2187  001620  6E61               	movwf	3937,c	;volatile
  2188                           
  2189                           ;pin_manager.c: 61: LATC = 0x00;
  2190  001622  0E00               	movlw	0
  2191  001624  6E8B               	movwf	3979,c	;volatile
  2192                           
  2193                           ;pin_manager.c: 62: TRISC = 0xD6;
  2194  001626  0ED6               	movlw	214
  2195  001628  6E94               	movwf	3988,c	;volatile
  2196                           
  2197                           ;pin_manager.c: 63: ANSELC = 0x14;
  2198  00162A  0E14               	movlw	20
  2199  00162C  010F               	movlb	15	; () banked
  2200  00162E  6F3A               	movwf	58,b	;volatile
  2201                           
  2202                           ;pin_manager.c: 65: LATD = 0x00;
  2203  001630  0E00               	movlw	0
  2204  001632  6E8C               	movwf	3980,c	;volatile
  2205                           
  2206                           ;pin_manager.c: 66: TRISD = 0x03;
  2207  001634  0E03               	movlw	3
  2208  001636  6E95               	movwf	3989,c	;volatile
  2209                           
  2210                           ;pin_manager.c: 67: ANSELD = 0x03;
  2211  001638  0E03               	movlw	3
  2212  00163A  010F               	movlb	15	; () banked
  2213  00163C  6F3B               	movwf	59,b	;volatile
  2214                           
  2215                           ;pin_manager.c: 69: LATE = 0x00;
  2216  00163E  0E00               	movlw	0
  2217  001640  6E8D               	movwf	3981,c	;volatile
  2218                           
  2219                           ;pin_manager.c: 70: TRISE = 0x07;
  2220  001642  0E07               	movlw	7
  2221  001644  6E96               	movwf	3990,c	;volatile
  2222                           
  2223                           ;pin_manager.c: 71: ANSELE = 0x07;
  2224  001646  0E07               	movlw	7
  2225  001648  010F               	movlb	15	; () banked
  2226  00164A  6F3C               	movwf	60,b	;volatile
  2227                           
  2228                           ; BSR set to: 15
  2229                           ;pin_manager.c: 73: INTCON2bits.nRBPU = 0x01;
  2230  00164C  8EF1               	bsf	intcon2,7,c	;volatile
  2231                           
  2232                           ; BSR set to: 15
  2233  00164E  0012               	return	
  2234  001650                     __end_of_PIN_MANAGER_Initialize:
  2235                           	opt stack 0
  2236                           tblptru	equ	0xFF8
  2237                           tblptrh	equ	0xFF7
  2238                           tblptrl	equ	0xFF6
  2239                           tablat	equ	0xFF5
  2240                           intcon	equ	0xFF2
  2241                           intcon2	equ	0xFF1
  2242                           postinc0	equ	0xFEE
  2243                           wreg	equ	0xFE8
  2244                           postinc1	equ	0xFE6
  2245                           postdec1	equ	0xFE5
  2246                           fsr1h	equ	0xFE2
  2247                           fsr1l	equ	0xFE1
  2248                           postinc2	equ	0xFDE
  2249                           postdec2	equ	0xFDD
  2250                           fsr2h	equ	0xFDA
  2251                           fsr2l	equ	0xFD9
  2252                           status	equ	0xFD8
  2253                           
  2254 ;; *************** function _OSCILLATOR_Initialize *****************
  2255 ;; Defined at:
  2256 ;;		line 122 in file "mcc_generated_files/mcc.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;		None
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;		None
  2261 ;; Return value:  Size  Location     Type
  2262 ;;		None               void
  2263 ;; Registers used:
  2264 ;;		wreg, status,2
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2270 ;;      Params:         0       0       0       0       0       0       0
  2271 ;;      Locals:         0       0       0       0       0       0       0
  2272 ;;      Temps:          0       0       0       0       0       0       0
  2273 ;;      Totals:         0       0       0       0       0       0       0
  2274 ;;Total ram usage:        0 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:    4
  2277 ;; This function calls:
  2278 ;;		Nothing
  2279 ;; This function is called by:
  2280 ;;		_SYSTEM_Initialize
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           	psect	text12
  2285  0018AC                     __ptext12:
  2286                           	opt stack 0
  2287  0018AC                     _OSCILLATOR_Initialize:
  2288                           	opt stack 25
  2289                           
  2290                           ;mcc.c: 125: OSCCON = 0x62;
  2291                           
  2292                           ; BSR set to: 15
  2293                           ;incstack = 0
  2294  0018AC  0E62               	movlw	98
  2295  0018AE  6ED3               	movwf	4051,c	;volatile
  2296                           
  2297                           ;mcc.c: 127: OSCCON2 = 0x04;
  2298  0018B0  0E04               	movlw	4
  2299  0018B2  6ED2               	movwf	4050,c	;volatile
  2300                           
  2301                           ;mcc.c: 129: OSCTUNE = 0x00;
  2302  0018B4  0E00               	movlw	0
  2303  0018B6  6E9B               	movwf	3995,c	;volatile
  2304  0018B8  0012               	return	
  2305  0018BA                     __end_of_OSCILLATOR_Initialize:
  2306                           	opt stack 0
  2307                           tblptru	equ	0xFF8
  2308                           tblptrh	equ	0xFF7
  2309                           tblptrl	equ	0xFF6
  2310                           tablat	equ	0xFF5
  2311                           intcon	equ	0xFF2
  2312                           intcon2	equ	0xFF1
  2313                           postinc0	equ	0xFEE
  2314                           wreg	equ	0xFE8
  2315                           postinc1	equ	0xFE6
  2316                           postdec1	equ	0xFE5
  2317                           fsr1h	equ	0xFE2
  2318                           fsr1l	equ	0xFE1
  2319                           postinc2	equ	0xFDE
  2320                           postdec2	equ	0xFDD
  2321                           fsr2h	equ	0xFDA
  2322                           fsr2l	equ	0xFD9
  2323                           status	equ	0xFD8
  2324                           
  2325 ;; *************** function _INTERRUPT_Initialize *****************
  2326 ;; Defined at:
  2327 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;		None
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;		None
  2332 ;; Return value:  Size  Location     Type
  2333 ;;		None               void
  2334 ;; Registers used:
  2335 ;;		None
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2341 ;;      Params:         0       0       0       0       0       0       0
  2342 ;;      Locals:         0       0       0       0       0       0       0
  2343 ;;      Temps:          0       0       0       0       0       0       0
  2344 ;;      Totals:         0       0       0       0       0       0       0
  2345 ;;Total ram usage:        0 bytes
  2346 ;; Hardware stack levels used:    1
  2347 ;; Hardware stack levels required when called:    4
  2348 ;; This function calls:
  2349 ;;		Nothing
  2350 ;; This function is called by:
  2351 ;;		_SYSTEM_Initialize
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           	psect	text13
  2356  0018BA                     __ptext13:
  2357                           	opt stack 0
  2358  0018BA                     _INTERRUPT_Initialize:
  2359                           	opt stack 25
  2360                           
  2361                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  2362                           
  2363                           ;incstack = 0
  2364  0018BA  9ED0               	bcf	4048,7,c	;volatile
  2365                           
  2366                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
  2367  0018BC  9A9F               	bcf	3999,5,c	;volatile
  2368                           
  2369                           ;interrupt_manager.c: 62: IPR1bits.ADIP = 0;
  2370  0018BE  9C9F               	bcf	3999,6,c	;volatile
  2371                           
  2372                           ;interrupt_manager.c: 64: IPR1bits.TX1IP = 0;
  2373  0018C0  989F               	bcf	3999,4,c	;volatile
  2374                           
  2375                           ;interrupt_manager.c: 66: IPR1bits.TMR1IP = 0;
  2376  0018C2  909F               	bcf	3999,0,c	;volatile
  2377  0018C4  0012               	return	
  2378  0018C6                     __end_of_INTERRUPT_Initialize:
  2379                           	opt stack 0
  2380                           tblptru	equ	0xFF8
  2381                           tblptrh	equ	0xFF7
  2382                           tblptrl	equ	0xFF6
  2383                           tablat	equ	0xFF5
  2384                           intcon	equ	0xFF2
  2385                           intcon2	equ	0xFF1
  2386                           postinc0	equ	0xFEE
  2387                           wreg	equ	0xFE8
  2388                           postinc1	equ	0xFE6
  2389                           postdec1	equ	0xFE5
  2390                           fsr1h	equ	0xFE2
  2391                           fsr1l	equ	0xFE1
  2392                           postinc2	equ	0xFDE
  2393                           postdec2	equ	0xFDD
  2394                           fsr2h	equ	0xFDA
  2395                           fsr2l	equ	0xFD9
  2396                           status	equ	0xFD8
  2397                           
  2398 ;; *************** function _EUSART1_Initialize *****************
  2399 ;; Defined at:
  2400 ;;		line 76 in file "mcc_generated_files/eusart1.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;		None
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;		None
  2405 ;; Return value:  Size  Location     Type
  2406 ;;		None               void
  2407 ;; Registers used:
  2408 ;;		wreg, status,2
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2414 ;;      Params:         0       0       0       0       0       0       0
  2415 ;;      Locals:         0       0       0       0       0       0       0
  2416 ;;      Temps:          0       0       0       0       0       0       0
  2417 ;;      Totals:         0       0       0       0       0       0       0
  2418 ;;Total ram usage:        0 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; Hardware stack levels required when called:    4
  2421 ;; This function calls:
  2422 ;;		Nothing
  2423 ;; This function is called by:
  2424 ;;		_SYSTEM_Initialize
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           	psect	text14
  2429  0016D4                     __ptext14:
  2430                           	opt stack 0
  2431  0016D4                     _EUSART1_Initialize:
  2432                           	opt stack 25
  2433                           
  2434                           ;eusart1.c: 79: PIE1bits.RC1IE = 0;
  2435                           
  2436                           ;incstack = 0
  2437  0016D4  9A9D               	bcf	3997,5,c	;volatile
  2438                           
  2439                           ;eusart1.c: 80: PIE1bits.TX1IE = 0;
  2440  0016D6  989D               	bcf	3997,4,c	;volatile
  2441                           
  2442                           ;eusart1.c: 85: BAUD1CON = 0x48;
  2443  0016D8  0E48               	movlw	72
  2444  0016DA  6EB8               	movwf	4024,c	;volatile
  2445                           
  2446                           ;eusart1.c: 88: RC1STA = 0x98;
  2447  0016DC  0E98               	movlw	152
  2448  0016DE  6EAB               	movwf	4011,c	;volatile
  2449                           
  2450                           ;eusart1.c: 91: TX1STA = 0x26;
  2451  0016E0  0E26               	movlw	38
  2452  0016E2  6EAC               	movwf	4012,c	;volatile
  2453                           
  2454                           ;eusart1.c: 94: SPBRG1 = 0x67;
  2455  0016E4  0E67               	movlw	103
  2456  0016E6  6EAF               	movwf	4015,c	;volatile
  2457                           
  2458                           ;eusart1.c: 97: SPBRGH1 = 0x00;
  2459  0016E8  0E00               	movlw	0
  2460  0016EA  6EB0               	movwf	4016,c	;volatile
  2461                           
  2462                           ;eusart1.c: 100: TXREG1 = 0x00;
  2463  0016EC  0E00               	movlw	0
  2464  0016EE  6EAD               	movwf	4013,c	;volatile
  2465                           
  2466                           ;eusart1.c: 103: RCREG1 = 0x00;
  2467  0016F0  0E00               	movlw	0
  2468  0016F2  6EAE               	movwf	4014,c	;volatile
  2469                           
  2470                           ;eusart1.c: 107: eusart1TxHead = 0;
  2471  0016F4  0E00               	movlw	0
  2472  0016F6  6E47               	movwf	_eusart1TxHead,c
  2473                           
  2474                           ;eusart1.c: 108: eusart1TxTail = 0;
  2475  0016F8  0E00               	movlw	0
  2476  0016FA  6E48               	movwf	_eusart1TxTail,c
  2477                           
  2478                           ;eusart1.c: 109: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  2479  0016FC  0E08               	movlw	8
  2480  0016FE  6E4B               	movwf	_eusart1TxBufferRemaining,c	;volatile
  2481                           
  2482                           ;eusart1.c: 111: eusart1RxHead = 0;
  2483  001700  0E00               	movlw	0
  2484  001702  6E45               	movwf	_eusart1RxHead,c
  2485                           
  2486                           ;eusart1.c: 112: eusart1RxTail = 0;
  2487  001704  0E00               	movlw	0
  2488  001706  6E46               	movwf	_eusart1RxTail,c
  2489                           
  2490                           ;eusart1.c: 113: eusart1RxCount = 0;
  2491  001708  0E00               	movlw	0
  2492  00170A  6E44               	movwf	_eusart1RxCount,c	;volatile
  2493                           
  2494                           ;eusart1.c: 116: PIE1bits.RC1IE = 1;
  2495  00170C  8A9D               	bsf	3997,5,c	;volatile
  2496  00170E  0012               	return	
  2497  001710                     __end_of_EUSART1_Initialize:
  2498                           	opt stack 0
  2499                           tblptru	equ	0xFF8
  2500                           tblptrh	equ	0xFF7
  2501                           tblptrl	equ	0xFF6
  2502                           tablat	equ	0xFF5
  2503                           intcon	equ	0xFF2
  2504                           intcon2	equ	0xFF1
  2505                           postinc0	equ	0xFEE
  2506                           wreg	equ	0xFE8
  2507                           postinc1	equ	0xFE6
  2508                           postdec1	equ	0xFE5
  2509                           fsr1h	equ	0xFE2
  2510                           fsr1l	equ	0xFE1
  2511                           postinc2	equ	0xFDE
  2512                           postdec2	equ	0xFDD
  2513                           fsr2h	equ	0xFDA
  2514                           fsr2l	equ	0xFD9
  2515                           status	equ	0xFD8
  2516                           
  2517 ;; *************** function _ADC_Initialize *****************
  2518 ;; Defined at:
  2519 ;;		line 59 in file "mcc_generated_files/adc.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;		None
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;		None
  2524 ;; Return value:  Size  Location     Type
  2525 ;;		None               void
  2526 ;; Registers used:
  2527 ;;		wreg, status,2
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2533 ;;      Params:         0       0       0       0       0       0       0
  2534 ;;      Locals:         0       0       0       0       0       0       0
  2535 ;;      Temps:          0       0       0       0       0       0       0
  2536 ;;      Totals:         0       0       0       0       0       0       0
  2537 ;;Total ram usage:        0 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    4
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_SYSTEM_Initialize
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           	psect	text15
  2548  001850                     __ptext15:
  2549                           	opt stack 0
  2550  001850                     _ADC_Initialize:
  2551                           	opt stack 25
  2552                           
  2553                           ;adc.c: 64: ADCON0 = 0x01;
  2554                           
  2555                           ;incstack = 0
  2556  001850  0E01               	movlw	1
  2557  001852  6EC2               	movwf	4034,c	;volatile
  2558                           
  2559                           ;adc.c: 67: ADCON1 = 0x81;
  2560  001854  0E81               	movlw	129
  2561  001856  6EC1               	movwf	4033,c	;volatile
  2562                           
  2563                           ;adc.c: 70: ADCON2 = 0x0A;
  2564  001858  0E0A               	movlw	10
  2565  00185A  6EC0               	movwf	4032,c	;volatile
  2566                           
  2567                           ;adc.c: 73: ADRESL = 0x00;
  2568  00185C  0E00               	movlw	0
  2569  00185E  6EC3               	movwf	4035,c	;volatile
  2570                           
  2571                           ;adc.c: 76: ADRESH = 0x00;
  2572  001860  0E00               	movlw	0
  2573  001862  6EC4               	movwf	4036,c	;volatile
  2574                           
  2575                           ;adc.c: 79: PIE1bits.ADIE = 1;
  2576  001864  8C9D               	bsf	3997,6,c	;volatile
  2577  001866  0012               	return	
  2578  001868                     __end_of_ADC_Initialize:
  2579                           	opt stack 0
  2580                           tblptru	equ	0xFF8
  2581                           tblptrh	equ	0xFF7
  2582                           tblptrl	equ	0xFF6
  2583                           tablat	equ	0xFF5
  2584                           intcon	equ	0xFF2
  2585                           intcon2	equ	0xFF1
  2586                           postinc0	equ	0xFEE
  2587                           wreg	equ	0xFE8
  2588                           postinc1	equ	0xFE6
  2589                           postdec1	equ	0xFE5
  2590                           fsr1h	equ	0xFE2
  2591                           fsr1l	equ	0xFE1
  2592                           postinc2	equ	0xFDE
  2593                           postdec2	equ	0xFDD
  2594                           fsr2h	equ	0xFDA
  2595                           fsr2l	equ	0xFD9
  2596                           status	equ	0xFD8
  2597                           
  2598 ;; *************** function _Battery_Fault *****************
  2599 ;; Defined at:
  2600 ;;		line 11 in file "Battery.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;		None
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  i               2   35[COMRAM] int 
  2605 ;;  fault           1   34[COMRAM] unsigned char 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      unsigned char 
  2608 ;; Registers used:
  2609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2615 ;;      Params:         0       0       0       0       0       0       0
  2616 ;;      Locals:         3       0       0       0       0       0       0
  2617 ;;      Temps:          0       0       0       0       0       0       0
  2618 ;;      Totals:         3       0       0       0       0       0       0
  2619 ;;Total ram usage:        3 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    5
  2622 ;; This function calls:
  2623 ;;		___ftge
  2624 ;;		___wmul
  2625 ;; This function is called by:
  2626 ;;		_main
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text16
  2631  0012CA                     __ptext16:
  2632                           	opt stack 0
  2633  0012CA                     _Battery_Fault:
  2634                           	opt stack 25
  2635                           
  2636                           ;Battery.c: 13: char fault = 0;
  2637                           
  2638                           ;incstack = 0
  2639  0012CA  0E00               	movlw	0
  2640  0012CC  6E23               	movwf	Battery_Fault@fault,c
  2641                           
  2642                           ;Battery.c: 14: for(int i = 0;i<9;i++)
  2643  0012CE  0E00               	movlw	0
  2644  0012D0  6E25               	movwf	Battery_Fault@i+1,c
  2645  0012D2  0E00               	movlw	0
  2646  0012D4  6E24               	movwf	Battery_Fault@i,c
  2647  0012D6  5025               	movf	Battery_Fault@i+1,w,c
  2648  0012D8  0A80               	xorlw	128
  2649  0012DA  0F80               	addlw	-128
  2650  0012DC  0E09               	movlw	9
  2651  0012DE  B4D8               	btfsc	status,2,c
  2652  0012E0  5C24               	subwf	Battery_Fault@i,w,c
  2653  0012E2  B0D8               	btfsc	status,0,c
  2654  0012E4  0012               	return	
  2655                           
  2656                           ;Battery.c: 15: {
  2657                           ;Battery.c: 16: if ((3.00 < Battery_Volt[i]) && (4.21 > Battery_Volt[i]))
  2658  0012E6  0E00               	movlw	0
  2659  0012E8  6E1A               	movwf	___ftge@ff1,c
  2660  0012EA  0E40               	movlw	64
  2661  0012EC  6E1B               	movwf	___ftge@ff1+1,c
  2662  0012EE  0E40               	movlw	64
  2663  0012F0  6E1C               	movwf	___ftge@ff1+2,c
  2664  0012F2  C024  F014         	movff	Battery_Fault@i,___wmul@multiplier
  2665  0012F6  C025  F015         	movff	Battery_Fault@i+1,___wmul@multiplier+1
  2666  0012FA  0E00               	movlw	0
  2667  0012FC  6E17               	movwf	___wmul@multiplicand+1,c
  2668  0012FE  0E03               	movlw	3
  2669  001300  6E16               	movwf	___wmul@multiplicand,c
  2670  001302  ECEA  F00B         	call	___wmul	;wreg free
  2671  001306  0100               	movlb	0	; () banked
  2672  001308  0E60               	movlw	low _Battery_Volt
  2673  00130A  2414               	addwf	?___wmul,w,c
  2674  00130C  6ED9               	movwf	fsr2l,c
  2675  00130E  0100               	movlb	0	; () banked
  2676  001310  0E00               	movlw	high _Battery_Volt
  2677  001312  2015               	addwfc	?___wmul+1,w,c
  2678  001314  6EDA               	movwf	fsr2h,c
  2679  001316  CFDE F01D          	movff	postinc2,___ftge@ff2
  2680  00131A  CFDE F01E          	movff	postinc2,___ftge@ff2+1
  2681  00131E  CFDD F01F          	movff	postdec2,___ftge@ff2+2
  2682  001322  EC59  F00A         	call	___ftge	;wreg free
  2683  001326  B0D8               	btfsc	status,0,c
  2684  001328  D024               	goto	l2747
  2685  00132A  C024  F014         	movff	Battery_Fault@i,___wmul@multiplier
  2686  00132E  C025  F015         	movff	Battery_Fault@i+1,___wmul@multiplier+1
  2687  001332  0E00               	movlw	0
  2688  001334  6E17               	movwf	___wmul@multiplicand+1,c
  2689  001336  0E03               	movlw	3
  2690  001338  6E16               	movwf	___wmul@multiplicand,c
  2691  00133A  ECEA  F00B         	call	___wmul	;wreg free
  2692  00133E  0100               	movlb	0	; () banked
  2693  001340  0E60               	movlw	low _Battery_Volt
  2694  001342  2414               	addwf	?___wmul,w,c
  2695  001344  6ED9               	movwf	fsr2l,c
  2696  001346  0100               	movlb	0	; () banked
  2697  001348  0E00               	movlw	high _Battery_Volt
  2698  00134A  2015               	addwfc	?___wmul+1,w,c
  2699  00134C  6EDA               	movwf	fsr2h,c
  2700  00134E  CFDE F01A          	movff	postinc2,___ftge@ff1
  2701  001352  CFDE F01B          	movff	postinc2,___ftge@ff1+1
  2702  001356  CFDD F01C          	movff	postdec2,___ftge@ff1+2
  2703  00135A  0EB8               	movlw	184
  2704  00135C  6E1D               	movwf	___ftge@ff2,c
  2705  00135E  0E86               	movlw	134
  2706  001360  6E1E               	movwf	___ftge@ff2+1,c
  2707  001362  0E40               	movlw	64
  2708  001364  6E1F               	movwf	___ftge@ff2+2,c
  2709  001366  EC59  F00A         	call	___ftge	;wreg free
  2710  00136A  B0D8               	btfsc	status,0,c
  2711  00136C  D002               	goto	l2747
  2712                           
  2713                           ;Battery.c: 17: {
  2714                           ;Battery.c: 18: fault = 1;
  2715  00136E  0E01               	movlw	1
  2716  001370  6E23               	movwf	Battery_Fault@fault,c
  2717  001372                     l2747:
  2718  001372  4A24               	infsnz	Battery_Fault@i,f,c
  2719  001374  2A25               	incf	Battery_Fault@i+1,f,c
  2720  001376  D7AF               	goto	L5
  2721  001378                     __end_of_Battery_Fault:
  2722                           	opt stack 0
  2723                           tblptru	equ	0xFF8
  2724                           tblptrh	equ	0xFF7
  2725                           tblptrl	equ	0xFF6
  2726                           tablat	equ	0xFF5
  2727                           intcon	equ	0xFF2
  2728                           intcon2	equ	0xFF1
  2729                           postinc0	equ	0xFEE
  2730                           wreg	equ	0xFE8
  2731                           postinc1	equ	0xFE6
  2732                           postdec1	equ	0xFE5
  2733                           fsr1h	equ	0xFE2
  2734                           fsr1l	equ	0xFE1
  2735                           postinc2	equ	0xFDE
  2736                           postdec2	equ	0xFDD
  2737                           fsr2h	equ	0xFDA
  2738                           fsr2l	equ	0xFD9
  2739                           status	equ	0xFD8
  2740                           
  2741 ;; *************** function ___ftge *****************
  2742 ;; Defined at:
  2743 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  ff1             3   25[COMRAM] float 
  2746 ;;  ff2             3   28[COMRAM] float 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;		None
  2749 ;; Return value:  Size  Location     Type
  2750 ;;		None               void
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2758 ;;      Params:         6       0       0       0       0       0       0
  2759 ;;      Locals:         0       0       0       0       0       0       0
  2760 ;;      Temps:          3       0       0       0       0       0       0
  2761 ;;      Totals:         9       0       0       0       0       0       0
  2762 ;;Total ram usage:        9 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:    4
  2765 ;; This function calls:
  2766 ;;		Nothing
  2767 ;; This function is called by:
  2768 ;;		_Battery_Fault
  2769 ;;		_Temp_Fault
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	text17
  2774  0014B2                     __ptext17:
  2775                           	opt stack 0
  2776  0014B2                     ___ftge:
  2777                           	opt stack 25
  2778                           
  2779                           ;incstack = 0
  2780  0014B2  AE1C               	btfss	___ftge@ff1+2,7,c
  2781  0014B4  D016               	goto	l2183
  2782  0014B6  C01A  F020         	movff	___ftge@ff1,??___ftge
  2783  0014BA  C01B  F021         	movff	___ftge@ff1+1,??___ftge+1
  2784  0014BE  C01C  F022         	movff	___ftge@ff1+2,??___ftge+2
  2785  0014C2  1E20               	comf	??___ftge,f,c
  2786  0014C4  1E21               	comf	??___ftge+1,f,c
  2787  0014C6  1E22               	comf	??___ftge+2,f,c
  2788  0014C8  2A20               	incf	??___ftge,f,c
  2789  0014CA  0E00               	movlw	0
  2790  0014CC  2221               	addwfc	??___ftge+1,f,c
  2791  0014CE  2222               	addwfc	??___ftge+2,f,c
  2792  0014D0  0E00               	movlw	0
  2793  0014D2  2420               	addwf	??___ftge,w,c
  2794  0014D4  6E1A               	movwf	___ftge@ff1,c
  2795  0014D6  0E00               	movlw	0
  2796  0014D8  2021               	addwfc	??___ftge+1,w,c
  2797  0014DA  6E1B               	movwf	___ftge@ff1+1,c
  2798  0014DC  0E80               	movlw	128
  2799  0014DE  2022               	addwfc	??___ftge+2,w,c
  2800  0014E0  6E1C               	movwf	___ftge@ff1+2,c
  2801  0014E2                     l2183:
  2802  0014E2  AE1F               	btfss	___ftge@ff2+2,7,c
  2803  0014E4  D016               	goto	l2187
  2804  0014E6  C01D  F020         	movff	___ftge@ff2,??___ftge
  2805  0014EA  C01E  F021         	movff	___ftge@ff2+1,??___ftge+1
  2806  0014EE  C01F  F022         	movff	___ftge@ff2+2,??___ftge+2
  2807  0014F2  1E20               	comf	??___ftge,f,c
  2808  0014F4  1E21               	comf	??___ftge+1,f,c
  2809  0014F6  1E22               	comf	??___ftge+2,f,c
  2810  0014F8  2A20               	incf	??___ftge,f,c
  2811  0014FA  0E00               	movlw	0
  2812  0014FC  2221               	addwfc	??___ftge+1,f,c
  2813  0014FE  2222               	addwfc	??___ftge+2,f,c
  2814  001500  0E00               	movlw	0
  2815  001502  2420               	addwf	??___ftge,w,c
  2816  001504  6E1D               	movwf	___ftge@ff2,c
  2817  001506  0E00               	movlw	0
  2818  001508  2021               	addwfc	??___ftge+1,w,c
  2819  00150A  6E1E               	movwf	___ftge@ff2+1,c
  2820  00150C  0E80               	movlw	128
  2821  00150E  2022               	addwfc	??___ftge+2,w,c
  2822  001510  6E1F               	movwf	___ftge@ff2+2,c
  2823  001512                     l2187:
  2824  001512  0E00               	movlw	0
  2825  001514  1A1A               	xorwf	___ftge@ff1,f,c
  2826  001516  0E00               	movlw	0
  2827  001518  1A1B               	xorwf	___ftge@ff1+1,f,c
  2828  00151A  0E80               	movlw	128
  2829  00151C  1A1C               	xorwf	___ftge@ff1+2,f,c
  2830  00151E  0E00               	movlw	0
  2831  001520  1A1D               	xorwf	___ftge@ff2,f,c
  2832  001522  0E00               	movlw	0
  2833  001524  1A1E               	xorwf	___ftge@ff2+1,f,c
  2834  001526  0E80               	movlw	128
  2835  001528  1A1F               	xorwf	___ftge@ff2+2,f,c
  2836  00152A  501D               	movf	___ftge@ff2,w,c
  2837  00152C  5C1A               	subwf	___ftge@ff1,w,c
  2838  00152E  501E               	movf	___ftge@ff2+1,w,c
  2839  001530  581B               	subwfb	___ftge@ff1+1,w,c
  2840  001532  501F               	movf	___ftge@ff2+2,w,c
  2841  001534  581C               	subwfb	___ftge@ff1+2,w,c
  2842  001536  B0D8               	btfsc	status,0,c
  2843  001538  D002               	goto	l2193
  2844  00153A  90D8               	bcf	status,0,c
  2845  00153C  0012               	return	
  2846  00153E                     l2193:
  2847  00153E  80D8               	bsf	status,0,c
  2848  001540  0012               	return	
  2849  001542                     __end_of___ftge:
  2850                           	opt stack 0
  2851                           tblptru	equ	0xFF8
  2852                           tblptrh	equ	0xFF7
  2853                           tblptrl	equ	0xFF6
  2854                           tablat	equ	0xFF5
  2855                           intcon	equ	0xFF2
  2856                           intcon2	equ	0xFF1
  2857                           postinc0	equ	0xFEE
  2858                           wreg	equ	0xFE8
  2859                           postinc1	equ	0xFE6
  2860                           postdec1	equ	0xFE5
  2861                           fsr1h	equ	0xFE2
  2862                           fsr1l	equ	0xFE1
  2863                           postinc2	equ	0xFDE
  2864                           postdec2	equ	0xFDD
  2865                           fsr2h	equ	0xFDA
  2866                           fsr2l	equ	0xFD9
  2867                           status	equ	0xFD8
  2868                           
  2869 ;; *************** function _Battery_Convert *****************
  2870 ;; Defined at:
  2871 ;;		line 47 in file "Battery.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;		None
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;  x               2   16[BANK0 ] int 
  2876 ;; Return value:  Size  Location     Type
  2877 ;;		None               void
  2878 ;; Registers used:
  2879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2885 ;;      Params:         0       0       0       0       0       0       0
  2886 ;;      Locals:         0       2       0       0       0       0       0
  2887 ;;      Temps:          0       2       0       0       0       0       0
  2888 ;;      Totals:         0       4       0       0       0       0       0
  2889 ;;Total ram usage:        4 bytes
  2890 ;; Hardware stack levels used:    1
  2891 ;; Hardware stack levels required when called:    7
  2892 ;; This function calls:
  2893 ;;		_Battery_Filter
  2894 ;;		___awtoft
  2895 ;;		___ftadd
  2896 ;;		___ftdiv
  2897 ;;		___ftmul
  2898 ;;		___wmul
  2899 ;; This function is called by:
  2900 ;;		_main
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text18
  2905  001100                     __ptext18:
  2906                           	opt stack 0
  2907  001100                     _Battery_Convert:
  2908                           	opt stack 23
  2909                           
  2910                           ;Battery.c: 49: int x;
  2911                           ;Battery.c: 50: for(x = 0; x < 10; x++)
  2912                           
  2913                           ;incstack = 0
  2914  001100  0E00               	movlw	0
  2915  001102  0100               	movlb	0	; () banked
  2916  001104  6FE1               	movwf	(Battery_Convert@x+1)& (0+255),b
  2917  001106  0E00               	movlw	0
  2918  001108  0100               	movlb	0	; () banked
  2919  00110A  6FE0               	movwf	Battery_Convert@x& (0+255),b
  2920  00110C                     
  2921                           ; BSR set to: 0
  2922  00110C  0100               	movlb	0	; () banked
  2923  00110E  51E1               	movf	(Battery_Convert@x+1)& (0+255),w,b
  2924  001110  0A80               	xorlw	128
  2925  001112  0F80               	addlw	-128
  2926  001114  0E0A               	movlw	10
  2927  001116  B4D8               	btfsc	status,2,c
  2928  001118  5DE0               	subwf	Battery_Convert@x& (0+255),w,b
  2929  00111A  B0D8               	btfsc	status,0,c
  2930  00111C  D062               	goto	l2763
  2931                           
  2932                           ; BSR set to: 0
  2933                           ;Battery.c: 51: {
  2934                           ;Battery.c: 52: TempBattery_Volt[x] = ((Battery_Adc[x]/1024.0)*5.0) + 2.5;
  2935                           
  2936                           ; BSR set to: 0
  2937                           
  2938                           ; BSR set to: 0
  2939  00111E  C0E0  F014         	movff	Battery_Convert@x,___wmul@multiplier
  2940  001122  C0E1  F015         	movff	Battery_Convert@x+1,___wmul@multiplier+1
  2941  001126  0E00               	movlw	0
  2942  001128  6E17               	movwf	___wmul@multiplicand+1,c
  2943  00112A  0E03               	movlw	3
  2944  00112C  6E16               	movwf	___wmul@multiplicand,c
  2945  00112E  ECEA  F00B         	call	___wmul	;wreg free
  2946  001132  0100               	movlb	0	; () banked
  2947  001134  0EB2               	movlw	low _TempBattery_Volt
  2948  001136  2414               	addwf	?___wmul,w,c
  2949  001138  6ED9               	movwf	fsr2l,c
  2950  00113A  0100               	movlb	0	; () banked
  2951  00113C  0E00               	movlw	high _TempBattery_Volt
  2952  00113E  2015               	addwfc	?___wmul+1,w,c
  2953  001140  6EDA               	movwf	fsr2h,c
  2954  001142  0E00               	movlw	0
  2955  001144  6E32               	movwf	___ftmul@f2,c
  2956  001146  0EA0               	movlw	160
  2957  001148  6E33               	movwf	___ftmul@f2+1,c
  2958  00114A  0E40               	movlw	64
  2959  00114C  6E34               	movwf	___ftmul@f2+2,c
  2960  00114E  0E00               	movlw	0
  2961  001150  6E23               	movwf	___ftdiv@f2,c
  2962  001152  0E80               	movlw	128
  2963  001154  6E24               	movwf	___ftdiv@f2+1,c
  2964  001156  0E44               	movlw	68
  2965  001158  6E25               	movwf	___ftdiv@f2+2,c
  2966  00115A  0E96               	movlw	low _Battery_Adc
  2967  00115C  0100               	movlb	0	; () banked
  2968  00115E  6FDE               	movwf	??_Battery_Convert& (0+255),b
  2969  001160  0E01               	movlw	high _Battery_Adc
  2970  001162  6FDF               	movwf	(??_Battery_Convert+1)& (0+255),b
  2971  001164  90D8               	bcf	status,0,c
  2972  001166  0100               	movlb	0	; () banked
  2973  001168  35E0               	rlcf	Battery_Convert@x& (0+255),w,b
  2974  00116A  6EE1               	movwf	fsr1l,c
  2975  00116C  0100               	movlb	0	; () banked
  2976  00116E  35E1               	rlcf	(Battery_Convert@x+1)& (0+255),w,b
  2977  001170  6EE2               	movwf	fsr1h,c
  2978  001172  0100               	movlb	0	; () banked
  2979  001174  51DE               	movf	??_Battery_Convert& (0+255),w,b
  2980  001176  26E1               	addwf	fsr1l,f,c
  2981  001178  0100               	movlb	0	; () banked
  2982  00117A  51DF               	movf	(??_Battery_Convert+1)& (0+255),w,b
  2983  00117C  22E2               	addwfc	fsr1h,f,c
  2984  00117E  CFE6 F01C          	movff	postinc1,___awtoft@c
  2985  001182  CFE5 F01D          	movff	postdec1,___awtoft@c+1
  2986  001186  EC28  F00B         	call	___awtoft	;wreg free
  2987  00118A  C01C  F020         	movff	?___awtoft,___ftdiv@f1
  2988  00118E  C01D  F021         	movff	?___awtoft+1,___ftdiv@f1+1
  2989  001192  C01E  F022         	movff	?___awtoft+2,___ftdiv@f1+2
  2990  001196  ECF4  F008         	call	___ftdiv	;wreg free
  2991  00119A  C020  F02F         	movff	?___ftdiv,___ftmul@f1
  2992  00119E  C021  F030         	movff	?___ftdiv+1,___ftmul@f1+1
  2993  0011A2  C022  F031         	movff	?___ftdiv+2,___ftmul@f1+2
  2994  0011A6  EC08  F008         	call	___ftmul	;wreg free
  2995  0011AA  C02F  F0D0         	movff	?___ftmul,___ftadd@f1
  2996  0011AE  C030  F0D1         	movff	?___ftmul+1,___ftadd@f1+1
  2997  0011B2  C031  F0D2         	movff	?___ftmul+2,___ftadd@f1+2
  2998  0011B6  0E00               	movlw	0
  2999  0011B8  0100               	movlb	0	; () banked
  3000  0011BA  6FD3               	movwf	___ftadd@f2& (0+255),b
  3001  0011BC  0E20               	movlw	32
  3002  0011BE  0100               	movlb	0	; () banked
  3003  0011C0  6FD4               	movwf	(___ftadd@f2+1)& (0+255),b
  3004  0011C2  0E40               	movlw	64
  3005  0011C4  0100               	movlb	0	; () banked
  3006  0011C6  6FD5               	movwf	(___ftadd@f2+2)& (0+255),b
  3007  0011C8  EC0F  F003         	call	___ftadd	;wreg free
  3008  0011CC  C0D0  FFDE         	movff	?___ftadd,postinc2
  3009  0011D0  C0D1  FFDE         	movff	?___ftadd+1,postinc2
  3010  0011D4  C0D2  FFDD         	movff	?___ftadd+2,postdec2
  3011  0011D8  52DD               	movf	postdec2,f,c
  3012  0011DA  0100               	movlb	0	; () banked
  3013  0011DC  4BE0               	infsnz	Battery_Convert@x& (0+255),f,b
  3014  0011DE  2BE1               	incf	(Battery_Convert@x+1)& (0+255),f,b
  3015  0011E0  D795               	goto	L6
  3016  0011E2                     l2763:
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;Battery.c: 53: }
  3020                           ;Battery.c: 54: Battery_Filter();
  3021  0011E2  EC26  F006         	call	_Battery_Filter	;wreg free
  3022  0011E6  0012               	return	
  3023  0011E8                     __end_of_Battery_Convert:
  3024                           	opt stack 0
  3025                           tblptru	equ	0xFF8
  3026                           tblptrh	equ	0xFF7
  3027                           tblptrl	equ	0xFF6
  3028                           tablat	equ	0xFF5
  3029                           intcon	equ	0xFF2
  3030                           intcon2	equ	0xFF1
  3031                           postinc0	equ	0xFEE
  3032                           wreg	equ	0xFE8
  3033                           postinc1	equ	0xFE6
  3034                           postdec1	equ	0xFE5
  3035                           fsr1h	equ	0xFE2
  3036                           fsr1l	equ	0xFE1
  3037                           postinc2	equ	0xFDE
  3038                           postdec2	equ	0xFDD
  3039                           fsr2h	equ	0xFDA
  3040                           fsr2l	equ	0xFD9
  3041                           status	equ	0xFD8
  3042                           
  3043 ;; *************** function ___ftdiv *****************
  3044 ;; Defined at:
  3045 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdiv.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;  f1              3   31[COMRAM] float 
  3048 ;;  f2              3   34[COMRAM] float 
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;  f3              3   41[COMRAM] float 
  3051 ;;  sign            1   45[COMRAM] unsigned char 
  3052 ;;  exp             1   44[COMRAM] unsigned char 
  3053 ;;  cntr            1   40[COMRAM] unsigned char 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  3   31[COMRAM] float 
  3056 ;; Registers used:
  3057 ;;		wreg, status,2, status,0, cstack
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3063 ;;      Params:         6       0       0       0       0       0       0
  3064 ;;      Locals:         6       0       0       0       0       0       0
  3065 ;;      Temps:          3       0       0       0       0       0       0
  3066 ;;      Totals:        15       0       0       0       0       0       0
  3067 ;;Total ram usage:       15 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; Hardware stack levels required when called:    5
  3070 ;; This function calls:
  3071 ;;		___ftpack
  3072 ;; This function is called by:
  3073 ;;		_Battery_Convert
  3074 ;;		_Temp_Convert
  3075 ;;		_Current_Fault
  3076 ;;		_Current_Get
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           	psect	text19
  3081  0011E8                     __ptext19:
  3082                           	opt stack 0
  3083  0011E8                     ___ftdiv:
  3084                           	opt stack 24
  3085                           
  3086                           ;incstack = 0
  3087  0011E8  C022  F026         	movff	___ftdiv@f1+2,??___ftdiv
  3088  0011EC  6A27               	clrf	(??___ftdiv+1)& (0+255),c
  3089  0011EE  6A28               	clrf	(??___ftdiv+2)& (0+255),c
  3090  0011F0  3421               	rlcf	___ftdiv@f1+1,w,c
  3091  0011F2  3626               	rlcf	??___ftdiv& (0+255),f,c
  3092  0011F4  E301               	bnc	u2461
  3093  0011F6  8027               	bsf	(??___ftdiv+1)& (0+255),0,c
  3094  0011F8                     u2461:
  3095  0011F8  5026               	movf	??___ftdiv,w,c
  3096  0011FA  6E2D               	movwf	___ftdiv@exp,c
  3097  0011FC  662D               	tstfsz	___ftdiv@exp& (0+255),c
  3098  0011FE  D007               	goto	l2689
  3099  001200  0E00               	movlw	0
  3100  001202  6E20               	movwf	?___ftdiv,c
  3101  001204  0E00               	movlw	0
  3102  001206  6E21               	movwf	?___ftdiv+1,c
  3103  001208  0E00               	movlw	0
  3104  00120A  6E22               	movwf	?___ftdiv+2,c
  3105  00120C  0012               	return	
  3106  00120E                     l2689:
  3107  00120E  C025  F026         	movff	___ftdiv@f2+2,??___ftdiv
  3108  001212  6A27               	clrf	(??___ftdiv+1)& (0+255),c
  3109  001214  6A28               	clrf	(??___ftdiv+2)& (0+255),c
  3110  001216  3424               	rlcf	___ftdiv@f2+1,w,c
  3111  001218  3626               	rlcf	??___ftdiv& (0+255),f,c
  3112  00121A  E301               	bnc	u2481
  3113  00121C  8027               	bsf	(??___ftdiv+1)& (0+255),0,c
  3114  00121E                     u2481:
  3115  00121E  5026               	movf	??___ftdiv,w,c
  3116  001220  6E2E               	movwf	___ftdiv@sign,c
  3117  001222  662E               	tstfsz	___ftdiv@sign& (0+255),c
  3118  001224  D007               	goto	l2695
  3119  001226  0E00               	movlw	0
  3120  001228  6E20               	movwf	?___ftdiv,c
  3121  00122A  0E00               	movlw	0
  3122  00122C  6E21               	movwf	?___ftdiv+1,c
  3123  00122E  0E00               	movlw	0
  3124  001230  6E22               	movwf	?___ftdiv+2,c
  3125  001232  0012               	return	
  3126  001234                     l2695:
  3127  001234  0E00               	movlw	0
  3128  001236  6E2A               	movwf	___ftdiv@f3,c
  3129  001238  0E00               	movlw	0
  3130  00123A  6E2B               	movwf	___ftdiv@f3+1,c
  3131  00123C  0E00               	movlw	0
  3132  00123E  6E2C               	movwf	___ftdiv@f3+2,c
  3133  001240  502E               	movf	___ftdiv@sign,w,c
  3134  001242  0F89               	addlw	137
  3135  001244  5E2D               	subwf	___ftdiv@exp,f,c
  3136  001246  C022  F02E         	movff	___ftdiv@f1+2,___ftdiv@sign
  3137  00124A  5025               	movf	___ftdiv@f2+2,w,c
  3138  00124C  1A2E               	xorwf	___ftdiv@sign,f,c
  3139  00124E  0E80               	movlw	128
  3140  001250  162E               	andwf	___ftdiv@sign,f,c
  3141  001252  8E21               	bsf	___ftdiv@f1+1,7,c
  3142  001254  0EFF               	movlw	255
  3143  001256  1620               	andwf	___ftdiv@f1,f,c
  3144  001258  0EFF               	movlw	255
  3145  00125A  1621               	andwf	___ftdiv@f1+1,f,c
  3146  00125C  0E00               	movlw	0
  3147  00125E  1622               	andwf	___ftdiv@f1+2,f,c
  3148  001260  8E24               	bsf	___ftdiv@f2+1,7,c
  3149  001262  0EFF               	movlw	255
  3150  001264  1623               	andwf	___ftdiv@f2,f,c
  3151  001266  0EFF               	movlw	255
  3152  001268  1624               	andwf	___ftdiv@f2+1,f,c
  3153  00126A  0E00               	movlw	0
  3154  00126C  1625               	andwf	___ftdiv@f2+2,f,c
  3155  00126E  0E18               	movlw	24
  3156  001270  6E29               	movwf	___ftdiv@cntr,c
  3157  001272                     l2715:
  3158  001272  90D8               	bcf	status,0,c
  3159  001274  362A               	rlcf	___ftdiv@f3,f,c
  3160  001276  362B               	rlcf	___ftdiv@f3+1,f,c
  3161  001278  362C               	rlcf	___ftdiv@f3+2,f,c
  3162  00127A  5023               	movf	___ftdiv@f2,w,c
  3163  00127C  5C20               	subwf	___ftdiv@f1,w,c
  3164  00127E  5024               	movf	___ftdiv@f2+1,w,c
  3165  001280  5821               	subwfb	___ftdiv@f1+1,w,c
  3166  001282  5025               	movf	___ftdiv@f2+2,w,c
  3167  001284  5822               	subwfb	___ftdiv@f1+2,w,c
  3168  001286  A0D8               	btfss	status,0,c
  3169  001288  D007               	goto	l828
  3170  00128A  5023               	movf	___ftdiv@f2,w,c
  3171  00128C  5E20               	subwf	___ftdiv@f1,f,c
  3172  00128E  5024               	movf	___ftdiv@f2+1,w,c
  3173  001290  5A21               	subwfb	___ftdiv@f1+1,f,c
  3174  001292  5025               	movf	___ftdiv@f2+2,w,c
  3175  001294  5A22               	subwfb	___ftdiv@f1+2,f,c
  3176  001296  802A               	bsf	___ftdiv@f3,0,c
  3177  001298                     l828:
  3178  001298  90D8               	bcf	status,0,c
  3179  00129A  3620               	rlcf	___ftdiv@f1,f,c
  3180  00129C  3621               	rlcf	___ftdiv@f1+1,f,c
  3181  00129E  3622               	rlcf	___ftdiv@f1+2,f,c
  3182  0012A0  2E29               	decfsz	___ftdiv@cntr,f,c
  3183  0012A2  D7E7               	goto	l2715
  3184  0012A4  C02A  F014         	movff	___ftdiv@f3,___ftpack@arg
  3185  0012A8  C02B  F015         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3186  0012AC  C02C  F016         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3187  0012B0  C02D  F017         	movff	___ftdiv@exp,___ftpack@exp
  3188  0012B4  C02E  F018         	movff	___ftdiv@sign,___ftpack@sign
  3189  0012B8  ECBC  F009         	call	___ftpack	;wreg free
  3190  0012BC  C014  F020         	movff	?___ftpack,?___ftdiv
  3191  0012C0  C015  F021         	movff	?___ftpack+1,?___ftdiv+1
  3192  0012C4  C016  F022         	movff	?___ftpack+2,?___ftdiv+2
  3193  0012C8  0012               	return	
  3194  0012CA                     __end_of___ftdiv:
  3195                           	opt stack 0
  3196                           tblptru	equ	0xFF8
  3197                           tblptrh	equ	0xFF7
  3198                           tblptrl	equ	0xFF6
  3199                           tablat	equ	0xFF5
  3200                           intcon	equ	0xFF2
  3201                           intcon2	equ	0xFF1
  3202                           postinc0	equ	0xFEE
  3203                           wreg	equ	0xFE8
  3204                           postinc1	equ	0xFE6
  3205                           postdec1	equ	0xFE5
  3206                           fsr1h	equ	0xFE2
  3207                           fsr1l	equ	0xFE1
  3208                           postinc2	equ	0xFDE
  3209                           postdec2	equ	0xFDD
  3210                           fsr2h	equ	0xFDA
  3211                           fsr2l	equ	0xFD9
  3212                           status	equ	0xFD8
  3213                           
  3214 ;; *************** function ___awtoft *****************
  3215 ;; Defined at:
  3216 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;  c               2   27[COMRAM] int 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  sign            1   30[COMRAM] unsigned char 
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  3   27[COMRAM] float 
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, status,0, prodl, cstack
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3230 ;;      Params:         3       0       0       0       0       0       0
  3231 ;;      Locals:         1       0       0       0       0       0       0
  3232 ;;      Temps:          0       0       0       0       0       0       0
  3233 ;;      Totals:         4       0       0       0       0       0       0
  3234 ;;Total ram usage:        4 bytes
  3235 ;; Hardware stack levels used:    1
  3236 ;; Hardware stack levels required when called:    5
  3237 ;; This function calls:
  3238 ;;		___ftpack
  3239 ;; This function is called by:
  3240 ;;		_Battery_Convert
  3241 ;;		_Temp_Convert
  3242 ;;		_log
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246                           	psect	text20
  3247  001650                     __ptext20:
  3248                           	opt stack 0
  3249  001650                     ___awtoft:
  3250                           	opt stack 23
  3251                           
  3252                           ;incstack = 0
  3253  001650  0E00               	movlw	0
  3254  001652  6E1F               	movwf	___awtoft@sign,c
  3255  001654  501D               	movf	___awtoft@c+1,w,c
  3256  001656  0A80               	xorlw	128
  3257  001658  6EF3               	movwf	prodl,c
  3258  00165A  0E80               	movlw	128
  3259  00165C  5CF3               	subwf	prodl,w,c
  3260  00165E  0E00               	movlw	0
  3261  001660  B4D8               	btfsc	status,2,c
  3262  001662  5C1C               	subwf	___awtoft@c,w,c
  3263  001664  B0D8               	btfsc	status,0,c
  3264  001666  D006               	goto	l2603
  3265  001668  6C1C               	negf	___awtoft@c,c
  3266  00166A  1E1D               	comf	___awtoft@c+1,f,c
  3267  00166C  B0D8               	btfsc	status,0,c
  3268  00166E  2A1D               	incf	___awtoft@c+1,f,c
  3269  001670  0E01               	movlw	1
  3270  001672  6E1F               	movwf	___awtoft@sign,c
  3271  001674                     l2603:
  3272  001674  C01C  F014         	movff	___awtoft@c,___ftpack@arg
  3273  001678  C01D  F015         	movff	___awtoft@c+1,___ftpack@arg+1
  3274  00167C  6A16               	clrf	___ftpack@arg+2,c
  3275  00167E  0E8E               	movlw	142
  3276  001680  6E17               	movwf	___ftpack@exp,c
  3277  001682  C01F  F018         	movff	___awtoft@sign,___ftpack@sign
  3278  001686  ECBC  F009         	call	___ftpack	;wreg free
  3279  00168A  C014  F01C         	movff	?___ftpack,?___awtoft
  3280  00168E  C015  F01D         	movff	?___ftpack+1,?___awtoft+1
  3281  001692  C016  F01E         	movff	?___ftpack+2,?___awtoft+2
  3282  001696  0012               	return	
  3283  001698                     __end_of___awtoft:
  3284                           	opt stack 0
  3285                           tblptru	equ	0xFF8
  3286                           tblptrh	equ	0xFF7
  3287                           tblptrl	equ	0xFF6
  3288                           tablat	equ	0xFF5
  3289                           prodl	equ	0xFF3
  3290                           intcon	equ	0xFF2
  3291                           intcon2	equ	0xFF1
  3292                           postinc0	equ	0xFEE
  3293                           wreg	equ	0xFE8
  3294                           postinc1	equ	0xFE6
  3295                           postdec1	equ	0xFE5
  3296                           fsr1h	equ	0xFE2
  3297                           fsr1l	equ	0xFE1
  3298                           postinc2	equ	0xFDE
  3299                           postdec2	equ	0xFDD
  3300                           fsr2h	equ	0xFDA
  3301                           fsr2l	equ	0xFD9
  3302                           status	equ	0xFD8
  3303                           
  3304 ;; *************** function _Battery_Filter *****************
  3305 ;; Defined at:
  3306 ;;		line 33 in file "Battery.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;		None
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;  x               2   12[BANK0 ] int 
  3311 ;; Return value:  Size  Location     Type
  3312 ;;		None               void
  3313 ;; Registers used:
  3314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3320 ;;      Params:         0       0       0       0       0       0       0
  3321 ;;      Locals:         0       2       0       0       0       0       0
  3322 ;;      Temps:          0       0       0       0       0       0       0
  3323 ;;      Totals:         0       2       0       0       0       0       0
  3324 ;;Total ram usage:        2 bytes
  3325 ;; Hardware stack levels used:    1
  3326 ;; Hardware stack levels required when called:    6
  3327 ;; This function calls:
  3328 ;;		___ftadd
  3329 ;;		___ftmul
  3330 ;;		___wmul
  3331 ;; This function is called by:
  3332 ;;		_Battery_Convert
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text21
  3337  000C4C                     __ptext21:
  3338                           	opt stack 0
  3339  000C4C                     _Battery_Filter:
  3340                           	opt stack 23
  3341                           
  3342                           ;Battery.c: 36: int x;
  3343                           ;Battery.c: 37: for(x = 0; x < 10; x++)
  3344                           
  3345                           ;incstack = 0
  3346  000C4C  0E00               	movlw	0
  3347  000C4E  0100               	movlb	0	; () banked
  3348  000C50  6FDD               	movwf	(Battery_Filter@x+1)& (0+255),b
  3349  000C52  0E00               	movlw	0
  3350  000C54  0100               	movlb	0	; () banked
  3351  000C56  6FDC               	movwf	Battery_Filter@x& (0+255),b
  3352  000C58                     
  3353                           ; BSR set to: 0
  3354  000C58  0100               	movlb	0	; () banked
  3355  000C5A  51DD               	movf	(Battery_Filter@x+1)& (0+255),w,b
  3356  000C5C  0A80               	xorlw	128
  3357  000C5E  0F80               	addlw	-128
  3358  000C60  0E0A               	movlw	10
  3359  000C62  B4D8               	btfsc	status,2,c
  3360  000C64  5DDC               	subwf	Battery_Filter@x& (0+255),w,b
  3361  000C66  B0D8               	btfsc	status,0,c
  3362  000C68  D06B               	goto	l2625
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;Battery.c: 38: {
  3366                           ;Battery.c: 39: Battery_Volt[x] = (0.88*TempBattery_Volt[x] + ((1- 0.88)*PrevBattery_Vol
      +                          t[x]));
  3367                           
  3368                           ; BSR set to: 0
  3369                           
  3370                           ; BSR set to: 0
  3371  000C6A  C0DC  F014         	movff	Battery_Filter@x,___wmul@multiplier
  3372  000C6E  C0DD  F015         	movff	Battery_Filter@x+1,___wmul@multiplier+1
  3373  000C72  0E00               	movlw	0
  3374  000C74  6E17               	movwf	___wmul@multiplicand+1,c
  3375  000C76  0E03               	movlw	3
  3376  000C78  6E16               	movwf	___wmul@multiplicand,c
  3377  000C7A  ECEA  F00B         	call	___wmul	;wreg free
  3378  000C7E  0100               	movlb	0	; () banked
  3379  000C80  0E60               	movlw	low _Battery_Volt
  3380  000C82  2414               	addwf	?___wmul,w,c
  3381  000C84  6ED9               	movwf	fsr2l,c
  3382  000C86  0100               	movlb	0	; () banked
  3383  000C88  0E00               	movlw	high _Battery_Volt
  3384  000C8A  2015               	addwfc	?___wmul+1,w,c
  3385  000C8C  6EDA               	movwf	fsr2h,c
  3386  000C8E  0E48               	movlw	72
  3387  000C90  6E32               	movwf	___ftmul@f2,c
  3388  000C92  0E61               	movlw	97
  3389  000C94  6E33               	movwf	___ftmul@f2+1,c
  3390  000C96  0E3F               	movlw	63
  3391  000C98  6E34               	movwf	___ftmul@f2+2,c
  3392  000C9A  C0DC  F014         	movff	Battery_Filter@x,___wmul@multiplier
  3393  000C9E  C0DD  F015         	movff	Battery_Filter@x+1,___wmul@multiplier+1
  3394  000CA2  0E00               	movlw	0
  3395  000CA4  6E17               	movwf	___wmul@multiplicand+1,c
  3396  000CA6  0E03               	movlw	3
  3397  000CA8  6E16               	movwf	___wmul@multiplicand,c
  3398  000CAA  ECEA  F00B         	call	___wmul	;wreg free
  3399  000CAE  0100               	movlb	0	; () banked
  3400  000CB0  0EB2               	movlw	low _TempBattery_Volt
  3401  000CB2  2414               	addwf	?___wmul,w,c
  3402  000CB4  6EE1               	movwf	fsr1l,c
  3403  000CB6  0100               	movlb	0	; () banked
  3404  000CB8  0E00               	movlw	high _TempBattery_Volt
  3405  000CBA  2015               	addwfc	?___wmul+1,w,c
  3406  000CBC  6EE2               	movwf	fsr1h,c
  3407  000CBE  CFE6 F02F          	movff	postinc1,___ftmul@f1
  3408  000CC2  CFE6 F030          	movff	postinc1,___ftmul@f1+1
  3409  000CC6  CFE5 F031          	movff	postdec1,___ftmul@f1+2
  3410  000CCA  EC08  F008         	call	___ftmul	;wreg free
  3411  000CCE  C02F  F0D0         	movff	?___ftmul,___ftadd@f1
  3412  000CD2  C030  F0D1         	movff	?___ftmul+1,___ftadd@f1+1
  3413  000CD6  C031  F0D2         	movff	?___ftmul+2,___ftadd@f1+2
  3414  000CDA  0EC3               	movlw	195
  3415  000CDC  6E32               	movwf	___ftmul@f2,c
  3416  000CDE  0EF5               	movlw	245
  3417  000CE0  6E33               	movwf	___ftmul@f2+1,c
  3418  000CE2  0E3D               	movlw	61
  3419  000CE4  6E34               	movwf	___ftmul@f2+2,c
  3420  000CE6  0E00               	movlw	0
  3421  000CE8  6E17               	movwf	___wmul@multiplicand+1,c
  3422  000CEA  0E03               	movlw	3
  3423  000CEC  6E16               	movwf	___wmul@multiplicand,c
  3424  000CEE  C0DC  F014         	movff	Battery_Filter@x,___wmul@multiplier
  3425  000CF2  C0DD  F015         	movff	Battery_Filter@x+1,___wmul@multiplier+1
  3426  000CF6  ECEA  F00B         	call	___wmul	;wreg free
  3427  000CFA  0101               	movlb	1	; () banked
  3428  000CFC  0E3C               	movlw	low _PrevBattery_Volt
  3429  000CFE  2414               	addwf	?___wmul,w,c
  3430  000D00  6EE1               	movwf	fsr1l,c
  3431  000D02  0101               	movlb	1	; () banked
  3432  000D04  0E01               	movlw	high _PrevBattery_Volt
  3433  000D06  2015               	addwfc	?___wmul+1,w,c
  3434  000D08  6EE2               	movwf	fsr1h,c
  3435  000D0A  CFE6 F02F          	movff	postinc1,___ftmul@f1
  3436  000D0E  CFE6 F030          	movff	postinc1,___ftmul@f1+1
  3437  000D12  CFE5 F031          	movff	postdec1,___ftmul@f1+2
  3438  000D16  EC08  F008         	call	___ftmul	;wreg free
  3439  000D1A  C02F  F0D3         	movff	?___ftmul,___ftadd@f2
  3440  000D1E  C030  F0D4         	movff	?___ftmul+1,___ftadd@f2+1
  3441  000D22  C031  F0D5         	movff	?___ftmul+2,___ftadd@f2+2
  3442  000D26  EC0F  F003         	call	___ftadd	;wreg free
  3443  000D2A  C0D0  FFDE         	movff	?___ftadd,postinc2
  3444  000D2E  C0D1  FFDE         	movff	?___ftadd+1,postinc2
  3445  000D32  C0D2  FFDD         	movff	?___ftadd+2,postdec2
  3446  000D36  52DD               	movf	postdec2,f,c
  3447  000D38  0100               	movlb	0	; () banked
  3448  000D3A  4BDC               	infsnz	Battery_Filter@x& (0+255),f,b
  3449  000D3C  2BDD               	incf	(Battery_Filter@x+1)& (0+255),f,b
  3450  000D3E  D78C               	goto	L7
  3451  000D40                     l2625:
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;Battery.c: 40: }
  3455                           ;Battery.c: 41: for(x = 0; x < 10; x++)
  3456  000D40  0E00               	movlw	0
  3457  000D42  0100               	movlb	0	; () banked
  3458  000D44  6FDD               	movwf	(Battery_Filter@x+1)& (0+255),b
  3459  000D46  0E00               	movlw	0
  3460  000D48  0100               	movlb	0	; () banked
  3461  000D4A  6FDC               	movwf	Battery_Filter@x& (0+255),b
  3462  000D4C                     
  3463                           ; BSR set to: 0
  3464  000D4C  0100               	movlb	0	; () banked
  3465  000D4E  51DD               	movf	(Battery_Filter@x+1)& (0+255),w,b
  3466  000D50  0A80               	xorlw	128
  3467  000D52  0F80               	addlw	-128
  3468  000D54  0E0A               	movlw	10
  3469  000D56  B4D8               	btfsc	status,2,c
  3470  000D58  5DDC               	subwf	Battery_Filter@x& (0+255),w,b
  3471  000D5A  B0D8               	btfsc	status,0,c
  3472  000D5C  0012               	return	
  3473                           
  3474                           ; BSR set to: 0
  3475                           ;Battery.c: 42: {
  3476                           ;Battery.c: 43: PrevBattery_Volt[x] = Battery_Volt[x];
  3477                           
  3478                           ; BSR set to: 0
  3479                           
  3480                           ; BSR set to: 0
  3481  000D5E  C0DC  F014         	movff	Battery_Filter@x,___wmul@multiplier
  3482  000D62  C0DD  F015         	movff	Battery_Filter@x+1,___wmul@multiplier+1
  3483  000D66  0E00               	movlw	0
  3484  000D68  6E17               	movwf	___wmul@multiplicand+1,c
  3485  000D6A  0E03               	movlw	3
  3486  000D6C  6E16               	movwf	___wmul@multiplicand,c
  3487  000D6E  ECEA  F00B         	call	___wmul	;wreg free
  3488  000D72  0100               	movlb	0	; () banked
  3489  000D74  0E60               	movlw	low _Battery_Volt
  3490  000D76  2414               	addwf	?___wmul,w,c
  3491  000D78  6ED9               	movwf	fsr2l,c
  3492  000D7A  0100               	movlb	0	; () banked
  3493  000D7C  0E00               	movlw	high _Battery_Volt
  3494  000D7E  2015               	addwfc	?___wmul+1,w,c
  3495  000D80  6EDA               	movwf	fsr2h,c
  3496  000D82  C0DC  F014         	movff	Battery_Filter@x,___wmul@multiplier
  3497  000D86  C0DD  F015         	movff	Battery_Filter@x+1,___wmul@multiplier+1
  3498  000D8A  0E00               	movlw	0
  3499  000D8C  6E17               	movwf	___wmul@multiplicand+1,c
  3500  000D8E  0E03               	movlw	3
  3501  000D90  6E16               	movwf	___wmul@multiplicand,c
  3502  000D92  ECEA  F00B         	call	___wmul	;wreg free
  3503  000D96  0101               	movlb	1	; () banked
  3504  000D98  0E3C               	movlw	low _PrevBattery_Volt
  3505  000D9A  2414               	addwf	?___wmul,w,c
  3506  000D9C  6EE1               	movwf	fsr1l,c
  3507  000D9E  0101               	movlb	1	; () banked
  3508  000DA0  0E01               	movlw	high _PrevBattery_Volt
  3509  000DA2  2015               	addwfc	?___wmul+1,w,c
  3510  000DA4  6EE2               	movwf	fsr1h,c
  3511  000DA6  CFDE FFE6          	movff	postinc2,postinc1
  3512  000DAA  CFDE FFE6          	movff	postinc2,postinc1
  3513  000DAE  CFDE FFE5          	movff	postinc2,postdec1
  3514  000DB2  52E5               	movf	postdec1,f,c
  3515                           
  3516                           ; BSR set to: 1
  3517  000DB4  0100               	movlb	0	; () banked
  3518  000DB6  4BDC               	infsnz	Battery_Filter@x& (0+255),f,b
  3519  000DB8  2BDD               	incf	(Battery_Filter@x+1)& (0+255),f,b
  3520  000DBA  D7C8               	goto	L8
  3521  000DBC                     __end_of_Battery_Filter:
  3522                           	opt stack 0
  3523                           tblptru	equ	0xFF8
  3524                           tblptrh	equ	0xFF7
  3525                           tblptrl	equ	0xFF6
  3526                           tablat	equ	0xFF5
  3527                           prodl	equ	0xFF3
  3528                           intcon	equ	0xFF2
  3529                           intcon2	equ	0xFF1
  3530                           postinc0	equ	0xFEE
  3531                           wreg	equ	0xFE8
  3532                           postinc1	equ	0xFE6
  3533                           postdec1	equ	0xFE5
  3534                           fsr1h	equ	0xFE2
  3535                           fsr1l	equ	0xFE1
  3536                           postinc2	equ	0xFDE
  3537                           postdec2	equ	0xFDD
  3538                           fsr2h	equ	0xFDA
  3539                           fsr2l	equ	0xFD9
  3540                           status	equ	0xFD8
  3541                           
  3542 ;; *************** function ___wmul *****************
  3543 ;; Defined at:
  3544 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;  multiplier      2   19[COMRAM] unsigned int 
  3547 ;;  multiplicand    2   21[COMRAM] unsigned int 
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;  product         2   23[COMRAM] unsigned int 
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  2   19[COMRAM] unsigned int 
  3552 ;; Registers used:
  3553 ;;		wreg, status,2, status,0, prodl, prodh
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3559 ;;      Params:         4       0       0       0       0       0       0
  3560 ;;      Locals:         2       0       0       0       0       0       0
  3561 ;;      Temps:          0       0       0       0       0       0       0
  3562 ;;      Totals:         6       0       0       0       0       0       0
  3563 ;;Total ram usage:        6 bytes
  3564 ;; Hardware stack levels used:    1
  3565 ;; Hardware stack levels required when called:    4
  3566 ;; This function calls:
  3567 ;;		Nothing
  3568 ;; This function is called by:
  3569 ;;		_Battery_Fault
  3570 ;;		_Battery_Filter
  3571 ;;		_Battery_Convert
  3572 ;;		_Temp_Fault
  3573 ;;		_Temp_Filter
  3574 ;;		_Temp_Convert
  3575 ;;		_eval_poly
  3576 ;;		_Battery_Get
  3577 ;;		_Tempeture_Get
  3578 ;;		_Current_Fault
  3579 ;;		_Current_Get
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           
  3583                           	psect	text22
  3584  0017D4                     __ptext22:
  3585                           	opt stack 0
  3586  0017D4                     ___wmul:
  3587                           	opt stack 25
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;incstack = 0
  3591  0017D4  5014               	movf	___wmul@multiplier,w,c
  3592  0017D6  0216               	mulwf	___wmul@multiplicand,c
  3593  0017D8  CFF3 F018          	movff	prodl,___wmul@product
  3594  0017DC  CFF4 F019          	movff	prodh,___wmul@product+1
  3595  0017E0  5014               	movf	___wmul@multiplier,w,c
  3596  0017E2  0217               	mulwf	___wmul@multiplicand+1,c
  3597  0017E4  50F3               	movf	prodl,w,c
  3598  0017E6  2619               	addwf	___wmul@product+1,f,c
  3599  0017E8  5015               	movf	___wmul@multiplier+1,w,c
  3600  0017EA  0216               	mulwf	___wmul@multiplicand,c
  3601  0017EC  50F3               	movf	prodl,w,c
  3602  0017EE  2619               	addwf	___wmul@product+1,f,c
  3603  0017F0  C018  F014         	movff	___wmul@product,?___wmul
  3604  0017F4  C019  F015         	movff	___wmul@product+1,?___wmul+1
  3605  0017F8  0012               	return	
  3606  0017FA                     __end_of___wmul:
  3607                           	opt stack 0
  3608                           tblptru	equ	0xFF8
  3609                           tblptrh	equ	0xFF7
  3610                           tblptrl	equ	0xFF6
  3611                           tablat	equ	0xFF5
  3612                           prodh	equ	0xFF4
  3613                           prodl	equ	0xFF3
  3614                           intcon	equ	0xFF2
  3615                           intcon2	equ	0xFF1
  3616                           postinc0	equ	0xFEE
  3617                           wreg	equ	0xFE8
  3618                           postinc1	equ	0xFE6
  3619                           postdec1	equ	0xFE5
  3620                           fsr1h	equ	0xFE2
  3621                           fsr1l	equ	0xFE1
  3622                           postinc2	equ	0xFDE
  3623                           postdec2	equ	0xFDD
  3624                           fsr2h	equ	0xFDA
  3625                           fsr2l	equ	0xFD9
  3626                           status	equ	0xFD8
  3627                           
  3628 ;; *************** function ___ftmul *****************
  3629 ;; Defined at:
  3630 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  f1              3   46[COMRAM] float 
  3633 ;;  f2              3   49[COMRAM] float 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  f3_as_produc    3   56[COMRAM] unsigned um
  3636 ;;  sign            1   60[COMRAM] unsigned char 
  3637 ;;  cntr            1   59[COMRAM] unsigned char 
  3638 ;;  exp             1   55[COMRAM] unsigned char 
  3639 ;; Return value:  Size  Location     Type
  3640 ;;                  3   46[COMRAM] float 
  3641 ;; Registers used:
  3642 ;;		wreg, status,2, status,0, cstack
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3648 ;;      Params:         6       0       0       0       0       0       0
  3649 ;;      Locals:         6       0       0       0       0       0       0
  3650 ;;      Temps:          3       0       0       0       0       0       0
  3651 ;;      Totals:        15       0       0       0       0       0       0
  3652 ;;Total ram usage:       15 bytes
  3653 ;; Hardware stack levels used:    1
  3654 ;; Hardware stack levels required when called:    5
  3655 ;; This function calls:
  3656 ;;		___ftpack
  3657 ;; This function is called by:
  3658 ;;		_Battery_Filter
  3659 ;;		_Battery_Convert
  3660 ;;		_Temp_Filter
  3661 ;;		_Temp_Convert
  3662 ;;		_log
  3663 ;;		_eval_poly
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667                           	psect	text23
  3668  001010                     __ptext23:
  3669                           	opt stack 0
  3670  001010                     ___ftmul:
  3671                           	opt stack 22
  3672                           
  3673                           ;incstack = 0
  3674  001010  C031  F035         	movff	___ftmul@f1+2,??___ftmul
  3675  001014  6A36               	clrf	(??___ftmul+1)& (0+255),c
  3676  001016  6A37               	clrf	(??___ftmul+2)& (0+255),c
  3677  001018  3430               	rlcf	___ftmul@f1+1,w,c
  3678  00101A  3635               	rlcf	??___ftmul& (0+255),f,c
  3679  00101C  E301               	bnc	u2281
  3680  00101E  8036               	bsf	(??___ftmul+1)& (0+255),0,c
  3681  001020                     u2281:
  3682  001020  5035               	movf	??___ftmul,w,c
  3683  001022  6E38               	movwf	___ftmul@exp,c
  3684  001024  6638               	tstfsz	___ftmul@exp& (0+255),c
  3685  001026  D007               	goto	l2553
  3686  001028  0E00               	movlw	0
  3687  00102A  6E2F               	movwf	?___ftmul,c
  3688  00102C  0E00               	movlw	0
  3689  00102E  6E30               	movwf	?___ftmul+1,c
  3690  001030  0E00               	movlw	0
  3691  001032  6E31               	movwf	?___ftmul+2,c
  3692  001034  0012               	return	
  3693  001036                     l2553:
  3694  001036  C034  F035         	movff	___ftmul@f2+2,??___ftmul
  3695  00103A  6A36               	clrf	(??___ftmul+1)& (0+255),c
  3696  00103C  6A37               	clrf	(??___ftmul+2)& (0+255),c
  3697  00103E  3433               	rlcf	___ftmul@f2+1,w,c
  3698  001040  3635               	rlcf	??___ftmul& (0+255),f,c
  3699  001042  E301               	bnc	u2301
  3700  001044  8036               	bsf	(??___ftmul+1)& (0+255),0,c
  3701  001046                     u2301:
  3702  001046  5035               	movf	??___ftmul,w,c
  3703  001048  6E3D               	movwf	___ftmul@sign,c
  3704  00104A  663D               	tstfsz	___ftmul@sign& (0+255),c
  3705  00104C  D007               	goto	l2559
  3706  00104E  0E00               	movlw	0
  3707  001050  6E2F               	movwf	?___ftmul,c
  3708  001052  0E00               	movlw	0
  3709  001054  6E30               	movwf	?___ftmul+1,c
  3710  001056  0E00               	movlw	0
  3711  001058  6E31               	movwf	?___ftmul+2,c
  3712  00105A  0012               	return	
  3713  00105C                     l2559:
  3714  00105C  503D               	movf	___ftmul@sign,w,c
  3715  00105E  0F7B               	addlw	123
  3716  001060  2638               	addwf	___ftmul@exp,f,c
  3717  001062  C031  F03D         	movff	___ftmul@f1+2,___ftmul@sign
  3718  001066  5034               	movf	___ftmul@f2+2,w,c
  3719  001068  1A3D               	xorwf	___ftmul@sign,f,c
  3720  00106A  0E80               	movlw	128
  3721  00106C  163D               	andwf	___ftmul@sign,f,c
  3722  00106E  8E30               	bsf	___ftmul@f1+1,7,c
  3723  001070  8E33               	bsf	___ftmul@f2+1,7,c
  3724  001072  0EFF               	movlw	255
  3725  001074  1632               	andwf	___ftmul@f2,f,c
  3726  001076  0EFF               	movlw	255
  3727  001078  1633               	andwf	___ftmul@f2+1,f,c
  3728  00107A  0E00               	movlw	0
  3729  00107C  1634               	andwf	___ftmul@f2+2,f,c
  3730  00107E  0E00               	movlw	0
  3731  001080  6E39               	movwf	___ftmul@f3_as_product,c
  3732  001082  0E00               	movlw	0
  3733  001084  6E3A               	movwf	___ftmul@f3_as_product+1,c
  3734  001086  0E00               	movlw	0
  3735  001088  6E3B               	movwf	___ftmul@f3_as_product+2,c
  3736  00108A  0E07               	movlw	7
  3737  00108C  6E3C               	movwf	___ftmul@cntr,c
  3738  00108E                     l2573:
  3739  00108E  A02F               	btfss	___ftmul@f1,0,c
  3740  001090  D006               	goto	l2577
  3741  001092  5032               	movf	___ftmul@f2,w,c
  3742  001094  2639               	addwf	___ftmul@f3_as_product,f,c
  3743  001096  5033               	movf	___ftmul@f2+1,w,c
  3744  001098  223A               	addwfc	___ftmul@f3_as_product+1,f,c
  3745  00109A  5034               	movf	___ftmul@f2+2,w,c
  3746  00109C  223B               	addwfc	___ftmul@f3_as_product+2,f,c
  3747  00109E                     l2577:
  3748  00109E  90D8               	bcf	status,0,c
  3749  0010A0  3231               	rrcf	___ftmul@f1+2,f,c
  3750  0010A2  3230               	rrcf	___ftmul@f1+1,f,c
  3751  0010A4  322F               	rrcf	___ftmul@f1,f,c
  3752  0010A6  90D8               	bcf	status,0,c
  3753  0010A8  3632               	rlcf	___ftmul@f2,f,c
  3754  0010AA  3633               	rlcf	___ftmul@f2+1,f,c
  3755  0010AC  3634               	rlcf	___ftmul@f2+2,f,c
  3756  0010AE  2E3C               	decfsz	___ftmul@cntr,f,c
  3757  0010B0  D7EE               	goto	l2573
  3758  0010B2  0E09               	movlw	9
  3759  0010B4  6E3C               	movwf	___ftmul@cntr,c
  3760  0010B6                     l2583:
  3761  0010B6  A02F               	btfss	___ftmul@f1,0,c
  3762  0010B8  D006               	goto	l2587
  3763  0010BA  5032               	movf	___ftmul@f2,w,c
  3764  0010BC  2639               	addwf	___ftmul@f3_as_product,f,c
  3765  0010BE  5033               	movf	___ftmul@f2+1,w,c
  3766  0010C0  223A               	addwfc	___ftmul@f3_as_product+1,f,c
  3767  0010C2  5034               	movf	___ftmul@f2+2,w,c
  3768  0010C4  223B               	addwfc	___ftmul@f3_as_product+2,f,c
  3769  0010C6                     l2587:
  3770  0010C6  90D8               	bcf	status,0,c
  3771  0010C8  3231               	rrcf	___ftmul@f1+2,f,c
  3772  0010CA  3230               	rrcf	___ftmul@f1+1,f,c
  3773  0010CC  322F               	rrcf	___ftmul@f1,f,c
  3774  0010CE  90D8               	bcf	status,0,c
  3775  0010D0  323B               	rrcf	___ftmul@f3_as_product+2,f,c
  3776  0010D2  323A               	rrcf	___ftmul@f3_as_product+1,f,c
  3777  0010D4  3239               	rrcf	___ftmul@f3_as_product,f,c
  3778  0010D6  2E3C               	decfsz	___ftmul@cntr,f,c
  3779  0010D8  D7EE               	goto	l2583
  3780  0010DA  C039  F014         	movff	___ftmul@f3_as_product,___ftpack@arg
  3781  0010DE  C03A  F015         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3782  0010E2  C03B  F016         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3783  0010E6  C038  F017         	movff	___ftmul@exp,___ftpack@exp
  3784  0010EA  C03D  F018         	movff	___ftmul@sign,___ftpack@sign
  3785  0010EE  ECBC  F009         	call	___ftpack	;wreg free
  3786  0010F2  C014  F02F         	movff	?___ftpack,?___ftmul
  3787  0010F6  C015  F030         	movff	?___ftpack+1,?___ftmul+1
  3788  0010FA  C016  F031         	movff	?___ftpack+2,?___ftmul+2
  3789  0010FE  0012               	return	
  3790  001100                     __end_of___ftmul:
  3791                           	opt stack 0
  3792                           tblptru	equ	0xFF8
  3793                           tblptrh	equ	0xFF7
  3794                           tblptrl	equ	0xFF6
  3795                           tablat	equ	0xFF5
  3796                           prodh	equ	0xFF4
  3797                           prodl	equ	0xFF3
  3798                           intcon	equ	0xFF2
  3799                           intcon2	equ	0xFF1
  3800                           postinc0	equ	0xFEE
  3801                           wreg	equ	0xFE8
  3802                           postinc1	equ	0xFE6
  3803                           postdec1	equ	0xFE5
  3804                           fsr1h	equ	0xFE2
  3805                           fsr1l	equ	0xFE1
  3806                           postinc2	equ	0xFDE
  3807                           postdec2	equ	0xFDD
  3808                           fsr2h	equ	0xFDA
  3809                           fsr2l	equ	0xFD9
  3810                           status	equ	0xFD8
  3811                           
  3812 ;; *************** function ___ftadd *****************
  3813 ;; Defined at:
  3814 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;  f1              3    0[BANK0 ] float 
  3817 ;;  f2              3    3[BANK0 ] float 
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  exp1            1   11[BANK0 ] unsigned char 
  3820 ;;  exp2            1   10[BANK0 ] unsigned char 
  3821 ;;  sign            1    9[BANK0 ] unsigned char 
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  3    0[BANK0 ] float 
  3824 ;; Registers used:
  3825 ;;		wreg, status,2, status,0, cstack
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3831 ;;      Params:         0       6       0       0       0       0       0
  3832 ;;      Locals:         0       3       0       0       0       0       0
  3833 ;;      Temps:          0       3       0       0       0       0       0
  3834 ;;      Totals:         0      12       0       0       0       0       0
  3835 ;;Total ram usage:       12 bytes
  3836 ;; Hardware stack levels used:    1
  3837 ;; Hardware stack levels required when called:    5
  3838 ;; This function calls:
  3839 ;;		___ftpack
  3840 ;; This function is called by:
  3841 ;;		_Battery_Filter
  3842 ;;		_Battery_Convert
  3843 ;;		_Temp_Filter
  3844 ;;		_Temp_Convert
  3845 ;;		___ftsub
  3846 ;;		_log
  3847 ;;		_eval_poly
  3848 ;;		_Current_Fault
  3849 ;;		_Current_Get
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text24
  3854  00061E                     __ptext24:
  3855                           	opt stack 0
  3856  00061E                     ___ftadd:
  3857                           	opt stack 22
  3858                           
  3859                           ;incstack = 0
  3860  00061E  0100               	movlb	0	; () banked
  3861  000620  C0D2  F0D6         	movff	___ftadd@f1+2,??___ftadd
  3862  000624  0100               	movlb	0	; () banked
  3863  000626  6BD7               	clrf	(??___ftadd+1)& (0+255),b
  3864  000628  6BD8               	clrf	(??___ftadd+2)& (0+255),b
  3865  00062A  0100               	movlb	0	; () banked
  3866  00062C  35D1               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  3867  00062E  0100               	movlb	0	; () banked
  3868  000630  37D6               	rlcf	??___ftadd& (0+255),f,b
  3869  000632  E301               	bnc	u2071
  3870  000634  81D7               	bsf	(??___ftadd+1)& (0+255),0,b
  3871  000636                     u2071:
  3872  000636  0100               	movlb	0	; () banked
  3873  000638  51D6               	movf	??___ftadd& (0+255),w,b
  3874  00063A  0100               	movlb	0	; () banked
  3875  00063C  6FDB               	movwf	___ftadd@exp1& (0+255),b
  3876  00063E  0100               	movlb	0	; () banked
  3877  000640  C0D5  F0D6         	movff	___ftadd@f2+2,??___ftadd
  3878  000644  0100               	movlb	0	; () banked
  3879  000646  6BD7               	clrf	(??___ftadd+1)& (0+255),b
  3880  000648  6BD8               	clrf	(??___ftadd+2)& (0+255),b
  3881  00064A  0100               	movlb	0	; () banked
  3882  00064C  35D4               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  3883  00064E  0100               	movlb	0	; () banked
  3884  000650  37D6               	rlcf	??___ftadd& (0+255),f,b
  3885  000652  E301               	bnc	u2081
  3886  000654  81D7               	bsf	(??___ftadd+1)& (0+255),0,b
  3887  000656                     u2081:
  3888  000656  0100               	movlb	0	; () banked
  3889  000658  51D6               	movf	??___ftadd& (0+255),w,b
  3890  00065A  0100               	movlb	0	; () banked
  3891  00065C  6FDA               	movwf	___ftadd@exp2& (0+255),b
  3892                           
  3893                           ; BSR set to: 0
  3894  00065E  0100               	movlb	0	; () banked
  3895  000660  51DB               	movf	___ftadd@exp1& (0+255),w,b
  3896  000662  B4D8               	btfsc	status,2,c
  3897  000664  D012               	goto	l793
  3898                           
  3899                           ; BSR set to: 0
  3900  000666  0100               	movlb	0	; () banked
  3901  000668  51DA               	movf	___ftadd@exp2& (0+255),w,b
  3902  00066A  0100               	movlb	0	; () banked
  3903  00066C  5DDB               	subwf	___ftadd@exp1& (0+255),w,b
  3904  00066E  B0D8               	btfsc	status,0,c
  3905  000670  D013               	goto	l2485
  3906                           
  3907                           ; BSR set to: 0
  3908  000672  0100               	movlb	0	; () banked
  3909  000674  51DB               	movf	___ftadd@exp1& (0+255),w,b
  3910  000676  0800               	sublw	0
  3911  000678  0100               	movlb	0	; () banked
  3912  00067A  25DA               	addwf	___ftadd@exp2& (0+255),w,b
  3913  00067C  0100               	movlb	0	; () banked
  3914  00067E  6FD6               	movwf	??___ftadd& (0+255),b
  3915  000680  0E19               	movlw	25
  3916  000682  0100               	movlb	0	; () banked
  3917  000684  5DD6               	subwf	??___ftadd& (0+255),w,b
  3918  000686  A0D8               	btfss	status,0,c
  3919  000688  D007               	goto	l2485
  3920  00068A                     l793:
  3921                           
  3922                           ; BSR set to: 0
  3923  00068A  C0D3  F0D0         	movff	___ftadd@f2,?___ftadd
  3924  00068E  C0D4  F0D1         	movff	___ftadd@f2+1,?___ftadd+1
  3925  000692  C0D5  F0D2         	movff	___ftadd@f2+2,?___ftadd+2
  3926  000696  0012               	return	
  3927  000698                     l2485:
  3928                           
  3929                           ; BSR set to: 0
  3930  000698  0100               	movlb	0	; () banked
  3931  00069A  51DA               	movf	___ftadd@exp2& (0+255),w,b
  3932  00069C  B4D8               	btfsc	status,2,c
  3933  00069E  D012               	goto	l797
  3934                           
  3935                           ; BSR set to: 0
  3936  0006A0  0100               	movlb	0	; () banked
  3937  0006A2  51DB               	movf	___ftadd@exp1& (0+255),w,b
  3938  0006A4  0100               	movlb	0	; () banked
  3939  0006A6  5DDA               	subwf	___ftadd@exp2& (0+255),w,b
  3940  0006A8  B0D8               	btfsc	status,0,c
  3941  0006AA  D013               	goto	l2491
  3942                           
  3943                           ; BSR set to: 0
  3944  0006AC  0100               	movlb	0	; () banked
  3945  0006AE  51DA               	movf	___ftadd@exp2& (0+255),w,b
  3946  0006B0  0800               	sublw	0
  3947  0006B2  0100               	movlb	0	; () banked
  3948  0006B4  25DB               	addwf	___ftadd@exp1& (0+255),w,b
  3949  0006B6  0100               	movlb	0	; () banked
  3950  0006B8  6FD6               	movwf	??___ftadd& (0+255),b
  3951  0006BA  0E19               	movlw	25
  3952  0006BC  0100               	movlb	0	; () banked
  3953  0006BE  5DD6               	subwf	??___ftadd& (0+255),w,b
  3954  0006C0  A0D8               	btfss	status,0,c
  3955  0006C2  D007               	goto	l2491
  3956  0006C4                     l797:
  3957                           
  3958                           ; BSR set to: 0
  3959  0006C4  C0D0  F0D0         	movff	___ftadd@f1,?___ftadd
  3960  0006C8  C0D1  F0D1         	movff	___ftadd@f1+1,?___ftadd+1
  3961  0006CC  C0D2  F0D2         	movff	___ftadd@f1+2,?___ftadd+2
  3962  0006D0  0012               	return	
  3963  0006D2                     l2491:
  3964                           
  3965                           ; BSR set to: 0
  3966  0006D2  0E06               	movlw	6
  3967  0006D4  0100               	movlb	0	; () banked
  3968  0006D6  6FD9               	movwf	___ftadd@sign& (0+255),b
  3969                           
  3970                           ; BSR set to: 0
  3971  0006D8  0100               	movlb	0	; () banked
  3972  0006DA  AFD2               	btfss	(___ftadd@f1+2)& (0+255),7,b
  3973  0006DC  D002               	goto	l2497
  3974                           
  3975                           ; BSR set to: 0
  3976  0006DE  0100               	movlb	0	; () banked
  3977  0006E0  8FD9               	bsf	___ftadd@sign& (0+255),7,b
  3978  0006E2                     l2497:
  3979                           
  3980                           ; BSR set to: 0
  3981  0006E2  0100               	movlb	0	; () banked
  3982  0006E4  AFD5               	btfss	(___ftadd@f2+2)& (0+255),7,b
  3983  0006E6  D002               	goto	l799
  3984                           
  3985                           ; BSR set to: 0
  3986  0006E8  0100               	movlb	0	; () banked
  3987  0006EA  8DD9               	bsf	___ftadd@sign& (0+255),6,b
  3988  0006EC                     l799:
  3989                           
  3990                           ; BSR set to: 0
  3991  0006EC  0100               	movlb	0	; () banked
  3992  0006EE  8FD1               	bsf	(___ftadd@f1+1)& (0+255),7,b
  3993                           
  3994                           ; BSR set to: 0
  3995  0006F0  0EFF               	movlw	255
  3996  0006F2  0100               	movlb	0	; () banked
  3997  0006F4  17D0               	andwf	___ftadd@f1& (0+255),f,b
  3998  0006F6  0EFF               	movlw	255
  3999  0006F8  0100               	movlb	0	; () banked
  4000  0006FA  17D1               	andwf	(___ftadd@f1+1)& (0+255),f,b
  4001  0006FC  0E00               	movlw	0
  4002  0006FE  0100               	movlb	0	; () banked
  4003  000700  17D2               	andwf	(___ftadd@f1+2)& (0+255),f,b
  4004  000702  0100               	movlb	0	; () banked
  4005  000704  8FD4               	bsf	(___ftadd@f2+1)& (0+255),7,b
  4006                           
  4007                           ; BSR set to: 0
  4008  000706  0EFF               	movlw	255
  4009  000708  0100               	movlb	0	; () banked
  4010  00070A  17D3               	andwf	___ftadd@f2& (0+255),f,b
  4011  00070C  0EFF               	movlw	255
  4012  00070E  0100               	movlb	0	; () banked
  4013  000710  17D4               	andwf	(___ftadd@f2+1)& (0+255),f,b
  4014  000712  0E00               	movlw	0
  4015  000714  0100               	movlb	0	; () banked
  4016  000716  17D5               	andwf	(___ftadd@f2+2)& (0+255),f,b
  4017                           
  4018                           ; BSR set to: 0
  4019  000718  0100               	movlb	0	; () banked
  4020  00071A  51DA               	movf	___ftadd@exp2& (0+255),w,b
  4021  00071C  0100               	movlb	0	; () banked
  4022  00071E  5DDB               	subwf	___ftadd@exp1& (0+255),w,b
  4023  000720  B0D8               	btfsc	status,0,c
  4024  000722  D02A               	goto	l2517
  4025  000724                     l2507:
  4026                           
  4027                           ; BSR set to: 0
  4028  000724  0100               	movlb	0	; () banked
  4029  000726  90D8               	bcf	status,0,c
  4030  000728  0100               	movlb	0	; () banked
  4031  00072A  37D3               	rlcf	___ftadd@f2& (0+255),f,b
  4032  00072C  0100               	movlb	0	; () banked
  4033  00072E  37D4               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  4034  000730  0100               	movlb	0	; () banked
  4035  000732  37D5               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  4036  000734  0100               	movlb	0	; () banked
  4037  000736  07DA               	decf	___ftadd@exp2& (0+255),f,b
  4038                           
  4039                           ; BSR set to: 0
  4040  000738  0100               	movlb	0	; () banked
  4041  00073A  51DA               	movf	___ftadd@exp2& (0+255),w,b
  4042  00073C  0100               	movlb	0	; () banked
  4043  00073E  19DB               	xorwf	___ftadd@exp1& (0+255),w,b
  4044  000740  B4D8               	btfsc	status,2,c
  4045  000742  D014               	goto	l2515
  4046                           
  4047                           ; BSR set to: 0
  4048  000744  0100               	movlb	0	; () banked
  4049  000746  07D9               	decf	___ftadd@sign& (0+255),f,b
  4050  000748  C0D9  F0D6         	movff	___ftadd@sign,??___ftadd
  4051  00074C  0E07               	movlw	7
  4052  00074E  0100               	movlb	0	; () banked
  4053  000750  17D6               	andwf	??___ftadd& (0+255),f,b
  4054  000752  B4D8               	btfsc	status,2,c
  4055  000754  D00B               	goto	l2515
  4056  000756  D7E6               	goto	l2507
  4057  000758                     l2513:
  4058                           
  4059                           ; BSR set to: 0
  4060  000758  0100               	movlb	0	; () banked
  4061  00075A  90D8               	bcf	status,0,c
  4062  00075C  0100               	movlb	0	; () banked
  4063  00075E  33D2               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  4064  000760  0100               	movlb	0	; () banked
  4065  000762  33D1               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  4066  000764  0100               	movlb	0	; () banked
  4067  000766  33D0               	rrcf	___ftadd@f1& (0+255),f,b
  4068  000768  0100               	movlb	0	; () banked
  4069  00076A  2BDB               	incf	___ftadd@exp1& (0+255),f,b
  4070  00076C                     l2515:
  4071                           
  4072                           ; BSR set to: 0
  4073  00076C  0100               	movlb	0	; () banked
  4074  00076E  51DA               	movf	___ftadd@exp2& (0+255),w,b
  4075  000770  0100               	movlb	0	; () banked
  4076  000772  63DB               	cpfseq	___ftadd@exp1& (0+255),b
  4077  000774  D7F1               	goto	l2513
  4078  000776  D02F               	goto	l808
  4079  000778                     l2517:
  4080                           
  4081                           ; BSR set to: 0
  4082  000778  0100               	movlb	0	; () banked
  4083  00077A  51DB               	movf	___ftadd@exp1& (0+255),w,b
  4084  00077C  0100               	movlb	0	; () banked
  4085  00077E  5DDA               	subwf	___ftadd@exp2& (0+255),w,b
  4086  000780  B0D8               	btfsc	status,0,c
  4087  000782  D029               	goto	l808
  4088  000784                     l2519:
  4089                           
  4090                           ; BSR set to: 0
  4091  000784  0100               	movlb	0	; () banked
  4092  000786  90D8               	bcf	status,0,c
  4093  000788  0100               	movlb	0	; () banked
  4094  00078A  37D0               	rlcf	___ftadd@f1& (0+255),f,b
  4095  00078C  0100               	movlb	0	; () banked
  4096  00078E  37D1               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  4097  000790  0100               	movlb	0	; () banked
  4098  000792  37D2               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  4099  000794  0100               	movlb	0	; () banked
  4100  000796  07DB               	decf	___ftadd@exp1& (0+255),f,b
  4101                           
  4102                           ; BSR set to: 0
  4103  000798  0100               	movlb	0	; () banked
  4104  00079A  51DA               	movf	___ftadd@exp2& (0+255),w,b
  4105  00079C  0100               	movlb	0	; () banked
  4106  00079E  19DB               	xorwf	___ftadd@exp1& (0+255),w,b
  4107  0007A0  B4D8               	btfsc	status,2,c
  4108  0007A2  D014               	goto	l2527
  4109                           
  4110                           ; BSR set to: 0
  4111  0007A4  0100               	movlb	0	; () banked
  4112  0007A6  07D9               	decf	___ftadd@sign& (0+255),f,b
  4113  0007A8  C0D9  F0D6         	movff	___ftadd@sign,??___ftadd
  4114  0007AC  0E07               	movlw	7
  4115  0007AE  0100               	movlb	0	; () banked
  4116  0007B0  17D6               	andwf	??___ftadd& (0+255),f,b
  4117  0007B2  B4D8               	btfsc	status,2,c
  4118  0007B4  D00B               	goto	l2527
  4119  0007B6  D7E6               	goto	l2519
  4120  0007B8                     l2525:
  4121                           
  4122                           ; BSR set to: 0
  4123  0007B8  0100               	movlb	0	; () banked
  4124  0007BA  90D8               	bcf	status,0,c
  4125  0007BC  0100               	movlb	0	; () banked
  4126  0007BE  33D5               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  4127  0007C0  0100               	movlb	0	; () banked
  4128  0007C2  33D4               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  4129  0007C4  0100               	movlb	0	; () banked
  4130  0007C6  33D3               	rrcf	___ftadd@f2& (0+255),f,b
  4131  0007C8  0100               	movlb	0	; () banked
  4132  0007CA  2BDA               	incf	___ftadd@exp2& (0+255),f,b
  4133  0007CC                     l2527:
  4134                           
  4135                           ; BSR set to: 0
  4136  0007CC  0100               	movlb	0	; () banked
  4137  0007CE  51DA               	movf	___ftadd@exp2& (0+255),w,b
  4138  0007D0  0100               	movlb	0	; () banked
  4139  0007D2  63DB               	cpfseq	___ftadd@exp1& (0+255),b
  4140  0007D4  D7F1               	goto	l2525
  4141  0007D6                     l808:
  4142                           
  4143                           ; BSR set to: 0
  4144  0007D6  0100               	movlb	0	; () banked
  4145  0007D8  AFD9               	btfss	___ftadd@sign& (0+255),7,b
  4146  0007DA  D012               	goto	l817
  4147                           
  4148                           ; BSR set to: 0
  4149  0007DC  0EFF               	movlw	255
  4150  0007DE  0100               	movlb	0	; () banked
  4151  0007E0  1BD0               	xorwf	___ftadd@f1& (0+255),f,b
  4152  0007E2  0EFF               	movlw	255
  4153  0007E4  0100               	movlb	0	; () banked
  4154  0007E6  1BD1               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  4155  0007E8  0EFF               	movlw	255
  4156  0007EA  0100               	movlb	0	; () banked
  4157  0007EC  1BD2               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  4158  0007EE  0E01               	movlw	1
  4159  0007F0  0100               	movlb	0	; () banked
  4160  0007F2  27D0               	addwf	___ftadd@f1& (0+255),f,b
  4161  0007F4  0E00               	movlw	0
  4162  0007F6  0100               	movlb	0	; () banked
  4163  0007F8  23D1               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  4164  0007FA  0E00               	movlw	0
  4165  0007FC  0100               	movlb	0	; () banked
  4166  0007FE  23D2               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  4167  000800                     l817:
  4168                           
  4169                           ; BSR set to: 0
  4170  000800  0100               	movlb	0	; () banked
  4171  000802  ADD9               	btfss	___ftadd@sign& (0+255),6,b
  4172  000804  D012               	goto	l2533
  4173                           
  4174                           ; BSR set to: 0
  4175  000806  0EFF               	movlw	255
  4176  000808  0100               	movlb	0	; () banked
  4177  00080A  1BD3               	xorwf	___ftadd@f2& (0+255),f,b
  4178  00080C  0EFF               	movlw	255
  4179  00080E  0100               	movlb	0	; () banked
  4180  000810  1BD4               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  4181  000812  0EFF               	movlw	255
  4182  000814  0100               	movlb	0	; () banked
  4183  000816  1BD5               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  4184  000818  0E01               	movlw	1
  4185  00081A  0100               	movlb	0	; () banked
  4186  00081C  27D3               	addwf	___ftadd@f2& (0+255),f,b
  4187  00081E  0E00               	movlw	0
  4188  000820  0100               	movlb	0	; () banked
  4189  000822  23D4               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  4190  000824  0E00               	movlw	0
  4191  000826  0100               	movlb	0	; () banked
  4192  000828  23D5               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  4193  00082A                     l2533:
  4194                           
  4195                           ; BSR set to: 0
  4196  00082A  0E00               	movlw	0
  4197  00082C  0100               	movlb	0	; () banked
  4198  00082E  6FD9               	movwf	___ftadd@sign& (0+255),b
  4199                           
  4200                           ; BSR set to: 0
  4201  000830  0100               	movlb	0	; () banked
  4202  000832  51D0               	movf	___ftadd@f1& (0+255),w,b
  4203  000834  0100               	movlb	0	; () banked
  4204  000836  27D3               	addwf	___ftadd@f2& (0+255),f,b
  4205  000838  0100               	movlb	0	; () banked
  4206  00083A  51D1               	movf	(___ftadd@f1+1)& (0+255),w,b
  4207  00083C  0100               	movlb	0	; () banked
  4208  00083E  23D4               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  4209  000840  0100               	movlb	0	; () banked
  4210  000842  51D2               	movf	(___ftadd@f1+2)& (0+255),w,b
  4211  000844  0100               	movlb	0	; () banked
  4212  000846  23D5               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  4213                           
  4214                           ; BSR set to: 0
  4215  000848  0100               	movlb	0	; () banked
  4216  00084A  AFD5               	btfss	(___ftadd@f2+2)& (0+255),7,b
  4217  00084C  D015               	goto	l2543
  4218                           
  4219                           ; BSR set to: 0
  4220  00084E  0EFF               	movlw	255
  4221  000850  0100               	movlb	0	; () banked
  4222  000852  1BD3               	xorwf	___ftadd@f2& (0+255),f,b
  4223  000854  0EFF               	movlw	255
  4224  000856  0100               	movlb	0	; () banked
  4225  000858  1BD4               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  4226  00085A  0EFF               	movlw	255
  4227  00085C  0100               	movlb	0	; () banked
  4228  00085E  1BD5               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  4229  000860  0E01               	movlw	1
  4230  000862  0100               	movlb	0	; () banked
  4231  000864  27D3               	addwf	___ftadd@f2& (0+255),f,b
  4232  000866  0E00               	movlw	0
  4233  000868  0100               	movlb	0	; () banked
  4234  00086A  23D4               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  4235  00086C  0E00               	movlw	0
  4236  00086E  0100               	movlb	0	; () banked
  4237  000870  23D5               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  4238                           
  4239                           ; BSR set to: 0
  4240  000872  0E01               	movlw	1
  4241  000874  0100               	movlb	0	; () banked
  4242  000876  6FD9               	movwf	___ftadd@sign& (0+255),b
  4243  000878                     l2543:
  4244                           
  4245                           ; BSR set to: 0
  4246  000878  C0D3  F014         	movff	___ftadd@f2,___ftpack@arg
  4247  00087C  C0D4  F015         	movff	___ftadd@f2+1,___ftpack@arg+1
  4248  000880  C0D5  F016         	movff	___ftadd@f2+2,___ftpack@arg+2
  4249  000884  C0DB  F017         	movff	___ftadd@exp1,___ftpack@exp
  4250  000888  C0D9  F018         	movff	___ftadd@sign,___ftpack@sign
  4251  00088C  ECBC  F009         	call	___ftpack	;wreg free
  4252  000890  C014  F0D0         	movff	?___ftpack,?___ftadd
  4253  000894  C015  F0D1         	movff	?___ftpack+1,?___ftadd+1
  4254  000898  C016  F0D2         	movff	?___ftpack+2,?___ftadd+2
  4255  00089C  0012               	return	
  4256  00089E                     __end_of___ftadd:
  4257                           	opt stack 0
  4258                           tblptru	equ	0xFF8
  4259                           tblptrh	equ	0xFF7
  4260                           tblptrl	equ	0xFF6
  4261                           tablat	equ	0xFF5
  4262                           prodh	equ	0xFF4
  4263                           prodl	equ	0xFF3
  4264                           intcon	equ	0xFF2
  4265                           intcon2	equ	0xFF1
  4266                           postinc0	equ	0xFEE
  4267                           wreg	equ	0xFE8
  4268                           postinc1	equ	0xFE6
  4269                           postdec1	equ	0xFE5
  4270                           fsr1h	equ	0xFE2
  4271                           fsr1l	equ	0xFE1
  4272                           postinc2	equ	0xFDE
  4273                           postdec2	equ	0xFDD
  4274                           fsr2h	equ	0xFDA
  4275                           fsr2l	equ	0xFD9
  4276                           status	equ	0xFD8
  4277                           
  4278 ;; *************** function ___ftpack *****************
  4279 ;; Defined at:
  4280 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;  arg             3   19[COMRAM] unsigned um
  4283 ;;  exp             1   22[COMRAM] unsigned char 
  4284 ;;  sign            1   23[COMRAM] unsigned char 
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;		None
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  3   19[COMRAM] float 
  4289 ;; Registers used:
  4290 ;;		wreg, status,2, status,0
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4296 ;;      Params:         5       0       0       0       0       0       0
  4297 ;;      Locals:         0       0       0       0       0       0       0
  4298 ;;      Temps:          3       0       0       0       0       0       0
  4299 ;;      Totals:         8       0       0       0       0       0       0
  4300 ;;Total ram usage:        8 bytes
  4301 ;; Hardware stack levels used:    1
  4302 ;; Hardware stack levels required when called:    4
  4303 ;; This function calls:
  4304 ;;		Nothing
  4305 ;; This function is called by:
  4306 ;;		___awtoft
  4307 ;;		___ftadd
  4308 ;;		___ftdiv
  4309 ;;		___ftmul
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313                           	psect	text25
  4314  001378                     __ptext25:
  4315                           	opt stack 0
  4316  001378                     ___ftpack:
  4317                           	opt stack 22
  4318                           
  4319                           ;incstack = 0
  4320  001378  5017               	movf	___ftpack@exp,w,c
  4321  00137A  B4D8               	btfsc	status,2,c
  4322  00137C  D005               	goto	l2441
  4323  00137E  5014               	movf	___ftpack@arg,w,c
  4324  001380  1015               	iorwf	___ftpack@arg+1,w,c
  4325  001382  1016               	iorwf	___ftpack@arg+2,w,c
  4326  001384  A4D8               	btfss	status,2,c
  4327  001386  D00C               	goto	l2447
  4328  001388                     l2441:
  4329  001388  0E00               	movlw	0
  4330  00138A  6E14               	movwf	?___ftpack,c
  4331  00138C  0E00               	movlw	0
  4332  00138E  6E15               	movwf	?___ftpack+1,c
  4333  001390  0E00               	movlw	0
  4334  001392  6E16               	movwf	?___ftpack+2,c
  4335  001394  0012               	return	
  4336  001396                     l2445:
  4337  001396  2A17               	incf	___ftpack@exp,f,c
  4338  001398  90D8               	bcf	status,0,c
  4339  00139A  3216               	rrcf	___ftpack@arg+2,f,c
  4340  00139C  3215               	rrcf	___ftpack@arg+1,f,c
  4341  00139E  3214               	rrcf	___ftpack@arg,f,c
  4342  0013A0                     l2447:
  4343  0013A0  0E00               	movlw	0
  4344  0013A2  1414               	andwf	___ftpack@arg,w,c
  4345  0013A4  6E19               	movwf	??___ftpack& (0+255),c
  4346  0013A6  0E00               	movlw	0
  4347  0013A8  1415               	andwf	___ftpack@arg+1,w,c
  4348  0013AA  6E1A               	movwf	(??___ftpack+1)& (0+255),c
  4349  0013AC  0EFE               	movlw	254
  4350  0013AE  1416               	andwf	___ftpack@arg+2,w,c
  4351  0013B0  6E1B               	movwf	(??___ftpack+2)& (0+255),c
  4352  0013B2  5019               	movf	??___ftpack,w,c
  4353  0013B4  101A               	iorwf	??___ftpack+1,w,c
  4354  0013B6  101B               	iorwf	??___ftpack+2,w,c
  4355  0013B8  B4D8               	btfsc	status,2,c
  4356  0013BA  D00C               	goto	l2453
  4357  0013BC  D7EC               	goto	l2445
  4358  0013BE                     l2449:
  4359  0013BE  2A17               	incf	___ftpack@exp,f,c
  4360  0013C0  0E01               	movlw	1
  4361  0013C2  2614               	addwf	___ftpack@arg,f,c
  4362  0013C4  0E00               	movlw	0
  4363  0013C6  2215               	addwfc	___ftpack@arg+1,f,c
  4364  0013C8  0E00               	movlw	0
  4365  0013CA  2216               	addwfc	___ftpack@arg+2,f,c
  4366  0013CC  90D8               	bcf	status,0,c
  4367  0013CE  3216               	rrcf	___ftpack@arg+2,f,c
  4368  0013D0  3215               	rrcf	___ftpack@arg+1,f,c
  4369  0013D2  3214               	rrcf	___ftpack@arg,f,c
  4370  0013D4                     l2453:
  4371  0013D4  0E00               	movlw	0
  4372  0013D6  1414               	andwf	___ftpack@arg,w,c
  4373  0013D8  6E19               	movwf	??___ftpack& (0+255),c
  4374  0013DA  0E00               	movlw	0
  4375  0013DC  1415               	andwf	___ftpack@arg+1,w,c
  4376  0013DE  6E1A               	movwf	(??___ftpack+1)& (0+255),c
  4377  0013E0  0EFF               	movlw	255
  4378  0013E2  1416               	andwf	___ftpack@arg+2,w,c
  4379  0013E4  6E1B               	movwf	(??___ftpack+2)& (0+255),c
  4380  0013E6  5019               	movf	??___ftpack,w,c
  4381  0013E8  101A               	iorwf	??___ftpack+1,w,c
  4382  0013EA  101B               	iorwf	??___ftpack+2,w,c
  4383  0013EC  B4D8               	btfsc	status,2,c
  4384  0013EE  D006               	goto	l2457
  4385  0013F0  D7E6               	goto	l2449
  4386  0013F2                     l2455:
  4387  0013F2  0617               	decf	___ftpack@exp,f,c
  4388  0013F4  90D8               	bcf	status,0,c
  4389  0013F6  3614               	rlcf	___ftpack@arg,f,c
  4390  0013F8  3615               	rlcf	___ftpack@arg+1,f,c
  4391  0013FA  3616               	rlcf	___ftpack@arg+2,f,c
  4392  0013FC                     l2457:
  4393  0013FC  AE15               	btfss	___ftpack@arg+1,7,c
  4394  0013FE  D7F9               	goto	l2455
  4395  001400  A017               	btfss	___ftpack@exp,0,c
  4396  001402  9E15               	bcf	___ftpack@arg+1,7,c
  4397  001404  90D8               	bcf	status,0,c
  4398  001406  3217               	rrcf	___ftpack@exp,f,c
  4399  001408  5017               	movf	___ftpack@exp,w,c
  4400  00140A  1216               	iorwf	___ftpack@arg+2,f,c
  4401  00140C  5018               	movf	___ftpack@sign,w,c
  4402  00140E  A4D8               	btfss	status,2,c
  4403  001410  8E16               	bsf	___ftpack@arg+2,7,c
  4404  001412  C014  F014         	movff	___ftpack@arg,?___ftpack
  4405  001416  C015  F015         	movff	___ftpack@arg+1,?___ftpack+1
  4406  00141A  C016  F016         	movff	___ftpack@arg+2,?___ftpack+2
  4407  00141E  0012               	return	
  4408  001420                     __end_of___ftpack:
  4409                           	opt stack 0
  4410                           tblptru	equ	0xFF8
  4411                           tblptrh	equ	0xFF7
  4412                           tblptrl	equ	0xFF6
  4413                           tablat	equ	0xFF5
  4414                           prodh	equ	0xFF4
  4415                           prodl	equ	0xFF3
  4416                           intcon	equ	0xFF2
  4417                           intcon2	equ	0xFF1
  4418                           postinc0	equ	0xFEE
  4419                           wreg	equ	0xFE8
  4420                           postinc1	equ	0xFE6
  4421                           postdec1	equ	0xFE5
  4422                           fsr1h	equ	0xFE2
  4423                           fsr1l	equ	0xFE1
  4424                           postinc2	equ	0xFDE
  4425                           postdec2	equ	0xFDD
  4426                           fsr2h	equ	0xFDA
  4427                           fsr2l	equ	0xFD9
  4428                           status	equ	0xFD8
  4429                           
  4430 ;; *************** function _INTERRUPT_InterruptManager *****************
  4431 ;; Defined at:
  4432 ;;		line 69 in file "mcc_generated_files/interrupt_manager.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;		None
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;		None
  4437 ;; Return value:  Size  Location     Type
  4438 ;;		None               void
  4439 ;; Registers used:
  4440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4446 ;;      Params:         0       0       0       0       0       0       0
  4447 ;;      Locals:         0       0       0       0       0       0       0
  4448 ;;      Temps:         14       0       0       0       0       0       0
  4449 ;;      Totals:        14       0       0       0       0       0       0
  4450 ;;Total ram usage:       14 bytes
  4451 ;; Hardware stack levels used:    1
  4452 ;; Hardware stack levels required when called:    3
  4453 ;; This function calls:
  4454 ;;		_ADC_ISR
  4455 ;;		_EUSART1_Receive_ISR
  4456 ;;		_EUSART1_Transmit_ISR
  4457 ;;		_TMR1_ISR
  4458 ;; This function is called by:
  4459 ;;		Interrupt level 2
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463                           	psect	intcode
  4464  000008                     __pintcode:
  4465                           	opt stack 0
  4466  000008                     _INTERRUPT_InterruptManager:
  4467                           	opt stack 22
  4468                           
  4469                           ;incstack = 0
  4470  000008  CFFA F006          	movff	pclath,??_INTERRUPT_InterruptManager
  4471  00000C  CFFB F007          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4472  000010  CFE9 F008          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  4473  000014  CFEA F009          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  4474  000018  CFE1 F00A          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  4475  00001C  CFE2 F00B          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  4476  000020  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  4477  000024  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  4478  000028  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+8
  4479  00002C  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+9
  4480  000030  CFF6 F010          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  4481  000034  CFF7 F011          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  4482  000038  CFF8 F012          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  4483  00003C  CFF5 F013          	movff	tablat,??_INTERRUPT_InterruptManager+13
  4484                           
  4485                           ;interrupt_manager.c: 72: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  4486  000040  BA9D               	btfsc	3997,5,c	;volatile
  4487  000042  AA9E               	btfss	3998,5,c	;volatile
  4488  000044  D003               	goto	i2l238
  4489                           
  4490                           ;interrupt_manager.c: 73: {
  4491                           ;interrupt_manager.c: 74: EUSART1_Receive_ISR();
  4492  000046  ECBB  F00B         	call	_EUSART1_Receive_ISR	;wreg free
  4493                           
  4494                           ;interrupt_manager.c: 75: }
  4495  00004A  D011               	goto	i2l246
  4496  00004C                     i2l238:
  4497                           
  4498                           ;interrupt_manager.c: 76: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  4499  00004C  BC9D               	btfsc	3997,6,c	;volatile
  4500  00004E  AC9E               	btfss	3998,6,c	;volatile
  4501  000050  D003               	goto	i2l240
  4502                           
  4503                           ;interrupt_manager.c: 77: {
  4504                           ;interrupt_manager.c: 78: ADC_ISR();
  4505  000052  EC65  F00C         	call	_ADC_ISR	;wreg free
  4506                           
  4507                           ;interrupt_manager.c: 79: }
  4508  000056  D00B               	goto	i2l246
  4509  000058                     i2l240:
  4510                           
  4511                           ;interrupt_manager.c: 80: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  4512  000058  B89D               	btfsc	3997,4,c	;volatile
  4513  00005A  A89E               	btfss	3998,4,c	;volatile
  4514  00005C  D003               	goto	i2l242
  4515                           
  4516                           ;interrupt_manager.c: 81: {
  4517                           ;interrupt_manager.c: 82: EUSART1_Transmit_ISR();
  4518  00005E  EC88  F00B         	call	_EUSART1_Transmit_ISR	;wreg free
  4519                           
  4520                           ;interrupt_manager.c: 83: }
  4521  000062  D005               	goto	i2l246
  4522  000064                     i2l242:
  4523                           
  4524                           ;interrupt_manager.c: 84: else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  4525  000064  B09D               	btfsc	3997,0,c	;volatile
  4526  000066  A09E               	btfss	3998,0,c	;volatile
  4527  000068  D002               	goto	i2l246
  4528                           
  4529                           ;interrupt_manager.c: 85: {
  4530                           ;interrupt_manager.c: 86: TMR1_ISR();
  4531  00006A  ECD6  F00A         	call	_TMR1_ISR	;wreg free
  4532  00006E                     i2l246:
  4533  00006E  C013  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  4534  000072  C012  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  4535  000076  C011  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  4536  00007A  C010  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  4537  00007E  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4538  000082  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4539  000086  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4540  00008A  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4541  00008E  C00B  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4542  000092  C00A  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4543  000096  C009  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4544  00009A  C008  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4545  00009E  C007  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4546  0000A2  C006  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4547  0000A6  0011               	retfie		f
  4548  0000A8                     __end_of_INTERRUPT_InterruptManager:
  4549                           	opt stack 0
  4550                           pclatu	equ	0xFFB
  4551                           pclath	equ	0xFFA
  4552                           tblptru	equ	0xFF8
  4553                           tblptrh	equ	0xFF7
  4554                           tblptrl	equ	0xFF6
  4555                           tablat	equ	0xFF5
  4556                           prodh	equ	0xFF4
  4557                           prodl	equ	0xFF3
  4558                           intcon	equ	0xFF2
  4559                           intcon2	equ	0xFF1
  4560                           postinc0	equ	0xFEE
  4561                           fsr0h	equ	0xFEA
  4562                           fsr0l	equ	0xFE9
  4563                           wreg	equ	0xFE8
  4564                           postinc1	equ	0xFE6
  4565                           postdec1	equ	0xFE5
  4566                           fsr1h	equ	0xFE2
  4567                           fsr1l	equ	0xFE1
  4568                           postinc2	equ	0xFDE
  4569                           postdec2	equ	0xFDD
  4570                           fsr2h	equ	0xFDA
  4571                           fsr2l	equ	0xFD9
  4572                           status	equ	0xFD8
  4573                           
  4574 ;; *************** function _TMR1_ISR *****************
  4575 ;; Defined at:
  4576 ;;		line 115 in file "mcc_generated_files/tmr1.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;		None
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;		None
  4581 ;; Return value:  Size  Location     Type
  4582 ;;		None               void
  4583 ;; Registers used:
  4584 ;;		wreg, status,2, status,0, cstack
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4590 ;;      Params:         0       0       0       0       0       0       0
  4591 ;;      Locals:         0       0       0       0       0       0       0
  4592 ;;      Temps:          3       0       0       0       0       0       0
  4593 ;;      Totals:         3       0       0       0       0       0       0
  4594 ;;Total ram usage:        3 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; Hardware stack levels required when called:    2
  4597 ;; This function calls:
  4598 ;;		_Battery_Read
  4599 ;;		_Current_Read
  4600 ;;		_TMR1_CallBack
  4601 ;;		_Temp_Read
  4602 ;; This function is called by:
  4603 ;;		_INTERRUPT_InterruptManager
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           	psect	text27
  4608  0015AC                     __ptext27:
  4609                           	opt stack 0
  4610  0015AC                     _TMR1_ISR:
  4611                           	opt stack 22
  4612                           
  4613                           ;tmr1.c: 117: static volatile unsigned int CountCallBack = 0;
  4614                           ;tmr1.c: 120: PIR1bits.TMR1IF = 0;
  4615                           
  4616                           ;incstack = 0
  4617  0015AC  909E               	bcf	3998,0,c	;volatile
  4618                           
  4619                           ;tmr1.c: 123: TMR1H = (timer1ReloadVal >> 8);
  4620  0015AE  C04A  F003         	movff	_timer1ReloadVal+1,??_TMR1_ISR	;volatile
  4621  0015B2  C003  F004         	movff	??_TMR1_ISR,??_TMR1_ISR+1
  4622  0015B6  6A05               	clrf	(??_TMR1_ISR+2)& (0+255),c
  4623  0015B8  5004               	movf	??_TMR1_ISR+1,w,c
  4624  0015BA  6ECF               	movwf	4047,c	;volatile
  4625                           
  4626                           ;tmr1.c: 124: TMR1L = (uint8_t) timer1ReloadVal;
  4627  0015BC  C049  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  4628                           
  4629                           ;tmr1.c: 127: if (++CountCallBack >= 4)
  4630  0015C0  4A3E               	infsnz	TMR1_ISR@CountCallBack,f,c	;volatile
  4631  0015C2  2A3F               	incf	TMR1_ISR@CountCallBack+1,f,c	;volatile
  4632  0015C4  0E04               	movlw	4
  4633  0015C6  5C3E               	subwf	TMR1_ISR@CountCallBack& (0+255),w,c	;volatile
  4634  0015C8  0E00               	movlw	0
  4635  0015CA  583F               	subwfb	(TMR1_ISR@CountCallBack+1)& (0+255),w,c	;volatile
  4636  0015CC  A0D8               	btfss	status,0,c
  4637  0015CE  D006               	goto	i2l1487
  4638                           
  4639                           ;tmr1.c: 128: {
  4640                           ;tmr1.c: 130: TMR1_CallBack();
  4641  0015D0  EC67  F00C         	call	_TMR1_CallBack	;wreg free
  4642                           
  4643                           ;tmr1.c: 133: CountCallBack = 0;
  4644  0015D4  0E00               	movlw	0
  4645  0015D6  6E3F               	movwf	TMR1_ISR@CountCallBack+1,c	;volatile
  4646  0015D8  0E00               	movlw	0
  4647  0015DA  6E3E               	movwf	TMR1_ISR@CountCallBack,c	;volatile
  4648  0015DC                     i2l1487:
  4649                           
  4650                           ;tmr1.c: 134: }
  4651                           ;tmr1.c: 135: if(CountCallBack == 1)
  4652  0015DC  043E               	decf	TMR1_ISR@CountCallBack,w,c	;volatile
  4653  0015DE  103F               	iorwf	TMR1_ISR@CountCallBack+1,w,c	;volatile
  4654  0015E0  B4D8               	btfsc	status,2,c
  4655                           
  4656                           ;tmr1.c: 136: {
  4657                           ;tmr1.c: 137: Current_Read();
  4658  0015E2  EC4C  F00C         	call	_Current_Read	;wreg free
  4659                           
  4660                           ;tmr1.c: 138: }
  4661                           ;tmr1.c: 139: if(CountCallBack == 2)
  4662  0015E6  503E               	movf	TMR1_ISR@CountCallBack,w,c	;volatile
  4663  0015E8  0A02               	xorlw	2
  4664  0015EA  103F               	iorwf	TMR1_ISR@CountCallBack+1,w,c	;volatile
  4665  0015EC  B4D8               	btfsc	status,2,c
  4666                           
  4667                           ;tmr1.c: 140: {
  4668                           ;tmr1.c: 141: Battery_Read();
  4669  0015EE  EC40  F00C         	call	_Battery_Read	;wreg free
  4670                           
  4671                           ;tmr1.c: 142: }
  4672                           ;tmr1.c: 143: if(CountCallBack == 3)
  4673  0015F2  503E               	movf	TMR1_ISR@CountCallBack,w,c	;volatile
  4674  0015F4  0A03               	xorlw	3
  4675  0015F6  103F               	iorwf	TMR1_ISR@CountCallBack+1,w,c	;volatile
  4676  0015F8  A4D8               	btfss	status,2,c
  4677  0015FA  0012               	return	
  4678                           
  4679                           ;tmr1.c: 144: {
  4680                           ;tmr1.c: 145: Temp_Read();
  4681  0015FC  EC34  F00C         	call	_Temp_Read	;wreg free
  4682  001600  0012               	return	
  4683  001602                     __end_of_TMR1_ISR:
  4684                           	opt stack 0
  4685                           pclatu	equ	0xFFB
  4686                           pclath	equ	0xFFA
  4687                           tblptru	equ	0xFF8
  4688                           tblptrh	equ	0xFF7
  4689                           tblptrl	equ	0xFF6
  4690                           tablat	equ	0xFF5
  4691                           prodh	equ	0xFF4
  4692                           prodl	equ	0xFF3
  4693                           intcon	equ	0xFF2
  4694                           intcon2	equ	0xFF1
  4695                           postinc0	equ	0xFEE
  4696                           fsr0h	equ	0xFEA
  4697                           fsr0l	equ	0xFE9
  4698                           wreg	equ	0xFE8
  4699                           postinc1	equ	0xFE6
  4700                           postdec1	equ	0xFE5
  4701                           fsr1h	equ	0xFE2
  4702                           fsr1l	equ	0xFE1
  4703                           postinc2	equ	0xFDE
  4704                           postdec2	equ	0xFDD
  4705                           fsr2h	equ	0xFDA
  4706                           fsr2l	equ	0xFD9
  4707                           status	equ	0xFD8
  4708                           
  4709 ;; *************** function _Temp_Read *****************
  4710 ;; Defined at:
  4711 ;;		line 27 in file "Tempeture.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;		None
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;		None
  4716 ;; Return value:  Size  Location     Type
  4717 ;;		None               void
  4718 ;; Registers used:
  4719 ;;		wreg, status,2, status,0, cstack
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4725 ;;      Params:         0       0       0       0       0       0       0
  4726 ;;      Locals:         0       0       0       0       0       0       0
  4727 ;;      Temps:          0       0       0       0       0       0       0
  4728 ;;      Totals:         0       0       0       0       0       0       0
  4729 ;;Total ram usage:        0 bytes
  4730 ;; Hardware stack levels used:    1
  4731 ;; Hardware stack levels required when called:    1
  4732 ;; This function calls:
  4733 ;;		_ADC_StartConversion
  4734 ;; This function is called by:
  4735 ;;		_TMR1_ISR
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738                           
  4739                           	psect	text28
  4740  001868                     __ptext28:
  4741                           	opt stack 0
  4742  001868                     _Temp_Read:
  4743                           	opt stack 22
  4744                           
  4745                           ;Tempeture.c: 30: ADC_Buffer_Point = 0;
  4746                           
  4747                           ;incstack = 0
  4748  001868  0E00               	movlw	0
  4749  00186A  6E41               	movwf	_ADC_Buffer_Point+1,c
  4750  00186C  0E00               	movlw	0
  4751  00186E  6E40               	movwf	_ADC_Buffer_Point,c
  4752                           
  4753                           ;Tempeture.c: 31: Temp_Aquire = 1;
  4754  001870  0E01               	movlw	1
  4755  001872  6E42               	movwf	_Temp_Aquire,c
  4756                           
  4757                           ;Tempeture.c: 32: ADCON1 = 0x80;
  4758  001874  0E80               	movlw	128
  4759  001876  6EC1               	movwf	4033,c	;volatile
  4760                           
  4761                           ;Tempeture.c: 33: ADC_StartConversion(Temp1);
  4762  001878  0E0E               	movlw	14
  4763  00187A  EC1B  F00C         	call	_ADC_StartConversion
  4764  00187E  0012               	return	
  4765  001880                     __end_of_Temp_Read:
  4766                           	opt stack 0
  4767                           pclatu	equ	0xFFB
  4768                           pclath	equ	0xFFA
  4769                           tblptru	equ	0xFF8
  4770                           tblptrh	equ	0xFF7
  4771                           tblptrl	equ	0xFF6
  4772                           tablat	equ	0xFF5
  4773                           prodh	equ	0xFF4
  4774                           prodl	equ	0xFF3
  4775                           intcon	equ	0xFF2
  4776                           intcon2	equ	0xFF1
  4777                           postinc0	equ	0xFEE
  4778                           fsr0h	equ	0xFEA
  4779                           fsr0l	equ	0xFE9
  4780                           wreg	equ	0xFE8
  4781                           postinc1	equ	0xFE6
  4782                           postdec1	equ	0xFE5
  4783                           fsr1h	equ	0xFE2
  4784                           fsr1l	equ	0xFE1
  4785                           postinc2	equ	0xFDE
  4786                           postdec2	equ	0xFDD
  4787                           fsr2h	equ	0xFDA
  4788                           fsr2l	equ	0xFD9
  4789                           status	equ	0xFD8
  4790                           
  4791 ;; *************** function _TMR1_CallBack *****************
  4792 ;; Defined at:
  4793 ;;		line 151 in file "mcc_generated_files/tmr1.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;		None
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;		None
  4798 ;; Return value:  Size  Location     Type
  4799 ;;		None               void
  4800 ;; Registers used:
  4801 ;;		None
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4807 ;;      Params:         0       0       0       0       0       0       0
  4808 ;;      Locals:         0       0       0       0       0       0       0
  4809 ;;      Temps:          0       0       0       0       0       0       0
  4810 ;;      Totals:         0       0       0       0       0       0       0
  4811 ;;Total ram usage:        0 bytes
  4812 ;; Hardware stack levels used:    1
  4813 ;; This function calls:
  4814 ;;		Nothing
  4815 ;; This function is called by:
  4816 ;;		_TMR1_ISR
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820                           	psect	text29
  4821  0018CE                     __ptext29:
  4822                           	opt stack 0
  4823  0018CE                     _TMR1_CallBack:
  4824                           	opt stack 23
  4825                           
  4826                           ;incstack = 0
  4827  0018CE  0012               	return	
  4828  0018D0                     __end_of_TMR1_CallBack:
  4829                           	opt stack 0
  4830                           pclatu	equ	0xFFB
  4831                           pclath	equ	0xFFA
  4832                           tblptru	equ	0xFF8
  4833                           tblptrh	equ	0xFF7
  4834                           tblptrl	equ	0xFF6
  4835                           tablat	equ	0xFF5
  4836                           prodh	equ	0xFF4
  4837                           prodl	equ	0xFF3
  4838                           intcon	equ	0xFF2
  4839                           intcon2	equ	0xFF1
  4840                           postinc0	equ	0xFEE
  4841                           fsr0h	equ	0xFEA
  4842                           fsr0l	equ	0xFE9
  4843                           wreg	equ	0xFE8
  4844                           postinc1	equ	0xFE6
  4845                           postdec1	equ	0xFE5
  4846                           fsr1h	equ	0xFE2
  4847                           fsr1l	equ	0xFE1
  4848                           postinc2	equ	0xFDE
  4849                           postdec2	equ	0xFDD
  4850                           fsr2h	equ	0xFDA
  4851                           fsr2l	equ	0xFD9
  4852                           status	equ	0xFD8
  4853                           
  4854 ;; *************** function _Current_Read *****************
  4855 ;; Defined at:
  4856 ;;		line 30 in file "Current.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;		None
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;		None
  4861 ;; Return value:  Size  Location     Type
  4862 ;;		None               void
  4863 ;; Registers used:
  4864 ;;		wreg, status,2, status,0, cstack
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4870 ;;      Params:         0       0       0       0       0       0       0
  4871 ;;      Locals:         0       0       0       0       0       0       0
  4872 ;;      Temps:          0       0       0       0       0       0       0
  4873 ;;      Totals:         0       0       0       0       0       0       0
  4874 ;;Total ram usage:        0 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; Hardware stack levels required when called:    1
  4877 ;; This function calls:
  4878 ;;		_ADC_StartConversion
  4879 ;; This function is called by:
  4880 ;;		_TMR1_ISR
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           	psect	text30
  4885  001898                     __ptext30:
  4886                           	opt stack 0
  4887  001898                     _Current_Read:
  4888                           	opt stack 22
  4889                           
  4890                           ;Current.c: 33: ADC_Buffer_Point = 0;
  4891                           
  4892                           ;incstack = 0
  4893  001898  0E00               	movlw	0
  4894  00189A  6E41               	movwf	_ADC_Buffer_Point+1,c
  4895  00189C  0E00               	movlw	0
  4896  00189E  6E40               	movwf	_ADC_Buffer_Point,c
  4897                           
  4898                           ;Current.c: 35: ADCON1 = 0x80;
  4899  0018A0  0E80               	movlw	128
  4900  0018A2  6EC1               	movwf	4033,c	;volatile
  4901                           
  4902                           ;Current.c: 36: ADC_StartConversion(Asen);
  4903  0018A4  0E0B               	movlw	11
  4904  0018A6  EC1B  F00C         	call	_ADC_StartConversion
  4905  0018AA  0012               	return	
  4906  0018AC                     __end_of_Current_Read:
  4907                           	opt stack 0
  4908                           pclatu	equ	0xFFB
  4909                           pclath	equ	0xFFA
  4910                           tblptru	equ	0xFF8
  4911                           tblptrh	equ	0xFF7
  4912                           tblptrl	equ	0xFF6
  4913                           tablat	equ	0xFF5
  4914                           prodh	equ	0xFF4
  4915                           prodl	equ	0xFF3
  4916                           intcon	equ	0xFF2
  4917                           intcon2	equ	0xFF1
  4918                           postinc0	equ	0xFEE
  4919                           fsr0h	equ	0xFEA
  4920                           fsr0l	equ	0xFE9
  4921                           wreg	equ	0xFE8
  4922                           postinc1	equ	0xFE6
  4923                           postdec1	equ	0xFE5
  4924                           fsr1h	equ	0xFE2
  4925                           fsr1l	equ	0xFE1
  4926                           postinc2	equ	0xFDE
  4927                           postdec2	equ	0xFDD
  4928                           fsr2h	equ	0xFDA
  4929                           fsr2l	equ	0xFD9
  4930                           status	equ	0xFD8
  4931                           
  4932 ;; *************** function _Battery_Read *****************
  4933 ;; Defined at:
  4934 ;;		line 24 in file "Battery.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;		None
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;		None
  4939 ;; Return value:  Size  Location     Type
  4940 ;;		None               void
  4941 ;; Registers used:
  4942 ;;		wreg, status,2, status,0, cstack
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4948 ;;      Params:         0       0       0       0       0       0       0
  4949 ;;      Locals:         0       0       0       0       0       0       0
  4950 ;;      Temps:          0       0       0       0       0       0       0
  4951 ;;      Totals:         0       0       0       0       0       0       0
  4952 ;;Total ram usage:        0 bytes
  4953 ;; Hardware stack levels used:    1
  4954 ;; Hardware stack levels required when called:    1
  4955 ;; This function calls:
  4956 ;;		_ADC_StartConversion
  4957 ;; This function is called by:
  4958 ;;		_TMR1_ISR
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text31
  4963  001880                     __ptext31:
  4964                           	opt stack 0
  4965  001880                     _Battery_Read:
  4966                           	opt stack 22
  4967                           
  4968                           ;Battery.c: 27: ADC_Buffer_Point = 0;
  4969                           
  4970                           ;incstack = 0
  4971  001880  0E00               	movlw	0
  4972  001882  6E41               	movwf	_ADC_Buffer_Point+1,c
  4973  001884  0E00               	movlw	0
  4974  001886  6E40               	movwf	_ADC_Buffer_Point,c
  4975                           
  4976                           ;Battery.c: 28: Volt_Aquire = 1;
  4977  001888  0E01               	movlw	1
  4978  00188A  6E43               	movwf	_Volt_Aquire,c
  4979                           
  4980                           ;Battery.c: 29: ADCON1 = 0x81;
  4981  00188C  0E81               	movlw	129
  4982  00188E  6EC1               	movwf	4033,c	;volatile
  4983                           
  4984                           ;Battery.c: 30: ADC_StartConversion(AN_CELL1);
  4985  001890  0E07               	movlw	7
  4986  001892  EC1B  F00C         	call	_ADC_StartConversion
  4987  001896  0012               	return	
  4988  001898                     __end_of_Battery_Read:
  4989                           	opt stack 0
  4990                           pclatu	equ	0xFFB
  4991                           pclath	equ	0xFFA
  4992                           tblptru	equ	0xFF8
  4993                           tblptrh	equ	0xFF7
  4994                           tblptrl	equ	0xFF6
  4995                           tablat	equ	0xFF5
  4996                           prodh	equ	0xFF4
  4997                           prodl	equ	0xFF3
  4998                           intcon	equ	0xFF2
  4999                           intcon2	equ	0xFF1
  5000                           postinc0	equ	0xFEE
  5001                           fsr0h	equ	0xFEA
  5002                           fsr0l	equ	0xFE9
  5003                           wreg	equ	0xFE8
  5004                           postinc1	equ	0xFE6
  5005                           postdec1	equ	0xFE5
  5006                           fsr1h	equ	0xFE2
  5007                           fsr1l	equ	0xFE1
  5008                           postinc2	equ	0xFDE
  5009                           postdec2	equ	0xFDD
  5010                           fsr2h	equ	0xFDA
  5011                           fsr2l	equ	0xFD9
  5012                           status	equ	0xFD8
  5013                           
  5014 ;; *************** function _ADC_StartConversion *****************
  5015 ;; Defined at:
  5016 ;;		line 82 in file "mcc_generated_files/adc.c"
  5017 ;; Parameters:    Size  Location     Type
  5018 ;;  channel         1    wreg     enum E8837
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;  channel         1    1[COMRAM] enum E8837
  5021 ;; Return value:  Size  Location     Type
  5022 ;;		None               void
  5023 ;; Registers used:
  5024 ;;		wreg, status,2, status,0
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5030 ;;      Params:         0       0       0       0       0       0       0
  5031 ;;      Locals:         1       0       0       0       0       0       0
  5032 ;;      Temps:          1       0       0       0       0       0       0
  5033 ;;      Totals:         2       0       0       0       0       0       0
  5034 ;;Total ram usage:        2 bytes
  5035 ;; Hardware stack levels used:    1
  5036 ;; This function calls:
  5037 ;;		Nothing
  5038 ;; This function is called by:
  5039 ;;		_Battery_Read
  5040 ;;		_Temp_Read
  5041 ;;		_Current_Read
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045                           	psect	text32
  5046  001836                     __ptext32:
  5047                           	opt stack 0
  5048  001836                     _ADC_StartConversion:
  5049                           	opt stack 22
  5050                           
  5051                           ;incstack = 0
  5052                           ;ADC_StartConversion@channel stored from wreg
  5053  001836  6E02               	movwf	ADC_StartConversion@channel,c
  5054                           
  5055                           ;adc.c: 85: ADCON0bits.CHS = channel;
  5056  001838  C002  F001         	movff	ADC_StartConversion@channel,??_ADC_StartConversion
  5057  00183C  4601               	rlncf	??_ADC_StartConversion,f,c
  5058  00183E  4601               	rlncf	??_ADC_StartConversion,f,c
  5059  001840  50C2               	movf	4034,w,c	;volatile
  5060  001842  1801               	xorwf	??_ADC_StartConversion,w,c
  5061  001844  0B83               	andlw	-125
  5062  001846  1801               	xorwf	??_ADC_StartConversion,w,c
  5063  001848  6EC2               	movwf	4034,c	;volatile
  5064                           
  5065                           ;adc.c: 88: ADCON0bits.ADON = 1;
  5066  00184A  80C2               	bsf	4034,0,c	;volatile
  5067                           
  5068                           ;adc.c: 92: ADCON0bits.GO_nDONE = 1;
  5069  00184C  82C2               	bsf	4034,1,c	;volatile
  5070  00184E  0012               	return	
  5071  001850                     __end_of_ADC_StartConversion:
  5072                           	opt stack 0
  5073                           pclatu	equ	0xFFB
  5074                           pclath	equ	0xFFA
  5075                           tblptru	equ	0xFF8
  5076                           tblptrh	equ	0xFF7
  5077                           tblptrl	equ	0xFF6
  5078                           tablat	equ	0xFF5
  5079                           prodh	equ	0xFF4
  5080                           prodl	equ	0xFF3
  5081                           intcon	equ	0xFF2
  5082                           intcon2	equ	0xFF1
  5083                           postinc0	equ	0xFEE
  5084                           fsr0h	equ	0xFEA
  5085                           fsr0l	equ	0xFE9
  5086                           wreg	equ	0xFE8
  5087                           postinc1	equ	0xFE6
  5088                           postdec1	equ	0xFE5
  5089                           fsr1h	equ	0xFE2
  5090                           fsr1l	equ	0xFE1
  5091                           postinc2	equ	0xFDE
  5092                           postdec2	equ	0xFDD
  5093                           fsr2h	equ	0xFDA
  5094                           fsr2l	equ	0xFD9
  5095                           status	equ	0xFD8
  5096                           
  5097 ;; *************** function _EUSART1_Transmit_ISR *****************
  5098 ;; Defined at:
  5099 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;		None
  5102 ;; Auto vars:     Size  Location     Type
  5103 ;;		None
  5104 ;; Return value:  Size  Location     Type
  5105 ;;		None               void
  5106 ;; Registers used:
  5107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5108 ;; Tracked objects:
  5109 ;;		On entry : 0/0
  5110 ;;		On exit  : 0/0
  5111 ;;		Unchanged: 0/0
  5112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5113 ;;      Params:         0       0       0       0       0       0       0
  5114 ;;      Locals:         0       0       0       0       0       0       0
  5115 ;;      Temps:          0       0       0       0       0       0       0
  5116 ;;      Totals:         0       0       0       0       0       0       0
  5117 ;;Total ram usage:        0 bytes
  5118 ;; Hardware stack levels used:    1
  5119 ;; This function calls:
  5120 ;;		Nothing
  5121 ;; This function is called by:
  5122 ;;		_INTERRUPT_InterruptManager
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           	psect	text33
  5127  001710                     __ptext33:
  5128                           	opt stack 0
  5129  001710                     _EUSART1_Transmit_ISR:
  5130                           	opt stack 24
  5131                           
  5132                           ;eusart1.c: 177: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  5133                           
  5134                           ;incstack = 0
  5135  001710  0E08               	movlw	8
  5136  001712  5C4B               	subwf	_eusart1TxBufferRemaining,w,c	;volatile
  5137  001714  B0D8               	btfsc	status,0,c
  5138  001716  D014               	goto	i2l134
  5139                           
  5140                           ;eusart1.c: 178: {
  5141                           ;eusart1.c: 179: TX1REG = eusart1TxBuffer[eusart1TxTail++];
  5142  001718  5048               	movf	_eusart1TxTail,w,c
  5143  00171A  0D01               	mullw	1
  5144  00171C  0100               	movlb	0	; () banked
  5145  00171E  0EA4               	movlw	low _eusart1TxBuffer
  5146  001720  24F3               	addwf	prodl,w,c
  5147  001722  6ED9               	movwf	fsr2l,c
  5148  001724  0100               	movlb	0	; () banked
  5149  001726  0E00               	movlw	high _eusart1TxBuffer
  5150  001728  20F4               	addwfc	prodh,w,c
  5151  00172A  6EDA               	movwf	fsr2h,c
  5152  00172C  50DF               	movf	indf2,w,c
  5153  00172E  6EAD               	movwf	4013,c	;volatile
  5154                           
  5155                           ; BSR set to: 0
  5156  001730  2A48               	incf	_eusart1TxTail,f,c
  5157                           
  5158                           ; BSR set to: 0
  5159                           ;eusart1.c: 180: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  5160  001732  0E07               	movlw	7
  5161  001734  6448               	cpfsgt	_eusart1TxTail,c
  5162  001736  D002               	goto	i2l2245
  5163                           
  5164                           ; BSR set to: 0
  5165                           ;eusart1.c: 181: {
  5166                           ;eusart1.c: 182: eusart1TxTail = 0;
  5167  001738  0E00               	movlw	0
  5168  00173A  6E48               	movwf	_eusart1TxTail,c
  5169  00173C                     i2l2245:
  5170                           
  5171                           ; BSR set to: 0
  5172                           ;eusart1.c: 183: }
  5173                           ;eusart1.c: 184: eusart1TxBufferRemaining++;
  5174  00173C  2A4B               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  5175                           
  5176                           ;eusart1.c: 185: }
  5177  00173E  0012               	return	
  5178  001740                     i2l134:
  5179                           
  5180                           ;eusart1.c: 186: else
  5181                           ;eusart1.c: 187: {
  5182                           ;eusart1.c: 188: PIE1bits.TX1IE = 0;
  5183  001740  989D               	bcf	3997,4,c	;volatile
  5184  001742  0012               	return	
  5185  001744                     __end_of_EUSART1_Transmit_ISR:
  5186                           	opt stack 0
  5187                           pclatu	equ	0xFFB
  5188                           pclath	equ	0xFFA
  5189                           tblptru	equ	0xFF8
  5190                           tblptrh	equ	0xFF7
  5191                           tblptrl	equ	0xFF6
  5192                           tablat	equ	0xFF5
  5193                           prodh	equ	0xFF4
  5194                           prodl	equ	0xFF3
  5195                           intcon	equ	0xFF2
  5196                           intcon2	equ	0xFF1
  5197                           postinc0	equ	0xFEE
  5198                           fsr0h	equ	0xFEA
  5199                           fsr0l	equ	0xFE9
  5200                           wreg	equ	0xFE8
  5201                           postinc1	equ	0xFE6
  5202                           postdec1	equ	0xFE5
  5203                           fsr1h	equ	0xFE2
  5204                           fsr1l	equ	0xFE1
  5205                           indf2	equ	0xFDF
  5206                           postinc2	equ	0xFDE
  5207                           postdec2	equ	0xFDD
  5208                           fsr2h	equ	0xFDA
  5209                           fsr2l	equ	0xFD9
  5210                           status	equ	0xFD8
  5211                           
  5212 ;; *************** function _EUSART1_Receive_ISR *****************
  5213 ;; Defined at:
  5214 ;;		line 192 in file "mcc_generated_files/eusart1.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;		None
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;		None
  5219 ;; Return value:  Size  Location     Type
  5220 ;;		None               void
  5221 ;; Registers used:
  5222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5223 ;; Tracked objects:
  5224 ;;		On entry : 0/0
  5225 ;;		On exit  : 0/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5228 ;;      Params:         0       0       0       0       0       0       0
  5229 ;;      Locals:         0       0       0       0       0       0       0
  5230 ;;      Temps:          0       0       0       0       0       0       0
  5231 ;;      Totals:         0       0       0       0       0       0       0
  5232 ;;Total ram usage:        0 bytes
  5233 ;; Hardware stack levels used:    1
  5234 ;; This function calls:
  5235 ;;		Nothing
  5236 ;; This function is called by:
  5237 ;;		_INTERRUPT_InterruptManager
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240                           
  5241                           	psect	text34
  5242  001776                     __ptext34:
  5243                           	opt stack 0
  5244  001776                     _EUSART1_Receive_ISR:
  5245                           	opt stack 24
  5246                           
  5247                           ;eusart1.c: 194: if(1 == RC1STAbits.OERR)
  5248                           
  5249                           ;incstack = 0
  5250  001776  A2AB               	btfss	4011,1,c	;volatile
  5251  001778  D002               	goto	i2l2251
  5252                           
  5253                           ;eusart1.c: 195: {
  5254                           ;eusart1.c: 198: RC1STAbits.CREN = 0;
  5255  00177A  98AB               	bcf	4011,4,c	;volatile
  5256                           
  5257                           ;eusart1.c: 199: RC1STAbits.CREN = 1;
  5258  00177C  88AB               	bsf	4011,4,c	;volatile
  5259  00177E                     i2l2251:
  5260                           
  5261                           ;eusart1.c: 200: }
  5262                           ;eusart1.c: 203: eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  5263  00177E  5045               	movf	_eusart1RxHead,w,c
  5264  001780  0D01               	mullw	1
  5265  001782  0100               	movlb	0	; () banked
  5266  001784  0E9C               	movlw	low _eusart1RxBuffer
  5267  001786  24F3               	addwf	prodl,w,c
  5268  001788  6ED9               	movwf	fsr2l,c
  5269  00178A  0100               	movlb	0	; () banked
  5270  00178C  0E00               	movlw	high _eusart1RxBuffer
  5271  00178E  20F4               	addwfc	prodh,w,c
  5272  001790  6EDA               	movwf	fsr2h,c
  5273  001792  CFAE FFDF          	movff	4014,indf2	;volatile
  5274                           
  5275                           ; BSR set to: 0
  5276  001796  2A45               	incf	_eusart1RxHead,f,c
  5277                           
  5278                           ; BSR set to: 0
  5279                           ;eusart1.c: 204: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  5280  001798  0E07               	movlw	7
  5281  00179A  6445               	cpfsgt	_eusart1RxHead,c
  5282  00179C  D002               	goto	i2l2259
  5283                           
  5284                           ; BSR set to: 0
  5285                           ;eusart1.c: 205: {
  5286                           ;eusart1.c: 206: eusart1RxHead = 0;
  5287  00179E  0E00               	movlw	0
  5288  0017A0  6E45               	movwf	_eusart1RxHead,c
  5289  0017A2                     i2l2259:
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;eusart1.c: 207: }
  5293                           ;eusart1.c: 208: eusart1RxCount++;
  5294  0017A2  2A44               	incf	_eusart1RxCount,f,c	;volatile
  5295                           
  5296                           ; BSR set to: 0
  5297  0017A4  0012               	return	
  5298  0017A6                     __end_of_EUSART1_Receive_ISR:
  5299                           	opt stack 0
  5300                           pclatu	equ	0xFFB
  5301                           pclath	equ	0xFFA
  5302                           tblptru	equ	0xFF8
  5303                           tblptrh	equ	0xFF7
  5304                           tblptrl	equ	0xFF6
  5305                           tablat	equ	0xFF5
  5306                           prodh	equ	0xFF4
  5307                           prodl	equ	0xFF3
  5308                           intcon	equ	0xFF2
  5309                           intcon2	equ	0xFF1
  5310                           postinc0	equ	0xFEE
  5311                           fsr0h	equ	0xFEA
  5312                           fsr0l	equ	0xFE9
  5313                           wreg	equ	0xFE8
  5314                           postinc1	equ	0xFE6
  5315                           postdec1	equ	0xFE5
  5316                           fsr1h	equ	0xFE2
  5317                           fsr1l	equ	0xFE1
  5318                           indf2	equ	0xFDF
  5319                           postinc2	equ	0xFDE
  5320                           postdec2	equ	0xFDD
  5321                           fsr2h	equ	0xFDA
  5322                           fsr2l	equ	0xFD9
  5323                           status	equ	0xFD8
  5324                           
  5325 ;; *************** function _ADC_ISR *****************
  5326 ;; Defined at:
  5327 ;;		line 128 in file "mcc_generated_files/adc.c"
  5328 ;; Parameters:    Size  Location     Type
  5329 ;;		None
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;		None
  5332 ;; Return value:  Size  Location     Type
  5333 ;;		None               void
  5334 ;; Registers used:
  5335 ;;		None
  5336 ;; Tracked objects:
  5337 ;;		On entry : 0/0
  5338 ;;		On exit  : 0/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5341 ;;      Params:         0       0       0       0       0       0       0
  5342 ;;      Locals:         0       0       0       0       0       0       0
  5343 ;;      Temps:          0       0       0       0       0       0       0
  5344 ;;      Totals:         0       0       0       0       0       0       0
  5345 ;;Total ram usage:        0 bytes
  5346 ;; Hardware stack levels used:    1
  5347 ;; This function calls:
  5348 ;;		Nothing
  5349 ;; This function is called by:
  5350 ;;		_INTERRUPT_InterruptManager
  5351 ;; This function uses a non-reentrant model
  5352 ;;
  5353                           
  5354                           	psect	text35
  5355  0018CA                     __ptext35:
  5356                           	opt stack 0
  5357  0018CA                     _ADC_ISR:
  5358                           	opt stack 24
  5359                           
  5360                           ;adc.c: 131: PIR1bits.ADIF = 0;
  5361                           
  5362                           ; BSR set to: 0
  5363                           ;incstack = 0
  5364  0018CA  9C9E               	bcf	3998,6,c	;volatile
  5365  0018CC  0012               	return	
  5366  0018CE                     __end_of_ADC_ISR:
  5367                           	opt stack 0
  5368                           pclatu	equ	0xFFB
  5369                           pclath	equ	0xFFA
  5370                           tblptru	equ	0xFF8
  5371                           tblptrh	equ	0xFF7
  5372                           tblptrl	equ	0xFF6
  5373                           tablat	equ	0xFF5
  5374                           prodh	equ	0xFF4
  5375                           prodl	equ	0xFF3
  5376                           intcon	equ	0xFF2
  5377                           intcon2	equ	0xFF1
  5378                           postinc0	equ	0xFEE
  5379                           fsr0h	equ	0xFEA
  5380                           fsr0l	equ	0xFE9
  5381                           wreg	equ	0xFE8
  5382                           postinc1	equ	0xFE6
  5383                           postdec1	equ	0xFE5
  5384                           fsr1h	equ	0xFE2
  5385                           fsr1l	equ	0xFE1
  5386                           indf2	equ	0xFDF
  5387                           postinc2	equ	0xFDE
  5388                           postdec2	equ	0xFDD
  5389                           fsr2h	equ	0xFDA
  5390                           fsr2l	equ	0xFD9
  5391                           status	equ	0xFD8
  5392                           pclatu	equ	0xFFB
  5393                           pclath	equ	0xFFA
  5394                           tblptru	equ	0xFF8
  5395                           tblptrh	equ	0xFF7
  5396                           tblptrl	equ	0xFF6
  5397                           tablat	equ	0xFF5
  5398                           prodh	equ	0xFF4
  5399                           prodl	equ	0xFF3
  5400                           intcon	equ	0xFF2
  5401                           intcon2	equ	0xFF1
  5402                           postinc0	equ	0xFEE
  5403                           fsr0h	equ	0xFEA
  5404                           fsr0l	equ	0xFE9
  5405                           wreg	equ	0xFE8
  5406                           postinc1	equ	0xFE6
  5407                           postdec1	equ	0xFE5
  5408                           fsr1h	equ	0xFE2
  5409                           fsr1l	equ	0xFE1
  5410                           indf2	equ	0xFDF
  5411                           postinc2	equ	0xFDE
  5412                           postdec2	equ	0xFDD
  5413                           fsr2h	equ	0xFDA
  5414                           fsr2l	equ	0xFD9
  5415                           status	equ	0xFD8
  5416                           
  5417                           	psect	rparam
  5418  0000                     pclatu	equ	0xFFB
  5419                           pclath	equ	0xFFA
  5420                           tblptru	equ	0xFF8
  5421                           tblptrh	equ	0xFF7
  5422                           tblptrl	equ	0xFF6
  5423                           tablat	equ	0xFF5
  5424                           prodh	equ	0xFF4
  5425                           prodl	equ	0xFF3
  5426                           intcon	equ	0xFF2
  5427                           intcon2	equ	0xFF1
  5428                           postinc0	equ	0xFEE
  5429                           fsr0h	equ	0xFEA
  5430                           fsr0l	equ	0xFE9
  5431                           wreg	equ	0xFE8
  5432                           postinc1	equ	0xFE6
  5433                           postdec1	equ	0xFE5
  5434                           fsr1h	equ	0xFE2
  5435                           fsr1l	equ	0xFE1
  5436                           indf2	equ	0xFDF
  5437                           postinc2	equ	0xFDE
  5438                           postdec2	equ	0xFDD
  5439                           fsr2h	equ	0xFDA
  5440                           fsr2l	equ	0xFD9
  5441                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    27
    Data        0
    BSS         343
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     61      75
    BANK0           160     47     159
    BANK1           256      0     220
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 


Critical Paths under _main in COMRAM

    _Temp_Fault->___ftge
    _Temp_Convert->___ftmul
    _log->___ftmul
    _eval_poly->___ftmul
    _Temp_Filter->___ftmul
    _Battery_Fault->___ftge
    ___ftge->___wmul
    _Battery_Convert->___ftmul
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _Battery_Filter->___ftmul
    ___ftmul->___ftdiv
    ___ftadd->___ftmul

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_TMR1_ISR
    _Temp_Read->_ADC_StartConversion
    _Current_Read->_ADC_StartConversion
    _Battery_Read->_ADC_StartConversion

Critical Paths under _main in BANK0

    _main->_Temp_Convert
    _Temp_Convert->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    _Temp_Filter->___ftadd
    _Battery_Convert->_Battery_Filter
    _Battery_Filter->___ftadd

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5  111276
                                             42 BANK0      5     0      5
                    _Battery_Convert
                      _Battery_Fault
                  _SYSTEM_Initialize
                       _Temp_Convert
                         _Temp_Fault
 ---------------------------------------------------------------------------------
 (1) _Temp_Fault                                           3     3      0    4098
                                             34 COMRAM     3     3      0
                             ___ftge
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _Temp_Convert                                        13    13      0   68482
                                             29 BANK0     13    13      0
                        _Temp_Filter
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                             ___wmul
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  5     2      3   27702
                                             24 BANK0      5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5     352
                                             19 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           12     5      7   14060
                                             12 BANK0     12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    5907
                                             12 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) _Temp_Filter                                          2     2      0   13866
                                             12 BANK0      2     2      0
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Battery_Fault                                        3     3      0    4129
                                             34 COMRAM     3     3      0
                             ___ftge
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     520
                                             25 COMRAM     9     3      6
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Battery_Convert                                      4     4      0   34567
                                             14 BANK0      4     4      0
                     _Battery_Filter
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    4199
                                             31 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2797
                                             27 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _Battery_Filter                                       2     2      0   13866
                                             12 BANK0      2     2      0
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    3466
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    4535
                                             46 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    5574
                                              0 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2433
                                             19 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          14    14      0      45
                                              5 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             3     3      0      45
                                              2 COMRAM     3     3      0
                       _Battery_Read
                       _Current_Read
                      _TMR1_CallBack
                          _Temp_Read
 ---------------------------------------------------------------------------------
 (8) _Temp_Read                                            0     0      0      15
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (8) _TMR1_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Current_Read                                         0     0      0      15
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (8) _Battery_Read                                         0     0      0      15
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (9) _ADC_StartConversion                                  2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Battery_Convert
     _Battery_Filter
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___wmul
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___wmul
   _Battery_Fault
     ___ftge
       ___wmul (ARG)
     ___wmul
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
   _Temp_Convert
     _Temp_Filter
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___wmul
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     ___wmul
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___wmul
       _frexp
   _Temp_Fault
     ___ftge
       ___wmul (ARG)
     ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _TMR1_ISR
     _Battery_Read
       _ADC_StartConversion
     _Current_Read
       _ADC_StartConversion
     _TMR1_CallBack
     _Temp_Read
       _ADC_StartConversion

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      DC       6       85.9%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     2F      9F       4       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3D      4B       1       78.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C6       9        0.0%
DATA                 0      0     1C6      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Mar 30 00:27:39 2015

           _eusart1TxBufferRemaining 004B                  ___wmul@multiplicand 0016  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                       ___ftadd@exp1 00DB                         ___ftadd@exp2 00DA  
                       ___ftadd@sign 00D9                                  l808 07D6  
                                l817 0800                                  l828 1298  
                                l793 068A                                  l797 06C4  
                                l799 06EC                         __CFG_CPB$OFF 000000  
                       __CFG_CPD$OFF 000000                      _timer1ReloadVal 0049  
                                _log 0DBC                      __end_of_ADC_ISR 18CE  
                                prod 000FF3                                  wreg 000FE8  
                       __CFG_LVP$OFF 000000                      ?_Battery_Filter 0001  
                       ___ftdiv@cntr 0029                         ___ftdiv@sign 002E  
                               l2011 144A                                 l2183 14E2  
                               l2441 1388                                 l2513 0758  
                               l2193 153E                                 l2515 076C  
                               l2507 0724                                 l2603 1674  
                               l2187 1512                                 l2611 0FF8  
                               l2453 13D4                                 l2445 1396  
                               l2533 082A                                 l2525 07B8  
                               l2517 0778                                 l2455 13F2  
                               l2447 13A0                                 l2543 0878  
                               l2527 07CC                                 l2519 0784  
                               l2457 13FC                                 l2449 13BE  
                               l2553 1036                                 l2625 0D40  
                               l2609 0F6C                                 l2491 06D2  
                               l2715 1272                                 l2485 0698  
                               l2573 108E                                 l2583 10B6  
                               l2559 105C                                 l2831 17C0  
                               l2497 06E2                                 l2577 109E  
                               l2649 0BD0                                 l2673 0E2A  
                               l2809 0AD6                                 l2825 17AE  
                               l2587 10C6                                 l2763 11E2  
                               l2747 1372                                 l2667 0DF8  
                               l2695 1234                                 l2775 15A6  
                               l2689 120E                                 ?_log 00E8  
                               u2301 1046                                 _LATA 000F89  
                               _LATB 000F8A                                 u2071 0636  
                               _LATC 000F8B                                 u1440 1472  
                               _LATD 000F8C                                 u2081 0656  
                               _LATE 000F8D                                 u1448 1474  
                               u2281 1020                                 u2461 11F8  
                               u2445 0DD4                                 u2481 121E  
                               _TMR1 000FCE                                 _WPUB 000F61  
                               _main 17A6                         ___ftpack@arg 0014  
                       ___ftpack@exp 0017                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                      __CFG_BORV$190 000000                                 log@x 00E8  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 00A8  
                      __CFG_IESO$OFF 000000                         ___ftmul@cntr 003C  
                       ___ftmul@sign 003D                                ??_log 003E  
                   ?_Battery_Convert 0001       __size_of_OSCILLATOR_Initialize 000E  
      __end_of_OSCILLATOR_Initialize 18BA                                ?_main 00FA  
                    __end_of___ftadd 089E                      __end_of___ftdiv 12CA  
                    _TMR1_StartTimer 18C6                      __end_of___ftmul 1100  
                              _T1CON 000FCD                      __end_of___ftsub 16D4  
                              _LATC0 007C58                                _LATA6 007C4E  
                              _LATA7 007C4F                       __CFG_DEBUG$OFF 000000  
                              i2l134 1740                                i2l240 0058  
                              i2l242 0064                                i2l246 006E  
                              i2l238 004C                                _TMR1H 000FCF  
                              _TMR1L 000FCE                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
               _EUSART1_Transmit_ISR 1710                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                      ?_Current_Read 0001                     __end_of_TMR1_ISR 1602  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                      ___awtoft@sign 001F                                _frexp 1420  
                              _errno 00B0                   __CFG_MCLRE$EXTMCLR 000000  
                      ___ftpack@sign 0018              __end_of_TMR1_Initialize 181C  
                        _Battery_Adc 0196                                tablat 000FF5  
                              status 000FD8                       __CFG_HFOFST$ON 000000  
                     __CFG_PBADEN$ON 000000                      __initialization 1744  
                        log@exponent 00EB           __end_of_EUSART1_Initialize 1710  
                       __end_of_main 17D4                            ??_ADC_ISR 0001  
        ?_INTERRUPT_InterruptManager 0001                               ??_main 003E  
                      __activetblptr 000001           ADC_StartConversion@channel 0002  
              ?_EUSART1_Transmit_ISR 0001                       ??_Current_Read 0003  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0                               ?_frexp 0014  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
                   __end_of___awtoft 1698                               _ANSELA 000F38  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             _ANSELD 000F3B                               _ANSELE 000F3C  
                   __end_of___ftpack 1420                               _T1GCON 000FCC  
                             _RC1REG 000FAE                               _RC1STA 000FAB  
              __size_of_Battery_Read 0018                               i2l2251 177E  
                             i2l2245 173C                               i2l2259 17A2  
                     __CFG_WDTEN$OFF 000000                               i2l1487 15DC  
                             _RCREG1 000FAE                        ??_Temp_Filter 003E  
                             _OSCCON 000FD3                               _SPBRG1 000FAF  
                             _TX1REG 000FAD                               _TX1STA 000FAC  
                             _TXREG1 000FAD                           _Temp_Fault 1542  
                     __CFG_XINST$OFF 000000                               ___ftge 14B2  
            __end_of_TMR1_StartTimer 18CA                               ___wmul 17D4  
                          ??___ftadd 00D6                       __CFG_STVREN$ON 000000  
                          ??___ftdiv 0026                            ??___ftmul 0035  
                          ??___ftsub 003E                               clear_0 174A  
                             clear_1 1756                               clear_2 1762  
                 __size_of_Temp_Read 0018                ___ftmul@f3_as_product 0039  
                       _Battery_Read 1880                         _Battery_Volt 0060  
                       __mediumconst 0000                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                    _eusart1RxBuffer 009C        __size_of_INTERRUPT_Initialize 000C  
              __end_of_TMR1_CallBack 18D0                      _eusart1TxBuffer 00A4  
                   ?_TMR1_Initialize 0001                    _SYSTEM_Initialize 181C  
                   __end_oflog@coeff 061C                           __accesstop 0060  
            __end_of__initialization 1768                           ___ftadd@f1 00D0  
                         ___ftadd@f2 00D3                           ___ftge@ff1 001A  
                         ___ftge@ff2 001D                   ?_SYSTEM_Initialize 0001  
                       eval_poly@res 00E5                           ___ftdiv@f1 0020  
                         ___ftdiv@f2 0023                           ___ftdiv@f3 002A  
                         ___awtoft@c 001C                           ___ftmul@f1 002F  
                         ___ftmul@f2 0032                           ___ftsub@f1 00DC  
                         ___ftsub@f2 00DF                  __end_of_Temp_Filter 0C4C  
       __size_of_ADC_StartConversion 001A                       __pcstackCOMRAM 0001  
                ??_SYSTEM_Initialize 0014                            ?_TMR1_ISR 0001  
                      __end_of_frexp 14B2               ??_EUSART1_Transmit_ISR 0001  
                   ??_Battery_Filter 003E          __end_of_EUSART1_Receive_ISR 17A6  
                      ?_Temp_Convert 0001                              ??_frexp 0019  
          __end_of_SYSTEM_Initialize 1836                        _eusart1RxHead 0045  
                      _eusart1TxHead 0047                        _eusart1RxTail 0046  
                         __pbssBANK0 0060                           __pbssBANK1 0100  
                      _eusart1TxTail 0048                   __size_of_eval_poly 00F2  
                    __CFG_PLLCFG$OFF 000000                    __end_of_Temp_Read 1880  
                         __pnvCOMRAM 0049                Temp_Convert@steinhart 00F7  
                        ?_Temp_Fault 0001                   __CFG_CCP2MX$PORTC1 000000  
               __end_of_Current_Read 18AC                          Temp_Fault@i 0024  
                _TempBattery_Current 0178                              ?___ftge 001A  
                            ?___wmul 0014                     ?_TMR1_StartTimer 0001  
                         ??_TMR1_ISR 0003                   __CFG_CCP3MX$PORTB5 000000  
                            _ADC_ISR 18CA                            ?___awtoft 001C  
                          ?___ftpack 0014              __size_of_ADC_Initialize 0018  
                      Temp_Convert@x 00F5               __size_of_Battery_Fault 00AE  
                    Temp_Fault@fault 0023                       Battery_Fault@i 0024  
                            _OSCCON2 000FD2                       ??_Temp_Convert 00ED  
                  __CFG_PRICLKEN$OFF 000000                              _OSCTUNE 000F9B  
                            _SPBRGH1 000FB0                          _Temp_Filter 0ADC  
                        _Temp_Aquire 0042                      __CFG_PWRTEN$OFF 000000  
                            __Hparam 0000                              __Lparam 0000  
                    __size_of___ftge 0090                              ___ftadd 061E  
                            ___ftdiv 11E8                      __size_of___wmul 0026  
                            ___ftmul 1010                              ___ftsub 1698  
                       __psmallconst 0600                              __pcinit 1744  
                         ??___awtoft 001F                           ??___ftpack 0019  
                  __end_of_eval_poly 1010                              __ramtop 0600  
                            __ptext0 17A6                              __ptext1 1542  
                            __ptext2 089E                              __ptext3 0DBC  
                            __ptext4 1420                              __ptext5 0F1E  
                            __ptext6 1698                              __ptext7 0ADC  
                            __ptext8 181C                              __ptext9 17FA  
                          _T1CONbits 000FCD                _OSCILLATOR_Initialize 18AC  
                       __size_of_log 0162                  __size_of_Temp_Fault 006A  
                 _EUSART1_Initialize 16D4             ??_PIN_MANAGER_Initialize 0014  
           __size_of_Battery_Convert 00E8           __size_of_SYSTEM_Initialize 001A  
               end_of_initialization 1768                  ?_EUSART1_Initialize 0001  
                      _Battery_Fault 12CA                              postdec1 000FE5  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc1 000FE6                              postinc2 000FDE  
                   Battery_Convert@x 00E0                 ??_EUSART1_Initialize 0014  
                _ADC_StartConversion 1836                          _Volt_Aquire 0043  
                     ?_Battery_Fault 0001                __size_of_Current_Read 0014  
                        ___ftdiv@exp 002D                          ___ftmul@exp 0038  
               ?_ADC_StartConversion 0001                 __end_of_Temp_Convert 0ADC  
       __end_of_INTERRUPT_Initialize 18C6                       __end_of___ftge 1542  
                     __end_of___wmul 17FA                    __size_of_TMR1_ISR 0056  
                     _ADC_Initialize 1850               ?_OSCILLATOR_Initialize 0001  
                start_initialization 1744                           eval_poly@d 00DF  
                         eval_poly@n 00E1                           eval_poly@x 00DC  
    __size_of_PIN_MANAGER_Initialize 004E                         _Current_Read 1898  
                        __end_of_log 0F1E                           frexp@value 0014  
                  ??_Battery_Convert 00DE                         ??_Temp_Fault 0023  
                          _Temp_DegF 007E                     _PrevBattery_Volt 013C  
                          _Temp_Done 00AC                            _Temp_Read 1868  
              ??_ADC_StartConversion 0001             __size_of_TMR1_Initialize 0022  
                           ??___ftge 0020                             ??___wmul 0018  
             __end_of_ADC_Initialize 1868                             ?_ADC_ISR 0001  
             __size_of_TMR1_CallBack 0002                       _eusart1RxCount 0044  
                  __size_of___awtoft 0048                    __size_of___ftpack 00A8  
                          _Volt_Done 00AE                TMR1_ISR@CountCallBack 003E  
                        __pbssCOMRAM 003E        __size_of_EUSART1_Transmit_ISR 0034  
                      __pcstackBANK0 00D0                   __end_of_Temp_Fault 15AC  
                      _PrevTemp_DegF 015A                      ??_Battery_Fault 0023  
       __size_of_EUSART1_Receive_ISR 0030                         ?_Temp_Filter 0001  
                         ?_Temp_Read 0001               _PIN_MANAGER_Initialize 1602  
                          __pintcode 0008                    _Temp_Convert$1604 00EF  
                  _Temp_Convert$1605 00F2                             ?___ftadd 00D0  
                           ?___ftdiv 0020                             ?___ftmul 002F  
                           ?___ftsub 00DC                         Temp_Filter@x 00DC  
                    ?_ADC_Initialize 0001         ??_INTERRUPT_InterruptManager 0006  
                           _BAUD1CON 000FB8                          __smallconst 0600  
           __size_of_TMR1_StartTimer 0004                            _eval_poly 0F1E  
                     __size_of_frexp 0092                 _INTERRUPT_Initialize 18BA  
                      _TMR1_CallBack 18CE              __size_of_Battery_Filter 0170  
                     ___wmul@product 0018                __size_of_Temp_Convert 023E  
                           _IPR1bits 000F9F                             _PIE1bits 000F9D  
__size_of_INTERRUPT_InterruptManager 00A0                             _PIR1bits 000F9E  
                    Battery_Filter@x 00DC                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                             _TMR1_ISR 15AC  
                  ??_TMR1_Initialize 0014                     __size_of_ADC_ISR 0004  
                _PrevBattery_Current 011E                           _ADCON0bits 000FC2  
                  ___wmul@multiplier 0014                        ?_Battery_Read 0001  
                         ?_eval_poly 00DC                         _Temp_Convert 089E  
                        _INTCON2bits 000FF1                ?_INTERRUPT_Initialize 0001  
                     ?_TMR1_CallBack 0001                            frexp@eptr 0017  
                           __Hrparam 0000                          ??_Temp_Read 0003  
                           _Temp_Adc 01C8                             __Lrparam 0000  
                       __Lsmallconst 0600                   __CFG_BOREN$SBORDIS 000000  
                  __CFG_P2BMX$PORTD2 000000              ??_OSCILLATOR_Initialize 0014  
                   __size_of___ftadd 0280                     __size_of___ftdiv 00E2  
                   __size_of___ftmul 00F0                     __size_of___ftsub 003C  
        __size_of_EUSART1_Initialize 003C                             ___awtoft 1650  
                           ___ftpack 1378                       ??_Battery_Read 0003  
                    _Battery_Convert 1100                   Battery_Fault@fault 0023  
                    _Battery_Current 0100                             __ptext10 18C6  
                           __ptext11 1602                             __ptext20 1650  
                           __ptext12 18AC                             __ptext21 0C4C  
                           __ptext13 18BA                           _T1GCONbits 000FCC  
                           __ptext30 1898                             __ptext22 17D4  
                           __ptext14 16D4                             __ptext31 1880  
                           __ptext23 1010                             __ptext15 1850  
                           __ptext32 1836                             __ptext24 061E  
                           __ptext16 12CA                             __ptext33 1710  
                           __ptext25 1378                             __ptext17 14B2  
                           __ptext34 1776                             __ptext18 1100  
                           __ptext35 18CA                             __ptext27 15AC  
                           __ptext19 11E8                             __ptext28 1868  
                           __ptext29 18CE                    ??_TMR1_StartTimer 0014  
                      __size_of_main 002E                         _TmpTemp_DegF 01AA  
               __size_of_Temp_Filter 0170                           _RC1STAbits 000FAB  
 __end_of_INTERRUPT_InterruptManager 00A8           _INTERRUPT_InterruptManager 0008  
                           main@argc 00FA                             main@argv 00FC  
                _EUSART1_Receive_ISR 1776                             log@coeff 0601  
                         _INTCONbits 000FF2                          ??_eval_poly 00E3  
             ??_INTERRUPT_Initialize 0014                      ??_TMR1_CallBack 0001  
                           intlevel2 0000                       _Battery_Filter 0C4C  
               ?_EUSART1_Receive_ISR 0001          __end_of_ADC_StartConversion 1850  
                   _TempBattery_Volt 00B2              ?_PIN_MANAGER_Initialize 0001  
       __end_of_EUSART1_Transmit_ISR 1744                     ??_ADC_Initialize 0014  
            __end_of_Battery_Convert 11E8                    __CFG_T3CMX$PORTC0 000000  
             __end_of_Battery_Filter 0DBC                ??_EUSART1_Receive_ISR 0001  
     __end_of_PIN_MANAGER_Initialize 1650                __end_of_Battery_Fault 1378  
                  __CFG_FOSC$INTIO67 000000                 __end_of_Battery_Read 1898  
                    _TMR1_Initialize 17FA                     _ADC_Buffer_Point 0040  
