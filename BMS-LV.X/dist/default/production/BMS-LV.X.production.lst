

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Apr 13 02:15:13 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    51  0000                     
    52                           	psect	smallconst
    53  000600                     __psmallconst:
    54                           	opt stack 0
    55  000600  00                 	db	0
    56  000601                     log@coeff:
    57                           	opt stack 0
    58  000601  00                 	db	0
    59  000602  00                 	db	0
    60  000603  00                 	db	0
    61  000604  00                 	db	0
    62  000605  80                 	db	128
    63  000606  3F                 	db	63
    64  000607  F0                 	db	240
    65  000608  FF                 	db	255
    66  000609  BE                 	db	190
    67  00060A  E2                 	db	226
    68  00060B  A9                 	db	169
    69  00060C  3E                 	db	62
    70  00060D  83                 	db	131
    71  00060E  76                 	db	118
    72  00060F  BE                 	db	190
    73  000610  AE                 	db	174
    74  000611  2B                 	db	43
    75  000612  3E                 	db	62
    76  000613  3C                 	db	60
    77  000614  C3                 	db	195
    78  000615  BD                 	db	189
    79  000616  D2                 	db	210
    80  000617  13                 	db	19
    81  000618  3D                 	db	61
    82  000619  78                 	db	120
    83  00061A  D3                 	db	211
    84  00061B  BB                 	db	187
    85  00061C                     __end_oflog@coeff:
    86                           	opt stack 0
    87  0000                     _TMR1	set	4046
    88  0000                     _ADCON0	set	4034
    89  0000                     _ADCON0bits	set	4034
    90  0000                     _ADCON1	set	4033
    91  0000                     _ADCON2	set	4032
    92  0000                     _ADRESH	set	4036
    93  0000                     _ADRESL	set	4035
    94  0000                     _ANSELA	set	3896
    95  0000                     _ANSELB	set	3897
    96  0000                     _ANSELC	set	3898
    97  0000                     _ANSELD	set	3899
    98  0000                     _ANSELE	set	3900
    99  0000                     _BAUD1CON	set	4024
   100  0000                     _INTCON2bits	set	4081
   101  0000                     _INTCONbits	set	4082
   102  0000                     _IPR1bits	set	3999
   103  0000                     _LATA	set	3977
   104  0000                     _LATB	set	3978
   105  0000                     _LATC	set	3979
   106  0000                     _LATD	set	3980
   107  0000                     _LATE	set	3981
   108  0000                     _OSCCON	set	4051
   109  0000                     _OSCCON2	set	4050
   110  0000                     _OSCTUNE	set	3995
   111  0000                     _PIE1bits	set	3997
   112  0000                     _PIR1bits	set	3998
   113  0000                     _RC1REG	set	4014
   114  0000                     _RC1STA	set	4011
   115  0000                     _RC1STAbits	set	4011
   116  0000                     _RCONbits	set	4048
   117  0000                     _RCREG1	set	4014
   118  0000                     _SPBRG1	set	4015
   119  0000                     _SPBRGH1	set	4016
   120  0000                     _T1CON	set	4045
   121  0000                     _T1CONbits	set	4045
   122  0000                     _T1GCON	set	4044
   123  0000                     _T1GCONbits	set	4044
   124  0000                     _TMR1H	set	4047
   125  0000                     _TMR1L	set	4046
   126  0000                     _TRISA	set	3986
   127  0000                     _TRISB	set	3987
   128  0000                     _TRISC	set	3988
   129  0000                     _TRISD	set	3989
   130  0000                     _TRISE	set	3990
   131  0000                     _TX1REG	set	4013
   132  0000                     _TX1STA	set	4012
   133  0000                     _TXREG1	set	4013
   134  0000                     _WPUB	set	3937
   135  0000                     _LATA6	set	31822
   136  0000                     _LATA7	set	31823
   137  0000                     _LATC0	set	31832
   138  00061C  00                 	db	0	; dummy byte at the end
   139  0000                     
   140                           	psect	nvCOMRAM
   141  00004A                     __pnvCOMRAM:
   142                           	opt stack 0
   143  00004A                     _timer1ReloadVal:
   144                           	opt stack 0
   145  00004A                     	ds	2
   146  00004C                     _eusart1TxBufferRemaining:
   147                           	opt stack 0
   148  00004C                     	ds	1
   149                           
   150                           ; #config settings
   151  0000                     
   152                           	psect	cinit
   153  001744                     __pcinit:
   154                           	opt stack 0
   155  001744                     start_initialization:
   156                           	opt stack 0
   157  001744                     __initialization:
   158                           	opt stack 0
   159                           
   160                           ; Clear objects allocated to BANK1 (220 bytes)
   161  001744  EE01  F000         	lfsr	0,__pbssBANK1
   162  001748  0EDC               	movlw	220
   163  00174A                     clear_0:
   164  00174A  6AEE               	clrf	postinc0,c
   165  00174C  06E8               	decf	wreg,f,c
   166  00174E  E1FD               	bnz	clear_0
   167                           
   168                           ; Clear objects allocated to BANK0 (112 bytes)
   169  001750  EE00  F060         	lfsr	0,__pbssBANK0
   170  001754  0E70               	movlw	112
   171  001756                     clear_1:
   172  001756  6AEE               	clrf	postinc0,c
   173  001758  06E8               	decf	wreg,f,c
   174  00175A  E1FD               	bnz	clear_1
   175                           
   176                           ; Clear objects allocated to COMRAM (12 bytes)
   177  00175C  EE00  F03E         	lfsr	0,__pbssCOMRAM
   178  001760  0E0C               	movlw	12
   179  001762                     clear_2:
   180  001762  6AEE               	clrf	postinc0,c
   181  001764  06E8               	decf	wreg,f,c
   182  001766  E1FD               	bnz	clear_2
   183  001768                     end_of_initialization:
   184                           	opt stack 0
   185  001768                     __end_of__initialization:
   186                           	opt stack 0
   187  001768  0E00               	movlw	low (__Lsmallconst shr (0+16))
   188  00176A  6EF8               	movwf	tblptru,c
   189  00176C  0E06               	movlw	high __Lsmallconst
   190  00176E  6EF7               	movwf	tblptrh,c
   191  001770  0100               	movlb	0
   192  001772  EFD3  F00B         	goto	_main	;jump to C main() function
   193                           tblptru	equ	0xFF8
   194                           tblptrh	equ	0xFF7
   195                           postinc0	equ	0xFEE
   196                           wreg	equ	0xFE8
   197                           
   198                           	psect	bssCOMRAM
   199  00003E                     __pbssCOMRAM:
   200                           	opt stack 0
   201  00003E                     TMR1_ISR@CountCallBack:
   202                           	opt stack 0
   203  00003E                     	ds	2
   204  000040                     _ADC_Buffer_Point:
   205                           	opt stack 0
   206  000040                     	ds	2
   207  000042                     _Current_Aquire:
   208                           	opt stack 0
   209  000042                     	ds	1
   210  000043                     _Temp_Aquire:
   211                           	opt stack 0
   212  000043                     	ds	1
   213  000044                     _Volt_Aquire:
   214                           	opt stack 0
   215  000044                     	ds	1
   216  000045                     _eusart1RxCount:
   217                           	opt stack 0
   218  000045                     	ds	1
   219  000046                     _eusart1RxHead:
   220                           	opt stack 0
   221  000046                     	ds	1
   222  000047                     _eusart1RxTail:
   223                           	opt stack 0
   224  000047                     	ds	1
   225  000048                     _eusart1TxHead:
   226                           	opt stack 0
   227  000048                     	ds	1
   228  000049                     _eusart1TxTail:
   229                           	opt stack 0
   230  000049                     	ds	1
   231                           tblptru	equ	0xFF8
   232                           tblptrh	equ	0xFF7
   233                           postinc0	equ	0xFEE
   234                           wreg	equ	0xFE8
   235                           
   236                           	psect	bssBANK0
   237  000060                     __pbssBANK0:
   238                           	opt stack 0
   239  000060                     _Battery_Current:
   240                           	opt stack 0
   241  000060                     	ds	30
   242  00007E                     _Battery_Volt:
   243                           	opt stack 0
   244  00007E                     	ds	30
   245  00009C                     _Temp_DegF:
   246                           	opt stack 0
   247  00009C                     	ds	30
   248  0000BA                     _eusart1RxBuffer:
   249                           	opt stack 0
   250  0000BA                     	ds	8
   251  0000C2                     _eusart1TxBuffer:
   252                           	opt stack 0
   253  0000C2                     	ds	8
   254  0000CA                     _Temp_Done:
   255                           	opt stack 0
   256  0000CA                     	ds	2
   257  0000CC                     _Volt_Done:
   258                           	opt stack 0
   259  0000CC                     	ds	2
   260  0000CE                     _errno:
   261                           	opt stack 0
   262  0000CE                     	ds	2
   263                           tblptru	equ	0xFF8
   264                           tblptrh	equ	0xFF7
   265                           postinc0	equ	0xFEE
   266                           wreg	equ	0xFE8
   267                           
   268                           	psect	bssBANK1
   269  000100                     __pbssBANK1:
   270                           	opt stack 0
   271  000100                     _PrevBattery_Current:
   272                           	opt stack 0
   273  000100                     	ds	30
   274  00011E                     _PrevBattery_Volt:
   275                           	opt stack 0
   276  00011E                     	ds	30
   277  00013C                     _PrevTemp_DegF:
   278                           	opt stack 0
   279  00013C                     	ds	30
   280  00015A                     _Battery_Adc:
   281                           	opt stack 0
   282  00015A                     	ds	20
   283  00016E                     _TempBattery_Current:
   284                           	opt stack 0
   285  00016E                     	ds	30
   286  00018C                     _TempBattery_Volt:
   287                           	opt stack 0
   288  00018C                     	ds	30
   289  0001AA                     _TmpTemp_DegF:
   290                           	opt stack 0
   291  0001AA                     	ds	30
   292  0001C8                     _Temp_Adc:
   293                           	opt stack 0
   294  0001C8                     	ds	20
   295                           tblptru	equ	0xFF8
   296                           tblptrh	equ	0xFF7
   297                           postinc0	equ	0xFEE
   298                           wreg	equ	0xFE8
   299                           
   300                           	psect	cstackBANK0
   301  0000D0                     __pcstackBANK0:
   302                           	opt stack 0
   303  0000D0                     ?___ftadd:
   304                           	opt stack 0
   305  0000D0                     ___ftadd@f1:
   306                           	opt stack 0
   307                           
   308                           ; 3 bytes @ 0x0
   309  0000D0                     	ds	3
   310  0000D3                     ___ftadd@f2:
   311                           	opt stack 0
   312                           
   313                           ; 3 bytes @ 0x3
   314  0000D3                     	ds	3
   315  0000D6                     ??___ftadd:
   316                           
   317                           ; 0 bytes @ 0x6
   318  0000D6                     	ds	3
   319  0000D9                     ___ftadd@sign:
   320                           	opt stack 0
   321                           
   322                           ; 1 bytes @ 0x9
   323  0000D9                     	ds	1
   324  0000DA                     ___ftadd@exp2:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0xA
   328  0000DA                     	ds	1
   329  0000DB                     ___ftadd@exp1:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0xB
   333  0000DB                     	ds	1
   334  0000DC                     ?___ftsub:
   335                           	opt stack 0
   336  0000DC                     ?_eval_poly:
   337                           	opt stack 0
   338  0000DC                     Battery_Filter@x:
   339                           	opt stack 0
   340  0000DC                     Temp_Filter@x:
   341                           	opt stack 0
   342  0000DC                     ___ftsub@f1:
   343                           	opt stack 0
   344  0000DC                     eval_poly@x:
   345                           	opt stack 0
   346                           
   347                           ; 3 bytes @ 0xC
   348  0000DC                     	ds	2
   349  0000DE                     ??_Battery_Convert:
   350                           
   351                           ; 0 bytes @ 0xE
   352  0000DE                     	ds	1
   353  0000DF                     eval_poly@d:
   354                           	opt stack 0
   355  0000DF                     ___ftsub@f2:
   356                           	opt stack 0
   357                           
   358                           ; 3 bytes @ 0xF
   359  0000DF                     	ds	1
   360  0000E0                     Battery_Convert@x:
   361                           	opt stack 0
   362                           
   363                           ; 2 bytes @ 0x10
   364  0000E0                     	ds	1
   365  0000E1                     eval_poly@n:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x11
   369  0000E1                     	ds	2
   370  0000E3                     ??_eval_poly:
   371                           
   372                           ; 0 bytes @ 0x13
   373  0000E3                     	ds	2
   374  0000E5                     eval_poly@res:
   375                           	opt stack 0
   376                           
   377                           ; 3 bytes @ 0x15
   378  0000E5                     	ds	3
   379  0000E8                     ?_log:
   380                           	opt stack 0
   381  0000E8                     log@x:
   382                           	opt stack 0
   383                           
   384                           ; 3 bytes @ 0x18
   385  0000E8                     	ds	3
   386  0000EB                     log@exponent:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0x1B
   390  0000EB                     	ds	2
   391  0000ED                     ??_Temp_Convert:
   392                           
   393                           ; 0 bytes @ 0x1D
   394  0000ED                     	ds	2
   395  0000EF                     _Temp_Convert$1607:
   396                           	opt stack 0
   397                           
   398                           ; 3 bytes @ 0x1F
   399  0000EF                     	ds	3
   400  0000F2                     _Temp_Convert$1608:
   401                           	opt stack 0
   402                           
   403                           ; 3 bytes @ 0x22
   404  0000F2                     	ds	3
   405  0000F5                     Temp_Convert@x:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x25
   409  0000F5                     	ds	2
   410  0000F7                     Temp_Convert@steinhart:
   411                           	opt stack 0
   412                           
   413                           ; 3 bytes @ 0x27
   414  0000F7                     	ds	3
   415  0000FA                     
   416                           ; 2 bytes @ 0x2A
   417  0000FA                     	ds	2
   418  0000FC                     
   419                           ; 3 bytes @ 0x2C
   420  0000FC                     	ds	3
   421                           tblptru	equ	0xFF8
   422                           tblptrh	equ	0xFF7
   423                           postinc0	equ	0xFEE
   424                           wreg	equ	0xFE8
   425                           
   426                           	psect	cstackCOMRAM
   427  000001                     __pcstackCOMRAM:
   428                           	opt stack 0
   429  000001                     ??_ADC_StartConversion:
   430  000001                     
   431                           ; 1 bytes @ 0x0
   432  000001                     	ds	1
   433  000002                     ADC_StartConversion@channel:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0x1
   437  000002                     	ds	1
   438  000003                     ??_TMR1_ISR:
   439                           
   440                           ; 0 bytes @ 0x2
   441  000003                     	ds	3
   442  000006                     ??_INTERRUPT_InterruptManager:
   443                           
   444                           ; 0 bytes @ 0x5
   445  000006                     	ds	14
   446  000014                     ?___wmul:
   447                           	opt stack 0
   448  000014                     ?___ftpack:
   449                           	opt stack 0
   450  000014                     ?_frexp:
   451                           	opt stack 0
   452  000014                     ___wmul@multiplier:
   453                           	opt stack 0
   454  000014                     ___ftpack@arg:
   455                           	opt stack 0
   456  000014                     frexp@value:
   457                           	opt stack 0
   458                           
   459                           ; 3 bytes @ 0x13
   460  000014                     	ds	2
   461  000016                     ___wmul@multiplicand:
   462                           	opt stack 0
   463                           
   464                           ; 2 bytes @ 0x15
   465  000016                     	ds	1
   466  000017                     ___ftpack@exp:
   467                           	opt stack 0
   468  000017                     frexp@eptr:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0x16
   472  000017                     	ds	1
   473  000018                     ___ftpack@sign:
   474                           	opt stack 0
   475  000018                     ___wmul@product:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x17
   479  000018                     	ds	1
   480  000019                     ??___ftpack:
   481  000019                     ??_frexp:
   482                           
   483                           ; 0 bytes @ 0x18
   484  000019                     	ds	1
   485  00001A                     ___ftge@ff1:
   486                           	opt stack 0
   487                           
   488                           ; 3 bytes @ 0x19
   489  00001A                     	ds	2
   490  00001C                     ?___awtoft:
   491                           	opt stack 0
   492  00001C                     ___awtoft@c:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x1B
   496  00001C                     	ds	1
   497  00001D                     ___ftge@ff2:
   498                           	opt stack 0
   499                           
   500                           ; 3 bytes @ 0x1C
   501  00001D                     	ds	2
   502  00001F                     ___awtoft@sign:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x1E
   506  00001F                     	ds	1
   507  000020                     ??___ftge:
   508  000020                     ?___ftdiv:
   509                           	opt stack 0
   510  000020                     ___ftdiv@f1:
   511                           	opt stack 0
   512                           
   513                           ; 3 bytes @ 0x1F
   514  000020                     	ds	3
   515  000023                     Battery_Fault@fault:
   516                           	opt stack 0
   517  000023                     Temp_Fault@fault:
   518                           	opt stack 0
   519  000023                     ___ftdiv@f2:
   520                           	opt stack 0
   521                           
   522                           ; 3 bytes @ 0x22
   523  000023                     	ds	1
   524  000024                     Battery_Fault@i:
   525                           	opt stack 0
   526  000024                     Temp_Fault@i:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x23
   530  000024                     	ds	2
   531  000026                     ??___ftdiv:
   532                           
   533                           ; 0 bytes @ 0x25
   534  000026                     	ds	3
   535  000029                     ___ftdiv@cntr:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0x28
   539  000029                     	ds	1
   540  00002A                     ___ftdiv@f3:
   541                           	opt stack 0
   542                           
   543                           ; 3 bytes @ 0x29
   544  00002A                     	ds	3
   545  00002D                     ___ftdiv@exp:
   546                           	opt stack 0
   547                           
   548                           ; 1 bytes @ 0x2C
   549  00002D                     	ds	1
   550  00002E                     ___ftdiv@sign:
   551                           	opt stack 0
   552                           
   553                           ; 1 bytes @ 0x2D
   554  00002E                     	ds	1
   555  00002F                     ?___ftmul:
   556                           	opt stack 0
   557  00002F                     ___ftmul@f1:
   558                           	opt stack 0
   559                           
   560                           ; 3 bytes @ 0x2E
   561  00002F                     	ds	3
   562  000032                     ___ftmul@f2:
   563                           	opt stack 0
   564                           
   565                           ; 3 bytes @ 0x31
   566  000032                     	ds	3
   567  000035                     ??___ftmul:
   568                           
   569                           ; 0 bytes @ 0x34
   570  000035                     	ds	3
   571  000038                     ___ftmul@exp:
   572                           	opt stack 0
   573                           
   574                           ; 1 bytes @ 0x37
   575  000038                     	ds	1
   576  000039                     ___ftmul@f3_as_product:
   577                           	opt stack 0
   578                           
   579                           ; 3 bytes @ 0x38
   580  000039                     	ds	3
   581  00003C                     ___ftmul@cntr:
   582                           	opt stack 0
   583                           
   584                           ; 1 bytes @ 0x3B
   585  00003C                     	ds	1
   586  00003D                     ___ftmul@sign:
   587                           	opt stack 0
   588                           
   589                           ; 1 bytes @ 0x3C
   590  00003D                     	ds	1
   591  00003E                     tblptru	equ	0xFF8
   592                           tblptrh	equ	0xFF7
   593                           postinc0	equ	0xFEE
   594                           wreg	equ	0xFE8
   595                           
   596                           ; 0 bytes @ 0x3D
   597 ;;
   598 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   599 ;;
   600 ;; *************** function _main *****************
   601 ;; Defined at:
   602 ;;		line 31 in file "Main.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;  argc            2   42[BANK0 ] int 
   605 ;;  argv            3   44[BANK0 ] PTR PTR unsigned char 
   606 ;; Auto vars:     Size  Location     Type
   607 ;;		None
   608 ;; Return value:  Size  Location     Type
   609 ;;                  2   42[BANK0 ] int 
   610 ;; Registers used:
   611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   617 ;;      Params:         0       5       0       0       0       0       0
   618 ;;      Locals:         0       0       0       0       0       0       0
   619 ;;      Temps:          0       0       0       0       0       0       0
   620 ;;      Totals:         0       5       0       0       0       0       0
   621 ;;Total ram usage:        5 bytes
   622 ;; Hardware stack levels required when called:    9
   623 ;; This function calls:
   624 ;;		_Battery_Convert
   625 ;;		_Battery_Fault
   626 ;;		_SYSTEM_Initialize
   627 ;;		_Temp_Convert
   628 ;;		_Temp_Fault
   629 ;; This function is called by:
   630 ;;		Startup code after reset
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           	psect	text0
   635  0017A6                     __ptext0:
   636                           	opt stack 0
   637  0017A6                     _main:
   638                           	opt stack 22
   639                           
   640                           ;Main.c: 33: SYSTEM_Initialize();
   641                           
   642                           ;incstack = 0
   643  0017A6  EC0E  F00C         	call	_SYSTEM_Initialize	;wreg free
   644                           
   645                           ;Main.c: 52: (INTCONbits.GIE = 1);
   646  0017AA  8EF2               	bsf	intcon,7,c	;volatile
   647                           
   648                           ;Main.c: 55: (INTCONbits.PEIE = 1);
   649  0017AC  8CF2               	bsf	intcon,6,c	;volatile
   650  0017AE                     l2958:
   651                           
   652                           ;Main.c: 65: {
   653                           ;Main.c: 66: if (Temp_Done)
   654  0017AE  0100               	movlb	0	; () banked
   655  0017B0  51CB               	movf	(_Temp_Done+1)& (0+255),w,b
   656  0017B2  11CA               	iorwf	_Temp_Done& (0+255),w,b
   657  0017B4  B4D8               	btfsc	status,2,c
   658  0017B6  D004               	goto	l2964
   659                           
   660                           ; BSR set to: 0
   661                           ;Main.c: 67: {
   662                           ;Main.c: 68: Temp_Convert();
   663  0017B8  EC4F  F004         	call	_Temp_Convert	;wreg free
   664                           
   665                           ;Main.c: 69: Temp_Fault();
   666  0017BC  ECA1  F00A         	call	_Temp_Fault	;wreg free
   667  0017C0                     l2964:
   668                           
   669                           ;Main.c: 70: }
   670                           ;Main.c: 71: if (Volt_Done)
   671  0017C0  0100               	movlb	0	; () banked
   672  0017C2  51CD               	movf	(_Volt_Done+1)& (0+255),w,b
   673  0017C4  11CC               	iorwf	_Volt_Done& (0+255),w,b
   674  0017C6  B4D8               	btfsc	status,2,c
   675  0017C8  D7F2               	goto	l2958
   676                           
   677                           ; BSR set to: 0
   678                           ;Main.c: 72: {
   679                           ;Main.c: 73: Battery_Convert();
   680  0017CA  EC80  F008         	call	_Battery_Convert	;wreg free
   681                           
   682                           ;Main.c: 74: Battery_Fault();
   683  0017CE  EC65  F009         	call	_Battery_Fault	;wreg free
   684  0017D2  D7ED               	goto	l2958
   685  0017D4                     __end_of_main:
   686                           	opt stack 0
   687                           tblptru	equ	0xFF8
   688                           tblptrh	equ	0xFF7
   689                           intcon	equ	0xFF2
   690                           postinc0	equ	0xFEE
   691                           wreg	equ	0xFE8
   692                           status	equ	0xFD8
   693                           
   694 ;; *************** function _Temp_Fault *****************
   695 ;; Defined at:
   696 ;;		line 12 in file "Tempeture.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;		None
   699 ;; Auto vars:     Size  Location     Type
   700 ;;  i               2   35[COMRAM] int 
   701 ;;  fault           1   34[COMRAM] unsigned char 
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      unsigned char 
   704 ;; Registers used:
   705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   711 ;;      Params:         0       0       0       0       0       0       0
   712 ;;      Locals:         3       0       0       0       0       0       0
   713 ;;      Temps:          0       0       0       0       0       0       0
   714 ;;      Totals:         3       0       0       0       0       0       0
   715 ;;Total ram usage:        3 bytes
   716 ;; Hardware stack levels used:    1
   717 ;; Hardware stack levels required when called:    5
   718 ;; This function calls:
   719 ;;		___ftge
   720 ;;		___wmul
   721 ;; This function is called by:
   722 ;;		_main
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           	psect	text1
   727  001542                     __ptext1:
   728                           	opt stack 0
   729  001542                     _Temp_Fault:
   730                           	opt stack 25
   731                           
   732                           ;Tempeture.c: 15: char fault = 0;
   733                           
   734                           ;incstack = 0
   735  001542  0E00               	movlw	0
   736  001544  6E23               	movwf	Temp_Fault@fault,c
   737                           
   738                           ;Tempeture.c: 16: for(int i = 0;i<9;i++)
   739  001546  0E00               	movlw	0
   740  001548  6E25               	movwf	Temp_Fault@i+1,c
   741  00154A  0E00               	movlw	0
   742  00154C  6E24               	movwf	Temp_Fault@i,c
   743  00154E  5025               	movf	Temp_Fault@i+1,w,c
   744  001550  0A80               	xorlw	128
   745  001552  0F80               	addlw	-128
   746  001554  0E09               	movlw	9
   747  001556  B4D8               	btfsc	status,2,c
   748  001558  5C24               	subwf	Temp_Fault@i,w,c
   749  00155A  B0D8               	btfsc	status,0,c
   750  00155C  0012               	return	
   751                           
   752                           ;Tempeture.c: 17: {
   753                           ;Tempeture.c: 18: if (60.5 < Temp_DegF[i])
   754  00155E  0E00               	movlw	0
   755  001560  6E1A               	movwf	___ftge@ff1,c
   756  001562  0E72               	movlw	114
   757  001564  6E1B               	movwf	___ftge@ff1+1,c
   758  001566  0E42               	movlw	66
   759  001568  6E1C               	movwf	___ftge@ff1+2,c
   760  00156A  C024  F014         	movff	Temp_Fault@i,___wmul@multiplier
   761  00156E  C025  F015         	movff	Temp_Fault@i+1,___wmul@multiplier+1
   762  001572  0E00               	movlw	0
   763  001574  6E17               	movwf	___wmul@multiplicand+1,c
   764  001576  0E03               	movlw	3
   765  001578  6E16               	movwf	___wmul@multiplicand,c
   766  00157A  ECEA  F00B         	call	___wmul	;wreg free
   767  00157E  0100               	movlb	0	; () banked
   768  001580  0E9C               	movlw	low _Temp_DegF
   769  001582  2414               	addwf	?___wmul,w,c
   770  001584  6ED9               	movwf	fsr2l,c
   771  001586  0100               	movlb	0	; () banked
   772  001588  0E00               	movlw	high _Temp_DegF
   773  00158A  2015               	addwfc	?___wmul+1,w,c
   774  00158C  6EDA               	movwf	fsr2h,c
   775  00158E  CFDE F01D          	movff	postinc2,___ftge@ff2
   776  001592  CFDE F01E          	movff	postinc2,___ftge@ff2+1
   777  001596  CFDD F01F          	movff	postdec2,___ftge@ff2+2
   778  00159A  EC59  F00A         	call	___ftge	;wreg free
   779  00159E  B0D8               	btfsc	status,0,c
   780  0015A0  D002               	goto	l2884
   781                           
   782                           ;Tempeture.c: 19: {
   783                           ;Tempeture.c: 20: fault = 1;
   784  0015A2  0E01               	movlw	1
   785  0015A4  6E23               	movwf	Temp_Fault@fault,c
   786  0015A6                     l2884:
   787  0015A6  4A24               	infsnz	Temp_Fault@i,f,c
   788  0015A8  2A25               	incf	Temp_Fault@i+1,f,c
   789  0015AA  D7D1               	goto	L1
   790  0015AC                     __end_of_Temp_Fault:
   791                           	opt stack 0
   792                           tblptru	equ	0xFF8
   793                           tblptrh	equ	0xFF7
   794                           intcon	equ	0xFF2
   795                           postinc0	equ	0xFEE
   796                           wreg	equ	0xFE8
   797                           postinc2	equ	0xFDE
   798                           postdec2	equ	0xFDD
   799                           fsr2h	equ	0xFDA
   800                           fsr2l	equ	0xFD9
   801                           status	equ	0xFD8
   802                           
   803 ;; *************** function _Temp_Convert *****************
   804 ;; Defined at:
   805 ;;		line 50 in file "Tempeture.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;		None
   808 ;; Auto vars:     Size  Location     Type
   809 ;;  steinhart       3   39[BANK0 ] float 
   810 ;;  x               2   37[BANK0 ] int 
   811 ;; Return value:  Size  Location     Type
   812 ;;		None               void
   813 ;; Registers used:
   814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   820 ;;      Params:         0       0       0       0       0       0       0
   821 ;;      Locals:         0      11       0       0       0       0       0
   822 ;;      Temps:          0       2       0       0       0       0       0
   823 ;;      Totals:         0      13       0       0       0       0       0
   824 ;;Total ram usage:       13 bytes
   825 ;; Hardware stack levels used:    1
   826 ;; Hardware stack levels required when called:    8
   827 ;; This function calls:
   828 ;;		_Temp_Filter
   829 ;;		___awtoft
   830 ;;		___ftadd
   831 ;;		___ftdiv
   832 ;;		___ftmul
   833 ;;		___ftsub
   834 ;;		___wmul
   835 ;;		_log
   836 ;; This function is called by:
   837 ;;		_main
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           	psect	text2
   842  00089E                     __ptext2:
   843                           	opt stack 0
   844  00089E                     _Temp_Convert:
   845                           	opt stack 22
   846                           
   847                           ;Tempeture.c: 52: int x;
   848                           ;Tempeture.c: 53: float steinhart;
   849                           ;Tempeture.c: 54: for(x = 0; x < 10; x++)
   850                           
   851                           ;incstack = 0
   852  00089E  0E00               	movlw	0
   853  0008A0  0100               	movlb	0	; () banked
   854  0008A2  6FF6               	movwf	(Temp_Convert@x+1)& (0+255),b
   855  0008A4  0E00               	movlw	0
   856  0008A6  0100               	movlb	0	; () banked
   857  0008A8  6FF5               	movwf	Temp_Convert@x& (0+255),b
   858  0008AA                     
   859                           ; BSR set to: 0
   860  0008AA  0100               	movlb	0	; () banked
   861  0008AC  51F6               	movf	(Temp_Convert@x+1)& (0+255),w,b
   862  0008AE  0A80               	xorlw	128
   863  0008B0  0F80               	addlw	-128
   864  0008B2  0E0A               	movlw	10
   865  0008B4  B4D8               	btfsc	status,2,c
   866  0008B6  5DF5               	subwf	Temp_Convert@x& (0+255),w,b
   867  0008B8  B0D8               	btfsc	status,0,c
   868  0008BA  D10D               	goto	l2918
   869                           
   870                           ; BSR set to: 0
   871                           ;Tempeture.c: 55: {
   872                           ;Tempeture.c: 56: steinhart = (10000 / ((1023.0 / Temp_Adc[x]) - 1)) / 10000;
   873                           
   874                           ; BSR set to: 0
   875                           
   876                           ; BSR set to: 0
   877  0008BC  0E00               	movlw	0
   878  0008BE  0100               	movlb	0	; () banked
   879  0008C0  6FD3               	movwf	___ftadd@f2& (0+255),b
   880  0008C2  0E80               	movlw	128
   881  0008C4  0100               	movlb	0	; () banked
   882  0008C6  6FD4               	movwf	(___ftadd@f2+1)& (0+255),b
   883  0008C8  0EBF               	movlw	191
   884  0008CA  0100               	movlb	0	; () banked
   885  0008CC  6FD5               	movwf	(___ftadd@f2+2)& (0+255),b
   886  0008CE  0EC8               	movlw	low _Temp_Adc
   887  0008D0  0100               	movlb	0	; () banked
   888  0008D2  6FED               	movwf	??_Temp_Convert& (0+255),b
   889  0008D4  0E01               	movlw	high _Temp_Adc
   890  0008D6  6FEE               	movwf	(??_Temp_Convert+1)& (0+255),b
   891  0008D8  90D8               	bcf	status,0,c
   892  0008DA  0100               	movlb	0	; () banked
   893  0008DC  35F5               	rlcf	Temp_Convert@x& (0+255),w,b
   894  0008DE  6ED9               	movwf	fsr2l,c
   895  0008E0  0100               	movlb	0	; () banked
   896  0008E2  35F6               	rlcf	(Temp_Convert@x+1)& (0+255),w,b
   897  0008E4  6EDA               	movwf	fsr2h,c
   898  0008E6  0100               	movlb	0	; () banked
   899  0008E8  51ED               	movf	??_Temp_Convert& (0+255),w,b
   900  0008EA  26D9               	addwf	fsr2l,f,c
   901  0008EC  0100               	movlb	0	; () banked
   902  0008EE  51EE               	movf	(??_Temp_Convert+1)& (0+255),w,b
   903  0008F0  22DA               	addwfc	fsr2h,f,c
   904  0008F2  CFDE F01C          	movff	postinc2,___awtoft@c
   905  0008F6  CFDD F01D          	movff	postdec2,___awtoft@c+1
   906  0008FA  EC28  F00B         	call	___awtoft	;wreg free
   907  0008FE  C01C  F023         	movff	?___awtoft,___ftdiv@f2
   908  000902  C01D  F024         	movff	?___awtoft+1,___ftdiv@f2+1
   909  000906  C01E  F025         	movff	?___awtoft+2,___ftdiv@f2+2
   910  00090A  0EC0               	movlw	192
   911  00090C  6E20               	movwf	___ftdiv@f1,c
   912  00090E  0E7F               	movlw	127
   913  000910  6E21               	movwf	___ftdiv@f1+1,c
   914  000912  0E44               	movlw	68
   915  000914  6E22               	movwf	___ftdiv@f1+2,c
   916  000916  ECF4  F008         	call	___ftdiv	;wreg free
   917  00091A  C020  F0D0         	movff	?___ftdiv,___ftadd@f1
   918  00091E  C021  F0D1         	movff	?___ftdiv+1,___ftadd@f1+1
   919  000922  C022  F0D2         	movff	?___ftdiv+2,___ftadd@f1+2
   920  000926  EC0F  F003         	call	___ftadd	;wreg free
   921  00092A  C0D0  F0EF         	movff	?___ftadd,_Temp_Convert$1607
   922  00092E  C0D1  F0F0         	movff	?___ftadd+1,_Temp_Convert$1607+1
   923  000932  C0D2  F0F1         	movff	?___ftadd+2,_Temp_Convert$1607+2
   924                           
   925                           ;Tempeture.c: 55: {
   926                           ;Tempeture.c: 56: steinhart = (10000 / ((1023.0 / Temp_Adc[x]) - 1)) / 10000;
   927  000936  C0EF  F023         	movff	_Temp_Convert$1607,___ftdiv@f2
   928  00093A  C0F0  F024         	movff	_Temp_Convert$1607+1,___ftdiv@f2+1
   929  00093E  C0F1  F025         	movff	_Temp_Convert$1607+2,___ftdiv@f2+2
   930  000942  0E40               	movlw	64
   931  000944  6E20               	movwf	___ftdiv@f1,c
   932  000946  0E1C               	movlw	28
   933  000948  6E21               	movwf	___ftdiv@f1+1,c
   934  00094A  0E46               	movlw	70
   935  00094C  6E22               	movwf	___ftdiv@f1+2,c
   936  00094E  ECF4  F008         	call	___ftdiv	;wreg free
   937  000952  C020  F0F2         	movff	?___ftdiv,_Temp_Convert$1608
   938  000956  C021  F0F3         	movff	?___ftdiv+1,_Temp_Convert$1608+1
   939  00095A  C022  F0F4         	movff	?___ftdiv+2,_Temp_Convert$1608+2
   940                           
   941                           ;Tempeture.c: 55: {
   942                           ;Tempeture.c: 56: steinhart = (10000 / ((1023.0 / Temp_Adc[x]) - 1)) / 10000;
   943  00095E  C0F2  F020         	movff	_Temp_Convert$1608,___ftdiv@f1
   944  000962  C0F3  F021         	movff	_Temp_Convert$1608+1,___ftdiv@f1+1
   945  000966  C0F4  F022         	movff	_Temp_Convert$1608+2,___ftdiv@f1+2
   946  00096A  0E40               	movlw	64
   947  00096C  6E23               	movwf	___ftdiv@f2,c
   948  00096E  0E1C               	movlw	28
   949  000970  6E24               	movwf	___ftdiv@f2+1,c
   950  000972  0E46               	movlw	70
   951  000974  6E25               	movwf	___ftdiv@f2+2,c
   952  000976  ECF4  F008         	call	___ftdiv	;wreg free
   953  00097A  C020  F0F7         	movff	?___ftdiv,Temp_Convert@steinhart
   954  00097E  C021  F0F8         	movff	?___ftdiv+1,Temp_Convert@steinhart+1
   955  000982  C022  F0F9         	movff	?___ftdiv+2,Temp_Convert@steinhart+2
   956                           
   957                           ;Tempeture.c: 57: steinhart = log(steinhart);
   958  000986  C0F7  F0E8         	movff	Temp_Convert@steinhart,log@x
   959  00098A  C0F8  F0E9         	movff	Temp_Convert@steinhart+1,log@x+1
   960  00098E  C0F9  F0EA         	movff	Temp_Convert@steinhart+2,log@x+2
   961  000992  ECDE  F006         	call	_log	;wreg free
   962  000996  C0E8  F0F7         	movff	?_log,Temp_Convert@steinhart
   963  00099A  C0E9  F0F8         	movff	?_log+1,Temp_Convert@steinhart+1
   964  00099E  C0EA  F0F9         	movff	?_log+2,Temp_Convert@steinhart+2
   965                           
   966                           ;Tempeture.c: 58: steinhart /= 3950;
   967  0009A2  C0F7  F020         	movff	Temp_Convert@steinhart,___ftdiv@f1
   968  0009A6  C0F8  F021         	movff	Temp_Convert@steinhart+1,___ftdiv@f1+1
   969  0009AA  C0F9  F022         	movff	Temp_Convert@steinhart+2,___ftdiv@f1+2
   970  0009AE  0EE0               	movlw	224
   971  0009B0  6E23               	movwf	___ftdiv@f2,c
   972  0009B2  0E76               	movlw	118
   973  0009B4  6E24               	movwf	___ftdiv@f2+1,c
   974  0009B6  0E45               	movlw	69
   975  0009B8  6E25               	movwf	___ftdiv@f2+2,c
   976  0009BA  ECF4  F008         	call	___ftdiv	;wreg free
   977  0009BE  C020  F0F7         	movff	?___ftdiv,Temp_Convert@steinhart
   978  0009C2  C021  F0F8         	movff	?___ftdiv+1,Temp_Convert@steinhart+1
   979  0009C6  C022  F0F9         	movff	?___ftdiv+2,Temp_Convert@steinhart+2
   980                           
   981                           ;Tempeture.c: 59: steinhart += 1.0 / (25 + 273.15);
   982  0009CA  C0F7  F0D0         	movff	Temp_Convert@steinhart,___ftadd@f1
   983  0009CE  C0F8  F0D1         	movff	Temp_Convert@steinhart+1,___ftadd@f1+1
   984  0009D2  C0F9  F0D2         	movff	Temp_Convert@steinhart+2,___ftadd@f1+2
   985  0009D6  0ECF               	movlw	207
   986  0009D8  0100               	movlb	0	; () banked
   987  0009DA  6FD3               	movwf	___ftadd@f2& (0+255),b
   988  0009DC  0E5B               	movlw	91
   989  0009DE  0100               	movlb	0	; () banked
   990  0009E0  6FD4               	movwf	(___ftadd@f2+1)& (0+255),b
   991  0009E2  0E3B               	movlw	59
   992  0009E4  0100               	movlb	0	; () banked
   993  0009E6  6FD5               	movwf	(___ftadd@f2+2)& (0+255),b
   994  0009E8  EC0F  F003         	call	___ftadd	;wreg free
   995  0009EC  C0D0  F0F7         	movff	?___ftadd,Temp_Convert@steinhart
   996  0009F0  C0D1  F0F8         	movff	?___ftadd+1,Temp_Convert@steinhart+1
   997  0009F4  C0D2  F0F9         	movff	?___ftadd+2,Temp_Convert@steinhart+2
   998                           
   999                           ;Tempeture.c: 60: steinhart = 1.0 / steinhart;
  1000  0009F8  0E00               	movlw	0
  1001  0009FA  6E20               	movwf	___ftdiv@f1,c
  1002  0009FC  0E80               	movlw	128
  1003  0009FE  6E21               	movwf	___ftdiv@f1+1,c
  1004  000A00  0E3F               	movlw	63
  1005  000A02  6E22               	movwf	___ftdiv@f1+2,c
  1006  000A04  C0F7  F023         	movff	Temp_Convert@steinhart,___ftdiv@f2
  1007  000A08  C0F8  F024         	movff	Temp_Convert@steinhart+1,___ftdiv@f2+1
  1008  000A0C  C0F9  F025         	movff	Temp_Convert@steinhart+2,___ftdiv@f2+2
  1009  000A10  ECF4  F008         	call	___ftdiv	;wreg free
  1010  000A14  C020  F0F7         	movff	?___ftdiv,Temp_Convert@steinhart
  1011  000A18  C021  F0F8         	movff	?___ftdiv+1,Temp_Convert@steinhart+1
  1012  000A1C  C022  F0F9         	movff	?___ftdiv+2,Temp_Convert@steinhart+2
  1013                           
  1014                           ;Tempeture.c: 61: steinhart -= 273.15;
  1015  000A20  C0F7  F0DC         	movff	Temp_Convert@steinhart,___ftsub@f1
  1016  000A24  C0F8  F0DD         	movff	Temp_Convert@steinhart+1,___ftsub@f1+1
  1017  000A28  C0F9  F0DE         	movff	Temp_Convert@steinhart+2,___ftsub@f1+2
  1018  000A2C  0E93               	movlw	147
  1019  000A2E  0100               	movlb	0	; () banked
  1020  000A30  6FDF               	movwf	___ftsub@f2& (0+255),b
  1021  000A32  0E88               	movlw	136
  1022  000A34  0100               	movlb	0	; () banked
  1023  000A36  6FE0               	movwf	(___ftsub@f2+1)& (0+255),b
  1024  000A38  0E43               	movlw	67
  1025  000A3A  0100               	movlb	0	; () banked
  1026  000A3C  6FE1               	movwf	(___ftsub@f2+2)& (0+255),b
  1027  000A3E  EC4C  F00B         	call	___ftsub	;wreg free
  1028  000A42  C0DC  F0F7         	movff	?___ftsub,Temp_Convert@steinhart
  1029  000A46  C0DD  F0F8         	movff	?___ftsub+1,Temp_Convert@steinhart+1
  1030  000A4A  C0DE  F0F9         	movff	?___ftsub+2,Temp_Convert@steinhart+2
  1031                           
  1032                           ;Tempeture.c: 62: steinhart = (steinhart*1.8) + 32.0;
  1033  000A4E  0E66               	movlw	102
  1034  000A50  6E32               	movwf	___ftmul@f2,c
  1035  000A52  0EE6               	movlw	230
  1036  000A54  6E33               	movwf	___ftmul@f2+1,c
  1037  000A56  0E3F               	movlw	63
  1038  000A58  6E34               	movwf	___ftmul@f2+2,c
  1039  000A5A  C0F7  F02F         	movff	Temp_Convert@steinhart,___ftmul@f1
  1040  000A5E  C0F8  F030         	movff	Temp_Convert@steinhart+1,___ftmul@f1+1
  1041  000A62  C0F9  F031         	movff	Temp_Convert@steinhart+2,___ftmul@f1+2
  1042  000A66  EC08  F008         	call	___ftmul	;wreg free
  1043  000A6A  C02F  F0D0         	movff	?___ftmul,___ftadd@f1
  1044  000A6E  C030  F0D1         	movff	?___ftmul+1,___ftadd@f1+1
  1045  000A72  C031  F0D2         	movff	?___ftmul+2,___ftadd@f1+2
  1046  000A76  0E00               	movlw	0
  1047  000A78  0100               	movlb	0	; () banked
  1048  000A7A  6FD3               	movwf	___ftadd@f2& (0+255),b
  1049  000A7C  0E00               	movlw	0
  1050  000A7E  0100               	movlb	0	; () banked
  1051  000A80  6FD4               	movwf	(___ftadd@f2+1)& (0+255),b
  1052  000A82  0E42               	movlw	66
  1053  000A84  0100               	movlb	0	; () banked
  1054  000A86  6FD5               	movwf	(___ftadd@f2+2)& (0+255),b
  1055  000A88  EC0F  F003         	call	___ftadd	;wreg free
  1056  000A8C  C0D0  F0F7         	movff	?___ftadd,Temp_Convert@steinhart
  1057  000A90  C0D1  F0F8         	movff	?___ftadd+1,Temp_Convert@steinhart+1
  1058  000A94  C0D2  F0F9         	movff	?___ftadd+2,Temp_Convert@steinhart+2
  1059                           
  1060                           ;Tempeture.c: 63: TmpTemp_DegF[x] = steinhart;
  1061  000A98  C0F5  F014         	movff	Temp_Convert@x,___wmul@multiplier
  1062  000A9C  C0F6  F015         	movff	Temp_Convert@x+1,___wmul@multiplier+1
  1063  000AA0  0E00               	movlw	0
  1064  000AA2  6E17               	movwf	___wmul@multiplicand+1,c
  1065  000AA4  0E03               	movlw	3
  1066  000AA6  6E16               	movwf	___wmul@multiplicand,c
  1067  000AA8  ECEA  F00B         	call	___wmul	;wreg free
  1068  000AAC  0101               	movlb	1	; () banked
  1069  000AAE  0EAA               	movlw	low _TmpTemp_DegF
  1070  000AB0  2414               	addwf	?___wmul,w,c
  1071  000AB2  6ED9               	movwf	fsr2l,c
  1072  000AB4  0101               	movlb	1	; () banked
  1073  000AB6  0E01               	movlw	high _TmpTemp_DegF
  1074  000AB8  2015               	addwfc	?___wmul+1,w,c
  1075  000ABA  6EDA               	movwf	fsr2h,c
  1076  000ABC  0100               	movlb	0	; () banked
  1077  000ABE  C0F7  FFDE         	movff	Temp_Convert@steinhart,postinc2
  1078  000AC2  0100               	movlb	0	; () banked
  1079  000AC4  C0F8  FFDE         	movff	Temp_Convert@steinhart+1,postinc2
  1080  000AC8  0100               	movlb	0	; () banked
  1081  000ACA  C0F9  FFDD         	movff	Temp_Convert@steinhart+2,postdec2
  1082                           
  1083                           ; BSR set to: 0
  1084  000ACE  0100               	movlb	0	; () banked
  1085  000AD0  4BF5               	infsnz	Temp_Convert@x& (0+255),f,b
  1086  000AD2  2BF6               	incf	(Temp_Convert@x+1)& (0+255),f,b
  1087  000AD4  D6EA               	goto	L2
  1088  000AD6                     l2918:
  1089                           
  1090                           ; BSR set to: 0
  1091                           ;Tempeture.c: 64: }
  1092                           ;Tempeture.c: 65: Temp_Filter();
  1093  000AD6  EC6E  F005         	call	_Temp_Filter	;wreg free
  1094  000ADA  0012               	return	
  1095  000ADC                     __end_of_Temp_Convert:
  1096                           	opt stack 0
  1097                           tblptru	equ	0xFF8
  1098                           tblptrh	equ	0xFF7
  1099                           intcon	equ	0xFF2
  1100                           postinc0	equ	0xFEE
  1101                           wreg	equ	0xFE8
  1102                           postinc2	equ	0xFDE
  1103                           postdec2	equ	0xFDD
  1104                           fsr2h	equ	0xFDA
  1105                           fsr2l	equ	0xFD9
  1106                           status	equ	0xFD8
  1107                           
  1108 ;; *************** function _log *****************
  1109 ;; Defined at:
  1110 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\log.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  x               3   24[BANK0 ] int 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  exponent        2   27[BANK0 ] int 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  3   24[BANK0 ] int 
  1117 ;; Registers used:
  1118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1124 ;;      Params:         0       3       0       0       0       0       0
  1125 ;;      Locals:         0       2       0       0       0       0       0
  1126 ;;      Temps:          0       0       0       0       0       0       0
  1127 ;;      Totals:         0       5       0       0       0       0       0
  1128 ;;Total ram usage:        5 bytes
  1129 ;; Hardware stack levels used:    1
  1130 ;; Hardware stack levels required when called:    7
  1131 ;; This function calls:
  1132 ;;		___awtoft
  1133 ;;		___ftadd
  1134 ;;		___ftmul
  1135 ;;		_eval_poly
  1136 ;;		_frexp
  1137 ;; This function is called by:
  1138 ;;		_Temp_Convert
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text3
  1143  000DBC                     __ptext3:
  1144                           	opt stack 0
  1145  000DBC                     _log:
  1146                           	opt stack 22
  1147                           
  1148                           ;incstack = 0
  1149  000DBC  0100               	movlb	0	; () banked
  1150  000DBE  51EA               	movf	(log@x+2)& (0+255),w,b
  1151  000DC0  0A80               	xorlw	128
  1152  000DC2  0F80               	addlw	128
  1153  000DC4  E107               	bnz	u2605
  1154  000DC6  0E00               	movlw	0
  1155  000DC8  0100               	movlb	0	; () banked
  1156  000DCA  5DE9               	subwf	(log@x+1)& (0+255),w,b
  1157  000DCC  E103               	bnz	u2605
  1158  000DCE  0E00               	movlw	0
  1159  000DD0  0100               	movlb	0	; () banked
  1160  000DD2  5DE8               	subwf	log@x& (0+255),w,b
  1161  000DD4                     u2605:
  1162  000DD4  B0D8               	btfsc	status,0,c
  1163  000DD6  D010               	goto	l2776
  1164                           
  1165                           ; BSR set to: 0
  1166  000DD8  0E00               	movlw	0
  1167  000DDA  0100               	movlb	0	; () banked
  1168  000DDC  6FCF               	movwf	(_errno+1)& (0+255),b
  1169  000DDE  0E21               	movlw	33
  1170  000DE0  0100               	movlb	0	; () banked
  1171  000DE2  6FCE               	movwf	_errno& (0+255),b
  1172  000DE4  0E00               	movlw	0
  1173  000DE6  0100               	movlb	0	; () banked
  1174  000DE8  6FE8               	movwf	?_log& (0+255),b
  1175  000DEA  0E00               	movlw	0
  1176  000DEC  0100               	movlb	0	; () banked
  1177  000DEE  6FE9               	movwf	(?_log+1)& (0+255),b
  1178  000DF0  0E00               	movlw	0
  1179  000DF2  0100               	movlb	0	; () banked
  1180  000DF4  6FEA               	movwf	(?_log+2)& (0+255),b
  1181  000DF6  0012               	return	
  1182  000DF8                     l2776:
  1183                           
  1184                           ; BSR set to: 0
  1185  000DF8  0E7F               	movlw	127
  1186  000DFA  0100               	movlb	0	; () banked
  1187  000DFC  15EA               	andwf	(log@x+2)& (0+255),w,b
  1188  000DFE  0100               	movlb	0	; () banked
  1189  000E00  11E9               	iorwf	(log@x+1)& (0+255),w,b
  1190  000E02  0100               	movlb	0	; () banked
  1191  000E04  11E8               	iorwf	log@x& (0+255),w,b
  1192  000E06  A4D8               	btfss	status,2,c
  1193  000E08  D010               	goto	l2782
  1194                           
  1195                           ; BSR set to: 0
  1196  000E0A  0E00               	movlw	0
  1197  000E0C  0100               	movlb	0	; () banked
  1198  000E0E  6FCF               	movwf	(_errno+1)& (0+255),b
  1199  000E10  0E22               	movlw	34
  1200  000E12  0100               	movlb	0	; () banked
  1201  000E14  6FCE               	movwf	_errno& (0+255),b
  1202  000E16  0E00               	movlw	0
  1203  000E18  0100               	movlb	0	; () banked
  1204  000E1A  6FE8               	movwf	?_log& (0+255),b
  1205  000E1C  0E00               	movlw	0
  1206  000E1E  0100               	movlb	0	; () banked
  1207  000E20  6FE9               	movwf	(?_log+1)& (0+255),b
  1208  000E22  0E00               	movlw	0
  1209  000E24  0100               	movlb	0	; () banked
  1210  000E26  6FEA               	movwf	(?_log+2)& (0+255),b
  1211  000E28  0012               	return	
  1212  000E2A                     l2782:
  1213                           
  1214                           ; BSR set to: 0
  1215  000E2A  0E00               	movlw	0
  1216  000E2C  6E32               	movwf	___ftmul@f2,c
  1217  000E2E  0E00               	movlw	0
  1218  000E30  6E33               	movwf	___ftmul@f2+1,c
  1219  000E32  0E40               	movlw	64
  1220  000E34  6E34               	movwf	___ftmul@f2+2,c
  1221  000E36  0100               	movlb	0	; () banked
  1222  000E38  0E00               	movlw	high log@exponent
  1223  000E3A  6E18               	movwf	frexp@eptr+1,c
  1224  000E3C  0100               	movlb	0	; () banked
  1225  000E3E  0EEB               	movlw	low log@exponent
  1226  000E40  6E17               	movwf	frexp@eptr,c
  1227  000E42  C0E8  F014         	movff	log@x,frexp@value
  1228  000E46  C0E9  F015         	movff	log@x+1,frexp@value+1
  1229  000E4A  C0EA  F016         	movff	log@x+2,frexp@value+2
  1230  000E4E  EC10  F00A         	call	_frexp	;wreg free
  1231  000E52  C014  F02F         	movff	?_frexp,___ftmul@f1
  1232  000E56  C015  F030         	movff	?_frexp+1,___ftmul@f1+1
  1233  000E5A  C016  F031         	movff	?_frexp+2,___ftmul@f1+2
  1234  000E5E  EC08  F008         	call	___ftmul	;wreg free
  1235  000E62  C02F  F0D0         	movff	?___ftmul,___ftadd@f1
  1236  000E66  C030  F0D1         	movff	?___ftmul+1,___ftadd@f1+1
  1237  000E6A  C031  F0D2         	movff	?___ftmul+2,___ftadd@f1+2
  1238  000E6E  0E00               	movlw	0
  1239  000E70  0100               	movlb	0	; () banked
  1240  000E72  6FD3               	movwf	___ftadd@f2& (0+255),b
  1241  000E74  0E80               	movlw	128
  1242  000E76  0100               	movlb	0	; () banked
  1243  000E78  6FD4               	movwf	(___ftadd@f2+1)& (0+255),b
  1244  000E7A  0EBF               	movlw	191
  1245  000E7C  0100               	movlb	0	; () banked
  1246  000E7E  6FD5               	movwf	(___ftadd@f2+2)& (0+255),b
  1247  000E80  EC0F  F003         	call	___ftadd	;wreg free
  1248  000E84  C0D0  F0E8         	movff	?___ftadd,log@x
  1249  000E88  C0D1  F0E9         	movff	?___ftadd+1,log@x+1
  1250  000E8C  C0D2  F0EA         	movff	?___ftadd+2,log@x+2
  1251  000E90  0100               	movlb	0	; () banked
  1252  000E92  07EB               	decf	log@exponent& (0+255),f,b
  1253  000E94  A0D8               	btfss	status,0,c
  1254  000E96  07EC               	decf	(log@exponent+1)& (0+255),f,b
  1255                           
  1256                           ; BSR set to: 0
  1257  000E98  C0E8  F0DC         	movff	log@x,eval_poly@x
  1258  000E9C  C0E9  F0DD         	movff	log@x+1,eval_poly@x+1
  1259  000EA0  C0EA  F0DE         	movff	log@x+2,eval_poly@x+2
  1260  000EA4  0E06               	movlw	high log@coeff
  1261  000EA6  0100               	movlb	0	; () banked
  1262  000EA8  6FE0               	movwf	(eval_poly@d+1)& (0+255),b
  1263  000EAA  0E01               	movlw	low log@coeff
  1264  000EAC  0100               	movlb	0	; () banked
  1265  000EAE  6FDF               	movwf	eval_poly@d& (0+255),b
  1266  000EB0  0E00               	movlw	0
  1267  000EB2  0100               	movlb	0	; () banked
  1268  000EB4  6FE2               	movwf	(eval_poly@n+1)& (0+255),b
  1269  000EB6  0E08               	movlw	8
  1270  000EB8  0100               	movlb	0	; () banked
  1271  000EBA  6FE1               	movwf	eval_poly@n& (0+255),b
  1272  000EBC  EC8F  F007         	call	_eval_poly	;wreg free
  1273  000EC0  C0DC  F0E8         	movff	?_eval_poly,log@x
  1274  000EC4  C0DD  F0E9         	movff	?_eval_poly+1,log@x+1
  1275  000EC8  C0DE  F0EA         	movff	?_eval_poly+2,log@x+2
  1276  000ECC  0E72               	movlw	114
  1277  000ECE  6E32               	movwf	___ftmul@f2,c
  1278  000ED0  0E31               	movlw	49
  1279  000ED2  6E33               	movwf	___ftmul@f2+1,c
  1280  000ED4  0E3F               	movlw	63
  1281  000ED6  6E34               	movwf	___ftmul@f2+2,c
  1282  000ED8  C0EB  F01C         	movff	log@exponent,___awtoft@c
  1283  000EDC  C0EC  F01D         	movff	log@exponent+1,___awtoft@c+1
  1284  000EE0  EC28  F00B         	call	___awtoft	;wreg free
  1285  000EE4  C01C  F02F         	movff	?___awtoft,___ftmul@f1
  1286  000EE8  C01D  F030         	movff	?___awtoft+1,___ftmul@f1+1
  1287  000EEC  C01E  F031         	movff	?___awtoft+2,___ftmul@f1+2
  1288  000EF0  EC08  F008         	call	___ftmul	;wreg free
  1289  000EF4  C02F  F0D0         	movff	?___ftmul,___ftadd@f1
  1290  000EF8  C030  F0D1         	movff	?___ftmul+1,___ftadd@f1+1
  1291  000EFC  C031  F0D2         	movff	?___ftmul+2,___ftadd@f1+2
  1292  000F00  C0E8  F0D3         	movff	log@x,___ftadd@f2
  1293  000F04  C0E9  F0D4         	movff	log@x+1,___ftadd@f2+1
  1294  000F08  C0EA  F0D5         	movff	log@x+2,___ftadd@f2+2
  1295  000F0C  EC0F  F003         	call	___ftadd	;wreg free
  1296  000F10  C0D0  F0E8         	movff	?___ftadd,?_log
  1297  000F14  C0D1  F0E9         	movff	?___ftadd+1,?_log+1
  1298  000F18  C0D2  F0EA         	movff	?___ftadd+2,?_log+2
  1299  000F1C  0012               	return	
  1300  000F1E                     __end_of_log:
  1301                           	opt stack 0
  1302                           tblptru	equ	0xFF8
  1303                           tblptrh	equ	0xFF7
  1304                           intcon	equ	0xFF2
  1305                           postinc0	equ	0xFEE
  1306                           wreg	equ	0xFE8
  1307                           postinc2	equ	0xFDE
  1308                           postdec2	equ	0xFDD
  1309                           fsr2h	equ	0xFDA
  1310                           fsr2l	equ	0xFD9
  1311                           status	equ	0xFD8
  1312                           
  1313 ;; *************** function _frexp *****************
  1314 ;; Defined at:
  1315 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\frexp.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;  value           3   19[COMRAM] int 
  1318 ;;  eptr            2   22[COMRAM] PTR int 
  1319 ;;		 -> log@exponent(2), 
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;		None
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  3   19[COMRAM] PTR int 
  1324 ;; Registers used:
  1325 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1331 ;;      Params:         5       0       0       0       0       0       0
  1332 ;;      Locals:         0       0       0       0       0       0       0
  1333 ;;      Temps:          2       0       0       0       0       0       0
  1334 ;;      Totals:         7       0       0       0       0       0       0
  1335 ;;Total ram usage:        7 bytes
  1336 ;; Hardware stack levels used:    1
  1337 ;; Hardware stack levels required when called:    4
  1338 ;; This function calls:
  1339 ;;		Nothing
  1340 ;; This function is called by:
  1341 ;;		_log
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           	psect	text4
  1346  001420                     __ptext4:
  1347                           	opt stack 0
  1348  001420                     _frexp:
  1349                           	opt stack 24
  1350                           
  1351                           ;incstack = 0
  1352  001420  0E7F               	movlw	127
  1353  001422  1416               	andwf	frexp@value+2,w,c
  1354  001424  1015               	iorwf	frexp@value+1,w,c
  1355  001426  1014               	iorwf	frexp@value,w,c
  1356  001428  A4D8               	btfss	status,2,c
  1357  00142A  D00F               	goto	l2032
  1358  00142C  C017  FFD9         	movff	frexp@eptr,fsr2l
  1359  001430  C018  FFDA         	movff	frexp@eptr+1,fsr2h
  1360  001434  0E00               	movlw	0
  1361  001436  6EDE               	movwf	postinc2,c
  1362  001438  0E00               	movlw	0
  1363  00143A  6EDD               	movwf	postdec2,c
  1364  00143C  0E00               	movlw	0
  1365  00143E  6E14               	movwf	?_frexp,c
  1366  001440  0E00               	movlw	0
  1367  001442  6E15               	movwf	?_frexp+1,c
  1368  001444  0E00               	movlw	0
  1369  001446  6E16               	movwf	?_frexp+2,c
  1370  001448  0012               	return	
  1371  00144A                     l2032:
  1372  00144A  5016               	movf	frexp@value+2,w,c
  1373  00144C  0B7F               	andlw	127
  1374  00144E  6E19               	movwf	??_frexp& (0+255),c
  1375  001450  6A1A               	clrf	(??_frexp+1)& (0+255),c
  1376  001452  90D8               	bcf	status,0,c
  1377  001454  3619               	rlcf	??_frexp,f,c
  1378  001456  361A               	rlcf	??_frexp+1,f,c
  1379  001458  C017  FFD9         	movff	frexp@eptr,fsr2l
  1380  00145C  C018  FFDA         	movff	frexp@eptr+1,fsr2h
  1381  001460  C019  FFDE         	movff	??_frexp,postinc2
  1382  001464  C01A  FFDD         	movff	??_frexp+1,postdec2
  1383  001468  AE15               	btfss	frexp@value+1,7,c
  1384  00146A  D003               	goto	u1460
  1385  00146C  6A19               	clrf	??_frexp& (0+255),c
  1386  00146E  2A19               	incf	??_frexp& (0+255),f,c
  1387  001470  D001               	goto	u1468
  1388  001472                     u1460:
  1389  001472  6A19               	clrf	??_frexp& (0+255),c
  1390  001474                     u1468:
  1391  001474  5019               	movf	??_frexp,w,c
  1392  001476  C017  FFD9         	movff	frexp@eptr,fsr2l
  1393  00147A  C018  FFDA         	movff	frexp@eptr+1,fsr2h
  1394  00147E  12DE               	iorwf	postinc2,f,c
  1395  001480  0E00               	movlw	0
  1396  001482  12DD               	iorwf	postdec2,f,c
  1397  001484  C017  FFD9         	movff	frexp@eptr,fsr2l
  1398  001488  C018  FFDA         	movff	frexp@eptr+1,fsr2h
  1399  00148C  0E82               	movlw	130
  1400  00148E  26DE               	addwf	postinc2,f,c
  1401  001490  0EFF               	movlw	255
  1402  001492  22DD               	addwfc	postdec2,f,c
  1403  001494  8016               	bsf	frexp@value+2,0,c
  1404  001496  8216               	bsf	frexp@value+2,1,c
  1405  001498  8416               	bsf	frexp@value+2,2,c
  1406  00149A  8616               	bsf	frexp@value+2,3,c
  1407  00149C  8816               	bsf	frexp@value+2,4,c
  1408  00149E  8A16               	bsf	frexp@value+2,5,c
  1409  0014A0  9C16               	bcf	frexp@value+2,6,c
  1410  0014A2  9E15               	bcf	frexp@value+1,7,c
  1411  0014A4  C014  F014         	movff	frexp@value,?_frexp
  1412  0014A8  C015  F015         	movff	frexp@value+1,?_frexp+1
  1413  0014AC  C016  F016         	movff	frexp@value+2,?_frexp+2
  1414  0014B0  0012               	return	
  1415  0014B2                     __end_of_frexp:
  1416                           	opt stack 0
  1417                           tblptru	equ	0xFF8
  1418                           tblptrh	equ	0xFF7
  1419                           intcon	equ	0xFF2
  1420                           postinc0	equ	0xFEE
  1421                           wreg	equ	0xFE8
  1422                           postinc2	equ	0xFDE
  1423                           postdec2	equ	0xFDD
  1424                           fsr2h	equ	0xFDA
  1425                           fsr2l	equ	0xFD9
  1426                           status	equ	0xFD8
  1427                           
  1428 ;; *************** function _eval_poly *****************
  1429 ;; Defined at:
  1430 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\evalpoly.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;  x               3   12[BANK0 ] PTR int 
  1433 ;;  d               2   15[BANK0 ] PTR const 
  1434 ;;		 -> log@coeff(27), 
  1435 ;;  n               2   17[BANK0 ] int 
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  res             3   21[BANK0 ] int 
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  3   12[BANK0 ] int 
  1440 ;; Registers used:
  1441 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1447 ;;      Params:         0       7       0       0       0       0       0
  1448 ;;      Locals:         0       3       0       0       0       0       0
  1449 ;;      Temps:          0       2       0       0       0       0       0
  1450 ;;      Totals:         0      12       0       0       0       0       0
  1451 ;;Total ram usage:       12 bytes
  1452 ;; Hardware stack levels used:    1
  1453 ;; Hardware stack levels required when called:    6
  1454 ;; This function calls:
  1455 ;;		___ftadd
  1456 ;;		___ftmul
  1457 ;;		___wmul
  1458 ;; This function is called by:
  1459 ;;		_log
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           	psect	text5
  1464  000F1E                     __ptext5:
  1465                           	opt stack 0
  1466  000F1E                     _eval_poly:
  1467                           	opt stack 22
  1468                           
  1469                           ;incstack = 0
  1470  000F1E  C0E1  F014         	movff	eval_poly@n,___wmul@multiplier
  1471  000F22  C0E2  F015         	movff	eval_poly@n+1,___wmul@multiplier+1
  1472  000F26  0E00               	movlw	0
  1473  000F28  6E17               	movwf	___wmul@multiplicand+1,c
  1474  000F2A  0E03               	movlw	3
  1475  000F2C  6E16               	movwf	___wmul@multiplicand,c
  1476  000F2E  ECEA  F00B         	call	___wmul	;wreg free
  1477  000F32  0100               	movlb	0	; () banked
  1478  000F34  C0DF  F0E3         	movff	eval_poly@d,??_eval_poly
  1479  000F38  0100               	movlb	0	; () banked
  1480  000F3A  C0E0  F0E4         	movff	eval_poly@d+1,??_eval_poly+1
  1481  000F3E  5014               	movf	?___wmul,w,c
  1482  000F40  0100               	movlb	0	; () banked
  1483  000F42  27E3               	addwf	??_eval_poly& (0+255),f,b
  1484  000F44  5015               	movf	?___wmul+1,w,c
  1485  000F46  0100               	movlb	0	; () banked
  1486  000F48  23E4               	addwfc	(??_eval_poly+1)& (0+255),f,b
  1487  000F4A  C0E3  FFF6         	movff	??_eval_poly,tblptrl
  1488  000F4E  C0E4  FFF7         	movff	??_eval_poly+1,tblptrh
  1489  000F52                     	if	0	;tblptru may be non-zero
  1490  000F52                     	endif
  1491  000F52                     	if	0	;tblptru may be non-zero
  1492  000F52                     	endif
  1493  000F52  0009               	tblrd		*+
  1494  000F54  0100               	movlb	0	; () banked
  1495  000F56  CFF5 F0E5          	movff	tablat,eval_poly@res
  1496  000F5A  0009               	tblrd		*+
  1497  000F5C  0100               	movlb	0	; () banked
  1498  000F5E  CFF5 F0E6          	movff	tablat,eval_poly@res+1
  1499  000F62  000A               	tblrd		*-
  1500  000F64  0100               	movlb	0	; () banked
  1501  000F66  CFF5 F0E7          	movff	tablat,eval_poly@res+2
  1502  000F6A  D046               	goto	l2720
  1503  000F6C                     l2718:
  1504                           
  1505                           ; BSR set to: 0
  1506  000F6C  C0E5  F032         	movff	eval_poly@res,___ftmul@f2
  1507  000F70  C0E6  F033         	movff	eval_poly@res+1,___ftmul@f2+1
  1508  000F74  C0E7  F034         	movff	eval_poly@res+2,___ftmul@f2+2
  1509  000F78  C0DC  F02F         	movff	eval_poly@x,___ftmul@f1
  1510  000F7C  C0DD  F030         	movff	eval_poly@x+1,___ftmul@f1+1
  1511  000F80  C0DE  F031         	movff	eval_poly@x+2,___ftmul@f1+2
  1512  000F84  EC08  F008         	call	___ftmul	;wreg free
  1513  000F88  C02F  F0D0         	movff	?___ftmul,___ftadd@f1
  1514  000F8C  C030  F0D1         	movff	?___ftmul+1,___ftadd@f1+1
  1515  000F90  C031  F0D2         	movff	?___ftmul+2,___ftadd@f1+2
  1516  000F94  0E00               	movlw	0
  1517  000F96  6E17               	movwf	___wmul@multiplicand+1,c
  1518  000F98  0E03               	movlw	3
  1519  000F9A  6E16               	movwf	___wmul@multiplicand,c
  1520  000F9C  0100               	movlb	0	; () banked
  1521  000F9E  07E1               	decf	eval_poly@n& (0+255),f,b
  1522  000FA0  A0D8               	btfss	status,0,c
  1523  000FA2  07E2               	decf	(eval_poly@n+1)& (0+255),f,b
  1524  000FA4  C0E1  F014         	movff	eval_poly@n,___wmul@multiplier
  1525  000FA8  C0E2  F015         	movff	eval_poly@n+1,___wmul@multiplier+1
  1526  000FAC  ECEA  F00B         	call	___wmul	;wreg free
  1527  000FB0  0100               	movlb	0	; () banked
  1528  000FB2  C0DF  F0E3         	movff	eval_poly@d,??_eval_poly
  1529  000FB6  0100               	movlb	0	; () banked
  1530  000FB8  C0E0  F0E4         	movff	eval_poly@d+1,??_eval_poly+1
  1531  000FBC  5014               	movf	?___wmul,w,c
  1532  000FBE  0100               	movlb	0	; () banked
  1533  000FC0  27E3               	addwf	??_eval_poly& (0+255),f,b
  1534  000FC2  5015               	movf	?___wmul+1,w,c
  1535  000FC4  0100               	movlb	0	; () banked
  1536  000FC6  23E4               	addwfc	(??_eval_poly+1)& (0+255),f,b
  1537  000FC8  C0E3  FFF6         	movff	??_eval_poly,tblptrl
  1538  000FCC  C0E4  FFF7         	movff	??_eval_poly+1,tblptrh
  1539  000FD0                     	if	0	;tblptru may be non-zero
  1540  000FD0                     	endif
  1541  000FD0                     	if	0	;tblptru may be non-zero
  1542  000FD0                     	endif
  1543  000FD0  0009               	tblrd		*+
  1544  000FD2  0100               	movlb	0	; () banked
  1545  000FD4  CFF5 F0D3          	movff	tablat,___ftadd@f2
  1546  000FD8  0009               	tblrd		*+
  1547  000FDA  0100               	movlb	0	; () banked
  1548  000FDC  CFF5 F0D4          	movff	tablat,___ftadd@f2+1
  1549  000FE0  000A               	tblrd		*-
  1550  000FE2  0100               	movlb	0	; () banked
  1551  000FE4  CFF5 F0D5          	movff	tablat,___ftadd@f2+2
  1552  000FE8  EC0F  F003         	call	___ftadd	;wreg free
  1553  000FEC  C0D0  F0E5         	movff	?___ftadd,eval_poly@res
  1554  000FF0  C0D1  F0E6         	movff	?___ftadd+1,eval_poly@res+1
  1555  000FF4  C0D2  F0E7         	movff	?___ftadd+2,eval_poly@res+2
  1556  000FF8                     l2720:
  1557  000FF8  0100               	movlb	0	; () banked
  1558  000FFA  51E2               	movf	(eval_poly@n+1)& (0+255),w,b
  1559  000FFC  11E1               	iorwf	eval_poly@n& (0+255),w,b
  1560  000FFE  A4D8               	btfss	status,2,c
  1561  001000  D7B5               	goto	l2718
  1562                           
  1563                           ; BSR set to: 0
  1564  001002  C0E5  F0DC         	movff	eval_poly@res,?_eval_poly
  1565  001006  C0E6  F0DD         	movff	eval_poly@res+1,?_eval_poly+1
  1566  00100A  C0E7  F0DE         	movff	eval_poly@res+2,?_eval_poly+2
  1567                           
  1568                           ; BSR set to: 0
  1569  00100E  0012               	return	
  1570  001010                     __end_of_eval_poly:
  1571                           	opt stack 0
  1572                           tblptru	equ	0xFF8
  1573                           tblptrh	equ	0xFF7
  1574                           tblptrl	equ	0xFF6
  1575                           tablat	equ	0xFF5
  1576                           intcon	equ	0xFF2
  1577                           postinc0	equ	0xFEE
  1578                           wreg	equ	0xFE8
  1579                           postinc2	equ	0xFDE
  1580                           postdec2	equ	0xFDD
  1581                           fsr2h	equ	0xFDA
  1582                           fsr2l	equ	0xFD9
  1583                           status	equ	0xFD8
  1584                           
  1585 ;; *************** function ___ftsub *****************
  1586 ;; Defined at:
  1587 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftsub.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;  f1              3   12[BANK0 ] float 
  1590 ;;  f2              3   15[BANK0 ] float 
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;		None
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  3   12[BANK0 ] float 
  1595 ;; Registers used:
  1596 ;;		wreg, status,2, status,0, cstack
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1602 ;;      Params:         0       6       0       0       0       0       0
  1603 ;;      Locals:         0       0       0       0       0       0       0
  1604 ;;      Temps:          0       0       0       0       0       0       0
  1605 ;;      Totals:         0       6       0       0       0       0       0
  1606 ;;Total ram usage:        6 bytes
  1607 ;; Hardware stack levels used:    1
  1608 ;; Hardware stack levels required when called:    6
  1609 ;; This function calls:
  1610 ;;		___ftadd
  1611 ;; This function is called by:
  1612 ;;		_Temp_Convert
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           	psect	text6
  1617  001698                     __ptext6:
  1618                           	opt stack 0
  1619  001698                     ___ftsub:
  1620                           	opt stack 23
  1621                           
  1622                           ; BSR set to: 0
  1623                           ;incstack = 0
  1624  001698  0E00               	movlw	0
  1625  00169A  0100               	movlb	0	; () banked
  1626  00169C  1BDF               	xorwf	___ftsub@f2& (0+255),f,b
  1627  00169E  0E00               	movlw	0
  1628  0016A0  0100               	movlb	0	; () banked
  1629  0016A2  1BE0               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  1630  0016A4  0E80               	movlw	128
  1631  0016A6  0100               	movlb	0	; () banked
  1632  0016A8  1BE1               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  1633                           
  1634                           ; BSR set to: 0
  1635  0016AA  C0DC  F0D0         	movff	___ftsub@f1,___ftadd@f1
  1636  0016AE  C0DD  F0D1         	movff	___ftsub@f1+1,___ftadd@f1+1
  1637  0016B2  C0DE  F0D2         	movff	___ftsub@f1+2,___ftadd@f1+2
  1638  0016B6  C0DF  F0D3         	movff	___ftsub@f2,___ftadd@f2
  1639  0016BA  C0E0  F0D4         	movff	___ftsub@f2+1,___ftadd@f2+1
  1640  0016BE  C0E1  F0D5         	movff	___ftsub@f2+2,___ftadd@f2+2
  1641  0016C2  EC0F  F003         	call	___ftadd	;wreg free
  1642  0016C6  C0D0  F0DC         	movff	?___ftadd,?___ftsub
  1643  0016CA  C0D1  F0DD         	movff	?___ftadd+1,?___ftsub+1
  1644  0016CE  C0D2  F0DE         	movff	?___ftadd+2,?___ftsub+2
  1645  0016D2  0012               	return	
  1646  0016D4                     __end_of___ftsub:
  1647                           	opt stack 0
  1648                           tblptru	equ	0xFF8
  1649                           tblptrh	equ	0xFF7
  1650                           tblptrl	equ	0xFF6
  1651                           tablat	equ	0xFF5
  1652                           intcon	equ	0xFF2
  1653                           postinc0	equ	0xFEE
  1654                           wreg	equ	0xFE8
  1655                           postinc2	equ	0xFDE
  1656                           postdec2	equ	0xFDD
  1657                           fsr2h	equ	0xFDA
  1658                           fsr2l	equ	0xFD9
  1659                           status	equ	0xFD8
  1660                           
  1661 ;; *************** function _Temp_Filter *****************
  1662 ;; Defined at:
  1663 ;;		line 36 in file "Tempeture.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;		None
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;  x               2   12[BANK0 ] int 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;		None               void
  1670 ;; Registers used:
  1671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1677 ;;      Params:         0       0       0       0       0       0       0
  1678 ;;      Locals:         0       2       0       0       0       0       0
  1679 ;;      Temps:          0       0       0       0       0       0       0
  1680 ;;      Totals:         0       2       0       0       0       0       0
  1681 ;;Total ram usage:        2 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:    6
  1684 ;; This function calls:
  1685 ;;		___ftadd
  1686 ;;		___ftmul
  1687 ;;		___wmul
  1688 ;; This function is called by:
  1689 ;;		_Temp_Convert
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           	psect	text7
  1694  000ADC                     __ptext7:
  1695                           	opt stack 0
  1696  000ADC                     _Temp_Filter:
  1697                           	opt stack 23
  1698                           
  1699                           ;Tempeture.c: 39: int x;
  1700                           ;Tempeture.c: 40: for(x = 0; x < 10; x++)
  1701                           
  1702                           ;incstack = 0
  1703  000ADC  0E00               	movlw	0
  1704  000ADE  0100               	movlb	0	; () banked
  1705  000AE0  6FDD               	movwf	(Temp_Filter@x+1)& (0+255),b
  1706  000AE2  0E00               	movlw	0
  1707  000AE4  0100               	movlb	0	; () banked
  1708  000AE6  6FDC               	movwf	Temp_Filter@x& (0+255),b
  1709  000AE8                     
  1710                           ; BSR set to: 0
  1711  000AE8  0100               	movlb	0	; () banked
  1712  000AEA  51DD               	movf	(Temp_Filter@x+1)& (0+255),w,b
  1713  000AEC  0A80               	xorlw	128
  1714  000AEE  0F80               	addlw	-128
  1715  000AF0  0E0A               	movlw	10
  1716  000AF2  B4D8               	btfsc	status,2,c
  1717  000AF4  5DDC               	subwf	Temp_Filter@x& (0+255),w,b
  1718  000AF6  B0D8               	btfsc	status,0,c
  1719  000AF8  D06B               	goto	l2758
  1720                           
  1721                           ; BSR set to: 0
  1722                           ;Tempeture.c: 41: {
  1723                           ;Tempeture.c: 42: Temp_DegF[x] = (0.88*TmpTemp_DegF[x] + ((1- 0.88)*PrevTemp_DegF[x]));
  1724                           
  1725                           ; BSR set to: 0
  1726                           
  1727                           ; BSR set to: 0
  1728  000AFA  C0DC  F014         	movff	Temp_Filter@x,___wmul@multiplier
  1729  000AFE  C0DD  F015         	movff	Temp_Filter@x+1,___wmul@multiplier+1
  1730  000B02  0E00               	movlw	0
  1731  000B04  6E17               	movwf	___wmul@multiplicand+1,c
  1732  000B06  0E03               	movlw	3
  1733  000B08  6E16               	movwf	___wmul@multiplicand,c
  1734  000B0A  ECEA  F00B         	call	___wmul	;wreg free
  1735  000B0E  0100               	movlb	0	; () banked
  1736  000B10  0E9C               	movlw	low _Temp_DegF
  1737  000B12  2414               	addwf	?___wmul,w,c
  1738  000B14  6ED9               	movwf	fsr2l,c
  1739  000B16  0100               	movlb	0	; () banked
  1740  000B18  0E00               	movlw	high _Temp_DegF
  1741  000B1A  2015               	addwfc	?___wmul+1,w,c
  1742  000B1C  6EDA               	movwf	fsr2h,c
  1743  000B1E  0E48               	movlw	72
  1744  000B20  6E32               	movwf	___ftmul@f2,c
  1745  000B22  0E61               	movlw	97
  1746  000B24  6E33               	movwf	___ftmul@f2+1,c
  1747  000B26  0E3F               	movlw	63
  1748  000B28  6E34               	movwf	___ftmul@f2+2,c
  1749  000B2A  C0DC  F014         	movff	Temp_Filter@x,___wmul@multiplier
  1750  000B2E  C0DD  F015         	movff	Temp_Filter@x+1,___wmul@multiplier+1
  1751  000B32  0E00               	movlw	0
  1752  000B34  6E17               	movwf	___wmul@multiplicand+1,c
  1753  000B36  0E03               	movlw	3
  1754  000B38  6E16               	movwf	___wmul@multiplicand,c
  1755  000B3A  ECEA  F00B         	call	___wmul	;wreg free
  1756  000B3E  0101               	movlb	1	; () banked
  1757  000B40  0EAA               	movlw	low _TmpTemp_DegF
  1758  000B42  2414               	addwf	?___wmul,w,c
  1759  000B44  6EE1               	movwf	fsr1l,c
  1760  000B46  0101               	movlb	1	; () banked
  1761  000B48  0E01               	movlw	high _TmpTemp_DegF
  1762  000B4A  2015               	addwfc	?___wmul+1,w,c
  1763  000B4C  6EE2               	movwf	fsr1h,c
  1764  000B4E  CFE6 F02F          	movff	postinc1,___ftmul@f1
  1765  000B52  CFE6 F030          	movff	postinc1,___ftmul@f1+1
  1766  000B56  CFE5 F031          	movff	postdec1,___ftmul@f1+2
  1767  000B5A  EC08  F008         	call	___ftmul	;wreg free
  1768  000B5E  C02F  F0D0         	movff	?___ftmul,___ftadd@f1
  1769  000B62  C030  F0D1         	movff	?___ftmul+1,___ftadd@f1+1
  1770  000B66  C031  F0D2         	movff	?___ftmul+2,___ftadd@f1+2
  1771  000B6A  0EC3               	movlw	195
  1772  000B6C  6E32               	movwf	___ftmul@f2,c
  1773  000B6E  0EF5               	movlw	245
  1774  000B70  6E33               	movwf	___ftmul@f2+1,c
  1775  000B72  0E3D               	movlw	61
  1776  000B74  6E34               	movwf	___ftmul@f2+2,c
  1777  000B76  0E00               	movlw	0
  1778  000B78  6E17               	movwf	___wmul@multiplicand+1,c
  1779  000B7A  0E03               	movlw	3
  1780  000B7C  6E16               	movwf	___wmul@multiplicand,c
  1781  000B7E  C0DC  F014         	movff	Temp_Filter@x,___wmul@multiplier
  1782  000B82  C0DD  F015         	movff	Temp_Filter@x+1,___wmul@multiplier+1
  1783  000B86  ECEA  F00B         	call	___wmul	;wreg free
  1784  000B8A  0101               	movlb	1	; () banked
  1785  000B8C  0E3C               	movlw	low _PrevTemp_DegF
  1786  000B8E  2414               	addwf	?___wmul,w,c
  1787  000B90  6EE1               	movwf	fsr1l,c
  1788  000B92  0101               	movlb	1	; () banked
  1789  000B94  0E01               	movlw	high _PrevTemp_DegF
  1790  000B96  2015               	addwfc	?___wmul+1,w,c
  1791  000B98  6EE2               	movwf	fsr1h,c
  1792  000B9A  CFE6 F02F          	movff	postinc1,___ftmul@f1
  1793  000B9E  CFE6 F030          	movff	postinc1,___ftmul@f1+1
  1794  000BA2  CFE5 F031          	movff	postdec1,___ftmul@f1+2
  1795  000BA6  EC08  F008         	call	___ftmul	;wreg free
  1796  000BAA  C02F  F0D3         	movff	?___ftmul,___ftadd@f2
  1797  000BAE  C030  F0D4         	movff	?___ftmul+1,___ftadd@f2+1
  1798  000BB2  C031  F0D5         	movff	?___ftmul+2,___ftadd@f2+2
  1799  000BB6  EC0F  F003         	call	___ftadd	;wreg free
  1800  000BBA  C0D0  FFDE         	movff	?___ftadd,postinc2
  1801  000BBE  C0D1  FFDE         	movff	?___ftadd+1,postinc2
  1802  000BC2  C0D2  FFDD         	movff	?___ftadd+2,postdec2
  1803  000BC6  52DD               	movf	postdec2,f,c
  1804  000BC8  0100               	movlb	0	; () banked
  1805  000BCA  4BDC               	infsnz	Temp_Filter@x& (0+255),f,b
  1806  000BCC  2BDD               	incf	(Temp_Filter@x+1)& (0+255),f,b
  1807  000BCE  D78C               	goto	L3
  1808  000BD0                     l2758:
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;Tempeture.c: 43: }
  1812                           ;Tempeture.c: 44: for(x = 0; x < 10; x++)
  1813  000BD0  0E00               	movlw	0
  1814  000BD2  0100               	movlb	0	; () banked
  1815  000BD4  6FDD               	movwf	(Temp_Filter@x+1)& (0+255),b
  1816  000BD6  0E00               	movlw	0
  1817  000BD8  0100               	movlb	0	; () banked
  1818  000BDA  6FDC               	movwf	Temp_Filter@x& (0+255),b
  1819  000BDC                     
  1820                           ; BSR set to: 0
  1821  000BDC  0100               	movlb	0	; () banked
  1822  000BDE  51DD               	movf	(Temp_Filter@x+1)& (0+255),w,b
  1823  000BE0  0A80               	xorlw	128
  1824  000BE2  0F80               	addlw	-128
  1825  000BE4  0E0A               	movlw	10
  1826  000BE6  B4D8               	btfsc	status,2,c
  1827  000BE8  5DDC               	subwf	Temp_Filter@x& (0+255),w,b
  1828  000BEA  B0D8               	btfsc	status,0,c
  1829  000BEC  0012               	return	
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;Tempeture.c: 45: {
  1833                           ;Tempeture.c: 46: PrevTemp_DegF[x] = Temp_DegF[x];
  1834                           
  1835                           ; BSR set to: 0
  1836                           
  1837                           ; BSR set to: 0
  1838  000BEE  C0DC  F014         	movff	Temp_Filter@x,___wmul@multiplier
  1839  000BF2  C0DD  F015         	movff	Temp_Filter@x+1,___wmul@multiplier+1
  1840  000BF6  0E00               	movlw	0
  1841  000BF8  6E17               	movwf	___wmul@multiplicand+1,c
  1842  000BFA  0E03               	movlw	3
  1843  000BFC  6E16               	movwf	___wmul@multiplicand,c
  1844  000BFE  ECEA  F00B         	call	___wmul	;wreg free
  1845  000C02  0100               	movlb	0	; () banked
  1846  000C04  0E9C               	movlw	low _Temp_DegF
  1847  000C06  2414               	addwf	?___wmul,w,c
  1848  000C08  6ED9               	movwf	fsr2l,c
  1849  000C0A  0100               	movlb	0	; () banked
  1850  000C0C  0E00               	movlw	high _Temp_DegF
  1851  000C0E  2015               	addwfc	?___wmul+1,w,c
  1852  000C10  6EDA               	movwf	fsr2h,c
  1853  000C12  C0DC  F014         	movff	Temp_Filter@x,___wmul@multiplier
  1854  000C16  C0DD  F015         	movff	Temp_Filter@x+1,___wmul@multiplier+1
  1855  000C1A  0E00               	movlw	0
  1856  000C1C  6E17               	movwf	___wmul@multiplicand+1,c
  1857  000C1E  0E03               	movlw	3
  1858  000C20  6E16               	movwf	___wmul@multiplicand,c
  1859  000C22  ECEA  F00B         	call	___wmul	;wreg free
  1860  000C26  0101               	movlb	1	; () banked
  1861  000C28  0E3C               	movlw	low _PrevTemp_DegF
  1862  000C2A  2414               	addwf	?___wmul,w,c
  1863  000C2C  6EE1               	movwf	fsr1l,c
  1864  000C2E  0101               	movlb	1	; () banked
  1865  000C30  0E01               	movlw	high _PrevTemp_DegF
  1866  000C32  2015               	addwfc	?___wmul+1,w,c
  1867  000C34  6EE2               	movwf	fsr1h,c
  1868  000C36  CFDE FFE6          	movff	postinc2,postinc1
  1869  000C3A  CFDE FFE6          	movff	postinc2,postinc1
  1870  000C3E  CFDE FFE5          	movff	postinc2,postdec1
  1871  000C42  52E5               	movf	postdec1,f,c
  1872                           
  1873                           ; BSR set to: 1
  1874  000C44  0100               	movlb	0	; () banked
  1875  000C46  4BDC               	infsnz	Temp_Filter@x& (0+255),f,b
  1876  000C48  2BDD               	incf	(Temp_Filter@x+1)& (0+255),f,b
  1877  000C4A  D7C8               	goto	L4
  1878  000C4C                     __end_of_Temp_Filter:
  1879                           	opt stack 0
  1880                           tblptru	equ	0xFF8
  1881                           tblptrh	equ	0xFF7
  1882                           tblptrl	equ	0xFF6
  1883                           tablat	equ	0xFF5
  1884                           intcon	equ	0xFF2
  1885                           postinc0	equ	0xFEE
  1886                           wreg	equ	0xFE8
  1887                           postinc1	equ	0xFE6
  1888                           postdec1	equ	0xFE5
  1889                           fsr1h	equ	0xFE2
  1890                           fsr1l	equ	0xFE1
  1891                           postinc2	equ	0xFDE
  1892                           postdec2	equ	0xFDD
  1893                           fsr2h	equ	0xFDA
  1894                           fsr2l	equ	0xFD9
  1895                           status	equ	0xFD8
  1896                           
  1897 ;; *************** function _SYSTEM_Initialize *****************
  1898 ;; Defined at:
  1899 ;;		line 112 in file "mcc_generated_files/mcc.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;		None
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;		None
  1904 ;; Return value:  Size  Location     Type
  1905 ;;		None               void
  1906 ;; Registers used:
  1907 ;;		wreg, status,2, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1913 ;;      Params:         0       0       0       0       0       0       0
  1914 ;;      Locals:         0       0       0       0       0       0       0
  1915 ;;      Temps:          0       0       0       0       0       0       0
  1916 ;;      Totals:         0       0       0       0       0       0       0
  1917 ;;Total ram usage:        0 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:    6
  1920 ;; This function calls:
  1921 ;;		_ADC_Initialize
  1922 ;;		_EUSART1_Initialize
  1923 ;;		_INTERRUPT_Initialize
  1924 ;;		_OSCILLATOR_Initialize
  1925 ;;		_PIN_MANAGER_Initialize
  1926 ;;		_TMR1_Initialize
  1927 ;; This function is called by:
  1928 ;;		_main
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           	psect	text8
  1933  00181C                     __ptext8:
  1934                           	opt stack 0
  1935  00181C                     _SYSTEM_Initialize:
  1936                           	opt stack 24
  1937                           
  1938                           ;mcc.c: 114: OSCILLATOR_Initialize();
  1939                           
  1940                           ; BSR set to: 0
  1941                           ;incstack = 0
  1942  00181C  EC58  F00C         	call	_OSCILLATOR_Initialize	;wreg free
  1943                           
  1944                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1945  001820  EC01  F00B         	call	_PIN_MANAGER_Initialize	;wreg free
  1946                           
  1947                           ;mcc.c: 116: INTERRUPT_Initialize();
  1948  001824  EC5F  F00C         	call	_INTERRUPT_Initialize	;wreg free
  1949                           
  1950                           ;mcc.c: 117: ADC_Initialize();
  1951  001828  EC28  F00C         	call	_ADC_Initialize	;wreg free
  1952                           
  1953                           ;mcc.c: 118: EUSART1_Initialize();
  1954  00182C  EC6A  F00B         	call	_EUSART1_Initialize	;wreg free
  1955                           
  1956                           ;mcc.c: 119: TMR1_Initialize();
  1957  001830  ECFD  F00B         	call	_TMR1_Initialize	;wreg free
  1958  001834  0012               	return	
  1959  001836                     __end_of_SYSTEM_Initialize:
  1960                           	opt stack 0
  1961                           tblptru	equ	0xFF8
  1962                           tblptrh	equ	0xFF7
  1963                           tblptrl	equ	0xFF6
  1964                           tablat	equ	0xFF5
  1965                           intcon	equ	0xFF2
  1966                           postinc0	equ	0xFEE
  1967                           wreg	equ	0xFE8
  1968                           postinc1	equ	0xFE6
  1969                           postdec1	equ	0xFE5
  1970                           fsr1h	equ	0xFE2
  1971                           fsr1l	equ	0xFE1
  1972                           postinc2	equ	0xFDE
  1973                           postdec2	equ	0xFDD
  1974                           fsr2h	equ	0xFDA
  1975                           fsr2l	equ	0xFD9
  1976                           status	equ	0xFD8
  1977                           
  1978 ;; *************** function _TMR1_Initialize *****************
  1979 ;; Defined at:
  1980 ;;		line 21 in file "mcc_generated_files/tmr1.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;		None
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;		None
  1985 ;; Return value:  Size  Location     Type
  1986 ;;		None               void
  1987 ;; Registers used:
  1988 ;;		wreg, status,2, cstack
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1994 ;;      Params:         0       0       0       0       0       0       0
  1995 ;;      Locals:         0       0       0       0       0       0       0
  1996 ;;      Temps:          0       0       0       0       0       0       0
  1997 ;;      Totals:         0       0       0       0       0       0       0
  1998 ;;Total ram usage:        0 bytes
  1999 ;; Hardware stack levels used:    1
  2000 ;; Hardware stack levels required when called:    5
  2001 ;; This function calls:
  2002 ;;		_TMR1_StartTimer
  2003 ;; This function is called by:
  2004 ;;		_SYSTEM_Initialize
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text9
  2009  0017FA                     __ptext9:
  2010                           	opt stack 0
  2011  0017FA                     _TMR1_Initialize:
  2012                           	opt stack 24
  2013                           
  2014                           ;tmr1.c: 26: T1CON = 0x34;
  2015                           
  2016                           ;incstack = 0
  2017  0017FA  0E34               	movlw	52
  2018  0017FC  6ECD               	movwf	4045,c	;volatile
  2019                           
  2020                           ;tmr1.c: 29: T1GCON = 0x00;
  2021  0017FE  0E00               	movlw	0
  2022  001800  6ECC               	movwf	4044,c	;volatile
  2023                           
  2024                           ;tmr1.c: 32: TMR1H = 0x0B;
  2025  001802  0E0B               	movlw	11
  2026  001804  6ECF               	movwf	4047,c	;volatile
  2027                           
  2028                           ;tmr1.c: 35: TMR1L = 0xDC;
  2029  001806  0EDC               	movlw	220
  2030  001808  6ECE               	movwf	4046,c	;volatile
  2031                           
  2032                           ;tmr1.c: 38: timer1ReloadVal=TMR1;
  2033  00180A  CFCE F04A          	movff	4046,_timer1ReloadVal	;volatile
  2034  00180E  CFCF F04B          	movff	4047,_timer1ReloadVal+1	;volatile
  2035                           
  2036                           ;tmr1.c: 41: PIR1bits.TMR1IF = 0;
  2037  001812  909E               	bcf	3998,0,c	;volatile
  2038                           
  2039                           ;tmr1.c: 44: PIE1bits.TMR1IE = 1;
  2040  001814  809D               	bsf	3997,0,c	;volatile
  2041                           
  2042                           ;tmr1.c: 47: TMR1_StartTimer();
  2043  001816  EC65  F00C         	call	_TMR1_StartTimer	;wreg free
  2044  00181A  0012               	return	
  2045  00181C                     __end_of_TMR1_Initialize:
  2046                           	opt stack 0
  2047                           tblptru	equ	0xFF8
  2048                           tblptrh	equ	0xFF7
  2049                           tblptrl	equ	0xFF6
  2050                           tablat	equ	0xFF5
  2051                           intcon	equ	0xFF2
  2052                           postinc0	equ	0xFEE
  2053                           wreg	equ	0xFE8
  2054                           postinc1	equ	0xFE6
  2055                           postdec1	equ	0xFE5
  2056                           fsr1h	equ	0xFE2
  2057                           fsr1l	equ	0xFE1
  2058                           postinc2	equ	0xFDE
  2059                           postdec2	equ	0xFDD
  2060                           fsr2h	equ	0xFDA
  2061                           fsr2l	equ	0xFD9
  2062                           status	equ	0xFD8
  2063                           
  2064 ;; *************** function _TMR1_StartTimer *****************
  2065 ;; Defined at:
  2066 ;;		line 50 in file "mcc_generated_files/tmr1.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;		None
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;		None
  2071 ;; Return value:  Size  Location     Type
  2072 ;;		None               void
  2073 ;; Registers used:
  2074 ;;		None
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2080 ;;      Params:         0       0       0       0       0       0       0
  2081 ;;      Locals:         0       0       0       0       0       0       0
  2082 ;;      Temps:          0       0       0       0       0       0       0
  2083 ;;      Totals:         0       0       0       0       0       0       0
  2084 ;;Total ram usage:        0 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; Hardware stack levels required when called:    4
  2087 ;; This function calls:
  2088 ;;		Nothing
  2089 ;; This function is called by:
  2090 ;;		_TMR1_Initialize
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text10
  2095  0018CA                     __ptext10:
  2096                           	opt stack 0
  2097  0018CA                     _TMR1_StartTimer:
  2098                           	opt stack 24
  2099                           
  2100                           ;tmr1.c: 53: T1CONbits.TMR1ON = 1;
  2101                           
  2102                           ;incstack = 0
  2103  0018CA  80CD               	bsf	4045,0,c	;volatile
  2104  0018CC  0012               	return	
  2105  0018CE                     __end_of_TMR1_StartTimer:
  2106                           	opt stack 0
  2107                           tblptru	equ	0xFF8
  2108                           tblptrh	equ	0xFF7
  2109                           tblptrl	equ	0xFF6
  2110                           tablat	equ	0xFF5
  2111                           intcon	equ	0xFF2
  2112                           postinc0	equ	0xFEE
  2113                           wreg	equ	0xFE8
  2114                           postinc1	equ	0xFE6
  2115                           postdec1	equ	0xFE5
  2116                           fsr1h	equ	0xFE2
  2117                           fsr1l	equ	0xFE1
  2118                           postinc2	equ	0xFDE
  2119                           postdec2	equ	0xFDD
  2120                           fsr2h	equ	0xFDA
  2121                           fsr2l	equ	0xFD9
  2122                           status	equ	0xFD8
  2123                           
  2124 ;; *************** function _PIN_MANAGER_Initialize *****************
  2125 ;; Defined at:
  2126 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;		None
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;		None
  2131 ;; Return value:  Size  Location     Type
  2132 ;;		None               void
  2133 ;; Registers used:
  2134 ;;		wreg, status,2
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2140 ;;      Params:         0       0       0       0       0       0       0
  2141 ;;      Locals:         0       0       0       0       0       0       0
  2142 ;;      Temps:          0       0       0       0       0       0       0
  2143 ;;      Totals:         0       0       0       0       0       0       0
  2144 ;;Total ram usage:        0 bytes
  2145 ;; Hardware stack levels used:    1
  2146 ;; Hardware stack levels required when called:    4
  2147 ;; This function calls:
  2148 ;;		Nothing
  2149 ;; This function is called by:
  2150 ;;		_SYSTEM_Initialize
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text11
  2155  001602                     __ptext11:
  2156                           	opt stack 0
  2157  001602                     _PIN_MANAGER_Initialize:
  2158                           	opt stack 25
  2159                           
  2160                           ;pin_manager.c: 52: LATA = 0x00;
  2161                           
  2162                           ;incstack = 0
  2163  001602  0E00               	movlw	0
  2164  001604  6E89               	movwf	3977,c	;volatile
  2165                           
  2166                           ;pin_manager.c: 53: TRISA = 0x2F;
  2167  001606  0E2F               	movlw	47
  2168  001608  6E92               	movwf	3986,c	;volatile
  2169                           
  2170                           ;pin_manager.c: 54: ANSELA = 0x2F;
  2171  00160A  0E2F               	movlw	47
  2172  00160C  010F               	movlb	15	; () banked
  2173  00160E  6F38               	movwf	56,b	;volatile
  2174                           
  2175                           ;pin_manager.c: 56: LATB = 0x00;
  2176  001610  0E00               	movlw	0
  2177  001612  6E8A               	movwf	3978,c	;volatile
  2178                           
  2179                           ;pin_manager.c: 57: TRISB = 0xF8;
  2180  001614  0EF8               	movlw	248
  2181  001616  6E93               	movwf	3987,c	;volatile
  2182                           
  2183                           ;pin_manager.c: 58: ANSELB = 0x38;
  2184  001618  0E38               	movlw	56
  2185  00161A  010F               	movlb	15	; () banked
  2186  00161C  6F39               	movwf	57,b	;volatile
  2187                           
  2188                           ;pin_manager.c: 59: WPUB = 0x00;
  2189  00161E  0E00               	movlw	0
  2190  001620  6E61               	movwf	3937,c	;volatile
  2191                           
  2192                           ;pin_manager.c: 61: LATC = 0x00;
  2193  001622  0E00               	movlw	0
  2194  001624  6E8B               	movwf	3979,c	;volatile
  2195                           
  2196                           ;pin_manager.c: 62: TRISC = 0xD6;
  2197  001626  0ED6               	movlw	214
  2198  001628  6E94               	movwf	3988,c	;volatile
  2199                           
  2200                           ;pin_manager.c: 63: ANSELC = 0x14;
  2201  00162A  0E14               	movlw	20
  2202  00162C  010F               	movlb	15	; () banked
  2203  00162E  6F3A               	movwf	58,b	;volatile
  2204                           
  2205                           ;pin_manager.c: 65: LATD = 0x00;
  2206  001630  0E00               	movlw	0
  2207  001632  6E8C               	movwf	3980,c	;volatile
  2208                           
  2209                           ;pin_manager.c: 66: TRISD = 0x03;
  2210  001634  0E03               	movlw	3
  2211  001636  6E95               	movwf	3989,c	;volatile
  2212                           
  2213                           ;pin_manager.c: 67: ANSELD = 0x03;
  2214  001638  0E03               	movlw	3
  2215  00163A  010F               	movlb	15	; () banked
  2216  00163C  6F3B               	movwf	59,b	;volatile
  2217                           
  2218                           ;pin_manager.c: 69: LATE = 0x00;
  2219  00163E  0E00               	movlw	0
  2220  001640  6E8D               	movwf	3981,c	;volatile
  2221                           
  2222                           ;pin_manager.c: 70: TRISE = 0x07;
  2223  001642  0E07               	movlw	7
  2224  001644  6E96               	movwf	3990,c	;volatile
  2225                           
  2226                           ;pin_manager.c: 71: ANSELE = 0x07;
  2227  001646  0E07               	movlw	7
  2228  001648  010F               	movlb	15	; () banked
  2229  00164A  6F3C               	movwf	60,b	;volatile
  2230                           
  2231                           ; BSR set to: 15
  2232                           ;pin_manager.c: 73: INTCON2bits.nRBPU = 0x01;
  2233  00164C  8EF1               	bsf	intcon2,7,c	;volatile
  2234                           
  2235                           ; BSR set to: 15
  2236  00164E  0012               	return	
  2237  001650                     __end_of_PIN_MANAGER_Initialize:
  2238                           	opt stack 0
  2239                           tblptru	equ	0xFF8
  2240                           tblptrh	equ	0xFF7
  2241                           tblptrl	equ	0xFF6
  2242                           tablat	equ	0xFF5
  2243                           intcon	equ	0xFF2
  2244                           intcon2	equ	0xFF1
  2245                           postinc0	equ	0xFEE
  2246                           wreg	equ	0xFE8
  2247                           postinc1	equ	0xFE6
  2248                           postdec1	equ	0xFE5
  2249                           fsr1h	equ	0xFE2
  2250                           fsr1l	equ	0xFE1
  2251                           postinc2	equ	0xFDE
  2252                           postdec2	equ	0xFDD
  2253                           fsr2h	equ	0xFDA
  2254                           fsr2l	equ	0xFD9
  2255                           status	equ	0xFD8
  2256                           
  2257 ;; *************** function _OSCILLATOR_Initialize *****************
  2258 ;; Defined at:
  2259 ;;		line 122 in file "mcc_generated_files/mcc.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;		None               void
  2266 ;; Registers used:
  2267 ;;		wreg, status,2
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2273 ;;      Params:         0       0       0       0       0       0       0
  2274 ;;      Locals:         0       0       0       0       0       0       0
  2275 ;;      Temps:          0       0       0       0       0       0       0
  2276 ;;      Totals:         0       0       0       0       0       0       0
  2277 ;;Total ram usage:        0 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    4
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_SYSTEM_Initialize
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text12
  2288  0018B0                     __ptext12:
  2289                           	opt stack 0
  2290  0018B0                     _OSCILLATOR_Initialize:
  2291                           	opt stack 25
  2292                           
  2293                           ;mcc.c: 125: OSCCON = 0x62;
  2294                           
  2295                           ; BSR set to: 15
  2296                           ;incstack = 0
  2297  0018B0  0E62               	movlw	98
  2298  0018B2  6ED3               	movwf	4051,c	;volatile
  2299                           
  2300                           ;mcc.c: 127: OSCCON2 = 0x04;
  2301  0018B4  0E04               	movlw	4
  2302  0018B6  6ED2               	movwf	4050,c	;volatile
  2303                           
  2304                           ;mcc.c: 129: OSCTUNE = 0x00;
  2305  0018B8  0E00               	movlw	0
  2306  0018BA  6E9B               	movwf	3995,c	;volatile
  2307  0018BC  0012               	return	
  2308  0018BE                     __end_of_OSCILLATOR_Initialize:
  2309                           	opt stack 0
  2310                           tblptru	equ	0xFF8
  2311                           tblptrh	equ	0xFF7
  2312                           tblptrl	equ	0xFF6
  2313                           tablat	equ	0xFF5
  2314                           intcon	equ	0xFF2
  2315                           intcon2	equ	0xFF1
  2316                           postinc0	equ	0xFEE
  2317                           wreg	equ	0xFE8
  2318                           postinc1	equ	0xFE6
  2319                           postdec1	equ	0xFE5
  2320                           fsr1h	equ	0xFE2
  2321                           fsr1l	equ	0xFE1
  2322                           postinc2	equ	0xFDE
  2323                           postdec2	equ	0xFDD
  2324                           fsr2h	equ	0xFDA
  2325                           fsr2l	equ	0xFD9
  2326                           status	equ	0xFD8
  2327                           
  2328 ;; *************** function _INTERRUPT_Initialize *****************
  2329 ;; Defined at:
  2330 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;		None
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;		None               void
  2337 ;; Registers used:
  2338 ;;		None
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2344 ;;      Params:         0       0       0       0       0       0       0
  2345 ;;      Locals:         0       0       0       0       0       0       0
  2346 ;;      Temps:          0       0       0       0       0       0       0
  2347 ;;      Totals:         0       0       0       0       0       0       0
  2348 ;;Total ram usage:        0 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:    4
  2351 ;; This function calls:
  2352 ;;		Nothing
  2353 ;; This function is called by:
  2354 ;;		_SYSTEM_Initialize
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           	psect	text13
  2359  0018BE                     __ptext13:
  2360                           	opt stack 0
  2361  0018BE                     _INTERRUPT_Initialize:
  2362                           	opt stack 25
  2363                           
  2364                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  2365                           
  2366                           ;incstack = 0
  2367  0018BE  9ED0               	bcf	4048,7,c	;volatile
  2368                           
  2369                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
  2370  0018C0  9A9F               	bcf	3999,5,c	;volatile
  2371                           
  2372                           ;interrupt_manager.c: 62: IPR1bits.ADIP = 0;
  2373  0018C2  9C9F               	bcf	3999,6,c	;volatile
  2374                           
  2375                           ;interrupt_manager.c: 64: IPR1bits.TX1IP = 0;
  2376  0018C4  989F               	bcf	3999,4,c	;volatile
  2377                           
  2378                           ;interrupt_manager.c: 66: IPR1bits.TMR1IP = 0;
  2379  0018C6  909F               	bcf	3999,0,c	;volatile
  2380  0018C8  0012               	return	
  2381  0018CA                     __end_of_INTERRUPT_Initialize:
  2382                           	opt stack 0
  2383                           tblptru	equ	0xFF8
  2384                           tblptrh	equ	0xFF7
  2385                           tblptrl	equ	0xFF6
  2386                           tablat	equ	0xFF5
  2387                           intcon	equ	0xFF2
  2388                           intcon2	equ	0xFF1
  2389                           postinc0	equ	0xFEE
  2390                           wreg	equ	0xFE8
  2391                           postinc1	equ	0xFE6
  2392                           postdec1	equ	0xFE5
  2393                           fsr1h	equ	0xFE2
  2394                           fsr1l	equ	0xFE1
  2395                           postinc2	equ	0xFDE
  2396                           postdec2	equ	0xFDD
  2397                           fsr2h	equ	0xFDA
  2398                           fsr2l	equ	0xFD9
  2399                           status	equ	0xFD8
  2400                           
  2401 ;; *************** function _EUSART1_Initialize *****************
  2402 ;; Defined at:
  2403 ;;		line 76 in file "mcc_generated_files/eusart1.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;		None
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;		None
  2408 ;; Return value:  Size  Location     Type
  2409 ;;		None               void
  2410 ;; Registers used:
  2411 ;;		wreg, status,2
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2417 ;;      Params:         0       0       0       0       0       0       0
  2418 ;;      Locals:         0       0       0       0       0       0       0
  2419 ;;      Temps:          0       0       0       0       0       0       0
  2420 ;;      Totals:         0       0       0       0       0       0       0
  2421 ;;Total ram usage:        0 bytes
  2422 ;; Hardware stack levels used:    1
  2423 ;; Hardware stack levels required when called:    4
  2424 ;; This function calls:
  2425 ;;		Nothing
  2426 ;; This function is called by:
  2427 ;;		_SYSTEM_Initialize
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           	psect	text14
  2432  0016D4                     __ptext14:
  2433                           	opt stack 0
  2434  0016D4                     _EUSART1_Initialize:
  2435                           	opt stack 25
  2436                           
  2437                           ;eusart1.c: 79: PIE1bits.RC1IE = 0;
  2438                           
  2439                           ;incstack = 0
  2440  0016D4  9A9D               	bcf	3997,5,c	;volatile
  2441                           
  2442                           ;eusart1.c: 80: PIE1bits.TX1IE = 0;
  2443  0016D6  989D               	bcf	3997,4,c	;volatile
  2444                           
  2445                           ;eusart1.c: 85: BAUD1CON = 0x48;
  2446  0016D8  0E48               	movlw	72
  2447  0016DA  6EB8               	movwf	4024,c	;volatile
  2448                           
  2449                           ;eusart1.c: 88: RC1STA = 0x98;
  2450  0016DC  0E98               	movlw	152
  2451  0016DE  6EAB               	movwf	4011,c	;volatile
  2452                           
  2453                           ;eusart1.c: 91: TX1STA = 0x26;
  2454  0016E0  0E26               	movlw	38
  2455  0016E2  6EAC               	movwf	4012,c	;volatile
  2456                           
  2457                           ;eusart1.c: 94: SPBRG1 = 0x67;
  2458  0016E4  0E67               	movlw	103
  2459  0016E6  6EAF               	movwf	4015,c	;volatile
  2460                           
  2461                           ;eusart1.c: 97: SPBRGH1 = 0x00;
  2462  0016E8  0E00               	movlw	0
  2463  0016EA  6EB0               	movwf	4016,c	;volatile
  2464                           
  2465                           ;eusart1.c: 100: TXREG1 = 0x00;
  2466  0016EC  0E00               	movlw	0
  2467  0016EE  6EAD               	movwf	4013,c	;volatile
  2468                           
  2469                           ;eusart1.c: 103: RCREG1 = 0x00;
  2470  0016F0  0E00               	movlw	0
  2471  0016F2  6EAE               	movwf	4014,c	;volatile
  2472                           
  2473                           ;eusart1.c: 107: eusart1TxHead = 0;
  2474  0016F4  0E00               	movlw	0
  2475  0016F6  6E48               	movwf	_eusart1TxHead,c
  2476                           
  2477                           ;eusart1.c: 108: eusart1TxTail = 0;
  2478  0016F8  0E00               	movlw	0
  2479  0016FA  6E49               	movwf	_eusart1TxTail,c
  2480                           
  2481                           ;eusart1.c: 109: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  2482  0016FC  0E08               	movlw	8
  2483  0016FE  6E4C               	movwf	_eusart1TxBufferRemaining,c	;volatile
  2484                           
  2485                           ;eusart1.c: 111: eusart1RxHead = 0;
  2486  001700  0E00               	movlw	0
  2487  001702  6E46               	movwf	_eusart1RxHead,c
  2488                           
  2489                           ;eusart1.c: 112: eusart1RxTail = 0;
  2490  001704  0E00               	movlw	0
  2491  001706  6E47               	movwf	_eusart1RxTail,c
  2492                           
  2493                           ;eusart1.c: 113: eusart1RxCount = 0;
  2494  001708  0E00               	movlw	0
  2495  00170A  6E45               	movwf	_eusart1RxCount,c	;volatile
  2496                           
  2497                           ;eusart1.c: 116: PIE1bits.RC1IE = 1;
  2498  00170C  8A9D               	bsf	3997,5,c	;volatile
  2499  00170E  0012               	return	
  2500  001710                     __end_of_EUSART1_Initialize:
  2501                           	opt stack 0
  2502                           tblptru	equ	0xFF8
  2503                           tblptrh	equ	0xFF7
  2504                           tblptrl	equ	0xFF6
  2505                           tablat	equ	0xFF5
  2506                           intcon	equ	0xFF2
  2507                           intcon2	equ	0xFF1
  2508                           postinc0	equ	0xFEE
  2509                           wreg	equ	0xFE8
  2510                           postinc1	equ	0xFE6
  2511                           postdec1	equ	0xFE5
  2512                           fsr1h	equ	0xFE2
  2513                           fsr1l	equ	0xFE1
  2514                           postinc2	equ	0xFDE
  2515                           postdec2	equ	0xFDD
  2516                           fsr2h	equ	0xFDA
  2517                           fsr2l	equ	0xFD9
  2518                           status	equ	0xFD8
  2519                           
  2520 ;; *************** function _ADC_Initialize *****************
  2521 ;; Defined at:
  2522 ;;		line 59 in file "mcc_generated_files/adc.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;		None
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;		None
  2527 ;; Return value:  Size  Location     Type
  2528 ;;		None               void
  2529 ;; Registers used:
  2530 ;;		wreg, status,2
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2536 ;;      Params:         0       0       0       0       0       0       0
  2537 ;;      Locals:         0       0       0       0       0       0       0
  2538 ;;      Temps:          0       0       0       0       0       0       0
  2539 ;;      Totals:         0       0       0       0       0       0       0
  2540 ;;Total ram usage:        0 bytes
  2541 ;; Hardware stack levels used:    1
  2542 ;; Hardware stack levels required when called:    4
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_SYSTEM_Initialize
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text15
  2551  001850                     __ptext15:
  2552                           	opt stack 0
  2553  001850                     _ADC_Initialize:
  2554                           	opt stack 25
  2555                           
  2556                           ;adc.c: 64: ADCON0 = 0x01;
  2557                           
  2558                           ;incstack = 0
  2559  001850  0E01               	movlw	1
  2560  001852  6EC2               	movwf	4034,c	;volatile
  2561                           
  2562                           ;adc.c: 67: ADCON1 = 0x81;
  2563  001854  0E81               	movlw	129
  2564  001856  6EC1               	movwf	4033,c	;volatile
  2565                           
  2566                           ;adc.c: 70: ADCON2 = 0x0A;
  2567  001858  0E0A               	movlw	10
  2568  00185A  6EC0               	movwf	4032,c	;volatile
  2569                           
  2570                           ;adc.c: 73: ADRESL = 0x00;
  2571  00185C  0E00               	movlw	0
  2572  00185E  6EC3               	movwf	4035,c	;volatile
  2573                           
  2574                           ;adc.c: 76: ADRESH = 0x00;
  2575  001860  0E00               	movlw	0
  2576  001862  6EC4               	movwf	4036,c	;volatile
  2577                           
  2578                           ;adc.c: 79: PIE1bits.ADIE = 1;
  2579  001864  8C9D               	bsf	3997,6,c	;volatile
  2580  001866  0012               	return	
  2581  001868                     __end_of_ADC_Initialize:
  2582                           	opt stack 0
  2583                           tblptru	equ	0xFF8
  2584                           tblptrh	equ	0xFF7
  2585                           tblptrl	equ	0xFF6
  2586                           tablat	equ	0xFF5
  2587                           intcon	equ	0xFF2
  2588                           intcon2	equ	0xFF1
  2589                           postinc0	equ	0xFEE
  2590                           wreg	equ	0xFE8
  2591                           postinc1	equ	0xFE6
  2592                           postdec1	equ	0xFE5
  2593                           fsr1h	equ	0xFE2
  2594                           fsr1l	equ	0xFE1
  2595                           postinc2	equ	0xFDE
  2596                           postdec2	equ	0xFDD
  2597                           fsr2h	equ	0xFDA
  2598                           fsr2l	equ	0xFD9
  2599                           status	equ	0xFD8
  2600                           
  2601 ;; *************** function _Battery_Fault *****************
  2602 ;; Defined at:
  2603 ;;		line 11 in file "Battery.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;		None
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;  i               2   35[COMRAM] int 
  2608 ;;  fault           1   34[COMRAM] unsigned char 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      unsigned char 
  2611 ;; Registers used:
  2612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2618 ;;      Params:         0       0       0       0       0       0       0
  2619 ;;      Locals:         3       0       0       0       0       0       0
  2620 ;;      Temps:          0       0       0       0       0       0       0
  2621 ;;      Totals:         3       0       0       0       0       0       0
  2622 ;;Total ram usage:        3 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; Hardware stack levels required when called:    5
  2625 ;; This function calls:
  2626 ;;		___ftge
  2627 ;;		___wmul
  2628 ;; This function is called by:
  2629 ;;		_main
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text16
  2634  0012CA                     __ptext16:
  2635                           	opt stack 0
  2636  0012CA                     _Battery_Fault:
  2637                           	opt stack 25
  2638                           
  2639                           ;Battery.c: 13: char fault = 0;
  2640                           
  2641                           ;incstack = 0
  2642  0012CA  0E00               	movlw	0
  2643  0012CC  6E23               	movwf	Battery_Fault@fault,c
  2644                           
  2645                           ;Battery.c: 14: for(int i = 0;i<9;i++)
  2646  0012CE  0E00               	movlw	0
  2647  0012D0  6E25               	movwf	Battery_Fault@i+1,c
  2648  0012D2  0E00               	movlw	0
  2649  0012D4  6E24               	movwf	Battery_Fault@i,c
  2650  0012D6  5025               	movf	Battery_Fault@i+1,w,c
  2651  0012D8  0A80               	xorlw	128
  2652  0012DA  0F80               	addlw	-128
  2653  0012DC  0E09               	movlw	9
  2654  0012DE  B4D8               	btfsc	status,2,c
  2655  0012E0  5C24               	subwf	Battery_Fault@i,w,c
  2656  0012E2  B0D8               	btfsc	status,0,c
  2657  0012E4  0012               	return	
  2658                           
  2659                           ;Battery.c: 15: {
  2660                           ;Battery.c: 16: if ((3.00 < Battery_Volt[i]) && (4.21 > Battery_Volt[i]))
  2661  0012E6  0E00               	movlw	0
  2662  0012E8  6E1A               	movwf	___ftge@ff1,c
  2663  0012EA  0E40               	movlw	64
  2664  0012EC  6E1B               	movwf	___ftge@ff1+1,c
  2665  0012EE  0E40               	movlw	64
  2666  0012F0  6E1C               	movwf	___ftge@ff1+2,c
  2667  0012F2  C024  F014         	movff	Battery_Fault@i,___wmul@multiplier
  2668  0012F6  C025  F015         	movff	Battery_Fault@i+1,___wmul@multiplier+1
  2669  0012FA  0E00               	movlw	0
  2670  0012FC  6E17               	movwf	___wmul@multiplicand+1,c
  2671  0012FE  0E03               	movlw	3
  2672  001300  6E16               	movwf	___wmul@multiplicand,c
  2673  001302  ECEA  F00B         	call	___wmul	;wreg free
  2674  001306  0100               	movlb	0	; () banked
  2675  001308  0E7E               	movlw	low _Battery_Volt
  2676  00130A  2414               	addwf	?___wmul,w,c
  2677  00130C  6ED9               	movwf	fsr2l,c
  2678  00130E  0100               	movlb	0	; () banked
  2679  001310  0E00               	movlw	high _Battery_Volt
  2680  001312  2015               	addwfc	?___wmul+1,w,c
  2681  001314  6EDA               	movwf	fsr2h,c
  2682  001316  CFDE F01D          	movff	postinc2,___ftge@ff2
  2683  00131A  CFDE F01E          	movff	postinc2,___ftge@ff2+1
  2684  00131E  CFDD F01F          	movff	postdec2,___ftge@ff2+2
  2685  001322  EC59  F00A         	call	___ftge	;wreg free
  2686  001326  B0D8               	btfsc	status,0,c
  2687  001328  D024               	goto	l2856
  2688  00132A  C024  F014         	movff	Battery_Fault@i,___wmul@multiplier
  2689  00132E  C025  F015         	movff	Battery_Fault@i+1,___wmul@multiplier+1
  2690  001332  0E00               	movlw	0
  2691  001334  6E17               	movwf	___wmul@multiplicand+1,c
  2692  001336  0E03               	movlw	3
  2693  001338  6E16               	movwf	___wmul@multiplicand,c
  2694  00133A  ECEA  F00B         	call	___wmul	;wreg free
  2695  00133E  0100               	movlb	0	; () banked
  2696  001340  0E7E               	movlw	low _Battery_Volt
  2697  001342  2414               	addwf	?___wmul,w,c
  2698  001344  6ED9               	movwf	fsr2l,c
  2699  001346  0100               	movlb	0	; () banked
  2700  001348  0E00               	movlw	high _Battery_Volt
  2701  00134A  2015               	addwfc	?___wmul+1,w,c
  2702  00134C  6EDA               	movwf	fsr2h,c
  2703  00134E  CFDE F01A          	movff	postinc2,___ftge@ff1
  2704  001352  CFDE F01B          	movff	postinc2,___ftge@ff1+1
  2705  001356  CFDD F01C          	movff	postdec2,___ftge@ff1+2
  2706  00135A  0EB8               	movlw	184
  2707  00135C  6E1D               	movwf	___ftge@ff2,c
  2708  00135E  0E86               	movlw	134
  2709  001360  6E1E               	movwf	___ftge@ff2+1,c
  2710  001362  0E40               	movlw	64
  2711  001364  6E1F               	movwf	___ftge@ff2+2,c
  2712  001366  EC59  F00A         	call	___ftge	;wreg free
  2713  00136A  B0D8               	btfsc	status,0,c
  2714  00136C  D002               	goto	l2856
  2715                           
  2716                           ;Battery.c: 17: {
  2717                           ;Battery.c: 18: fault = 1;
  2718  00136E  0E01               	movlw	1
  2719  001370  6E23               	movwf	Battery_Fault@fault,c
  2720  001372                     l2856:
  2721  001372  4A24               	infsnz	Battery_Fault@i,f,c
  2722  001374  2A25               	incf	Battery_Fault@i+1,f,c
  2723  001376  D7AF               	goto	L5
  2724  001378                     __end_of_Battery_Fault:
  2725                           	opt stack 0
  2726                           tblptru	equ	0xFF8
  2727                           tblptrh	equ	0xFF7
  2728                           tblptrl	equ	0xFF6
  2729                           tablat	equ	0xFF5
  2730                           intcon	equ	0xFF2
  2731                           intcon2	equ	0xFF1
  2732                           postinc0	equ	0xFEE
  2733                           wreg	equ	0xFE8
  2734                           postinc1	equ	0xFE6
  2735                           postdec1	equ	0xFE5
  2736                           fsr1h	equ	0xFE2
  2737                           fsr1l	equ	0xFE1
  2738                           postinc2	equ	0xFDE
  2739                           postdec2	equ	0xFDD
  2740                           fsr2h	equ	0xFDA
  2741                           fsr2l	equ	0xFD9
  2742                           status	equ	0xFD8
  2743                           
  2744 ;; *************** function ___ftge *****************
  2745 ;; Defined at:
  2746 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;  ff1             3   25[COMRAM] float 
  2749 ;;  ff2             3   28[COMRAM] float 
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;		None
  2752 ;; Return value:  Size  Location     Type
  2753 ;;		None               void
  2754 ;; Registers used:
  2755 ;;		wreg, status,2, status,0
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2761 ;;      Params:         6       0       0       0       0       0       0
  2762 ;;      Locals:         0       0       0       0       0       0       0
  2763 ;;      Temps:          3       0       0       0       0       0       0
  2764 ;;      Totals:         9       0       0       0       0       0       0
  2765 ;;Total ram usage:        9 bytes
  2766 ;; Hardware stack levels used:    1
  2767 ;; Hardware stack levels required when called:    4
  2768 ;; This function calls:
  2769 ;;		Nothing
  2770 ;; This function is called by:
  2771 ;;		_Battery_Fault
  2772 ;;		_Temp_Fault
  2773 ;;		_Current_Fault
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text17
  2778  0014B2                     __ptext17:
  2779                           	opt stack 0
  2780  0014B2                     ___ftge:
  2781                           	opt stack 25
  2782                           
  2783                           ;incstack = 0
  2784  0014B2  AE1C               	btfss	___ftge@ff1+2,7,c
  2785  0014B4  D016               	goto	l2204
  2786  0014B6  C01A  F020         	movff	___ftge@ff1,??___ftge
  2787  0014BA  C01B  F021         	movff	___ftge@ff1+1,??___ftge+1
  2788  0014BE  C01C  F022         	movff	___ftge@ff1+2,??___ftge+2
  2789  0014C2  1E20               	comf	??___ftge,f,c
  2790  0014C4  1E21               	comf	??___ftge+1,f,c
  2791  0014C6  1E22               	comf	??___ftge+2,f,c
  2792  0014C8  2A20               	incf	??___ftge,f,c
  2793  0014CA  0E00               	movlw	0
  2794  0014CC  2221               	addwfc	??___ftge+1,f,c
  2795  0014CE  2222               	addwfc	??___ftge+2,f,c
  2796  0014D0  0E00               	movlw	0
  2797  0014D2  2420               	addwf	??___ftge,w,c
  2798  0014D4  6E1A               	movwf	___ftge@ff1,c
  2799  0014D6  0E00               	movlw	0
  2800  0014D8  2021               	addwfc	??___ftge+1,w,c
  2801  0014DA  6E1B               	movwf	___ftge@ff1+1,c
  2802  0014DC  0E80               	movlw	128
  2803  0014DE  2022               	addwfc	??___ftge+2,w,c
  2804  0014E0  6E1C               	movwf	___ftge@ff1+2,c
  2805  0014E2                     l2204:
  2806  0014E2  AE1F               	btfss	___ftge@ff2+2,7,c
  2807  0014E4  D016               	goto	l2208
  2808  0014E6  C01D  F020         	movff	___ftge@ff2,??___ftge
  2809  0014EA  C01E  F021         	movff	___ftge@ff2+1,??___ftge+1
  2810  0014EE  C01F  F022         	movff	___ftge@ff2+2,??___ftge+2
  2811  0014F2  1E20               	comf	??___ftge,f,c
  2812  0014F4  1E21               	comf	??___ftge+1,f,c
  2813  0014F6  1E22               	comf	??___ftge+2,f,c
  2814  0014F8  2A20               	incf	??___ftge,f,c
  2815  0014FA  0E00               	movlw	0
  2816  0014FC  2221               	addwfc	??___ftge+1,f,c
  2817  0014FE  2222               	addwfc	??___ftge+2,f,c
  2818  001500  0E00               	movlw	0
  2819  001502  2420               	addwf	??___ftge,w,c
  2820  001504  6E1D               	movwf	___ftge@ff2,c
  2821  001506  0E00               	movlw	0
  2822  001508  2021               	addwfc	??___ftge+1,w,c
  2823  00150A  6E1E               	movwf	___ftge@ff2+1,c
  2824  00150C  0E80               	movlw	128
  2825  00150E  2022               	addwfc	??___ftge+2,w,c
  2826  001510  6E1F               	movwf	___ftge@ff2+2,c
  2827  001512                     l2208:
  2828  001512  0E00               	movlw	0
  2829  001514  1A1A               	xorwf	___ftge@ff1,f,c
  2830  001516  0E00               	movlw	0
  2831  001518  1A1B               	xorwf	___ftge@ff1+1,f,c
  2832  00151A  0E80               	movlw	128
  2833  00151C  1A1C               	xorwf	___ftge@ff1+2,f,c
  2834  00151E  0E00               	movlw	0
  2835  001520  1A1D               	xorwf	___ftge@ff2,f,c
  2836  001522  0E00               	movlw	0
  2837  001524  1A1E               	xorwf	___ftge@ff2+1,f,c
  2838  001526  0E80               	movlw	128
  2839  001528  1A1F               	xorwf	___ftge@ff2+2,f,c
  2840  00152A  501D               	movf	___ftge@ff2,w,c
  2841  00152C  5C1A               	subwf	___ftge@ff1,w,c
  2842  00152E  501E               	movf	___ftge@ff2+1,w,c
  2843  001530  581B               	subwfb	___ftge@ff1+1,w,c
  2844  001532  501F               	movf	___ftge@ff2+2,w,c
  2845  001534  581C               	subwfb	___ftge@ff1+2,w,c
  2846  001536  B0D8               	btfsc	status,0,c
  2847  001538  D002               	goto	l2214
  2848  00153A  90D8               	bcf	status,0,c
  2849  00153C  0012               	return	
  2850  00153E                     l2214:
  2851  00153E  80D8               	bsf	status,0,c
  2852  001540  0012               	return	
  2853  001542                     __end_of___ftge:
  2854                           	opt stack 0
  2855                           tblptru	equ	0xFF8
  2856                           tblptrh	equ	0xFF7
  2857                           tblptrl	equ	0xFF6
  2858                           tablat	equ	0xFF5
  2859                           intcon	equ	0xFF2
  2860                           intcon2	equ	0xFF1
  2861                           postinc0	equ	0xFEE
  2862                           wreg	equ	0xFE8
  2863                           postinc1	equ	0xFE6
  2864                           postdec1	equ	0xFE5
  2865                           fsr1h	equ	0xFE2
  2866                           fsr1l	equ	0xFE1
  2867                           postinc2	equ	0xFDE
  2868                           postdec2	equ	0xFDD
  2869                           fsr2h	equ	0xFDA
  2870                           fsr2l	equ	0xFD9
  2871                           status	equ	0xFD8
  2872                           
  2873 ;; *************** function _Battery_Convert *****************
  2874 ;; Defined at:
  2875 ;;		line 47 in file "Battery.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  x               2   16[BANK0 ] int 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;		None               void
  2882 ;; Registers used:
  2883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2889 ;;      Params:         0       0       0       0       0       0       0
  2890 ;;      Locals:         0       2       0       0       0       0       0
  2891 ;;      Temps:          0       2       0       0       0       0       0
  2892 ;;      Totals:         0       4       0       0       0       0       0
  2893 ;;Total ram usage:        4 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:    7
  2896 ;; This function calls:
  2897 ;;		_Battery_Filter
  2898 ;;		___awtoft
  2899 ;;		___ftadd
  2900 ;;		___ftdiv
  2901 ;;		___ftmul
  2902 ;;		___wmul
  2903 ;; This function is called by:
  2904 ;;		_main
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text18
  2909  001100                     __ptext18:
  2910                           	opt stack 0
  2911  001100                     _Battery_Convert:
  2912                           	opt stack 23
  2913                           
  2914                           ;Battery.c: 49: int x;
  2915                           ;Battery.c: 50: for(x = 0; x < 10; x++)
  2916                           
  2917                           ;incstack = 0
  2918  001100  0E00               	movlw	0
  2919  001102  0100               	movlb	0	; () banked
  2920  001104  6FE1               	movwf	(Battery_Convert@x+1)& (0+255),b
  2921  001106  0E00               	movlw	0
  2922  001108  0100               	movlb	0	; () banked
  2923  00110A  6FE0               	movwf	Battery_Convert@x& (0+255),b
  2924  00110C                     
  2925                           ; BSR set to: 0
  2926  00110C  0100               	movlb	0	; () banked
  2927  00110E  51E1               	movf	(Battery_Convert@x+1)& (0+255),w,b
  2928  001110  0A80               	xorlw	128
  2929  001112  0F80               	addlw	-128
  2930  001114  0E0A               	movlw	10
  2931  001116  B4D8               	btfsc	status,2,c
  2932  001118  5DE0               	subwf	Battery_Convert@x& (0+255),w,b
  2933  00111A  B0D8               	btfsc	status,0,c
  2934  00111C  D062               	goto	l2872
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;Battery.c: 51: {
  2938                           ;Battery.c: 52: TempBattery_Volt[x] = ((Battery_Adc[x]/1024.0)*5.0) + 2.5;
  2939                           
  2940                           ; BSR set to: 0
  2941                           
  2942                           ; BSR set to: 0
  2943  00111E  C0E0  F014         	movff	Battery_Convert@x,___wmul@multiplier
  2944  001122  C0E1  F015         	movff	Battery_Convert@x+1,___wmul@multiplier+1
  2945  001126  0E00               	movlw	0
  2946  001128  6E17               	movwf	___wmul@multiplicand+1,c
  2947  00112A  0E03               	movlw	3
  2948  00112C  6E16               	movwf	___wmul@multiplicand,c
  2949  00112E  ECEA  F00B         	call	___wmul	;wreg free
  2950  001132  0101               	movlb	1	; () banked
  2951  001134  0E8C               	movlw	low _TempBattery_Volt
  2952  001136  2414               	addwf	?___wmul,w,c
  2953  001138  6ED9               	movwf	fsr2l,c
  2954  00113A  0101               	movlb	1	; () banked
  2955  00113C  0E01               	movlw	high _TempBattery_Volt
  2956  00113E  2015               	addwfc	?___wmul+1,w,c
  2957  001140  6EDA               	movwf	fsr2h,c
  2958  001142  0E00               	movlw	0
  2959  001144  6E32               	movwf	___ftmul@f2,c
  2960  001146  0EA0               	movlw	160
  2961  001148  6E33               	movwf	___ftmul@f2+1,c
  2962  00114A  0E40               	movlw	64
  2963  00114C  6E34               	movwf	___ftmul@f2+2,c
  2964  00114E  0E00               	movlw	0
  2965  001150  6E23               	movwf	___ftdiv@f2,c
  2966  001152  0E80               	movlw	128
  2967  001154  6E24               	movwf	___ftdiv@f2+1,c
  2968  001156  0E44               	movlw	68
  2969  001158  6E25               	movwf	___ftdiv@f2+2,c
  2970  00115A  0E5A               	movlw	low _Battery_Adc
  2971  00115C  0100               	movlb	0	; () banked
  2972  00115E  6FDE               	movwf	??_Battery_Convert& (0+255),b
  2973  001160  0E01               	movlw	high _Battery_Adc
  2974  001162  6FDF               	movwf	(??_Battery_Convert+1)& (0+255),b
  2975  001164  90D8               	bcf	status,0,c
  2976  001166  0100               	movlb	0	; () banked
  2977  001168  35E0               	rlcf	Battery_Convert@x& (0+255),w,b
  2978  00116A  6EE1               	movwf	fsr1l,c
  2979  00116C  0100               	movlb	0	; () banked
  2980  00116E  35E1               	rlcf	(Battery_Convert@x+1)& (0+255),w,b
  2981  001170  6EE2               	movwf	fsr1h,c
  2982  001172  0100               	movlb	0	; () banked
  2983  001174  51DE               	movf	??_Battery_Convert& (0+255),w,b
  2984  001176  26E1               	addwf	fsr1l,f,c
  2985  001178  0100               	movlb	0	; () banked
  2986  00117A  51DF               	movf	(??_Battery_Convert+1)& (0+255),w,b
  2987  00117C  22E2               	addwfc	fsr1h,f,c
  2988  00117E  CFE6 F01C          	movff	postinc1,___awtoft@c
  2989  001182  CFE5 F01D          	movff	postdec1,___awtoft@c+1
  2990  001186  EC28  F00B         	call	___awtoft	;wreg free
  2991  00118A  C01C  F020         	movff	?___awtoft,___ftdiv@f1
  2992  00118E  C01D  F021         	movff	?___awtoft+1,___ftdiv@f1+1
  2993  001192  C01E  F022         	movff	?___awtoft+2,___ftdiv@f1+2
  2994  001196  ECF4  F008         	call	___ftdiv	;wreg free
  2995  00119A  C020  F02F         	movff	?___ftdiv,___ftmul@f1
  2996  00119E  C021  F030         	movff	?___ftdiv+1,___ftmul@f1+1
  2997  0011A2  C022  F031         	movff	?___ftdiv+2,___ftmul@f1+2
  2998  0011A6  EC08  F008         	call	___ftmul	;wreg free
  2999  0011AA  C02F  F0D0         	movff	?___ftmul,___ftadd@f1
  3000  0011AE  C030  F0D1         	movff	?___ftmul+1,___ftadd@f1+1
  3001  0011B2  C031  F0D2         	movff	?___ftmul+2,___ftadd@f1+2
  3002  0011B6  0E00               	movlw	0
  3003  0011B8  0100               	movlb	0	; () banked
  3004  0011BA  6FD3               	movwf	___ftadd@f2& (0+255),b
  3005  0011BC  0E20               	movlw	32
  3006  0011BE  0100               	movlb	0	; () banked
  3007  0011C0  6FD4               	movwf	(___ftadd@f2+1)& (0+255),b
  3008  0011C2  0E40               	movlw	64
  3009  0011C4  0100               	movlb	0	; () banked
  3010  0011C6  6FD5               	movwf	(___ftadd@f2+2)& (0+255),b
  3011  0011C8  EC0F  F003         	call	___ftadd	;wreg free
  3012  0011CC  C0D0  FFDE         	movff	?___ftadd,postinc2
  3013  0011D0  C0D1  FFDE         	movff	?___ftadd+1,postinc2
  3014  0011D4  C0D2  FFDD         	movff	?___ftadd+2,postdec2
  3015  0011D8  52DD               	movf	postdec2,f,c
  3016  0011DA  0100               	movlb	0	; () banked
  3017  0011DC  4BE0               	infsnz	Battery_Convert@x& (0+255),f,b
  3018  0011DE  2BE1               	incf	(Battery_Convert@x+1)& (0+255),f,b
  3019  0011E0  D795               	goto	L6
  3020  0011E2                     l2872:
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;Battery.c: 53: }
  3024                           ;Battery.c: 54: Battery_Filter();
  3025  0011E2  EC26  F006         	call	_Battery_Filter	;wreg free
  3026  0011E6  0012               	return	
  3027  0011E8                     __end_of_Battery_Convert:
  3028                           	opt stack 0
  3029                           tblptru	equ	0xFF8
  3030                           tblptrh	equ	0xFF7
  3031                           tblptrl	equ	0xFF6
  3032                           tablat	equ	0xFF5
  3033                           intcon	equ	0xFF2
  3034                           intcon2	equ	0xFF1
  3035                           postinc0	equ	0xFEE
  3036                           wreg	equ	0xFE8
  3037                           postinc1	equ	0xFE6
  3038                           postdec1	equ	0xFE5
  3039                           fsr1h	equ	0xFE2
  3040                           fsr1l	equ	0xFE1
  3041                           postinc2	equ	0xFDE
  3042                           postdec2	equ	0xFDD
  3043                           fsr2h	equ	0xFDA
  3044                           fsr2l	equ	0xFD9
  3045                           status	equ	0xFD8
  3046                           
  3047 ;; *************** function ___ftdiv *****************
  3048 ;; Defined at:
  3049 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdiv.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;  f1              3   31[COMRAM] float 
  3052 ;;  f2              3   34[COMRAM] float 
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;  f3              3   41[COMRAM] float 
  3055 ;;  sign            1   45[COMRAM] unsigned char 
  3056 ;;  exp             1   44[COMRAM] unsigned char 
  3057 ;;  cntr            1   40[COMRAM] unsigned char 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  3   31[COMRAM] float 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, status,0, cstack
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3067 ;;      Params:         6       0       0       0       0       0       0
  3068 ;;      Locals:         6       0       0       0       0       0       0
  3069 ;;      Temps:          3       0       0       0       0       0       0
  3070 ;;      Totals:        15       0       0       0       0       0       0
  3071 ;;Total ram usage:       15 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; Hardware stack levels required when called:    5
  3074 ;; This function calls:
  3075 ;;		___ftpack
  3076 ;; This function is called by:
  3077 ;;		_Battery_Convert
  3078 ;;		_Temp_Convert
  3079 ;;		_Current_Fault
  3080 ;;		_Current_Get
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text19
  3085  0011E8                     __ptext19:
  3086                           	opt stack 0
  3087  0011E8                     ___ftdiv:
  3088                           	opt stack 24
  3089                           
  3090                           ;incstack = 0
  3091  0011E8  C022  F026         	movff	___ftdiv@f1+2,??___ftdiv
  3092  0011EC  6A27               	clrf	(??___ftdiv+1)& (0+255),c
  3093  0011EE  6A28               	clrf	(??___ftdiv+2)& (0+255),c
  3094  0011F0  3421               	rlcf	___ftdiv@f1+1,w,c
  3095  0011F2  3626               	rlcf	??___ftdiv& (0+255),f,c
  3096  0011F4  E301               	bnc	u2621
  3097  0011F6  8027               	bsf	(??___ftdiv+1)& (0+255),0,c
  3098  0011F8                     u2621:
  3099  0011F8  5026               	movf	??___ftdiv,w,c
  3100  0011FA  6E2D               	movwf	___ftdiv@exp,c
  3101  0011FC  662D               	tstfsz	___ftdiv@exp& (0+255),c
  3102  0011FE  D007               	goto	l2798
  3103  001200  0E00               	movlw	0
  3104  001202  6E20               	movwf	?___ftdiv,c
  3105  001204  0E00               	movlw	0
  3106  001206  6E21               	movwf	?___ftdiv+1,c
  3107  001208  0E00               	movlw	0
  3108  00120A  6E22               	movwf	?___ftdiv+2,c
  3109  00120C  0012               	return	
  3110  00120E                     l2798:
  3111  00120E  C025  F026         	movff	___ftdiv@f2+2,??___ftdiv
  3112  001212  6A27               	clrf	(??___ftdiv+1)& (0+255),c
  3113  001214  6A28               	clrf	(??___ftdiv+2)& (0+255),c
  3114  001216  3424               	rlcf	___ftdiv@f2+1,w,c
  3115  001218  3626               	rlcf	??___ftdiv& (0+255),f,c
  3116  00121A  E301               	bnc	u2641
  3117  00121C  8027               	bsf	(??___ftdiv+1)& (0+255),0,c
  3118  00121E                     u2641:
  3119  00121E  5026               	movf	??___ftdiv,w,c
  3120  001220  6E2E               	movwf	___ftdiv@sign,c
  3121  001222  662E               	tstfsz	___ftdiv@sign& (0+255),c
  3122  001224  D007               	goto	l2804
  3123  001226  0E00               	movlw	0
  3124  001228  6E20               	movwf	?___ftdiv,c
  3125  00122A  0E00               	movlw	0
  3126  00122C  6E21               	movwf	?___ftdiv+1,c
  3127  00122E  0E00               	movlw	0
  3128  001230  6E22               	movwf	?___ftdiv+2,c
  3129  001232  0012               	return	
  3130  001234                     l2804:
  3131  001234  0E00               	movlw	0
  3132  001236  6E2A               	movwf	___ftdiv@f3,c
  3133  001238  0E00               	movlw	0
  3134  00123A  6E2B               	movwf	___ftdiv@f3+1,c
  3135  00123C  0E00               	movlw	0
  3136  00123E  6E2C               	movwf	___ftdiv@f3+2,c
  3137  001240  502E               	movf	___ftdiv@sign,w,c
  3138  001242  0F89               	addlw	137
  3139  001244  5E2D               	subwf	___ftdiv@exp,f,c
  3140  001246  C022  F02E         	movff	___ftdiv@f1+2,___ftdiv@sign
  3141  00124A  5025               	movf	___ftdiv@f2+2,w,c
  3142  00124C  1A2E               	xorwf	___ftdiv@sign,f,c
  3143  00124E  0E80               	movlw	128
  3144  001250  162E               	andwf	___ftdiv@sign,f,c
  3145  001252  8E21               	bsf	___ftdiv@f1+1,7,c
  3146  001254  0EFF               	movlw	255
  3147  001256  1620               	andwf	___ftdiv@f1,f,c
  3148  001258  0EFF               	movlw	255
  3149  00125A  1621               	andwf	___ftdiv@f1+1,f,c
  3150  00125C  0E00               	movlw	0
  3151  00125E  1622               	andwf	___ftdiv@f1+2,f,c
  3152  001260  8E24               	bsf	___ftdiv@f2+1,7,c
  3153  001262  0EFF               	movlw	255
  3154  001264  1623               	andwf	___ftdiv@f2,f,c
  3155  001266  0EFF               	movlw	255
  3156  001268  1624               	andwf	___ftdiv@f2+1,f,c
  3157  00126A  0E00               	movlw	0
  3158  00126C  1625               	andwf	___ftdiv@f2+2,f,c
  3159  00126E  0E18               	movlw	24
  3160  001270  6E29               	movwf	___ftdiv@cntr,c
  3161  001272                     l2824:
  3162  001272  90D8               	bcf	status,0,c
  3163  001274  362A               	rlcf	___ftdiv@f3,f,c
  3164  001276  362B               	rlcf	___ftdiv@f3+1,f,c
  3165  001278  362C               	rlcf	___ftdiv@f3+2,f,c
  3166  00127A  5023               	movf	___ftdiv@f2,w,c
  3167  00127C  5C20               	subwf	___ftdiv@f1,w,c
  3168  00127E  5024               	movf	___ftdiv@f2+1,w,c
  3169  001280  5821               	subwfb	___ftdiv@f1+1,w,c
  3170  001282  5025               	movf	___ftdiv@f2+2,w,c
  3171  001284  5822               	subwfb	___ftdiv@f1+2,w,c
  3172  001286  A0D8               	btfss	status,0,c
  3173  001288  D007               	goto	l835
  3174  00128A  5023               	movf	___ftdiv@f2,w,c
  3175  00128C  5E20               	subwf	___ftdiv@f1,f,c
  3176  00128E  5024               	movf	___ftdiv@f2+1,w,c
  3177  001290  5A21               	subwfb	___ftdiv@f1+1,f,c
  3178  001292  5025               	movf	___ftdiv@f2+2,w,c
  3179  001294  5A22               	subwfb	___ftdiv@f1+2,f,c
  3180  001296  802A               	bsf	___ftdiv@f3,0,c
  3181  001298                     l835:
  3182  001298  90D8               	bcf	status,0,c
  3183  00129A  3620               	rlcf	___ftdiv@f1,f,c
  3184  00129C  3621               	rlcf	___ftdiv@f1+1,f,c
  3185  00129E  3622               	rlcf	___ftdiv@f1+2,f,c
  3186  0012A0  2E29               	decfsz	___ftdiv@cntr,f,c
  3187  0012A2  D7E7               	goto	l2824
  3188  0012A4  C02A  F014         	movff	___ftdiv@f3,___ftpack@arg
  3189  0012A8  C02B  F015         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3190  0012AC  C02C  F016         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3191  0012B0  C02D  F017         	movff	___ftdiv@exp,___ftpack@exp
  3192  0012B4  C02E  F018         	movff	___ftdiv@sign,___ftpack@sign
  3193  0012B8  ECBC  F009         	call	___ftpack	;wreg free
  3194  0012BC  C014  F020         	movff	?___ftpack,?___ftdiv
  3195  0012C0  C015  F021         	movff	?___ftpack+1,?___ftdiv+1
  3196  0012C4  C016  F022         	movff	?___ftpack+2,?___ftdiv+2
  3197  0012C8  0012               	return	
  3198  0012CA                     __end_of___ftdiv:
  3199                           	opt stack 0
  3200                           tblptru	equ	0xFF8
  3201                           tblptrh	equ	0xFF7
  3202                           tblptrl	equ	0xFF6
  3203                           tablat	equ	0xFF5
  3204                           intcon	equ	0xFF2
  3205                           intcon2	equ	0xFF1
  3206                           postinc0	equ	0xFEE
  3207                           wreg	equ	0xFE8
  3208                           postinc1	equ	0xFE6
  3209                           postdec1	equ	0xFE5
  3210                           fsr1h	equ	0xFE2
  3211                           fsr1l	equ	0xFE1
  3212                           postinc2	equ	0xFDE
  3213                           postdec2	equ	0xFDD
  3214                           fsr2h	equ	0xFDA
  3215                           fsr2l	equ	0xFD9
  3216                           status	equ	0xFD8
  3217                           
  3218 ;; *************** function ___awtoft *****************
  3219 ;; Defined at:
  3220 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  c               2   27[COMRAM] int 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  sign            1   30[COMRAM] unsigned char 
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  3   27[COMRAM] float 
  3227 ;; Registers used:
  3228 ;;		wreg, status,2, status,0, prodl, cstack
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3234 ;;      Params:         3       0       0       0       0       0       0
  3235 ;;      Locals:         1       0       0       0       0       0       0
  3236 ;;      Temps:          0       0       0       0       0       0       0
  3237 ;;      Totals:         4       0       0       0       0       0       0
  3238 ;;Total ram usage:        4 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; Hardware stack levels required when called:    5
  3241 ;; This function calls:
  3242 ;;		___ftpack
  3243 ;; This function is called by:
  3244 ;;		_Battery_Convert
  3245 ;;		_Temp_Convert
  3246 ;;		_log
  3247 ;;		_Current_Convert
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           	psect	text20
  3252  001650                     __ptext20:
  3253                           	opt stack 0
  3254  001650                     ___awtoft:
  3255                           	opt stack 23
  3256                           
  3257                           ;incstack = 0
  3258  001650  0E00               	movlw	0
  3259  001652  6E1F               	movwf	___awtoft@sign,c
  3260  001654  501D               	movf	___awtoft@c+1,w,c
  3261  001656  0A80               	xorlw	128
  3262  001658  6EF3               	movwf	prodl,c
  3263  00165A  0E80               	movlw	128
  3264  00165C  5CF3               	subwf	prodl,w,c
  3265  00165E  0E00               	movlw	0
  3266  001660  B4D8               	btfsc	status,2,c
  3267  001662  5C1C               	subwf	___awtoft@c,w,c
  3268  001664  B0D8               	btfsc	status,0,c
  3269  001666  D006               	goto	l2712
  3270  001668  6C1C               	negf	___awtoft@c,c
  3271  00166A  1E1D               	comf	___awtoft@c+1,f,c
  3272  00166C  B0D8               	btfsc	status,0,c
  3273  00166E  2A1D               	incf	___awtoft@c+1,f,c
  3274  001670  0E01               	movlw	1
  3275  001672  6E1F               	movwf	___awtoft@sign,c
  3276  001674                     l2712:
  3277  001674  C01C  F014         	movff	___awtoft@c,___ftpack@arg
  3278  001678  C01D  F015         	movff	___awtoft@c+1,___ftpack@arg+1
  3279  00167C  6A16               	clrf	___ftpack@arg+2,c
  3280  00167E  0E8E               	movlw	142
  3281  001680  6E17               	movwf	___ftpack@exp,c
  3282  001682  C01F  F018         	movff	___awtoft@sign,___ftpack@sign
  3283  001686  ECBC  F009         	call	___ftpack	;wreg free
  3284  00168A  C014  F01C         	movff	?___ftpack,?___awtoft
  3285  00168E  C015  F01D         	movff	?___ftpack+1,?___awtoft+1
  3286  001692  C016  F01E         	movff	?___ftpack+2,?___awtoft+2
  3287  001696  0012               	return	
  3288  001698                     __end_of___awtoft:
  3289                           	opt stack 0
  3290                           tblptru	equ	0xFF8
  3291                           tblptrh	equ	0xFF7
  3292                           tblptrl	equ	0xFF6
  3293                           tablat	equ	0xFF5
  3294                           prodl	equ	0xFF3
  3295                           intcon	equ	0xFF2
  3296                           intcon2	equ	0xFF1
  3297                           postinc0	equ	0xFEE
  3298                           wreg	equ	0xFE8
  3299                           postinc1	equ	0xFE6
  3300                           postdec1	equ	0xFE5
  3301                           fsr1h	equ	0xFE2
  3302                           fsr1l	equ	0xFE1
  3303                           postinc2	equ	0xFDE
  3304                           postdec2	equ	0xFDD
  3305                           fsr2h	equ	0xFDA
  3306                           fsr2l	equ	0xFD9
  3307                           status	equ	0xFD8
  3308                           
  3309 ;; *************** function _Battery_Filter *****************
  3310 ;; Defined at:
  3311 ;;		line 33 in file "Battery.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;		None
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;  x               2   12[BANK0 ] int 
  3316 ;; Return value:  Size  Location     Type
  3317 ;;		None               void
  3318 ;; Registers used:
  3319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3325 ;;      Params:         0       0       0       0       0       0       0
  3326 ;;      Locals:         0       2       0       0       0       0       0
  3327 ;;      Temps:          0       0       0       0       0       0       0
  3328 ;;      Totals:         0       2       0       0       0       0       0
  3329 ;;Total ram usage:        2 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:    6
  3332 ;; This function calls:
  3333 ;;		___ftadd
  3334 ;;		___ftmul
  3335 ;;		___wmul
  3336 ;; This function is called by:
  3337 ;;		_Battery_Convert
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           	psect	text21
  3342  000C4C                     __ptext21:
  3343                           	opt stack 0
  3344  000C4C                     _Battery_Filter:
  3345                           	opt stack 23
  3346                           
  3347                           ;Battery.c: 36: int x;
  3348                           ;Battery.c: 37: for(x = 0; x < 10; x++)
  3349                           
  3350                           ;incstack = 0
  3351  000C4C  0E00               	movlw	0
  3352  000C4E  0100               	movlb	0	; () banked
  3353  000C50  6FDD               	movwf	(Battery_Filter@x+1)& (0+255),b
  3354  000C52  0E00               	movlw	0
  3355  000C54  0100               	movlb	0	; () banked
  3356  000C56  6FDC               	movwf	Battery_Filter@x& (0+255),b
  3357  000C58                     
  3358                           ; BSR set to: 0
  3359  000C58  0100               	movlb	0	; () banked
  3360  000C5A  51DD               	movf	(Battery_Filter@x+1)& (0+255),w,b
  3361  000C5C  0A80               	xorlw	128
  3362  000C5E  0F80               	addlw	-128
  3363  000C60  0E0A               	movlw	10
  3364  000C62  B4D8               	btfsc	status,2,c
  3365  000C64  5DDC               	subwf	Battery_Filter@x& (0+255),w,b
  3366  000C66  B0D8               	btfsc	status,0,c
  3367  000C68  D06B               	goto	l2734
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;Battery.c: 38: {
  3371                           ;Battery.c: 39: Battery_Volt[x] = (0.88*TempBattery_Volt[x] + ((1- 0.88)*PrevBattery_Vol
      +                          t[x]));
  3372                           
  3373                           ; BSR set to: 0
  3374                           
  3375                           ; BSR set to: 0
  3376  000C6A  C0DC  F014         	movff	Battery_Filter@x,___wmul@multiplier
  3377  000C6E  C0DD  F015         	movff	Battery_Filter@x+1,___wmul@multiplier+1
  3378  000C72  0E00               	movlw	0
  3379  000C74  6E17               	movwf	___wmul@multiplicand+1,c
  3380  000C76  0E03               	movlw	3
  3381  000C78  6E16               	movwf	___wmul@multiplicand,c
  3382  000C7A  ECEA  F00B         	call	___wmul	;wreg free
  3383  000C7E  0100               	movlb	0	; () banked
  3384  000C80  0E7E               	movlw	low _Battery_Volt
  3385  000C82  2414               	addwf	?___wmul,w,c
  3386  000C84  6ED9               	movwf	fsr2l,c
  3387  000C86  0100               	movlb	0	; () banked
  3388  000C88  0E00               	movlw	high _Battery_Volt
  3389  000C8A  2015               	addwfc	?___wmul+1,w,c
  3390  000C8C  6EDA               	movwf	fsr2h,c
  3391  000C8E  0E48               	movlw	72
  3392  000C90  6E32               	movwf	___ftmul@f2,c
  3393  000C92  0E61               	movlw	97
  3394  000C94  6E33               	movwf	___ftmul@f2+1,c
  3395  000C96  0E3F               	movlw	63
  3396  000C98  6E34               	movwf	___ftmul@f2+2,c
  3397  000C9A  C0DC  F014         	movff	Battery_Filter@x,___wmul@multiplier
  3398  000C9E  C0DD  F015         	movff	Battery_Filter@x+1,___wmul@multiplier+1
  3399  000CA2  0E00               	movlw	0
  3400  000CA4  6E17               	movwf	___wmul@multiplicand+1,c
  3401  000CA6  0E03               	movlw	3
  3402  000CA8  6E16               	movwf	___wmul@multiplicand,c
  3403  000CAA  ECEA  F00B         	call	___wmul	;wreg free
  3404  000CAE  0101               	movlb	1	; () banked
  3405  000CB0  0E8C               	movlw	low _TempBattery_Volt
  3406  000CB2  2414               	addwf	?___wmul,w,c
  3407  000CB4  6EE1               	movwf	fsr1l,c
  3408  000CB6  0101               	movlb	1	; () banked
  3409  000CB8  0E01               	movlw	high _TempBattery_Volt
  3410  000CBA  2015               	addwfc	?___wmul+1,w,c
  3411  000CBC  6EE2               	movwf	fsr1h,c
  3412  000CBE  CFE6 F02F          	movff	postinc1,___ftmul@f1
  3413  000CC2  CFE6 F030          	movff	postinc1,___ftmul@f1+1
  3414  000CC6  CFE5 F031          	movff	postdec1,___ftmul@f1+2
  3415  000CCA  EC08  F008         	call	___ftmul	;wreg free
  3416  000CCE  C02F  F0D0         	movff	?___ftmul,___ftadd@f1
  3417  000CD2  C030  F0D1         	movff	?___ftmul+1,___ftadd@f1+1
  3418  000CD6  C031  F0D2         	movff	?___ftmul+2,___ftadd@f1+2
  3419  000CDA  0EC3               	movlw	195
  3420  000CDC  6E32               	movwf	___ftmul@f2,c
  3421  000CDE  0EF5               	movlw	245
  3422  000CE0  6E33               	movwf	___ftmul@f2+1,c
  3423  000CE2  0E3D               	movlw	61
  3424  000CE4  6E34               	movwf	___ftmul@f2+2,c
  3425  000CE6  0E00               	movlw	0
  3426  000CE8  6E17               	movwf	___wmul@multiplicand+1,c
  3427  000CEA  0E03               	movlw	3
  3428  000CEC  6E16               	movwf	___wmul@multiplicand,c
  3429  000CEE  C0DC  F014         	movff	Battery_Filter@x,___wmul@multiplier
  3430  000CF2  C0DD  F015         	movff	Battery_Filter@x+1,___wmul@multiplier+1
  3431  000CF6  ECEA  F00B         	call	___wmul	;wreg free
  3432  000CFA  0101               	movlb	1	; () banked
  3433  000CFC  0E1E               	movlw	low _PrevBattery_Volt
  3434  000CFE  2414               	addwf	?___wmul,w,c
  3435  000D00  6EE1               	movwf	fsr1l,c
  3436  000D02  0101               	movlb	1	; () banked
  3437  000D04  0E01               	movlw	high _PrevBattery_Volt
  3438  000D06  2015               	addwfc	?___wmul+1,w,c
  3439  000D08  6EE2               	movwf	fsr1h,c
  3440  000D0A  CFE6 F02F          	movff	postinc1,___ftmul@f1
  3441  000D0E  CFE6 F030          	movff	postinc1,___ftmul@f1+1
  3442  000D12  CFE5 F031          	movff	postdec1,___ftmul@f1+2
  3443  000D16  EC08  F008         	call	___ftmul	;wreg free
  3444  000D1A  C02F  F0D3         	movff	?___ftmul,___ftadd@f2
  3445  000D1E  C030  F0D4         	movff	?___ftmul+1,___ftadd@f2+1
  3446  000D22  C031  F0D5         	movff	?___ftmul+2,___ftadd@f2+2
  3447  000D26  EC0F  F003         	call	___ftadd	;wreg free
  3448  000D2A  C0D0  FFDE         	movff	?___ftadd,postinc2
  3449  000D2E  C0D1  FFDE         	movff	?___ftadd+1,postinc2
  3450  000D32  C0D2  FFDD         	movff	?___ftadd+2,postdec2
  3451  000D36  52DD               	movf	postdec2,f,c
  3452  000D38  0100               	movlb	0	; () banked
  3453  000D3A  4BDC               	infsnz	Battery_Filter@x& (0+255),f,b
  3454  000D3C  2BDD               	incf	(Battery_Filter@x+1)& (0+255),f,b
  3455  000D3E  D78C               	goto	L7
  3456  000D40                     l2734:
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;Battery.c: 40: }
  3460                           ;Battery.c: 41: for(x = 0; x < 10; x++)
  3461  000D40  0E00               	movlw	0
  3462  000D42  0100               	movlb	0	; () banked
  3463  000D44  6FDD               	movwf	(Battery_Filter@x+1)& (0+255),b
  3464  000D46  0E00               	movlw	0
  3465  000D48  0100               	movlb	0	; () banked
  3466  000D4A  6FDC               	movwf	Battery_Filter@x& (0+255),b
  3467  000D4C                     
  3468                           ; BSR set to: 0
  3469  000D4C  0100               	movlb	0	; () banked
  3470  000D4E  51DD               	movf	(Battery_Filter@x+1)& (0+255),w,b
  3471  000D50  0A80               	xorlw	128
  3472  000D52  0F80               	addlw	-128
  3473  000D54  0E0A               	movlw	10
  3474  000D56  B4D8               	btfsc	status,2,c
  3475  000D58  5DDC               	subwf	Battery_Filter@x& (0+255),w,b
  3476  000D5A  B0D8               	btfsc	status,0,c
  3477  000D5C  0012               	return	
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;Battery.c: 42: {
  3481                           ;Battery.c: 43: PrevBattery_Volt[x] = Battery_Volt[x];
  3482                           
  3483                           ; BSR set to: 0
  3484                           
  3485                           ; BSR set to: 0
  3486  000D5E  C0DC  F014         	movff	Battery_Filter@x,___wmul@multiplier
  3487  000D62  C0DD  F015         	movff	Battery_Filter@x+1,___wmul@multiplier+1
  3488  000D66  0E00               	movlw	0
  3489  000D68  6E17               	movwf	___wmul@multiplicand+1,c
  3490  000D6A  0E03               	movlw	3
  3491  000D6C  6E16               	movwf	___wmul@multiplicand,c
  3492  000D6E  ECEA  F00B         	call	___wmul	;wreg free
  3493  000D72  0100               	movlb	0	; () banked
  3494  000D74  0E7E               	movlw	low _Battery_Volt
  3495  000D76  2414               	addwf	?___wmul,w,c
  3496  000D78  6ED9               	movwf	fsr2l,c
  3497  000D7A  0100               	movlb	0	; () banked
  3498  000D7C  0E00               	movlw	high _Battery_Volt
  3499  000D7E  2015               	addwfc	?___wmul+1,w,c
  3500  000D80  6EDA               	movwf	fsr2h,c
  3501  000D82  C0DC  F014         	movff	Battery_Filter@x,___wmul@multiplier
  3502  000D86  C0DD  F015         	movff	Battery_Filter@x+1,___wmul@multiplier+1
  3503  000D8A  0E00               	movlw	0
  3504  000D8C  6E17               	movwf	___wmul@multiplicand+1,c
  3505  000D8E  0E03               	movlw	3
  3506  000D90  6E16               	movwf	___wmul@multiplicand,c
  3507  000D92  ECEA  F00B         	call	___wmul	;wreg free
  3508  000D96  0101               	movlb	1	; () banked
  3509  000D98  0E1E               	movlw	low _PrevBattery_Volt
  3510  000D9A  2414               	addwf	?___wmul,w,c
  3511  000D9C  6EE1               	movwf	fsr1l,c
  3512  000D9E  0101               	movlb	1	; () banked
  3513  000DA0  0E01               	movlw	high _PrevBattery_Volt
  3514  000DA2  2015               	addwfc	?___wmul+1,w,c
  3515  000DA4  6EE2               	movwf	fsr1h,c
  3516  000DA6  CFDE FFE6          	movff	postinc2,postinc1
  3517  000DAA  CFDE FFE6          	movff	postinc2,postinc1
  3518  000DAE  CFDE FFE5          	movff	postinc2,postdec1
  3519  000DB2  52E5               	movf	postdec1,f,c
  3520                           
  3521                           ; BSR set to: 1
  3522  000DB4  0100               	movlb	0	; () banked
  3523  000DB6  4BDC               	infsnz	Battery_Filter@x& (0+255),f,b
  3524  000DB8  2BDD               	incf	(Battery_Filter@x+1)& (0+255),f,b
  3525  000DBA  D7C8               	goto	L8
  3526  000DBC                     __end_of_Battery_Filter:
  3527                           	opt stack 0
  3528                           tblptru	equ	0xFF8
  3529                           tblptrh	equ	0xFF7
  3530                           tblptrl	equ	0xFF6
  3531                           tablat	equ	0xFF5
  3532                           prodl	equ	0xFF3
  3533                           intcon	equ	0xFF2
  3534                           intcon2	equ	0xFF1
  3535                           postinc0	equ	0xFEE
  3536                           wreg	equ	0xFE8
  3537                           postinc1	equ	0xFE6
  3538                           postdec1	equ	0xFE5
  3539                           fsr1h	equ	0xFE2
  3540                           fsr1l	equ	0xFE1
  3541                           postinc2	equ	0xFDE
  3542                           postdec2	equ	0xFDD
  3543                           fsr2h	equ	0xFDA
  3544                           fsr2l	equ	0xFD9
  3545                           status	equ	0xFD8
  3546                           
  3547 ;; *************** function ___wmul *****************
  3548 ;; Defined at:
  3549 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;  multiplier      2   19[COMRAM] unsigned int 
  3552 ;;  multiplicand    2   21[COMRAM] unsigned int 
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;  product         2   23[COMRAM] unsigned int 
  3555 ;; Return value:  Size  Location     Type
  3556 ;;                  2   19[COMRAM] unsigned int 
  3557 ;; Registers used:
  3558 ;;		wreg, status,2, status,0, prodl, prodh
  3559 ;; Tracked objects:
  3560 ;;		On entry : 0/0
  3561 ;;		On exit  : 0/0
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3564 ;;      Params:         4       0       0       0       0       0       0
  3565 ;;      Locals:         2       0       0       0       0       0       0
  3566 ;;      Temps:          0       0       0       0       0       0       0
  3567 ;;      Totals:         6       0       0       0       0       0       0
  3568 ;;Total ram usage:        6 bytes
  3569 ;; Hardware stack levels used:    1
  3570 ;; Hardware stack levels required when called:    4
  3571 ;; This function calls:
  3572 ;;		Nothing
  3573 ;; This function is called by:
  3574 ;;		_Battery_Fault
  3575 ;;		_Battery_Filter
  3576 ;;		_Battery_Convert
  3577 ;;		_Temp_Fault
  3578 ;;		_Temp_Filter
  3579 ;;		_Temp_Convert
  3580 ;;		_eval_poly
  3581 ;;		_Battery_Get
  3582 ;;		_Tempeture_Get
  3583 ;;		_Current_Fault
  3584 ;;		_Current_Filter
  3585 ;;		_Current_Convert
  3586 ;;		_Current_Get
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590                           	psect	text22
  3591  0017D4                     __ptext22:
  3592                           	opt stack 0
  3593  0017D4                     ___wmul:
  3594                           	opt stack 25
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;incstack = 0
  3598  0017D4  5014               	movf	___wmul@multiplier,w,c
  3599  0017D6  0216               	mulwf	___wmul@multiplicand,c
  3600  0017D8  CFF3 F018          	movff	prodl,___wmul@product
  3601  0017DC  CFF4 F019          	movff	prodh,___wmul@product+1
  3602  0017E0  5014               	movf	___wmul@multiplier,w,c
  3603  0017E2  0217               	mulwf	___wmul@multiplicand+1,c
  3604  0017E4  50F3               	movf	prodl,w,c
  3605  0017E6  2619               	addwf	___wmul@product+1,f,c
  3606  0017E8  5015               	movf	___wmul@multiplier+1,w,c
  3607  0017EA  0216               	mulwf	___wmul@multiplicand,c
  3608  0017EC  50F3               	movf	prodl,w,c
  3609  0017EE  2619               	addwf	___wmul@product+1,f,c
  3610  0017F0  C018  F014         	movff	___wmul@product,?___wmul
  3611  0017F4  C019  F015         	movff	___wmul@product+1,?___wmul+1
  3612  0017F8  0012               	return	
  3613  0017FA                     __end_of___wmul:
  3614                           	opt stack 0
  3615                           tblptru	equ	0xFF8
  3616                           tblptrh	equ	0xFF7
  3617                           tblptrl	equ	0xFF6
  3618                           tablat	equ	0xFF5
  3619                           prodh	equ	0xFF4
  3620                           prodl	equ	0xFF3
  3621                           intcon	equ	0xFF2
  3622                           intcon2	equ	0xFF1
  3623                           postinc0	equ	0xFEE
  3624                           wreg	equ	0xFE8
  3625                           postinc1	equ	0xFE6
  3626                           postdec1	equ	0xFE5
  3627                           fsr1h	equ	0xFE2
  3628                           fsr1l	equ	0xFE1
  3629                           postinc2	equ	0xFDE
  3630                           postdec2	equ	0xFDD
  3631                           fsr2h	equ	0xFDA
  3632                           fsr2l	equ	0xFD9
  3633                           status	equ	0xFD8
  3634                           
  3635 ;; *************** function ___ftmul *****************
  3636 ;; Defined at:
  3637 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;  f1              3   46[COMRAM] float 
  3640 ;;  f2              3   49[COMRAM] float 
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  f3_as_produc    3   56[COMRAM] unsigned um
  3643 ;;  sign            1   60[COMRAM] unsigned char 
  3644 ;;  cntr            1   59[COMRAM] unsigned char 
  3645 ;;  exp             1   55[COMRAM] unsigned char 
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  3   46[COMRAM] float 
  3648 ;; Registers used:
  3649 ;;		wreg, status,2, status,0, cstack
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3655 ;;      Params:         6       0       0       0       0       0       0
  3656 ;;      Locals:         6       0       0       0       0       0       0
  3657 ;;      Temps:          3       0       0       0       0       0       0
  3658 ;;      Totals:        15       0       0       0       0       0       0
  3659 ;;Total ram usage:       15 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; Hardware stack levels required when called:    5
  3662 ;; This function calls:
  3663 ;;		___ftpack
  3664 ;; This function is called by:
  3665 ;;		_Battery_Filter
  3666 ;;		_Battery_Convert
  3667 ;;		_Temp_Filter
  3668 ;;		_Temp_Convert
  3669 ;;		_log
  3670 ;;		_eval_poly
  3671 ;;		_Current_Filter
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           	psect	text23
  3676  001010                     __ptext23:
  3677                           	opt stack 0
  3678  001010                     ___ftmul:
  3679                           	opt stack 22
  3680                           
  3681                           ;incstack = 0
  3682  001010  C031  F035         	movff	___ftmul@f1+2,??___ftmul
  3683  001014  6A36               	clrf	(??___ftmul+1)& (0+255),c
  3684  001016  6A37               	clrf	(??___ftmul+2)& (0+255),c
  3685  001018  3430               	rlcf	___ftmul@f1+1,w,c
  3686  00101A  3635               	rlcf	??___ftmul& (0+255),f,c
  3687  00101C  E301               	bnc	u2441
  3688  00101E  8036               	bsf	(??___ftmul+1)& (0+255),0,c
  3689  001020                     u2441:
  3690  001020  5035               	movf	??___ftmul,w,c
  3691  001022  6E38               	movwf	___ftmul@exp,c
  3692  001024  6638               	tstfsz	___ftmul@exp& (0+255),c
  3693  001026  D007               	goto	l2662
  3694  001028  0E00               	movlw	0
  3695  00102A  6E2F               	movwf	?___ftmul,c
  3696  00102C  0E00               	movlw	0
  3697  00102E  6E30               	movwf	?___ftmul+1,c
  3698  001030  0E00               	movlw	0
  3699  001032  6E31               	movwf	?___ftmul+2,c
  3700  001034  0012               	return	
  3701  001036                     l2662:
  3702  001036  C034  F035         	movff	___ftmul@f2+2,??___ftmul
  3703  00103A  6A36               	clrf	(??___ftmul+1)& (0+255),c
  3704  00103C  6A37               	clrf	(??___ftmul+2)& (0+255),c
  3705  00103E  3433               	rlcf	___ftmul@f2+1,w,c
  3706  001040  3635               	rlcf	??___ftmul& (0+255),f,c
  3707  001042  E301               	bnc	u2461
  3708  001044  8036               	bsf	(??___ftmul+1)& (0+255),0,c
  3709  001046                     u2461:
  3710  001046  5035               	movf	??___ftmul,w,c
  3711  001048  6E3D               	movwf	___ftmul@sign,c
  3712  00104A  663D               	tstfsz	___ftmul@sign& (0+255),c
  3713  00104C  D007               	goto	l2668
  3714  00104E  0E00               	movlw	0
  3715  001050  6E2F               	movwf	?___ftmul,c
  3716  001052  0E00               	movlw	0
  3717  001054  6E30               	movwf	?___ftmul+1,c
  3718  001056  0E00               	movlw	0
  3719  001058  6E31               	movwf	?___ftmul+2,c
  3720  00105A  0012               	return	
  3721  00105C                     l2668:
  3722  00105C  503D               	movf	___ftmul@sign,w,c
  3723  00105E  0F7B               	addlw	123
  3724  001060  2638               	addwf	___ftmul@exp,f,c
  3725  001062  C031  F03D         	movff	___ftmul@f1+2,___ftmul@sign
  3726  001066  5034               	movf	___ftmul@f2+2,w,c
  3727  001068  1A3D               	xorwf	___ftmul@sign,f,c
  3728  00106A  0E80               	movlw	128
  3729  00106C  163D               	andwf	___ftmul@sign,f,c
  3730  00106E  8E30               	bsf	___ftmul@f1+1,7,c
  3731  001070  8E33               	bsf	___ftmul@f2+1,7,c
  3732  001072  0EFF               	movlw	255
  3733  001074  1632               	andwf	___ftmul@f2,f,c
  3734  001076  0EFF               	movlw	255
  3735  001078  1633               	andwf	___ftmul@f2+1,f,c
  3736  00107A  0E00               	movlw	0
  3737  00107C  1634               	andwf	___ftmul@f2+2,f,c
  3738  00107E  0E00               	movlw	0
  3739  001080  6E39               	movwf	___ftmul@f3_as_product,c
  3740  001082  0E00               	movlw	0
  3741  001084  6E3A               	movwf	___ftmul@f3_as_product+1,c
  3742  001086  0E00               	movlw	0
  3743  001088  6E3B               	movwf	___ftmul@f3_as_product+2,c
  3744  00108A  0E07               	movlw	7
  3745  00108C  6E3C               	movwf	___ftmul@cntr,c
  3746  00108E                     l2682:
  3747  00108E  A02F               	btfss	___ftmul@f1,0,c
  3748  001090  D006               	goto	l2686
  3749  001092  5032               	movf	___ftmul@f2,w,c
  3750  001094  2639               	addwf	___ftmul@f3_as_product,f,c
  3751  001096  5033               	movf	___ftmul@f2+1,w,c
  3752  001098  223A               	addwfc	___ftmul@f3_as_product+1,f,c
  3753  00109A  5034               	movf	___ftmul@f2+2,w,c
  3754  00109C  223B               	addwfc	___ftmul@f3_as_product+2,f,c
  3755  00109E                     l2686:
  3756  00109E  90D8               	bcf	status,0,c
  3757  0010A0  3231               	rrcf	___ftmul@f1+2,f,c
  3758  0010A2  3230               	rrcf	___ftmul@f1+1,f,c
  3759  0010A4  322F               	rrcf	___ftmul@f1,f,c
  3760  0010A6  90D8               	bcf	status,0,c
  3761  0010A8  3632               	rlcf	___ftmul@f2,f,c
  3762  0010AA  3633               	rlcf	___ftmul@f2+1,f,c
  3763  0010AC  3634               	rlcf	___ftmul@f2+2,f,c
  3764  0010AE  2E3C               	decfsz	___ftmul@cntr,f,c
  3765  0010B0  D7EE               	goto	l2682
  3766  0010B2  0E09               	movlw	9
  3767  0010B4  6E3C               	movwf	___ftmul@cntr,c
  3768  0010B6                     l2692:
  3769  0010B6  A02F               	btfss	___ftmul@f1,0,c
  3770  0010B8  D006               	goto	l2696
  3771  0010BA  5032               	movf	___ftmul@f2,w,c
  3772  0010BC  2639               	addwf	___ftmul@f3_as_product,f,c
  3773  0010BE  5033               	movf	___ftmul@f2+1,w,c
  3774  0010C0  223A               	addwfc	___ftmul@f3_as_product+1,f,c
  3775  0010C2  5034               	movf	___ftmul@f2+2,w,c
  3776  0010C4  223B               	addwfc	___ftmul@f3_as_product+2,f,c
  3777  0010C6                     l2696:
  3778  0010C6  90D8               	bcf	status,0,c
  3779  0010C8  3231               	rrcf	___ftmul@f1+2,f,c
  3780  0010CA  3230               	rrcf	___ftmul@f1+1,f,c
  3781  0010CC  322F               	rrcf	___ftmul@f1,f,c
  3782  0010CE  90D8               	bcf	status,0,c
  3783  0010D0  323B               	rrcf	___ftmul@f3_as_product+2,f,c
  3784  0010D2  323A               	rrcf	___ftmul@f3_as_product+1,f,c
  3785  0010D4  3239               	rrcf	___ftmul@f3_as_product,f,c
  3786  0010D6  2E3C               	decfsz	___ftmul@cntr,f,c
  3787  0010D8  D7EE               	goto	l2692
  3788  0010DA  C039  F014         	movff	___ftmul@f3_as_product,___ftpack@arg
  3789  0010DE  C03A  F015         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3790  0010E2  C03B  F016         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3791  0010E6  C038  F017         	movff	___ftmul@exp,___ftpack@exp
  3792  0010EA  C03D  F018         	movff	___ftmul@sign,___ftpack@sign
  3793  0010EE  ECBC  F009         	call	___ftpack	;wreg free
  3794  0010F2  C014  F02F         	movff	?___ftpack,?___ftmul
  3795  0010F6  C015  F030         	movff	?___ftpack+1,?___ftmul+1
  3796  0010FA  C016  F031         	movff	?___ftpack+2,?___ftmul+2
  3797  0010FE  0012               	return	
  3798  001100                     __end_of___ftmul:
  3799                           	opt stack 0
  3800                           tblptru	equ	0xFF8
  3801                           tblptrh	equ	0xFF7
  3802                           tblptrl	equ	0xFF6
  3803                           tablat	equ	0xFF5
  3804                           prodh	equ	0xFF4
  3805                           prodl	equ	0xFF3
  3806                           intcon	equ	0xFF2
  3807                           intcon2	equ	0xFF1
  3808                           postinc0	equ	0xFEE
  3809                           wreg	equ	0xFE8
  3810                           postinc1	equ	0xFE6
  3811                           postdec1	equ	0xFE5
  3812                           fsr1h	equ	0xFE2
  3813                           fsr1l	equ	0xFE1
  3814                           postinc2	equ	0xFDE
  3815                           postdec2	equ	0xFDD
  3816                           fsr2h	equ	0xFDA
  3817                           fsr2l	equ	0xFD9
  3818                           status	equ	0xFD8
  3819                           
  3820 ;; *************** function ___ftadd *****************
  3821 ;; Defined at:
  3822 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;  f1              3    0[BANK0 ] float 
  3825 ;;  f2              3    3[BANK0 ] float 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;  exp1            1   11[BANK0 ] unsigned char 
  3828 ;;  exp2            1   10[BANK0 ] unsigned char 
  3829 ;;  sign            1    9[BANK0 ] unsigned char 
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  3    0[BANK0 ] float 
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0, cstack
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3839 ;;      Params:         0       6       0       0       0       0       0
  3840 ;;      Locals:         0       3       0       0       0       0       0
  3841 ;;      Temps:          0       3       0       0       0       0       0
  3842 ;;      Totals:         0      12       0       0       0       0       0
  3843 ;;Total ram usage:       12 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; Hardware stack levels required when called:    5
  3846 ;; This function calls:
  3847 ;;		___ftpack
  3848 ;; This function is called by:
  3849 ;;		_Battery_Filter
  3850 ;;		_Battery_Convert
  3851 ;;		_Temp_Filter
  3852 ;;		_Temp_Convert
  3853 ;;		___ftsub
  3854 ;;		_log
  3855 ;;		_eval_poly
  3856 ;;		_Current_Fault
  3857 ;;		_Current_Filter
  3858 ;;		_Current_Convert
  3859 ;;		_Current_Get
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863                           	psect	text24
  3864  00061E                     __ptext24:
  3865                           	opt stack 0
  3866  00061E                     ___ftadd:
  3867                           	opt stack 22
  3868                           
  3869                           ;incstack = 0
  3870  00061E  0100               	movlb	0	; () banked
  3871  000620  C0D2  F0D6         	movff	___ftadd@f1+2,??___ftadd
  3872  000624  0100               	movlb	0	; () banked
  3873  000626  6BD7               	clrf	(??___ftadd+1)& (0+255),b
  3874  000628  6BD8               	clrf	(??___ftadd+2)& (0+255),b
  3875  00062A  0100               	movlb	0	; () banked
  3876  00062C  35D1               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  3877  00062E  0100               	movlb	0	; () banked
  3878  000630  37D6               	rlcf	??___ftadd& (0+255),f,b
  3879  000632  E301               	bnc	u2231
  3880  000634  81D7               	bsf	(??___ftadd+1)& (0+255),0,b
  3881  000636                     u2231:
  3882  000636  0100               	movlb	0	; () banked
  3883  000638  51D6               	movf	??___ftadd& (0+255),w,b
  3884  00063A  0100               	movlb	0	; () banked
  3885  00063C  6FDB               	movwf	___ftadd@exp1& (0+255),b
  3886  00063E  0100               	movlb	0	; () banked
  3887  000640  C0D5  F0D6         	movff	___ftadd@f2+2,??___ftadd
  3888  000644  0100               	movlb	0	; () banked
  3889  000646  6BD7               	clrf	(??___ftadd+1)& (0+255),b
  3890  000648  6BD8               	clrf	(??___ftadd+2)& (0+255),b
  3891  00064A  0100               	movlb	0	; () banked
  3892  00064C  35D4               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  3893  00064E  0100               	movlb	0	; () banked
  3894  000650  37D6               	rlcf	??___ftadd& (0+255),f,b
  3895  000652  E301               	bnc	u2241
  3896  000654  81D7               	bsf	(??___ftadd+1)& (0+255),0,b
  3897  000656                     u2241:
  3898  000656  0100               	movlb	0	; () banked
  3899  000658  51D6               	movf	??___ftadd& (0+255),w,b
  3900  00065A  0100               	movlb	0	; () banked
  3901  00065C  6FDA               	movwf	___ftadd@exp2& (0+255),b
  3902                           
  3903                           ; BSR set to: 0
  3904  00065E  0100               	movlb	0	; () banked
  3905  000660  51DB               	movf	___ftadd@exp1& (0+255),w,b
  3906  000662  B4D8               	btfsc	status,2,c
  3907  000664  D012               	goto	l800
  3908                           
  3909                           ; BSR set to: 0
  3910  000666  0100               	movlb	0	; () banked
  3911  000668  51DA               	movf	___ftadd@exp2& (0+255),w,b
  3912  00066A  0100               	movlb	0	; () banked
  3913  00066C  5DDB               	subwf	___ftadd@exp1& (0+255),w,b
  3914  00066E  B0D8               	btfsc	status,0,c
  3915  000670  D013               	goto	l2594
  3916                           
  3917                           ; BSR set to: 0
  3918  000672  0100               	movlb	0	; () banked
  3919  000674  51DB               	movf	___ftadd@exp1& (0+255),w,b
  3920  000676  0800               	sublw	0
  3921  000678  0100               	movlb	0	; () banked
  3922  00067A  25DA               	addwf	___ftadd@exp2& (0+255),w,b
  3923  00067C  0100               	movlb	0	; () banked
  3924  00067E  6FD6               	movwf	??___ftadd& (0+255),b
  3925  000680  0E19               	movlw	25
  3926  000682  0100               	movlb	0	; () banked
  3927  000684  5DD6               	subwf	??___ftadd& (0+255),w,b
  3928  000686  A0D8               	btfss	status,0,c
  3929  000688  D007               	goto	l2594
  3930  00068A                     l800:
  3931                           
  3932                           ; BSR set to: 0
  3933  00068A  C0D3  F0D0         	movff	___ftadd@f2,?___ftadd
  3934  00068E  C0D4  F0D1         	movff	___ftadd@f2+1,?___ftadd+1
  3935  000692  C0D5  F0D2         	movff	___ftadd@f2+2,?___ftadd+2
  3936  000696  0012               	return	
  3937  000698                     l2594:
  3938                           
  3939                           ; BSR set to: 0
  3940  000698  0100               	movlb	0	; () banked
  3941  00069A  51DA               	movf	___ftadd@exp2& (0+255),w,b
  3942  00069C  B4D8               	btfsc	status,2,c
  3943  00069E  D012               	goto	l804
  3944                           
  3945                           ; BSR set to: 0
  3946  0006A0  0100               	movlb	0	; () banked
  3947  0006A2  51DB               	movf	___ftadd@exp1& (0+255),w,b
  3948  0006A4  0100               	movlb	0	; () banked
  3949  0006A6  5DDA               	subwf	___ftadd@exp2& (0+255),w,b
  3950  0006A8  B0D8               	btfsc	status,0,c
  3951  0006AA  D013               	goto	l2600
  3952                           
  3953                           ; BSR set to: 0
  3954  0006AC  0100               	movlb	0	; () banked
  3955  0006AE  51DA               	movf	___ftadd@exp2& (0+255),w,b
  3956  0006B0  0800               	sublw	0
  3957  0006B2  0100               	movlb	0	; () banked
  3958  0006B4  25DB               	addwf	___ftadd@exp1& (0+255),w,b
  3959  0006B6  0100               	movlb	0	; () banked
  3960  0006B8  6FD6               	movwf	??___ftadd& (0+255),b
  3961  0006BA  0E19               	movlw	25
  3962  0006BC  0100               	movlb	0	; () banked
  3963  0006BE  5DD6               	subwf	??___ftadd& (0+255),w,b
  3964  0006C0  A0D8               	btfss	status,0,c
  3965  0006C2  D007               	goto	l2600
  3966  0006C4                     l804:
  3967                           
  3968                           ; BSR set to: 0
  3969  0006C4  C0D0  F0D0         	movff	___ftadd@f1,?___ftadd
  3970  0006C8  C0D1  F0D1         	movff	___ftadd@f1+1,?___ftadd+1
  3971  0006CC  C0D2  F0D2         	movff	___ftadd@f1+2,?___ftadd+2
  3972  0006D0  0012               	return	
  3973  0006D2                     l2600:
  3974                           
  3975                           ; BSR set to: 0
  3976  0006D2  0E06               	movlw	6
  3977  0006D4  0100               	movlb	0	; () banked
  3978  0006D6  6FD9               	movwf	___ftadd@sign& (0+255),b
  3979                           
  3980                           ; BSR set to: 0
  3981  0006D8  0100               	movlb	0	; () banked
  3982  0006DA  AFD2               	btfss	(___ftadd@f1+2)& (0+255),7,b
  3983  0006DC  D002               	goto	l2606
  3984                           
  3985                           ; BSR set to: 0
  3986  0006DE  0100               	movlb	0	; () banked
  3987  0006E0  8FD9               	bsf	___ftadd@sign& (0+255),7,b
  3988  0006E2                     l2606:
  3989                           
  3990                           ; BSR set to: 0
  3991  0006E2  0100               	movlb	0	; () banked
  3992  0006E4  AFD5               	btfss	(___ftadd@f2+2)& (0+255),7,b
  3993  0006E6  D002               	goto	l806
  3994                           
  3995                           ; BSR set to: 0
  3996  0006E8  0100               	movlb	0	; () banked
  3997  0006EA  8DD9               	bsf	___ftadd@sign& (0+255),6,b
  3998  0006EC                     l806:
  3999                           
  4000                           ; BSR set to: 0
  4001  0006EC  0100               	movlb	0	; () banked
  4002  0006EE  8FD1               	bsf	(___ftadd@f1+1)& (0+255),7,b
  4003                           
  4004                           ; BSR set to: 0
  4005  0006F0  0EFF               	movlw	255
  4006  0006F2  0100               	movlb	0	; () banked
  4007  0006F4  17D0               	andwf	___ftadd@f1& (0+255),f,b
  4008  0006F6  0EFF               	movlw	255
  4009  0006F8  0100               	movlb	0	; () banked
  4010  0006FA  17D1               	andwf	(___ftadd@f1+1)& (0+255),f,b
  4011  0006FC  0E00               	movlw	0
  4012  0006FE  0100               	movlb	0	; () banked
  4013  000700  17D2               	andwf	(___ftadd@f1+2)& (0+255),f,b
  4014  000702  0100               	movlb	0	; () banked
  4015  000704  8FD4               	bsf	(___ftadd@f2+1)& (0+255),7,b
  4016                           
  4017                           ; BSR set to: 0
  4018  000706  0EFF               	movlw	255
  4019  000708  0100               	movlb	0	; () banked
  4020  00070A  17D3               	andwf	___ftadd@f2& (0+255),f,b
  4021  00070C  0EFF               	movlw	255
  4022  00070E  0100               	movlb	0	; () banked
  4023  000710  17D4               	andwf	(___ftadd@f2+1)& (0+255),f,b
  4024  000712  0E00               	movlw	0
  4025  000714  0100               	movlb	0	; () banked
  4026  000716  17D5               	andwf	(___ftadd@f2+2)& (0+255),f,b
  4027                           
  4028                           ; BSR set to: 0
  4029  000718  0100               	movlb	0	; () banked
  4030  00071A  51DA               	movf	___ftadd@exp2& (0+255),w,b
  4031  00071C  0100               	movlb	0	; () banked
  4032  00071E  5DDB               	subwf	___ftadd@exp1& (0+255),w,b
  4033  000720  B0D8               	btfsc	status,0,c
  4034  000722  D02A               	goto	l2626
  4035  000724                     l2616:
  4036                           
  4037                           ; BSR set to: 0
  4038  000724  0100               	movlb	0	; () banked
  4039  000726  90D8               	bcf	status,0,c
  4040  000728  0100               	movlb	0	; () banked
  4041  00072A  37D3               	rlcf	___ftadd@f2& (0+255),f,b
  4042  00072C  0100               	movlb	0	; () banked
  4043  00072E  37D4               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  4044  000730  0100               	movlb	0	; () banked
  4045  000732  37D5               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  4046  000734  0100               	movlb	0	; () banked
  4047  000736  07DA               	decf	___ftadd@exp2& (0+255),f,b
  4048                           
  4049                           ; BSR set to: 0
  4050  000738  0100               	movlb	0	; () banked
  4051  00073A  51DA               	movf	___ftadd@exp2& (0+255),w,b
  4052  00073C  0100               	movlb	0	; () banked
  4053  00073E  19DB               	xorwf	___ftadd@exp1& (0+255),w,b
  4054  000740  B4D8               	btfsc	status,2,c
  4055  000742  D014               	goto	l2624
  4056                           
  4057                           ; BSR set to: 0
  4058  000744  0100               	movlb	0	; () banked
  4059  000746  07D9               	decf	___ftadd@sign& (0+255),f,b
  4060  000748  C0D9  F0D6         	movff	___ftadd@sign,??___ftadd
  4061  00074C  0E07               	movlw	7
  4062  00074E  0100               	movlb	0	; () banked
  4063  000750  17D6               	andwf	??___ftadd& (0+255),f,b
  4064  000752  B4D8               	btfsc	status,2,c
  4065  000754  D00B               	goto	l2624
  4066  000756  D7E6               	goto	l2616
  4067  000758                     l2622:
  4068                           
  4069                           ; BSR set to: 0
  4070  000758  0100               	movlb	0	; () banked
  4071  00075A  90D8               	bcf	status,0,c
  4072  00075C  0100               	movlb	0	; () banked
  4073  00075E  33D2               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  4074  000760  0100               	movlb	0	; () banked
  4075  000762  33D1               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  4076  000764  0100               	movlb	0	; () banked
  4077  000766  33D0               	rrcf	___ftadd@f1& (0+255),f,b
  4078  000768  0100               	movlb	0	; () banked
  4079  00076A  2BDB               	incf	___ftadd@exp1& (0+255),f,b
  4080  00076C                     l2624:
  4081                           
  4082                           ; BSR set to: 0
  4083  00076C  0100               	movlb	0	; () banked
  4084  00076E  51DA               	movf	___ftadd@exp2& (0+255),w,b
  4085  000770  0100               	movlb	0	; () banked
  4086  000772  63DB               	cpfseq	___ftadd@exp1& (0+255),b
  4087  000774  D7F1               	goto	l2622
  4088  000776  D02F               	goto	l815
  4089  000778                     l2626:
  4090                           
  4091                           ; BSR set to: 0
  4092  000778  0100               	movlb	0	; () banked
  4093  00077A  51DB               	movf	___ftadd@exp1& (0+255),w,b
  4094  00077C  0100               	movlb	0	; () banked
  4095  00077E  5DDA               	subwf	___ftadd@exp2& (0+255),w,b
  4096  000780  B0D8               	btfsc	status,0,c
  4097  000782  D029               	goto	l815
  4098  000784                     l2628:
  4099                           
  4100                           ; BSR set to: 0
  4101  000784  0100               	movlb	0	; () banked
  4102  000786  90D8               	bcf	status,0,c
  4103  000788  0100               	movlb	0	; () banked
  4104  00078A  37D0               	rlcf	___ftadd@f1& (0+255),f,b
  4105  00078C  0100               	movlb	0	; () banked
  4106  00078E  37D1               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  4107  000790  0100               	movlb	0	; () banked
  4108  000792  37D2               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  4109  000794  0100               	movlb	0	; () banked
  4110  000796  07DB               	decf	___ftadd@exp1& (0+255),f,b
  4111                           
  4112                           ; BSR set to: 0
  4113  000798  0100               	movlb	0	; () banked
  4114  00079A  51DA               	movf	___ftadd@exp2& (0+255),w,b
  4115  00079C  0100               	movlb	0	; () banked
  4116  00079E  19DB               	xorwf	___ftadd@exp1& (0+255),w,b
  4117  0007A0  B4D8               	btfsc	status,2,c
  4118  0007A2  D014               	goto	l2636
  4119                           
  4120                           ; BSR set to: 0
  4121  0007A4  0100               	movlb	0	; () banked
  4122  0007A6  07D9               	decf	___ftadd@sign& (0+255),f,b
  4123  0007A8  C0D9  F0D6         	movff	___ftadd@sign,??___ftadd
  4124  0007AC  0E07               	movlw	7
  4125  0007AE  0100               	movlb	0	; () banked
  4126  0007B0  17D6               	andwf	??___ftadd& (0+255),f,b
  4127  0007B2  B4D8               	btfsc	status,2,c
  4128  0007B4  D00B               	goto	l2636
  4129  0007B6  D7E6               	goto	l2628
  4130  0007B8                     l2634:
  4131                           
  4132                           ; BSR set to: 0
  4133  0007B8  0100               	movlb	0	; () banked
  4134  0007BA  90D8               	bcf	status,0,c
  4135  0007BC  0100               	movlb	0	; () banked
  4136  0007BE  33D5               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  4137  0007C0  0100               	movlb	0	; () banked
  4138  0007C2  33D4               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  4139  0007C4  0100               	movlb	0	; () banked
  4140  0007C6  33D3               	rrcf	___ftadd@f2& (0+255),f,b
  4141  0007C8  0100               	movlb	0	; () banked
  4142  0007CA  2BDA               	incf	___ftadd@exp2& (0+255),f,b
  4143  0007CC                     l2636:
  4144                           
  4145                           ; BSR set to: 0
  4146  0007CC  0100               	movlb	0	; () banked
  4147  0007CE  51DA               	movf	___ftadd@exp2& (0+255),w,b
  4148  0007D0  0100               	movlb	0	; () banked
  4149  0007D2  63DB               	cpfseq	___ftadd@exp1& (0+255),b
  4150  0007D4  D7F1               	goto	l2634
  4151  0007D6                     l815:
  4152                           
  4153                           ; BSR set to: 0
  4154  0007D6  0100               	movlb	0	; () banked
  4155  0007D8  AFD9               	btfss	___ftadd@sign& (0+255),7,b
  4156  0007DA  D012               	goto	l824
  4157                           
  4158                           ; BSR set to: 0
  4159  0007DC  0EFF               	movlw	255
  4160  0007DE  0100               	movlb	0	; () banked
  4161  0007E0  1BD0               	xorwf	___ftadd@f1& (0+255),f,b
  4162  0007E2  0EFF               	movlw	255
  4163  0007E4  0100               	movlb	0	; () banked
  4164  0007E6  1BD1               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  4165  0007E8  0EFF               	movlw	255
  4166  0007EA  0100               	movlb	0	; () banked
  4167  0007EC  1BD2               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  4168  0007EE  0E01               	movlw	1
  4169  0007F0  0100               	movlb	0	; () banked
  4170  0007F2  27D0               	addwf	___ftadd@f1& (0+255),f,b
  4171  0007F4  0E00               	movlw	0
  4172  0007F6  0100               	movlb	0	; () banked
  4173  0007F8  23D1               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  4174  0007FA  0E00               	movlw	0
  4175  0007FC  0100               	movlb	0	; () banked
  4176  0007FE  23D2               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  4177  000800                     l824:
  4178                           
  4179                           ; BSR set to: 0
  4180  000800  0100               	movlb	0	; () banked
  4181  000802  ADD9               	btfss	___ftadd@sign& (0+255),6,b
  4182  000804  D012               	goto	l2642
  4183                           
  4184                           ; BSR set to: 0
  4185  000806  0EFF               	movlw	255
  4186  000808  0100               	movlb	0	; () banked
  4187  00080A  1BD3               	xorwf	___ftadd@f2& (0+255),f,b
  4188  00080C  0EFF               	movlw	255
  4189  00080E  0100               	movlb	0	; () banked
  4190  000810  1BD4               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  4191  000812  0EFF               	movlw	255
  4192  000814  0100               	movlb	0	; () banked
  4193  000816  1BD5               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  4194  000818  0E01               	movlw	1
  4195  00081A  0100               	movlb	0	; () banked
  4196  00081C  27D3               	addwf	___ftadd@f2& (0+255),f,b
  4197  00081E  0E00               	movlw	0
  4198  000820  0100               	movlb	0	; () banked
  4199  000822  23D4               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  4200  000824  0E00               	movlw	0
  4201  000826  0100               	movlb	0	; () banked
  4202  000828  23D5               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  4203  00082A                     l2642:
  4204                           
  4205                           ; BSR set to: 0
  4206  00082A  0E00               	movlw	0
  4207  00082C  0100               	movlb	0	; () banked
  4208  00082E  6FD9               	movwf	___ftadd@sign& (0+255),b
  4209                           
  4210                           ; BSR set to: 0
  4211  000830  0100               	movlb	0	; () banked
  4212  000832  51D0               	movf	___ftadd@f1& (0+255),w,b
  4213  000834  0100               	movlb	0	; () banked
  4214  000836  27D3               	addwf	___ftadd@f2& (0+255),f,b
  4215  000838  0100               	movlb	0	; () banked
  4216  00083A  51D1               	movf	(___ftadd@f1+1)& (0+255),w,b
  4217  00083C  0100               	movlb	0	; () banked
  4218  00083E  23D4               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  4219  000840  0100               	movlb	0	; () banked
  4220  000842  51D2               	movf	(___ftadd@f1+2)& (0+255),w,b
  4221  000844  0100               	movlb	0	; () banked
  4222  000846  23D5               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  4223                           
  4224                           ; BSR set to: 0
  4225  000848  0100               	movlb	0	; () banked
  4226  00084A  AFD5               	btfss	(___ftadd@f2+2)& (0+255),7,b
  4227  00084C  D015               	goto	l2652
  4228                           
  4229                           ; BSR set to: 0
  4230  00084E  0EFF               	movlw	255
  4231  000850  0100               	movlb	0	; () banked
  4232  000852  1BD3               	xorwf	___ftadd@f2& (0+255),f,b
  4233  000854  0EFF               	movlw	255
  4234  000856  0100               	movlb	0	; () banked
  4235  000858  1BD4               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  4236  00085A  0EFF               	movlw	255
  4237  00085C  0100               	movlb	0	; () banked
  4238  00085E  1BD5               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  4239  000860  0E01               	movlw	1
  4240  000862  0100               	movlb	0	; () banked
  4241  000864  27D3               	addwf	___ftadd@f2& (0+255),f,b
  4242  000866  0E00               	movlw	0
  4243  000868  0100               	movlb	0	; () banked
  4244  00086A  23D4               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  4245  00086C  0E00               	movlw	0
  4246  00086E  0100               	movlb	0	; () banked
  4247  000870  23D5               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  4248                           
  4249                           ; BSR set to: 0
  4250  000872  0E01               	movlw	1
  4251  000874  0100               	movlb	0	; () banked
  4252  000876  6FD9               	movwf	___ftadd@sign& (0+255),b
  4253  000878                     l2652:
  4254                           
  4255                           ; BSR set to: 0
  4256  000878  C0D3  F014         	movff	___ftadd@f2,___ftpack@arg
  4257  00087C  C0D4  F015         	movff	___ftadd@f2+1,___ftpack@arg+1
  4258  000880  C0D5  F016         	movff	___ftadd@f2+2,___ftpack@arg+2
  4259  000884  C0DB  F017         	movff	___ftadd@exp1,___ftpack@exp
  4260  000888  C0D9  F018         	movff	___ftadd@sign,___ftpack@sign
  4261  00088C  ECBC  F009         	call	___ftpack	;wreg free
  4262  000890  C014  F0D0         	movff	?___ftpack,?___ftadd
  4263  000894  C015  F0D1         	movff	?___ftpack+1,?___ftadd+1
  4264  000898  C016  F0D2         	movff	?___ftpack+2,?___ftadd+2
  4265  00089C  0012               	return	
  4266  00089E                     __end_of___ftadd:
  4267                           	opt stack 0
  4268                           tblptru	equ	0xFF8
  4269                           tblptrh	equ	0xFF7
  4270                           tblptrl	equ	0xFF6
  4271                           tablat	equ	0xFF5
  4272                           prodh	equ	0xFF4
  4273                           prodl	equ	0xFF3
  4274                           intcon	equ	0xFF2
  4275                           intcon2	equ	0xFF1
  4276                           postinc0	equ	0xFEE
  4277                           wreg	equ	0xFE8
  4278                           postinc1	equ	0xFE6
  4279                           postdec1	equ	0xFE5
  4280                           fsr1h	equ	0xFE2
  4281                           fsr1l	equ	0xFE1
  4282                           postinc2	equ	0xFDE
  4283                           postdec2	equ	0xFDD
  4284                           fsr2h	equ	0xFDA
  4285                           fsr2l	equ	0xFD9
  4286                           status	equ	0xFD8
  4287                           
  4288 ;; *************** function ___ftpack *****************
  4289 ;; Defined at:
  4290 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;  arg             3   19[COMRAM] unsigned um
  4293 ;;  exp             1   22[COMRAM] unsigned char 
  4294 ;;  sign            1   23[COMRAM] unsigned char 
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;		None
  4297 ;; Return value:  Size  Location     Type
  4298 ;;                  3   19[COMRAM] float 
  4299 ;; Registers used:
  4300 ;;		wreg, status,2, status,0
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4306 ;;      Params:         5       0       0       0       0       0       0
  4307 ;;      Locals:         0       0       0       0       0       0       0
  4308 ;;      Temps:          3       0       0       0       0       0       0
  4309 ;;      Totals:         8       0       0       0       0       0       0
  4310 ;;Total ram usage:        8 bytes
  4311 ;; Hardware stack levels used:    1
  4312 ;; Hardware stack levels required when called:    4
  4313 ;; This function calls:
  4314 ;;		Nothing
  4315 ;; This function is called by:
  4316 ;;		___awtoft
  4317 ;;		___ftadd
  4318 ;;		___ftdiv
  4319 ;;		___ftmul
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           	psect	text25
  4324  001378                     __ptext25:
  4325                           	opt stack 0
  4326  001378                     ___ftpack:
  4327                           	opt stack 22
  4328                           
  4329                           ;incstack = 0
  4330  001378  5017               	movf	___ftpack@exp,w,c
  4331  00137A  B4D8               	btfsc	status,2,c
  4332  00137C  D005               	goto	l2550
  4333  00137E  5014               	movf	___ftpack@arg,w,c
  4334  001380  1015               	iorwf	___ftpack@arg+1,w,c
  4335  001382  1016               	iorwf	___ftpack@arg+2,w,c
  4336  001384  A4D8               	btfss	status,2,c
  4337  001386  D00C               	goto	l2556
  4338  001388                     l2550:
  4339  001388  0E00               	movlw	0
  4340  00138A  6E14               	movwf	?___ftpack,c
  4341  00138C  0E00               	movlw	0
  4342  00138E  6E15               	movwf	?___ftpack+1,c
  4343  001390  0E00               	movlw	0
  4344  001392  6E16               	movwf	?___ftpack+2,c
  4345  001394  0012               	return	
  4346  001396                     l2554:
  4347  001396  2A17               	incf	___ftpack@exp,f,c
  4348  001398  90D8               	bcf	status,0,c
  4349  00139A  3216               	rrcf	___ftpack@arg+2,f,c
  4350  00139C  3215               	rrcf	___ftpack@arg+1,f,c
  4351  00139E  3214               	rrcf	___ftpack@arg,f,c
  4352  0013A0                     l2556:
  4353  0013A0  0E00               	movlw	0
  4354  0013A2  1414               	andwf	___ftpack@arg,w,c
  4355  0013A4  6E19               	movwf	??___ftpack& (0+255),c
  4356  0013A6  0E00               	movlw	0
  4357  0013A8  1415               	andwf	___ftpack@arg+1,w,c
  4358  0013AA  6E1A               	movwf	(??___ftpack+1)& (0+255),c
  4359  0013AC  0EFE               	movlw	254
  4360  0013AE  1416               	andwf	___ftpack@arg+2,w,c
  4361  0013B0  6E1B               	movwf	(??___ftpack+2)& (0+255),c
  4362  0013B2  5019               	movf	??___ftpack,w,c
  4363  0013B4  101A               	iorwf	??___ftpack+1,w,c
  4364  0013B6  101B               	iorwf	??___ftpack+2,w,c
  4365  0013B8  B4D8               	btfsc	status,2,c
  4366  0013BA  D00C               	goto	l2562
  4367  0013BC  D7EC               	goto	l2554
  4368  0013BE                     l2558:
  4369  0013BE  2A17               	incf	___ftpack@exp,f,c
  4370  0013C0  0E01               	movlw	1
  4371  0013C2  2614               	addwf	___ftpack@arg,f,c
  4372  0013C4  0E00               	movlw	0
  4373  0013C6  2215               	addwfc	___ftpack@arg+1,f,c
  4374  0013C8  0E00               	movlw	0
  4375  0013CA  2216               	addwfc	___ftpack@arg+2,f,c
  4376  0013CC  90D8               	bcf	status,0,c
  4377  0013CE  3216               	rrcf	___ftpack@arg+2,f,c
  4378  0013D0  3215               	rrcf	___ftpack@arg+1,f,c
  4379  0013D2  3214               	rrcf	___ftpack@arg,f,c
  4380  0013D4                     l2562:
  4381  0013D4  0E00               	movlw	0
  4382  0013D6  1414               	andwf	___ftpack@arg,w,c
  4383  0013D8  6E19               	movwf	??___ftpack& (0+255),c
  4384  0013DA  0E00               	movlw	0
  4385  0013DC  1415               	andwf	___ftpack@arg+1,w,c
  4386  0013DE  6E1A               	movwf	(??___ftpack+1)& (0+255),c
  4387  0013E0  0EFF               	movlw	255
  4388  0013E2  1416               	andwf	___ftpack@arg+2,w,c
  4389  0013E4  6E1B               	movwf	(??___ftpack+2)& (0+255),c
  4390  0013E6  5019               	movf	??___ftpack,w,c
  4391  0013E8  101A               	iorwf	??___ftpack+1,w,c
  4392  0013EA  101B               	iorwf	??___ftpack+2,w,c
  4393  0013EC  B4D8               	btfsc	status,2,c
  4394  0013EE  D006               	goto	l2566
  4395  0013F0  D7E6               	goto	l2558
  4396  0013F2                     l2564:
  4397  0013F2  0617               	decf	___ftpack@exp,f,c
  4398  0013F4  90D8               	bcf	status,0,c
  4399  0013F6  3614               	rlcf	___ftpack@arg,f,c
  4400  0013F8  3615               	rlcf	___ftpack@arg+1,f,c
  4401  0013FA  3616               	rlcf	___ftpack@arg+2,f,c
  4402  0013FC                     l2566:
  4403  0013FC  AE15               	btfss	___ftpack@arg+1,7,c
  4404  0013FE  D7F9               	goto	l2564
  4405  001400  A017               	btfss	___ftpack@exp,0,c
  4406  001402  9E15               	bcf	___ftpack@arg+1,7,c
  4407  001404  90D8               	bcf	status,0,c
  4408  001406  3217               	rrcf	___ftpack@exp,f,c
  4409  001408  5017               	movf	___ftpack@exp,w,c
  4410  00140A  1216               	iorwf	___ftpack@arg+2,f,c
  4411  00140C  5018               	movf	___ftpack@sign,w,c
  4412  00140E  A4D8               	btfss	status,2,c
  4413  001410  8E16               	bsf	___ftpack@arg+2,7,c
  4414  001412  C014  F014         	movff	___ftpack@arg,?___ftpack
  4415  001416  C015  F015         	movff	___ftpack@arg+1,?___ftpack+1
  4416  00141A  C016  F016         	movff	___ftpack@arg+2,?___ftpack+2
  4417  00141E  0012               	return	
  4418  001420                     __end_of___ftpack:
  4419                           	opt stack 0
  4420                           tblptru	equ	0xFF8
  4421                           tblptrh	equ	0xFF7
  4422                           tblptrl	equ	0xFF6
  4423                           tablat	equ	0xFF5
  4424                           prodh	equ	0xFF4
  4425                           prodl	equ	0xFF3
  4426                           intcon	equ	0xFF2
  4427                           intcon2	equ	0xFF1
  4428                           postinc0	equ	0xFEE
  4429                           wreg	equ	0xFE8
  4430                           postinc1	equ	0xFE6
  4431                           postdec1	equ	0xFE5
  4432                           fsr1h	equ	0xFE2
  4433                           fsr1l	equ	0xFE1
  4434                           postinc2	equ	0xFDE
  4435                           postdec2	equ	0xFDD
  4436                           fsr2h	equ	0xFDA
  4437                           fsr2l	equ	0xFD9
  4438                           status	equ	0xFD8
  4439                           
  4440 ;; *************** function _INTERRUPT_InterruptManager *****************
  4441 ;; Defined at:
  4442 ;;		line 69 in file "mcc_generated_files/interrupt_manager.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;		None
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;		None
  4447 ;; Return value:  Size  Location     Type
  4448 ;;		None               void
  4449 ;; Registers used:
  4450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4451 ;; Tracked objects:
  4452 ;;		On entry : 0/0
  4453 ;;		On exit  : 0/0
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4456 ;;      Params:         0       0       0       0       0       0       0
  4457 ;;      Locals:         0       0       0       0       0       0       0
  4458 ;;      Temps:         14       0       0       0       0       0       0
  4459 ;;      Totals:        14       0       0       0       0       0       0
  4460 ;;Total ram usage:       14 bytes
  4461 ;; Hardware stack levels used:    1
  4462 ;; Hardware stack levels required when called:    3
  4463 ;; This function calls:
  4464 ;;		_ADC_ISR
  4465 ;;		_EUSART1_Receive_ISR
  4466 ;;		_EUSART1_Transmit_ISR
  4467 ;;		_TMR1_ISR
  4468 ;; This function is called by:
  4469 ;;		Interrupt level 2
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472                           
  4473                           	psect	intcode
  4474  000008                     __pintcode:
  4475                           	opt stack 0
  4476  000008                     _INTERRUPT_InterruptManager:
  4477                           	opt stack 22
  4478                           
  4479                           ;incstack = 0
  4480  000008  CFFA F006          	movff	pclath,??_INTERRUPT_InterruptManager
  4481  00000C  CFFB F007          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4482  000010  CFE9 F008          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  4483  000014  CFEA F009          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  4484  000018  CFE1 F00A          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  4485  00001C  CFE2 F00B          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  4486  000020  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  4487  000024  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  4488  000028  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+8
  4489  00002C  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+9
  4490  000030  CFF6 F010          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  4491  000034  CFF7 F011          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  4492  000038  CFF8 F012          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  4493  00003C  CFF5 F013          	movff	tablat,??_INTERRUPT_InterruptManager+13
  4494                           
  4495                           ;interrupt_manager.c: 72: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  4496  000040  BA9D               	btfsc	3997,5,c	;volatile
  4497  000042  AA9E               	btfss	3998,5,c	;volatile
  4498  000044  D003               	goto	i2l238
  4499                           
  4500                           ;interrupt_manager.c: 73: {
  4501                           ;interrupt_manager.c: 74: EUSART1_Receive_ISR();
  4502  000046  ECBB  F00B         	call	_EUSART1_Receive_ISR	;wreg free
  4503                           
  4504                           ;interrupt_manager.c: 75: }
  4505  00004A  D011               	goto	i2l246
  4506  00004C                     i2l238:
  4507                           
  4508                           ;interrupt_manager.c: 76: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  4509  00004C  BC9D               	btfsc	3997,6,c	;volatile
  4510  00004E  AC9E               	btfss	3998,6,c	;volatile
  4511  000050  D003               	goto	i2l240
  4512                           
  4513                           ;interrupt_manager.c: 77: {
  4514                           ;interrupt_manager.c: 78: ADC_ISR();
  4515  000052  EC67  F00C         	call	_ADC_ISR	;wreg free
  4516                           
  4517                           ;interrupt_manager.c: 79: }
  4518  000056  D00B               	goto	i2l246
  4519  000058                     i2l240:
  4520                           
  4521                           ;interrupt_manager.c: 80: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  4522  000058  B89D               	btfsc	3997,4,c	;volatile
  4523  00005A  A89E               	btfss	3998,4,c	;volatile
  4524  00005C  D003               	goto	i2l242
  4525                           
  4526                           ;interrupt_manager.c: 81: {
  4527                           ;interrupt_manager.c: 82: EUSART1_Transmit_ISR();
  4528  00005E  EC88  F00B         	call	_EUSART1_Transmit_ISR	;wreg free
  4529                           
  4530                           ;interrupt_manager.c: 83: }
  4531  000062  D005               	goto	i2l246
  4532  000064                     i2l242:
  4533                           
  4534                           ;interrupt_manager.c: 84: else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  4535  000064  B09D               	btfsc	3997,0,c	;volatile
  4536  000066  A09E               	btfss	3998,0,c	;volatile
  4537  000068  D002               	goto	i2l246
  4538                           
  4539                           ;interrupt_manager.c: 85: {
  4540                           ;interrupt_manager.c: 86: TMR1_ISR();
  4541  00006A  ECD6  F00A         	call	_TMR1_ISR	;wreg free
  4542  00006E                     i2l246:
  4543  00006E  C013  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  4544  000072  C012  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  4545  000076  C011  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  4546  00007A  C010  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  4547  00007E  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4548  000082  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4549  000086  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4550  00008A  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4551  00008E  C00B  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4552  000092  C00A  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4553  000096  C009  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4554  00009A  C008  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4555  00009E  C007  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4556  0000A2  C006  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4557  0000A6  0011               	retfie		f
  4558  0000A8                     __end_of_INTERRUPT_InterruptManager:
  4559                           	opt stack 0
  4560                           pclatu	equ	0xFFB
  4561                           pclath	equ	0xFFA
  4562                           tblptru	equ	0xFF8
  4563                           tblptrh	equ	0xFF7
  4564                           tblptrl	equ	0xFF6
  4565                           tablat	equ	0xFF5
  4566                           prodh	equ	0xFF4
  4567                           prodl	equ	0xFF3
  4568                           intcon	equ	0xFF2
  4569                           intcon2	equ	0xFF1
  4570                           postinc0	equ	0xFEE
  4571                           fsr0h	equ	0xFEA
  4572                           fsr0l	equ	0xFE9
  4573                           wreg	equ	0xFE8
  4574                           postinc1	equ	0xFE6
  4575                           postdec1	equ	0xFE5
  4576                           fsr1h	equ	0xFE2
  4577                           fsr1l	equ	0xFE1
  4578                           postinc2	equ	0xFDE
  4579                           postdec2	equ	0xFDD
  4580                           fsr2h	equ	0xFDA
  4581                           fsr2l	equ	0xFD9
  4582                           status	equ	0xFD8
  4583                           
  4584 ;; *************** function _TMR1_ISR *****************
  4585 ;; Defined at:
  4586 ;;		line 115 in file "mcc_generated_files/tmr1.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;		None
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;		None
  4591 ;; Return value:  Size  Location     Type
  4592 ;;		None               void
  4593 ;; Registers used:
  4594 ;;		wreg, status,2, status,0, cstack
  4595 ;; Tracked objects:
  4596 ;;		On entry : 0/0
  4597 ;;		On exit  : 0/0
  4598 ;;		Unchanged: 0/0
  4599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4600 ;;      Params:         0       0       0       0       0       0       0
  4601 ;;      Locals:         0       0       0       0       0       0       0
  4602 ;;      Temps:          3       0       0       0       0       0       0
  4603 ;;      Totals:         3       0       0       0       0       0       0
  4604 ;;Total ram usage:        3 bytes
  4605 ;; Hardware stack levels used:    1
  4606 ;; Hardware stack levels required when called:    2
  4607 ;; This function calls:
  4608 ;;		_Battery_Read
  4609 ;;		_Current_Read
  4610 ;;		_TMR1_CallBack
  4611 ;;		_Temp_Read
  4612 ;; This function is called by:
  4613 ;;		_INTERRUPT_InterruptManager
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           	psect	text27
  4618  0015AC                     __ptext27:
  4619                           	opt stack 0
  4620  0015AC                     _TMR1_ISR:
  4621                           	opt stack 22
  4622                           
  4623                           ;tmr1.c: 117: static volatile unsigned int CountCallBack = 0;
  4624                           ;tmr1.c: 120: PIR1bits.TMR1IF = 0;
  4625                           
  4626                           ;incstack = 0
  4627  0015AC  909E               	bcf	3998,0,c	;volatile
  4628                           
  4629                           ;tmr1.c: 123: TMR1H = (timer1ReloadVal >> 8);
  4630  0015AE  C04B  F003         	movff	_timer1ReloadVal+1,??_TMR1_ISR	;volatile
  4631  0015B2  C003  F004         	movff	??_TMR1_ISR,??_TMR1_ISR+1
  4632  0015B6  6A05               	clrf	(??_TMR1_ISR+2)& (0+255),c
  4633  0015B8  5004               	movf	??_TMR1_ISR+1,w,c
  4634  0015BA  6ECF               	movwf	4047,c	;volatile
  4635                           
  4636                           ;tmr1.c: 124: TMR1L = (uint8_t) timer1ReloadVal;
  4637  0015BC  C04A  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  4638                           
  4639                           ;tmr1.c: 127: if (++CountCallBack >= 4)
  4640  0015C0  4A3E               	infsnz	TMR1_ISR@CountCallBack,f,c	;volatile
  4641  0015C2  2A3F               	incf	TMR1_ISR@CountCallBack+1,f,c	;volatile
  4642  0015C4  0E04               	movlw	4
  4643  0015C6  5C3E               	subwf	TMR1_ISR@CountCallBack& (0+255),w,c	;volatile
  4644  0015C8  0E00               	movlw	0
  4645  0015CA  583F               	subwfb	(TMR1_ISR@CountCallBack+1)& (0+255),w,c	;volatile
  4646  0015CC  A0D8               	btfss	status,0,c
  4647  0015CE  D006               	goto	i2l1494
  4648                           
  4649                           ;tmr1.c: 128: {
  4650                           ;tmr1.c: 130: TMR1_CallBack();
  4651  0015D0  EC69  F00C         	call	_TMR1_CallBack	;wreg free
  4652                           
  4653                           ;tmr1.c: 133: CountCallBack = 0;
  4654  0015D4  0E00               	movlw	0
  4655  0015D6  6E3F               	movwf	TMR1_ISR@CountCallBack+1,c	;volatile
  4656  0015D8  0E00               	movlw	0
  4657  0015DA  6E3E               	movwf	TMR1_ISR@CountCallBack,c	;volatile
  4658  0015DC                     i2l1494:
  4659                           
  4660                           ;tmr1.c: 134: }
  4661                           ;tmr1.c: 135: if(CountCallBack == 1)
  4662  0015DC  043E               	decf	TMR1_ISR@CountCallBack,w,c	;volatile
  4663  0015DE  103F               	iorwf	TMR1_ISR@CountCallBack+1,w,c	;volatile
  4664  0015E0  B4D8               	btfsc	status,2,c
  4665                           
  4666                           ;tmr1.c: 136: {
  4667                           ;tmr1.c: 137: Current_Read();
  4668  0015E2  EC40  F00C         	call	_Current_Read	;wreg free
  4669                           
  4670                           ;tmr1.c: 138: }
  4671                           ;tmr1.c: 139: if(CountCallBack == 2)
  4672  0015E6  503E               	movf	TMR1_ISR@CountCallBack,w,c	;volatile
  4673  0015E8  0A02               	xorlw	2
  4674  0015EA  103F               	iorwf	TMR1_ISR@CountCallBack+1,w,c	;volatile
  4675  0015EC  B4D8               	btfsc	status,2,c
  4676                           
  4677                           ;tmr1.c: 140: {
  4678                           ;tmr1.c: 141: Battery_Read();
  4679  0015EE  EC4C  F00C         	call	_Battery_Read	;wreg free
  4680                           
  4681                           ;tmr1.c: 142: }
  4682                           ;tmr1.c: 143: if(CountCallBack == 3)
  4683  0015F2  503E               	movf	TMR1_ISR@CountCallBack,w,c	;volatile
  4684  0015F4  0A03               	xorlw	3
  4685  0015F6  103F               	iorwf	TMR1_ISR@CountCallBack+1,w,c	;volatile
  4686  0015F8  A4D8               	btfss	status,2,c
  4687  0015FA  0012               	return	
  4688                           
  4689                           ;tmr1.c: 144: {
  4690                           ;tmr1.c: 145: Temp_Read();
  4691  0015FC  EC34  F00C         	call	_Temp_Read	;wreg free
  4692  001600  0012               	return	
  4693  001602                     __end_of_TMR1_ISR:
  4694                           	opt stack 0
  4695                           pclatu	equ	0xFFB
  4696                           pclath	equ	0xFFA
  4697                           tblptru	equ	0xFF8
  4698                           tblptrh	equ	0xFF7
  4699                           tblptrl	equ	0xFF6
  4700                           tablat	equ	0xFF5
  4701                           prodh	equ	0xFF4
  4702                           prodl	equ	0xFF3
  4703                           intcon	equ	0xFF2
  4704                           intcon2	equ	0xFF1
  4705                           postinc0	equ	0xFEE
  4706                           fsr0h	equ	0xFEA
  4707                           fsr0l	equ	0xFE9
  4708                           wreg	equ	0xFE8
  4709                           postinc1	equ	0xFE6
  4710                           postdec1	equ	0xFE5
  4711                           fsr1h	equ	0xFE2
  4712                           fsr1l	equ	0xFE1
  4713                           postinc2	equ	0xFDE
  4714                           postdec2	equ	0xFDD
  4715                           fsr2h	equ	0xFDA
  4716                           fsr2l	equ	0xFD9
  4717                           status	equ	0xFD8
  4718                           
  4719 ;; *************** function _Temp_Read *****************
  4720 ;; Defined at:
  4721 ;;		line 27 in file "Tempeture.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;		None
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;		None
  4726 ;; Return value:  Size  Location     Type
  4727 ;;		None               void
  4728 ;; Registers used:
  4729 ;;		wreg, status,2, status,0, cstack
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/0
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4735 ;;      Params:         0       0       0       0       0       0       0
  4736 ;;      Locals:         0       0       0       0       0       0       0
  4737 ;;      Temps:          0       0       0       0       0       0       0
  4738 ;;      Totals:         0       0       0       0       0       0       0
  4739 ;;Total ram usage:        0 bytes
  4740 ;; Hardware stack levels used:    1
  4741 ;; Hardware stack levels required when called:    1
  4742 ;; This function calls:
  4743 ;;		_ADC_StartConversion
  4744 ;; This function is called by:
  4745 ;;		_TMR1_ISR
  4746 ;; This function uses a non-reentrant model
  4747 ;;
  4748                           
  4749                           	psect	text28
  4750  001868                     __ptext28:
  4751                           	opt stack 0
  4752  001868                     _Temp_Read:
  4753                           	opt stack 22
  4754                           
  4755                           ;Tempeture.c: 30: ADC_Buffer_Point = 0;
  4756                           
  4757                           ;incstack = 0
  4758  001868  0E00               	movlw	0
  4759  00186A  6E41               	movwf	_ADC_Buffer_Point+1,c
  4760  00186C  0E00               	movlw	0
  4761  00186E  6E40               	movwf	_ADC_Buffer_Point,c
  4762                           
  4763                           ;Tempeture.c: 31: Temp_Aquire = 1;
  4764  001870  0E01               	movlw	1
  4765  001872  6E43               	movwf	_Temp_Aquire,c
  4766                           
  4767                           ;Tempeture.c: 32: ADCON1 = 0x80;
  4768  001874  0E80               	movlw	128
  4769  001876  6EC1               	movwf	4033,c	;volatile
  4770                           
  4771                           ;Tempeture.c: 33: ADC_StartConversion(Temp1);
  4772  001878  0E0E               	movlw	14
  4773  00187A  EC1B  F00C         	call	_ADC_StartConversion
  4774  00187E  0012               	return	
  4775  001880                     __end_of_Temp_Read:
  4776                           	opt stack 0
  4777                           pclatu	equ	0xFFB
  4778                           pclath	equ	0xFFA
  4779                           tblptru	equ	0xFF8
  4780                           tblptrh	equ	0xFF7
  4781                           tblptrl	equ	0xFF6
  4782                           tablat	equ	0xFF5
  4783                           prodh	equ	0xFF4
  4784                           prodl	equ	0xFF3
  4785                           intcon	equ	0xFF2
  4786                           intcon2	equ	0xFF1
  4787                           postinc0	equ	0xFEE
  4788                           fsr0h	equ	0xFEA
  4789                           fsr0l	equ	0xFE9
  4790                           wreg	equ	0xFE8
  4791                           postinc1	equ	0xFE6
  4792                           postdec1	equ	0xFE5
  4793                           fsr1h	equ	0xFE2
  4794                           fsr1l	equ	0xFE1
  4795                           postinc2	equ	0xFDE
  4796                           postdec2	equ	0xFDD
  4797                           fsr2h	equ	0xFDA
  4798                           fsr2l	equ	0xFD9
  4799                           status	equ	0xFD8
  4800                           
  4801 ;; *************** function _TMR1_CallBack *****************
  4802 ;; Defined at:
  4803 ;;		line 151 in file "mcc_generated_files/tmr1.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;		None
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;		None
  4808 ;; Return value:  Size  Location     Type
  4809 ;;		None               void
  4810 ;; Registers used:
  4811 ;;		None
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4817 ;;      Params:         0       0       0       0       0       0       0
  4818 ;;      Locals:         0       0       0       0       0       0       0
  4819 ;;      Temps:          0       0       0       0       0       0       0
  4820 ;;      Totals:         0       0       0       0       0       0       0
  4821 ;;Total ram usage:        0 bytes
  4822 ;; Hardware stack levels used:    1
  4823 ;; This function calls:
  4824 ;;		Nothing
  4825 ;; This function is called by:
  4826 ;;		_TMR1_ISR
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           
  4830                           	psect	text29
  4831  0018D2                     __ptext29:
  4832                           	opt stack 0
  4833  0018D2                     _TMR1_CallBack:
  4834                           	opt stack 23
  4835                           
  4836                           ;incstack = 0
  4837  0018D2  0012               	return	
  4838  0018D4                     __end_of_TMR1_CallBack:
  4839                           	opt stack 0
  4840                           pclatu	equ	0xFFB
  4841                           pclath	equ	0xFFA
  4842                           tblptru	equ	0xFF8
  4843                           tblptrh	equ	0xFF7
  4844                           tblptrl	equ	0xFF6
  4845                           tablat	equ	0xFF5
  4846                           prodh	equ	0xFF4
  4847                           prodl	equ	0xFF3
  4848                           intcon	equ	0xFF2
  4849                           intcon2	equ	0xFF1
  4850                           postinc0	equ	0xFEE
  4851                           fsr0h	equ	0xFEA
  4852                           fsr0l	equ	0xFE9
  4853                           wreg	equ	0xFE8
  4854                           postinc1	equ	0xFE6
  4855                           postdec1	equ	0xFE5
  4856                           fsr1h	equ	0xFE2
  4857                           fsr1l	equ	0xFE1
  4858                           postinc2	equ	0xFDE
  4859                           postdec2	equ	0xFDD
  4860                           fsr2h	equ	0xFDA
  4861                           fsr2l	equ	0xFD9
  4862                           status	equ	0xFD8
  4863                           
  4864 ;; *************** function _Current_Read *****************
  4865 ;; Defined at:
  4866 ;;		line 30 in file "Current.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;		None
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;		None
  4871 ;; Return value:  Size  Location     Type
  4872 ;;		None               void
  4873 ;; Registers used:
  4874 ;;		wreg, status,2, status,0, cstack
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4880 ;;      Params:         0       0       0       0       0       0       0
  4881 ;;      Locals:         0       0       0       0       0       0       0
  4882 ;;      Temps:          0       0       0       0       0       0       0
  4883 ;;      Totals:         0       0       0       0       0       0       0
  4884 ;;Total ram usage:        0 bytes
  4885 ;; Hardware stack levels used:    1
  4886 ;; Hardware stack levels required when called:    1
  4887 ;; This function calls:
  4888 ;;		_ADC_StartConversion
  4889 ;; This function is called by:
  4890 ;;		_TMR1_ISR
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text30
  4895  001880                     __ptext30:
  4896                           	opt stack 0
  4897  001880                     _Current_Read:
  4898                           	opt stack 22
  4899                           
  4900                           ;Current.c: 33: ADC_Buffer_Point = 0;
  4901                           
  4902                           ;incstack = 0
  4903  001880  0E00               	movlw	0
  4904  001882  6E41               	movwf	_ADC_Buffer_Point+1,c
  4905  001884  0E00               	movlw	0
  4906  001886  6E40               	movwf	_ADC_Buffer_Point,c
  4907                           
  4908                           ;Current.c: 34: Current_Aquire = 1;
  4909  001888  0E01               	movlw	1
  4910  00188A  6E42               	movwf	_Current_Aquire,c
  4911                           
  4912                           ;Current.c: 35: ADCON1 = 0x80;
  4913  00188C  0E80               	movlw	128
  4914  00188E  6EC1               	movwf	4033,c	;volatile
  4915                           
  4916                           ;Current.c: 36: ADC_StartConversion(Asen);
  4917  001890  0E0B               	movlw	11
  4918  001892  EC1B  F00C         	call	_ADC_StartConversion
  4919  001896  0012               	return	
  4920  001898                     __end_of_Current_Read:
  4921                           	opt stack 0
  4922                           pclatu	equ	0xFFB
  4923                           pclath	equ	0xFFA
  4924                           tblptru	equ	0xFF8
  4925                           tblptrh	equ	0xFF7
  4926                           tblptrl	equ	0xFF6
  4927                           tablat	equ	0xFF5
  4928                           prodh	equ	0xFF4
  4929                           prodl	equ	0xFF3
  4930                           intcon	equ	0xFF2
  4931                           intcon2	equ	0xFF1
  4932                           postinc0	equ	0xFEE
  4933                           fsr0h	equ	0xFEA
  4934                           fsr0l	equ	0xFE9
  4935                           wreg	equ	0xFE8
  4936                           postinc1	equ	0xFE6
  4937                           postdec1	equ	0xFE5
  4938                           fsr1h	equ	0xFE2
  4939                           fsr1l	equ	0xFE1
  4940                           postinc2	equ	0xFDE
  4941                           postdec2	equ	0xFDD
  4942                           fsr2h	equ	0xFDA
  4943                           fsr2l	equ	0xFD9
  4944                           status	equ	0xFD8
  4945                           
  4946 ;; *************** function _Battery_Read *****************
  4947 ;; Defined at:
  4948 ;;		line 24 in file "Battery.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;		None
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;		None
  4953 ;; Return value:  Size  Location     Type
  4954 ;;		None               void
  4955 ;; Registers used:
  4956 ;;		wreg, status,2, status,0, cstack
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4962 ;;      Params:         0       0       0       0       0       0       0
  4963 ;;      Locals:         0       0       0       0       0       0       0
  4964 ;;      Temps:          0       0       0       0       0       0       0
  4965 ;;      Totals:         0       0       0       0       0       0       0
  4966 ;;Total ram usage:        0 bytes
  4967 ;; Hardware stack levels used:    1
  4968 ;; Hardware stack levels required when called:    1
  4969 ;; This function calls:
  4970 ;;		_ADC_StartConversion
  4971 ;; This function is called by:
  4972 ;;		_TMR1_ISR
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text31
  4977  001898                     __ptext31:
  4978                           	opt stack 0
  4979  001898                     _Battery_Read:
  4980                           	opt stack 22
  4981                           
  4982                           ;Battery.c: 27: ADC_Buffer_Point = 0;
  4983                           
  4984                           ;incstack = 0
  4985  001898  0E00               	movlw	0
  4986  00189A  6E41               	movwf	_ADC_Buffer_Point+1,c
  4987  00189C  0E00               	movlw	0
  4988  00189E  6E40               	movwf	_ADC_Buffer_Point,c
  4989                           
  4990                           ;Battery.c: 28: Volt_Aquire = 1;
  4991  0018A0  0E01               	movlw	1
  4992  0018A2  6E44               	movwf	_Volt_Aquire,c
  4993                           
  4994                           ;Battery.c: 29: ADCON1 = 0x81;
  4995  0018A4  0E81               	movlw	129
  4996  0018A6  6EC1               	movwf	4033,c	;volatile
  4997                           
  4998                           ;Battery.c: 30: ADC_StartConversion(AN_CELL1);
  4999  0018A8  0E07               	movlw	7
  5000  0018AA  EC1B  F00C         	call	_ADC_StartConversion
  5001  0018AE  0012               	return	
  5002  0018B0                     __end_of_Battery_Read:
  5003                           	opt stack 0
  5004                           pclatu	equ	0xFFB
  5005                           pclath	equ	0xFFA
  5006                           tblptru	equ	0xFF8
  5007                           tblptrh	equ	0xFF7
  5008                           tblptrl	equ	0xFF6
  5009                           tablat	equ	0xFF5
  5010                           prodh	equ	0xFF4
  5011                           prodl	equ	0xFF3
  5012                           intcon	equ	0xFF2
  5013                           intcon2	equ	0xFF1
  5014                           postinc0	equ	0xFEE
  5015                           fsr0h	equ	0xFEA
  5016                           fsr0l	equ	0xFE9
  5017                           wreg	equ	0xFE8
  5018                           postinc1	equ	0xFE6
  5019                           postdec1	equ	0xFE5
  5020                           fsr1h	equ	0xFE2
  5021                           fsr1l	equ	0xFE1
  5022                           postinc2	equ	0xFDE
  5023                           postdec2	equ	0xFDD
  5024                           fsr2h	equ	0xFDA
  5025                           fsr2l	equ	0xFD9
  5026                           status	equ	0xFD8
  5027                           
  5028 ;; *************** function _ADC_StartConversion *****************
  5029 ;; Defined at:
  5030 ;;		line 82 in file "mcc_generated_files/adc.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  channel         1    wreg     enum E8837
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;  channel         1    1[COMRAM] enum E8837
  5035 ;; Return value:  Size  Location     Type
  5036 ;;		None               void
  5037 ;; Registers used:
  5038 ;;		wreg, status,2, status,0
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5044 ;;      Params:         0       0       0       0       0       0       0
  5045 ;;      Locals:         1       0       0       0       0       0       0
  5046 ;;      Temps:          1       0       0       0       0       0       0
  5047 ;;      Totals:         2       0       0       0       0       0       0
  5048 ;;Total ram usage:        2 bytes
  5049 ;; Hardware stack levels used:    1
  5050 ;; This function calls:
  5051 ;;		Nothing
  5052 ;; This function is called by:
  5053 ;;		_Battery_Read
  5054 ;;		_Temp_Read
  5055 ;;		_Current_Read
  5056 ;; This function uses a non-reentrant model
  5057 ;;
  5058                           
  5059                           	psect	text32
  5060  001836                     __ptext32:
  5061                           	opt stack 0
  5062  001836                     _ADC_StartConversion:
  5063                           	opt stack 22
  5064                           
  5065                           ;incstack = 0
  5066                           ;ADC_StartConversion@channel stored from wreg
  5067  001836  6E02               	movwf	ADC_StartConversion@channel,c
  5068                           
  5069                           ;adc.c: 85: ADCON0bits.CHS = channel;
  5070  001838  C002  F001         	movff	ADC_StartConversion@channel,??_ADC_StartConversion
  5071  00183C  4601               	rlncf	??_ADC_StartConversion,f,c
  5072  00183E  4601               	rlncf	??_ADC_StartConversion,f,c
  5073  001840  50C2               	movf	4034,w,c	;volatile
  5074  001842  1801               	xorwf	??_ADC_StartConversion,w,c
  5075  001844  0B83               	andlw	-125
  5076  001846  1801               	xorwf	??_ADC_StartConversion,w,c
  5077  001848  6EC2               	movwf	4034,c	;volatile
  5078                           
  5079                           ;adc.c: 88: ADCON0bits.ADON = 1;
  5080  00184A  80C2               	bsf	4034,0,c	;volatile
  5081                           
  5082                           ;adc.c: 92: ADCON0bits.GO_nDONE = 1;
  5083  00184C  82C2               	bsf	4034,1,c	;volatile
  5084  00184E  0012               	return	
  5085  001850                     __end_of_ADC_StartConversion:
  5086                           	opt stack 0
  5087                           pclatu	equ	0xFFB
  5088                           pclath	equ	0xFFA
  5089                           tblptru	equ	0xFF8
  5090                           tblptrh	equ	0xFF7
  5091                           tblptrl	equ	0xFF6
  5092                           tablat	equ	0xFF5
  5093                           prodh	equ	0xFF4
  5094                           prodl	equ	0xFF3
  5095                           intcon	equ	0xFF2
  5096                           intcon2	equ	0xFF1
  5097                           postinc0	equ	0xFEE
  5098                           fsr0h	equ	0xFEA
  5099                           fsr0l	equ	0xFE9
  5100                           wreg	equ	0xFE8
  5101                           postinc1	equ	0xFE6
  5102                           postdec1	equ	0xFE5
  5103                           fsr1h	equ	0xFE2
  5104                           fsr1l	equ	0xFE1
  5105                           postinc2	equ	0xFDE
  5106                           postdec2	equ	0xFDD
  5107                           fsr2h	equ	0xFDA
  5108                           fsr2l	equ	0xFD9
  5109                           status	equ	0xFD8
  5110                           
  5111 ;; *************** function _EUSART1_Transmit_ISR *****************
  5112 ;; Defined at:
  5113 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;		None
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;		None
  5118 ;; Return value:  Size  Location     Type
  5119 ;;		None               void
  5120 ;; Registers used:
  5121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5127 ;;      Params:         0       0       0       0       0       0       0
  5128 ;;      Locals:         0       0       0       0       0       0       0
  5129 ;;      Temps:          0       0       0       0       0       0       0
  5130 ;;      Totals:         0       0       0       0       0       0       0
  5131 ;;Total ram usage:        0 bytes
  5132 ;; Hardware stack levels used:    1
  5133 ;; This function calls:
  5134 ;;		Nothing
  5135 ;; This function is called by:
  5136 ;;		_INTERRUPT_InterruptManager
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140                           	psect	text33
  5141  001710                     __ptext33:
  5142                           	opt stack 0
  5143  001710                     _EUSART1_Transmit_ISR:
  5144                           	opt stack 24
  5145                           
  5146                           ;eusart1.c: 177: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  5147                           
  5148                           ;incstack = 0
  5149  001710  0E08               	movlw	8
  5150  001712  5C4C               	subwf	_eusart1TxBufferRemaining,w,c	;volatile
  5151  001714  B0D8               	btfsc	status,0,c
  5152  001716  D014               	goto	i2l134
  5153                           
  5154                           ;eusart1.c: 178: {
  5155                           ;eusart1.c: 179: TX1REG = eusart1TxBuffer[eusart1TxTail++];
  5156  001718  5049               	movf	_eusart1TxTail,w,c
  5157  00171A  0D01               	mullw	1
  5158  00171C  0100               	movlb	0	; () banked
  5159  00171E  0EC2               	movlw	low _eusart1TxBuffer
  5160  001720  24F3               	addwf	prodl,w,c
  5161  001722  6ED9               	movwf	fsr2l,c
  5162  001724  0100               	movlb	0	; () banked
  5163  001726  0E00               	movlw	high _eusart1TxBuffer
  5164  001728  20F4               	addwfc	prodh,w,c
  5165  00172A  6EDA               	movwf	fsr2h,c
  5166  00172C  50DF               	movf	indf2,w,c
  5167  00172E  6EAD               	movwf	4013,c	;volatile
  5168                           
  5169                           ; BSR set to: 0
  5170  001730  2A49               	incf	_eusart1TxTail,f,c
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;eusart1.c: 180: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  5174  001732  0E07               	movlw	7
  5175  001734  6449               	cpfsgt	_eusart1TxTail,c
  5176  001736  D002               	goto	i2l2266
  5177                           
  5178                           ; BSR set to: 0
  5179                           ;eusart1.c: 181: {
  5180                           ;eusart1.c: 182: eusart1TxTail = 0;
  5181  001738  0E00               	movlw	0
  5182  00173A  6E49               	movwf	_eusart1TxTail,c
  5183  00173C                     i2l2266:
  5184                           
  5185                           ; BSR set to: 0
  5186                           ;eusart1.c: 183: }
  5187                           ;eusart1.c: 184: eusart1TxBufferRemaining++;
  5188  00173C  2A4C               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  5189                           
  5190                           ;eusart1.c: 185: }
  5191  00173E  0012               	return	
  5192  001740                     i2l134:
  5193                           
  5194                           ;eusart1.c: 186: else
  5195                           ;eusart1.c: 187: {
  5196                           ;eusart1.c: 188: PIE1bits.TX1IE = 0;
  5197  001740  989D               	bcf	3997,4,c	;volatile
  5198  001742  0012               	return	
  5199  001744                     __end_of_EUSART1_Transmit_ISR:
  5200                           	opt stack 0
  5201                           pclatu	equ	0xFFB
  5202                           pclath	equ	0xFFA
  5203                           tblptru	equ	0xFF8
  5204                           tblptrh	equ	0xFF7
  5205                           tblptrl	equ	0xFF6
  5206                           tablat	equ	0xFF5
  5207                           prodh	equ	0xFF4
  5208                           prodl	equ	0xFF3
  5209                           intcon	equ	0xFF2
  5210                           intcon2	equ	0xFF1
  5211                           postinc0	equ	0xFEE
  5212                           fsr0h	equ	0xFEA
  5213                           fsr0l	equ	0xFE9
  5214                           wreg	equ	0xFE8
  5215                           postinc1	equ	0xFE6
  5216                           postdec1	equ	0xFE5
  5217                           fsr1h	equ	0xFE2
  5218                           fsr1l	equ	0xFE1
  5219                           indf2	equ	0xFDF
  5220                           postinc2	equ	0xFDE
  5221                           postdec2	equ	0xFDD
  5222                           fsr2h	equ	0xFDA
  5223                           fsr2l	equ	0xFD9
  5224                           status	equ	0xFD8
  5225                           
  5226 ;; *************** function _EUSART1_Receive_ISR *****************
  5227 ;; Defined at:
  5228 ;;		line 192 in file "mcc_generated_files/eusart1.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;		None
  5231 ;; Auto vars:     Size  Location     Type
  5232 ;;		None
  5233 ;; Return value:  Size  Location     Type
  5234 ;;		None               void
  5235 ;; Registers used:
  5236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5237 ;; Tracked objects:
  5238 ;;		On entry : 0/0
  5239 ;;		On exit  : 0/0
  5240 ;;		Unchanged: 0/0
  5241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5242 ;;      Params:         0       0       0       0       0       0       0
  5243 ;;      Locals:         0       0       0       0       0       0       0
  5244 ;;      Temps:          0       0       0       0       0       0       0
  5245 ;;      Totals:         0       0       0       0       0       0       0
  5246 ;;Total ram usage:        0 bytes
  5247 ;; Hardware stack levels used:    1
  5248 ;; This function calls:
  5249 ;;		Nothing
  5250 ;; This function is called by:
  5251 ;;		_INTERRUPT_InterruptManager
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           	psect	text34
  5256  001776                     __ptext34:
  5257                           	opt stack 0
  5258  001776                     _EUSART1_Receive_ISR:
  5259                           	opt stack 24
  5260                           
  5261                           ;eusart1.c: 194: if(1 == RC1STAbits.OERR)
  5262                           
  5263                           ;incstack = 0
  5264  001776  A2AB               	btfss	4011,1,c	;volatile
  5265  001778  D002               	goto	i2l2272
  5266                           
  5267                           ;eusart1.c: 195: {
  5268                           ;eusart1.c: 198: RC1STAbits.CREN = 0;
  5269  00177A  98AB               	bcf	4011,4,c	;volatile
  5270                           
  5271                           ;eusart1.c: 199: RC1STAbits.CREN = 1;
  5272  00177C  88AB               	bsf	4011,4,c	;volatile
  5273  00177E                     i2l2272:
  5274                           
  5275                           ;eusart1.c: 200: }
  5276                           ;eusart1.c: 203: eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  5277  00177E  5046               	movf	_eusart1RxHead,w,c
  5278  001780  0D01               	mullw	1
  5279  001782  0100               	movlb	0	; () banked
  5280  001784  0EBA               	movlw	low _eusart1RxBuffer
  5281  001786  24F3               	addwf	prodl,w,c
  5282  001788  6ED9               	movwf	fsr2l,c
  5283  00178A  0100               	movlb	0	; () banked
  5284  00178C  0E00               	movlw	high _eusart1RxBuffer
  5285  00178E  20F4               	addwfc	prodh,w,c
  5286  001790  6EDA               	movwf	fsr2h,c
  5287  001792  CFAE FFDF          	movff	4014,indf2	;volatile
  5288                           
  5289                           ; BSR set to: 0
  5290  001796  2A46               	incf	_eusart1RxHead,f,c
  5291                           
  5292                           ; BSR set to: 0
  5293                           ;eusart1.c: 204: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  5294  001798  0E07               	movlw	7
  5295  00179A  6446               	cpfsgt	_eusart1RxHead,c
  5296  00179C  D002               	goto	i2l2280
  5297                           
  5298                           ; BSR set to: 0
  5299                           ;eusart1.c: 205: {
  5300                           ;eusart1.c: 206: eusart1RxHead = 0;
  5301  00179E  0E00               	movlw	0
  5302  0017A0  6E46               	movwf	_eusart1RxHead,c
  5303  0017A2                     i2l2280:
  5304                           
  5305                           ; BSR set to: 0
  5306                           ;eusart1.c: 207: }
  5307                           ;eusart1.c: 208: eusart1RxCount++;
  5308  0017A2  2A45               	incf	_eusart1RxCount,f,c	;volatile
  5309                           
  5310                           ; BSR set to: 0
  5311  0017A4  0012               	return	
  5312  0017A6                     __end_of_EUSART1_Receive_ISR:
  5313                           	opt stack 0
  5314                           pclatu	equ	0xFFB
  5315                           pclath	equ	0xFFA
  5316                           tblptru	equ	0xFF8
  5317                           tblptrh	equ	0xFF7
  5318                           tblptrl	equ	0xFF6
  5319                           tablat	equ	0xFF5
  5320                           prodh	equ	0xFF4
  5321                           prodl	equ	0xFF3
  5322                           intcon	equ	0xFF2
  5323                           intcon2	equ	0xFF1
  5324                           postinc0	equ	0xFEE
  5325                           fsr0h	equ	0xFEA
  5326                           fsr0l	equ	0xFE9
  5327                           wreg	equ	0xFE8
  5328                           postinc1	equ	0xFE6
  5329                           postdec1	equ	0xFE5
  5330                           fsr1h	equ	0xFE2
  5331                           fsr1l	equ	0xFE1
  5332                           indf2	equ	0xFDF
  5333                           postinc2	equ	0xFDE
  5334                           postdec2	equ	0xFDD
  5335                           fsr2h	equ	0xFDA
  5336                           fsr2l	equ	0xFD9
  5337                           status	equ	0xFD8
  5338                           
  5339 ;; *************** function _ADC_ISR *****************
  5340 ;; Defined at:
  5341 ;;		line 128 in file "mcc_generated_files/adc.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;		None
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;		None
  5346 ;; Return value:  Size  Location     Type
  5347 ;;		None               void
  5348 ;; Registers used:
  5349 ;;		None
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5355 ;;      Params:         0       0       0       0       0       0       0
  5356 ;;      Locals:         0       0       0       0       0       0       0
  5357 ;;      Temps:          0       0       0       0       0       0       0
  5358 ;;      Totals:         0       0       0       0       0       0       0
  5359 ;;Total ram usage:        0 bytes
  5360 ;; Hardware stack levels used:    1
  5361 ;; This function calls:
  5362 ;;		Nothing
  5363 ;; This function is called by:
  5364 ;;		_INTERRUPT_InterruptManager
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text35
  5369  0018CE                     __ptext35:
  5370                           	opt stack 0
  5371  0018CE                     _ADC_ISR:
  5372                           	opt stack 24
  5373                           
  5374                           ;adc.c: 131: PIR1bits.ADIF = 0;
  5375                           
  5376                           ; BSR set to: 0
  5377                           ;incstack = 0
  5378  0018CE  9C9E               	bcf	3998,6,c	;volatile
  5379  0018D0  0012               	return	
  5380  0018D2                     __end_of_ADC_ISR:
  5381                           	opt stack 0
  5382                           pclatu	equ	0xFFB
  5383                           pclath	equ	0xFFA
  5384                           tblptru	equ	0xFF8
  5385                           tblptrh	equ	0xFF7
  5386                           tblptrl	equ	0xFF6
  5387                           tablat	equ	0xFF5
  5388                           prodh	equ	0xFF4
  5389                           prodl	equ	0xFF3
  5390                           intcon	equ	0xFF2
  5391                           intcon2	equ	0xFF1
  5392                           postinc0	equ	0xFEE
  5393                           fsr0h	equ	0xFEA
  5394                           fsr0l	equ	0xFE9
  5395                           wreg	equ	0xFE8
  5396                           postinc1	equ	0xFE6
  5397                           postdec1	equ	0xFE5
  5398                           fsr1h	equ	0xFE2
  5399                           fsr1l	equ	0xFE1
  5400                           indf2	equ	0xFDF
  5401                           postinc2	equ	0xFDE
  5402                           postdec2	equ	0xFDD
  5403                           fsr2h	equ	0xFDA
  5404                           fsr2l	equ	0xFD9
  5405                           status	equ	0xFD8
  5406                           pclatu	equ	0xFFB
  5407                           pclath	equ	0xFFA
  5408                           tblptru	equ	0xFF8
  5409                           tblptrh	equ	0xFF7
  5410                           tblptrl	equ	0xFF6
  5411                           tablat	equ	0xFF5
  5412                           prodh	equ	0xFF4
  5413                           prodl	equ	0xFF3
  5414                           intcon	equ	0xFF2
  5415                           intcon2	equ	0xFF1
  5416                           postinc0	equ	0xFEE
  5417                           fsr0h	equ	0xFEA
  5418                           fsr0l	equ	0xFE9
  5419                           wreg	equ	0xFE8
  5420                           postinc1	equ	0xFE6
  5421                           postdec1	equ	0xFE5
  5422                           fsr1h	equ	0xFE2
  5423                           fsr1l	equ	0xFE1
  5424                           indf2	equ	0xFDF
  5425                           postinc2	equ	0xFDE
  5426                           postdec2	equ	0xFDD
  5427                           fsr2h	equ	0xFDA
  5428                           fsr2l	equ	0xFD9
  5429                           status	equ	0xFD8
  5430                           
  5431                           	psect	rparam
  5432  0000                     pclatu	equ	0xFFB
  5433                           pclath	equ	0xFFA
  5434                           tblptru	equ	0xFF8
  5435                           tblptrh	equ	0xFF7
  5436                           tblptrl	equ	0xFF6
  5437                           tablat	equ	0xFF5
  5438                           prodh	equ	0xFF4
  5439                           prodl	equ	0xFF3
  5440                           intcon	equ	0xFF2
  5441                           intcon2	equ	0xFF1
  5442                           postinc0	equ	0xFEE
  5443                           fsr0h	equ	0xFEA
  5444                           fsr0l	equ	0xFE9
  5445                           wreg	equ	0xFE8
  5446                           postinc1	equ	0xFE6
  5447                           postdec1	equ	0xFE5
  5448                           fsr1h	equ	0xFE2
  5449                           fsr1l	equ	0xFE1
  5450                           indf2	equ	0xFDF
  5451                           postinc2	equ	0xFDE
  5452                           postdec2	equ	0xFDD
  5453                           fsr2h	equ	0xFDA
  5454                           fsr2l	equ	0xFD9
  5455                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    27
    Data        0
    BSS         344
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     61      76
    BANK0           160     47     159
    BANK1           256      0     220
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 


Critical Paths under _main in COMRAM

    _Temp_Fault->___ftge
    _Temp_Convert->___ftmul
    _log->___ftmul
    _eval_poly->___ftmul
    _Temp_Filter->___ftmul
    _Battery_Fault->___ftge
    ___ftge->___wmul
    _Battery_Convert->___ftmul
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _Battery_Filter->___ftmul
    ___ftmul->___ftdiv
    ___ftadd->___ftmul

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_TMR1_ISR
    _Temp_Read->_ADC_StartConversion
    _Current_Read->_ADC_StartConversion
    _Battery_Read->_ADC_StartConversion

Critical Paths under _main in BANK0

    _main->_Temp_Convert
    _Temp_Convert->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    _Temp_Filter->___ftadd
    _Battery_Convert->_Battery_Filter
    _Battery_Filter->___ftadd

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5  124647
                                             42 BANK0      5     0      5
                    _Battery_Convert
                      _Battery_Fault
                  _SYSTEM_Initialize
                       _Temp_Convert
                         _Temp_Fault
 ---------------------------------------------------------------------------------
 (1) _Temp_Fault                                           3     3      0    5586
                                             34 COMRAM     3     3      0
                             ___ftge
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _Temp_Convert                                        13    13      0   75104
                                             29 BANK0     13    13      0
                        _Temp_Filter
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                             ___wmul
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  5     2      3   30243
                                             24 BANK0      5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5     352
                                             19 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           12     5      7   15908
                                             12 BANK0     12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    6215
                                             12 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) _Temp_Filter                                          2     2      0   15714
                                             12 BANK0      2     2      0
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Battery_Fault                                        3     3      0    5617
                                             34 COMRAM     3     3      0
                             ___ftge
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     776
                                             25 COMRAM     9     3      6
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Battery_Convert                                      4     4      0   38340
                                             14 BANK0      4     4      0
                     _Battery_Filter
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    4199
                                             31 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2874
                                             27 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _Battery_Filter                                       2     2      0   15714
                                             12 BANK0      2     2      0
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    4698
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    4843
                                             46 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    5882
                                              0 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2433
                                             19 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          14    14      0      45
                                              5 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             3     3      0      45
                                              2 COMRAM     3     3      0
                       _Battery_Read
                       _Current_Read
                      _TMR1_CallBack
                          _Temp_Read
 ---------------------------------------------------------------------------------
 (8) _Temp_Read                                            0     0      0      15
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (8) _TMR1_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Current_Read                                         0     0      0      15
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (8) _Battery_Read                                         0     0      0      15
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (9) _ADC_StartConversion                                  2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Battery_Convert
     _Battery_Filter
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___wmul
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___wmul
   _Battery_Fault
     ___ftge
       ___wmul (ARG)
     ___wmul
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
   _Temp_Convert
     _Temp_Filter
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___wmul
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     ___wmul
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___wmul
       _frexp
   _Temp_Fault
     ___ftge
       ___wmul (ARG)
     ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _TMR1_ISR
     _Battery_Read
       _ADC_StartConversion
     _Current_Read
       _ADC_StartConversion
     _TMR1_CallBack
     _Temp_Read
       _ADC_StartConversion

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      DC       6       85.9%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     2F      9F       4       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3D      4C       1       80.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C7       9        0.0%
DATA                 0      0     1C7      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Apr 13 02:15:13 2015

           _eusart1TxBufferRemaining 004C                  ___wmul@multiplicand 0016  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                       ___ftadd@exp1 00DB                         ___ftadd@exp2 00DA  
                       ___ftadd@sign 00D9                                  l800 068A  
                                l804 06C4                                  l806 06EC  
                                l815 07D6                                  l824 0800  
                                l835 1298                         __CFG_CPB$OFF 000000  
                       __CFG_CPD$OFF 000000                      _timer1ReloadVal 004A  
                                _log 0DBC                      __end_of_ADC_ISR 18D2  
                                prod 000FF3                                  wreg 000FE8  
                       __CFG_LVP$OFF 000000                      ?_Battery_Filter 0001  
                       ___ftdiv@cntr 0029                         ___ftdiv@sign 002E  
                               l2032 144A                                 l2204 14E2  
                               l2214 153E                                 l2208 1512  
                               l2600 06D2                                 l2550 1388  
                               l2622 0758                                 l2606 06E2  
                               l2624 076C                                 l2616 0724  
                               l2712 1674                                 l2720 0FF8  
                               l2562 13D4                                 l2554 1396  
                               l2642 082A                                 l2634 07B8  
                               l2626 0778                                 l2564 13F2  
                               l2556 13A0                                 l2652 0878  
                               l2636 07CC                                 l2628 0784  
                               l2804 1234                                 l2566 13FC  
                               l2558 13BE                                 l2662 1036  
                               l2734 0D40                                 l2718 0F6C  
                               l2824 1272                                 l2594 0698  
                               l2682 108E                                 l2692 10B6  
                               l2668 105C                                 l2686 109E  
                               l2758 0BD0                                 l2782 0E2A  
                               l2918 0AD6                                 l2696 10C6  
                               l2872 11E2                                 l2856 1372  
                               l2776 0DF8                                 l2884 15A6  
                               l2964 17C0                                 l2798 120E  
                               l2958 17AE                                 ?_log 00E8  
                               _LATA 000F89                                 _LATB 000F8A  
                               u2231 0636                                 _LATC 000F8B  
                               _LATD 000F8C                                 u2241 0656  
                               _LATE 000F8D                                 u1460 1472  
                               u2441 1020                                 u1468 1474  
                               u2461 1046                                 u2621 11F8  
                               u2605 0DD4                                 u2641 121E  
                               _TMR1 000FCE                                 _WPUB 000F61  
                               _main 17A6                         ___ftpack@arg 0014  
                       ___ftpack@exp 0017                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                      __CFG_BORV$190 000000                                 log@x 00E8  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 00A8  
                      __CFG_IESO$OFF 000000                         ___ftmul@cntr 003C  
                       ___ftmul@sign 003D                                ??_log 003E  
                   ?_Battery_Convert 0001       __size_of_OSCILLATOR_Initialize 000E  
      __end_of_OSCILLATOR_Initialize 18BE                                ?_main 00FA  
                    __end_of___ftadd 089E                      __end_of___ftdiv 12CA  
                    _TMR1_StartTimer 18CA                      __end_of___ftmul 1100  
                              _T1CON 000FCD                      __end_of___ftsub 16D4  
                              _LATC0 007C58                                _LATA6 007C4E  
                              _LATA7 007C4F                       __CFG_DEBUG$OFF 000000  
                              i2l134 1740                                i2l240 0058  
                              i2l242 0064                                i2l246 006E  
                              i2l238 004C                                _TMR1H 000FCF  
                              _TMR1L 000FCE                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
               _EUSART1_Transmit_ISR 1710                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                      ?_Current_Read 0001                     __end_of_TMR1_ISR 1602  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                      ___awtoft@sign 001F                                _frexp 1420  
                              _errno 00CE                   __CFG_MCLRE$EXTMCLR 000000  
                      ___ftpack@sign 0018              __end_of_TMR1_Initialize 181C  
                        _Battery_Adc 015A                                tablat 000FF5  
                              status 000FD8                       __CFG_HFOFST$ON 000000  
                     __CFG_PBADEN$ON 000000                      __initialization 1744  
                        log@exponent 00EB           __end_of_EUSART1_Initialize 1710  
                       __end_of_main 17D4                            ??_ADC_ISR 0001  
        ?_INTERRUPT_InterruptManager 0001                               ??_main 003E  
                      __activetblptr 000001           ADC_StartConversion@channel 0002  
              ?_EUSART1_Transmit_ISR 0001                       ??_Current_Read 0003  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0                               ?_frexp 0014  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
                   __end_of___awtoft 1698                               _ANSELA 000F38  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             _ANSELD 000F3B                               _ANSELE 000F3C  
                   __end_of___ftpack 1420                               _T1GCON 000FCC  
                             _RC1REG 000FAE                               _RC1STA 000FAB  
              __size_of_Battery_Read 0018                               i2l2280 17A2  
                             i2l2272 177E                               i2l2266 173C  
                             i2l1494 15DC                       __CFG_WDTEN$OFF 000000  
                             _RCREG1 000FAE                        ??_Temp_Filter 003E  
                             _OSCCON 000FD3                               _SPBRG1 000FAF  
                             _TX1REG 000FAD                               _TX1STA 000FAC  
                             _TXREG1 000FAD                           _Temp_Fault 1542  
                     __CFG_XINST$OFF 000000                               ___ftge 14B2  
            __end_of_TMR1_StartTimer 18CE                               ___wmul 17D4  
                          ??___ftadd 00D6                       __CFG_STVREN$ON 000000  
                          ??___ftdiv 0026                            ??___ftmul 0035  
                          ??___ftsub 003E                               clear_0 174A  
                             clear_1 1756                               clear_2 1762  
                 __size_of_Temp_Read 0018                ___ftmul@f3_as_product 0039  
                       _Battery_Read 1898                         _Battery_Volt 007E  
                       __mediumconst 0000                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                    _eusart1RxBuffer 00BA        __size_of_INTERRUPT_Initialize 000C  
              __end_of_TMR1_CallBack 18D4                      _eusart1TxBuffer 00C2  
                   ?_TMR1_Initialize 0001                    _SYSTEM_Initialize 181C  
                   __end_oflog@coeff 061C                           __accesstop 0060  
            __end_of__initialization 1768                           ___ftadd@f1 00D0  
                         ___ftadd@f2 00D3                           ___ftge@ff1 001A  
                         ___ftge@ff2 001D                   ?_SYSTEM_Initialize 0001  
                       eval_poly@res 00E5                           ___ftdiv@f1 0020  
                         ___ftdiv@f2 0023                           ___ftdiv@f3 002A  
                         ___awtoft@c 001C                           ___ftmul@f1 002F  
                         ___ftmul@f2 0032                           ___ftsub@f1 00DC  
                         ___ftsub@f2 00DF                  __end_of_Temp_Filter 0C4C  
       __size_of_ADC_StartConversion 001A                       __pcstackCOMRAM 0001  
                ??_SYSTEM_Initialize 0014                            ?_TMR1_ISR 0001  
                     _Current_Aquire 0042                        __end_of_frexp 14B2  
             ??_EUSART1_Transmit_ISR 0001                     ??_Battery_Filter 003E  
        __end_of_EUSART1_Receive_ISR 17A6                        ?_Temp_Convert 0001  
                            ??_frexp 0019            __end_of_SYSTEM_Initialize 1836  
                      _eusart1RxHead 0046                        _eusart1TxHead 0048  
                      _eusart1RxTail 0047                           __pbssBANK0 0060  
                         __pbssBANK1 0100                        _eusart1TxTail 0049  
                 __size_of_eval_poly 00F2                      __CFG_PLLCFG$OFF 000000  
                  __end_of_Temp_Read 1880                           __pnvCOMRAM 004A  
              Temp_Convert@steinhart 00F7                          ?_Temp_Fault 0001  
                 __CFG_CCP2MX$PORTC1 000000                 __end_of_Current_Read 1898  
                        Temp_Fault@i 0024                  _TempBattery_Current 016E  
                            ?___ftge 001A                              ?___wmul 0014  
                   ?_TMR1_StartTimer 0001                           ??_TMR1_ISR 0003  
                 __CFG_CCP3MX$PORTB5 000000                              _ADC_ISR 18CE  
                          ?___awtoft 001C                            ?___ftpack 0014  
            __size_of_ADC_Initialize 0018                        Temp_Convert@x 00F5  
             __size_of_Battery_Fault 00AE                      Temp_Fault@fault 0023  
                     Battery_Fault@i 0024                              _OSCCON2 000FD2  
                     ??_Temp_Convert 00ED                    __CFG_PRICLKEN$OFF 000000  
                            _OSCTUNE 000F9B                              _SPBRGH1 000FB0  
                        _Temp_Filter 0ADC                          _Temp_Aquire 0043  
                    __CFG_PWRTEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000                      __size_of___ftge 0090  
                            ___ftadd 061E                              ___ftdiv 11E8  
                    __size_of___wmul 0026                              ___ftmul 1010  
                            ___ftsub 1698                         __psmallconst 0600  
                            __pcinit 1744                           ??___awtoft 001F  
                         ??___ftpack 0019                    __end_of_eval_poly 1010  
                            __ramtop 0600                              __ptext0 17A6  
                            __ptext1 1542                              __ptext2 089E  
                            __ptext3 0DBC                              __ptext4 1420  
                            __ptext5 0F1E                              __ptext6 1698  
                            __ptext7 0ADC                              __ptext8 181C  
                            __ptext9 17FA                            _T1CONbits 000FCD  
              _OSCILLATOR_Initialize 18B0                         __size_of_log 0162  
                __size_of_Temp_Fault 006A                   _EUSART1_Initialize 16D4  
           ??_PIN_MANAGER_Initialize 0014             __size_of_Battery_Convert 00E8  
         __size_of_SYSTEM_Initialize 001A                 end_of_initialization 1768  
                ?_EUSART1_Initialize 0001                        _Battery_Fault 12CA  
                            postdec1 000FE5                              postdec2 000FDD  
                            postinc0 000FEE                              postinc1 000FE6  
                            postinc2 000FDE                     Battery_Convert@x 00E0  
               ??_EUSART1_Initialize 0014                  _ADC_StartConversion 1836  
                        _Volt_Aquire 0044                       ?_Battery_Fault 0001  
              __size_of_Current_Read 0018                          ___ftdiv@exp 002D  
                        ___ftmul@exp 0038                 ?_ADC_StartConversion 0001  
               __end_of_Temp_Convert 0ADC         __end_of_INTERRUPT_Initialize 18CA  
                     __end_of___ftge 1542                       __end_of___wmul 17FA  
                  __size_of_TMR1_ISR 0056                       _ADC_Initialize 1850  
             ?_OSCILLATOR_Initialize 0001                  start_initialization 1744  
                         eval_poly@d 00DF                           eval_poly@n 00E1  
                         eval_poly@x 00DC      __size_of_PIN_MANAGER_Initialize 004E  
                       _Current_Read 1880                          __end_of_log 0F1E  
                         frexp@value 0014                    ??_Battery_Convert 00DE  
                       ??_Temp_Fault 0023                            _Temp_DegF 009C  
                   _PrevBattery_Volt 011E                            _Temp_Done 00CA  
                          _Temp_Read 1868                ??_ADC_StartConversion 0001  
           __size_of_TMR1_Initialize 0022                             ??___ftge 0020  
                           ??___wmul 0018               __end_of_ADC_Initialize 1868  
                           ?_ADC_ISR 0001               __size_of_TMR1_CallBack 0002  
                     _eusart1RxCount 0045                    __size_of___awtoft 0048  
                  __size_of___ftpack 00A8                            _Volt_Done 00CC  
              TMR1_ISR@CountCallBack 003E                          __pbssCOMRAM 003E  
      __size_of_EUSART1_Transmit_ISR 0034                        __pcstackBANK0 00D0  
                 __end_of_Temp_Fault 15AC                        _PrevTemp_DegF 013C  
                    ??_Battery_Fault 0023         __size_of_EUSART1_Receive_ISR 0030  
                       ?_Temp_Filter 0001                           ?_Temp_Read 0001  
             _PIN_MANAGER_Initialize 1602                            __pintcode 0008  
                  _Temp_Convert$1607 00EF                    _Temp_Convert$1608 00F2  
                           ?___ftadd 00D0                             ?___ftdiv 0020  
                           ?___ftmul 002F                             ?___ftsub 00DC  
                       Temp_Filter@x 00DC                      ?_ADC_Initialize 0001  
       ??_INTERRUPT_InterruptManager 0006                             _BAUD1CON 000FB8  
                        __smallconst 0600             __size_of_TMR1_StartTimer 0004  
                          _eval_poly 0F1E                       __size_of_frexp 0092  
               _INTERRUPT_Initialize 18BE                        _TMR1_CallBack 18D2  
            __size_of_Battery_Filter 0170                       ___wmul@product 0018  
              __size_of_Temp_Convert 023E                             _IPR1bits 000F9F  
                           _PIE1bits 000F9D  __size_of_INTERRUPT_InterruptManager 00A0  
                           _PIR1bits 000F9E                      Battery_Filter@x 00DC  
                           _RCONbits 000FD0                     __CFG_WDTPS$32768 000000  
                           _TMR1_ISR 15AC                    ??_TMR1_Initialize 0014  
                   __size_of_ADC_ISR 0004                  _PrevBattery_Current 0100  
                         _ADCON0bits 000FC2                    ___wmul@multiplier 0014  
                      ?_Battery_Read 0001                           ?_eval_poly 00DC  
                       _Temp_Convert 089E                          _INTCON2bits 000FF1  
              ?_INTERRUPT_Initialize 0001                       ?_TMR1_CallBack 0001  
                          frexp@eptr 0017                             __Hrparam 0000  
                        ??_Temp_Read 0003                             _Temp_Adc 01C8  
                           __Lrparam 0000                         __Lsmallconst 0600  
                 __CFG_BOREN$SBORDIS 000000                    __CFG_P2BMX$PORTD2 000000  
            ??_OSCILLATOR_Initialize 0014                     __size_of___ftadd 0280  
                   __size_of___ftdiv 00E2                     __size_of___ftmul 00F0  
                   __size_of___ftsub 003C          __size_of_EUSART1_Initialize 003C  
                           ___awtoft 1650                             ___ftpack 1378  
                     ??_Battery_Read 0003                      _Battery_Convert 1100  
                 Battery_Fault@fault 0023                      _Battery_Current 0060  
                           __ptext10 18CA                             __ptext11 1602  
                           __ptext20 1650                             __ptext12 18B0  
                           __ptext21 0C4C                             __ptext13 18BE  
                         _T1GCONbits 000FCC                             __ptext30 1880  
                           __ptext22 17D4                             __ptext14 16D4  
                           __ptext31 1898                             __ptext23 1010  
                           __ptext15 1850                             __ptext32 1836  
                           __ptext24 061E                             __ptext16 12CA  
                           __ptext33 1710                             __ptext25 1378  
                           __ptext17 14B2                             __ptext34 1776  
                           __ptext18 1100                             __ptext35 18CE  
                           __ptext27 15AC                             __ptext19 11E8  
                           __ptext28 1868                             __ptext29 18D2  
                  ??_TMR1_StartTimer 0014                        __size_of_main 002E  
                       _TmpTemp_DegF 01AA                 __size_of_Temp_Filter 0170  
                         _RC1STAbits 000FAB   __end_of_INTERRUPT_InterruptManager 00A8  
         _INTERRUPT_InterruptManager 0008                             main@argc 00FA  
                           main@argv 00FC                  _EUSART1_Receive_ISR 1776  
                           log@coeff 0601                           _INTCONbits 000FF2  
                        ??_eval_poly 00E3               ??_INTERRUPT_Initialize 0014  
                    ??_TMR1_CallBack 0001                             intlevel2 0000  
                     _Battery_Filter 0C4C                 ?_EUSART1_Receive_ISR 0001  
        __end_of_ADC_StartConversion 1850                     _TempBattery_Volt 018C  
            ?_PIN_MANAGER_Initialize 0001         __end_of_EUSART1_Transmit_ISR 1744  
                   ??_ADC_Initialize 0014              __end_of_Battery_Convert 11E8  
                  __CFG_T3CMX$PORTC0 000000               __end_of_Battery_Filter 0DBC  
              ??_EUSART1_Receive_ISR 0001       __end_of_PIN_MANAGER_Initialize 1650  
              __end_of_Battery_Fault 1378                    __CFG_FOSC$INTIO67 000000  
               __end_of_Battery_Read 18B0                      _TMR1_Initialize 17FA  
                   _ADC_Buffer_Point 0040  
