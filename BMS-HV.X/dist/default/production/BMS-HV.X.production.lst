

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Mar 25 03:59:08 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    26  0000                     _TMR1	set	4046
    27  0000                     _ADCON0	set	4034
    28  0000                     _ADCON0bits	set	4034
    29  0000                     _ADCON1	set	4033
    30  0000                     _ADCON2	set	4032
    31  0000                     _ADRESH	set	4036
    32  0000                     _ADRESL	set	4035
    33  0000                     _ANSELA	set	3896
    34  0000                     _ANSELB	set	3897
    35  0000                     _ANSELC	set	3898
    36  0000                     _ANSELD	set	3899
    37  0000                     _ANSELE	set	3900
    38  0000                     _BAUD1CON	set	4024
    39  0000                     _INTCON2bits	set	4081
    40  0000                     _INTCONbits	set	4082
    41  0000                     _IPR1bits	set	3999
    42  0000                     _LATA	set	3977
    43  0000                     _LATB	set	3978
    44  0000                     _LATC	set	3979
    45  0000                     _LATD	set	3980
    46  0000                     _LATE	set	3981
    47  0000                     _OSCCON	set	4051
    48  0000                     _OSCCON2	set	4050
    49  0000                     _OSCTUNE	set	3995
    50  0000                     _PIE1bits	set	3997
    51  0000                     _PIR1bits	set	3998
    52  0000                     _RC1REG	set	4014
    53  0000                     _RC1STA	set	4011
    54  0000                     _RC1STAbits	set	4011
    55  0000                     _RCONbits	set	4048
    56  0000                     _RCREG1	set	4014
    57  0000                     _SPBRG1	set	4015
    58  0000                     _SPBRGH1	set	4016
    59  0000                     _T1CON	set	4045
    60  0000                     _T1CONbits	set	4045
    61  0000                     _T1GCON	set	4044
    62  0000                     _T1GCONbits	set	4044
    63  0000                     _TMR1H	set	4047
    64  0000                     _TMR1L	set	4046
    65  0000                     _TRISA	set	3986
    66  0000                     _TRISB	set	3987
    67  0000                     _TRISC	set	3988
    68  0000                     _TRISD	set	3989
    69  0000                     _TRISE	set	3990
    70  0000                     _TX1REG	set	4013
    71  0000                     _TX1STA	set	4012
    72  0000                     _TXREG1	set	4013
    73  0000                     _WPUB	set	3937
    74                           
    75                           	psect	nvCOMRAM
    76  00002C                     __pnvCOMRAM:
    77                           	opt stack 0
    78  00002C                     _timer1ReloadVal:
    79                           	opt stack 0
    80  00002C                     	ds	2
    81  00002E                     _eusart1TxBufferRemaining:
    82                           	opt stack 0
    83  00002E                     	ds	1
    84                           
    85                           ; #config settings
    86  0000                     
    87                           	psect	cinit
    88  000200                     __pcinit:
    89                           	opt stack 0
    90  000200                     start_initialization:
    91                           	opt stack 0
    92  000200                     __initialization:
    93                           	opt stack 0
    94                           
    95                           ; Clear objects allocated to COMRAM (21 bytes)
    96  000200  EE00  F017         	lfsr	0,__pbssCOMRAM
    97  000204  0E15               	movlw	21
    98  000206                     clear_0:
    99  000206  6AEE               	clrf	postinc0,c
   100  000208  06E8               	decf	wreg,f,c
   101  00020A  E1FD               	bnz	clear_0
   102  00020C                     end_of_initialization:
   103                           	opt stack 0
   104  00020C                     __end_of__initialization:
   105                           	opt stack 0
   106  00020C  0100               	movlb	0
   107  00020E  EF16  F001         	goto	_main	;jump to C main() function
   108                           postinc0	equ	0xFEE
   109                           wreg	equ	0xFE8
   110                           
   111                           	psect	bssCOMRAM
   112  000017                     __pbssCOMRAM:
   113                           	opt stack 0
   114  000017                     _eusart1RxBuffer:
   115                           	opt stack 0
   116  000017                     	ds	8
   117  00001F                     _eusart1TxBuffer:
   118                           	opt stack 0
   119  00001F                     	ds	8
   120  000027                     _eusart1RxCount:
   121                           	opt stack 0
   122  000027                     	ds	1
   123  000028                     _eusart1RxHead:
   124                           	opt stack 0
   125  000028                     	ds	1
   126  000029                     _eusart1RxTail:
   127                           	opt stack 0
   128  000029                     	ds	1
   129  00002A                     _eusart1TxHead:
   130                           	opt stack 0
   131  00002A                     	ds	1
   132  00002B                     _eusart1TxTail:
   133                           	opt stack 0
   134  00002B                     	ds	1
   135                           postinc0	equ	0xFEE
   136                           wreg	equ	0xFE8
   137                           
   138                           	psect	cstackCOMRAM
   139  000001                     __pcstackCOMRAM:
   140                           	opt stack 0
   141  000001                     ??_TMR1_ISR:
   142  000001                     
   143                           ; 0 bytes @ 0x0
   144  000001                     	ds	3
   145  000004                     ??_INTERRUPT_InterruptManager:
   146                           
   147                           ; 0 bytes @ 0x3
   148  000004                     	ds	14
   149  000012                     
   150                           ; 2 bytes @ 0x11
   151  000012                     	ds	2
   152  000014                     
   153                           ; 3 bytes @ 0x13
   154  000014                     	ds	3
   155  000017                     postinc0	equ	0xFEE
   156                           wreg	equ	0xFE8
   157                           
   158                           ; 0 bytes @ 0x16
   159 ;;
   160 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   161 ;;
   162 ;; *************** function _main *****************
   163 ;; Defined at:
   164 ;;		line 26 in file "bms.c"
   165 ;; Parameters:    Size  Location     Type
   166 ;;  argc            2   17[COMRAM] int 
   167 ;;  argv            3   19[COMRAM] PTR PTR unsigned char 
   168 ;; Auto vars:     Size  Location     Type
   169 ;;		None
   170 ;; Return value:  Size  Location     Type
   171 ;;                  2   17[COMRAM] int 
   172 ;; Registers used:
   173 ;;		wreg, status,2, cstack
   174 ;; Tracked objects:
   175 ;;		On entry : 0/0
   176 ;;		On exit  : 0/0
   177 ;;		Unchanged: 0/0
   178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   179 ;;      Params:         5       0       0       0       0       0       0
   180 ;;      Locals:         0       0       0       0       0       0       0
   181 ;;      Temps:          0       0       0       0       0       0       0
   182 ;;      Totals:         5       0       0       0       0       0       0
   183 ;;Total ram usage:        5 bytes
   184 ;; Hardware stack levels required when called:    6
   185 ;; This function calls:
   186 ;;		_SYSTEM_Initialize
   187 ;; This function is called by:
   188 ;;		Startup code after reset
   189 ;; This function uses a non-reentrant model
   190 ;;
   191                           
   192                           	psect	text0
   193  00022C                     __ptext0:
   194                           	opt stack 0
   195  00022C                     _main:
   196                           	opt stack 25
   197                           
   198                           ;bms.c: 28: SYSTEM_Initialize();
   199                           
   200                           ;incstack = 0
   201  00022C  ECDA  F000         	call	_SYSTEM_Initialize	;wreg free
   202                           
   203                           ;bms.c: 47: (INTCONbits.GIE = 1);
   204  000230  8EF2               	bsf	intcon,7,c	;volatile
   205                           
   206                           ;bms.c: 50: (INTCONbits.PEIE = 1);
   207  000232  8CF2               	bsf	intcon,6,c	;volatile
   208  000234                     l265:
   209                           
   210                           ;bms.c: 60: {
   211  000234  D7FF               	goto	l265
   212  000236                     __end_of_main:
   213                           	opt stack 0
   214                           intcon	equ	0xFF2
   215                           postinc0	equ	0xFEE
   216                           wreg	equ	0xFE8
   217                           
   218 ;; *************** function _SYSTEM_Initialize *****************
   219 ;; Defined at:
   220 ;;		line 112 in file "mcc_generated_files/mcc.c"
   221 ;; Parameters:    Size  Location     Type
   222 ;;		None
   223 ;; Auto vars:     Size  Location     Type
   224 ;;		None
   225 ;; Return value:  Size  Location     Type
   226 ;;		None               void
   227 ;; Registers used:
   228 ;;		wreg, status,2, cstack
   229 ;; Tracked objects:
   230 ;;		On entry : 0/0
   231 ;;		On exit  : 0/0
   232 ;;		Unchanged: 0/0
   233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   234 ;;      Params:         0       0       0       0       0       0       0
   235 ;;      Locals:         0       0       0       0       0       0       0
   236 ;;      Temps:          0       0       0       0       0       0       0
   237 ;;      Totals:         0       0       0       0       0       0       0
   238 ;;Total ram usage:        0 bytes
   239 ;; Hardware stack levels used:    1
   240 ;; Hardware stack levels required when called:    5
   241 ;; This function calls:
   242 ;;		_ADC_Initialize
   243 ;;		_EUSART1_Initialize
   244 ;;		_INTERRUPT_Initialize
   245 ;;		_OSCILLATOR_Initialize
   246 ;;		_PIN_MANAGER_Initialize
   247 ;;		_TMR1_Initialize
   248 ;; This function is called by:
   249 ;;		_main
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253                           	psect	text1
   254  0001B4                     __ptext1:
   255                           	opt stack 0
   256  0001B4                     _SYSTEM_Initialize:
   257                           	opt stack 25
   258                           
   259                           ;mcc.c: 114: OSCILLATOR_Initialize();
   260                           
   261                           ;incstack = 0
   262  0001B4  EC09  F001         	call	_OSCILLATOR_Initialize	;wreg free
   263                           
   264                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   265  0001B8  EC56  F000         	call	_PIN_MANAGER_Initialize	;wreg free
   266                           
   267                           ;mcc.c: 116: INTERRUPT_Initialize();
   268  0001BC  EC10  F001         	call	_INTERRUPT_Initialize	;wreg free
   269                           
   270                           ;mcc.c: 117: ADC_Initialize();
   271  0001C0  ECF4  F000         	call	_ADC_Initialize	;wreg free
   272                           
   273                           ;mcc.c: 118: EUSART1_Initialize();
   274  0001C4  EC7D  F000         	call	_EUSART1_Initialize	;wreg free
   275                           
   276                           ;mcc.c: 119: TMR1_Initialize();
   277  0001C8  ECC9  F000         	call	_TMR1_Initialize	;wreg free
   278  0001CC  0012               	return	
   279  0001CE                     __end_of_SYSTEM_Initialize:
   280                           	opt stack 0
   281                           intcon	equ	0xFF2
   282                           postinc0	equ	0xFEE
   283                           wreg	equ	0xFE8
   284                           
   285 ;; *************** function _TMR1_Initialize *****************
   286 ;; Defined at:
   287 ;;		line 63 in file "mcc_generated_files/tmr1.c"
   288 ;; Parameters:    Size  Location     Type
   289 ;;		None
   290 ;; Auto vars:     Size  Location     Type
   291 ;;		None
   292 ;; Return value:  Size  Location     Type
   293 ;;		None               void
   294 ;; Registers used:
   295 ;;		wreg, status,2, cstack
   296 ;; Tracked objects:
   297 ;;		On entry : 0/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   301 ;;      Params:         0       0       0       0       0       0       0
   302 ;;      Locals:         0       0       0       0       0       0       0
   303 ;;      Temps:          0       0       0       0       0       0       0
   304 ;;      Totals:         0       0       0       0       0       0       0
   305 ;;Total ram usage:        0 bytes
   306 ;; Hardware stack levels used:    1
   307 ;; Hardware stack levels required when called:    4
   308 ;; This function calls:
   309 ;;		_TMR1_StartTimer
   310 ;; This function is called by:
   311 ;;		_SYSTEM_Initialize
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315                           	psect	text2
   316  000192                     __ptext2:
   317                           	opt stack 0
   318  000192                     _TMR1_Initialize:
   319                           	opt stack 25
   320                           
   321                           ;tmr1.c: 68: T1CON = 0x00;
   322                           
   323                           ;incstack = 0
   324  000192  0E00               	movlw	0
   325  000194  6ECD               	movwf	4045,c	;volatile
   326                           
   327                           ;tmr1.c: 71: T1GCON = 0x00;
   328  000196  0E00               	movlw	0
   329  000198  6ECC               	movwf	4044,c	;volatile
   330                           
   331                           ;tmr1.c: 74: TMR1H = 0xB1;
   332  00019A  0EB1               	movlw	177
   333  00019C  6ECF               	movwf	4047,c	;volatile
   334                           
   335                           ;tmr1.c: 77: TMR1L = 0xE0;
   336  00019E  0EE0               	movlw	224
   337  0001A0  6ECE               	movwf	4046,c	;volatile
   338                           
   339                           ;tmr1.c: 80: timer1ReloadVal=TMR1;
   340  0001A2  CFCE F02C          	movff	4046,_timer1ReloadVal	;volatile
   341  0001A6  CFCF F02D          	movff	4047,_timer1ReloadVal+1	;volatile
   342                           
   343                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
   344  0001AA  909E               	bcf	3998,0,c	;volatile
   345                           
   346                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
   347  0001AC  809D               	bsf	3997,0,c	;volatile
   348                           
   349                           ;tmr1.c: 89: TMR1_StartTimer();
   350  0001AE  EC1B  F001         	call	_TMR1_StartTimer	;wreg free
   351  0001B2  0012               	return	
   352  0001B4                     __end_of_TMR1_Initialize:
   353                           	opt stack 0
   354                           intcon	equ	0xFF2
   355                           postinc0	equ	0xFEE
   356                           wreg	equ	0xFE8
   357                           
   358 ;; *************** function _TMR1_StartTimer *****************
   359 ;; Defined at:
   360 ;;		line 92 in file "mcc_generated_files/tmr1.c"
   361 ;; Parameters:    Size  Location     Type
   362 ;;		None
   363 ;; Auto vars:     Size  Location     Type
   364 ;;		None
   365 ;; Return value:  Size  Location     Type
   366 ;;		None               void
   367 ;; Registers used:
   368 ;;		None
   369 ;; Tracked objects:
   370 ;;		On entry : 0/0
   371 ;;		On exit  : 0/0
   372 ;;		Unchanged: 0/0
   373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   374 ;;      Params:         0       0       0       0       0       0       0
   375 ;;      Locals:         0       0       0       0       0       0       0
   376 ;;      Temps:          0       0       0       0       0       0       0
   377 ;;      Totals:         0       0       0       0       0       0       0
   378 ;;Total ram usage:        0 bytes
   379 ;; Hardware stack levels used:    1
   380 ;; Hardware stack levels required when called:    3
   381 ;; This function calls:
   382 ;;		Nothing
   383 ;; This function is called by:
   384 ;;		_TMR1_Initialize
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388                           	psect	text3
   389  000236                     __ptext3:
   390                           	opt stack 0
   391  000236                     _TMR1_StartTimer:
   392                           	opt stack 25
   393                           
   394                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
   395                           
   396                           ;incstack = 0
   397  000236  80CD               	bsf	4045,0,c	;volatile
   398  000238  0012               	return	
   399  00023A                     __end_of_TMR1_StartTimer:
   400                           	opt stack 0
   401                           intcon	equ	0xFF2
   402                           postinc0	equ	0xFEE
   403                           wreg	equ	0xFE8
   404                           
   405 ;; *************** function _PIN_MANAGER_Initialize *****************
   406 ;; Defined at:
   407 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;		None
   410 ;; Auto vars:     Size  Location     Type
   411 ;;		None
   412 ;; Return value:  Size  Location     Type
   413 ;;		None               void
   414 ;; Registers used:
   415 ;;		wreg, status,2
   416 ;; Tracked objects:
   417 ;;		On entry : 0/0
   418 ;;		On exit  : 0/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   421 ;;      Params:         0       0       0       0       0       0       0
   422 ;;      Locals:         0       0       0       0       0       0       0
   423 ;;      Temps:          0       0       0       0       0       0       0
   424 ;;      Totals:         0       0       0       0       0       0       0
   425 ;;Total ram usage:        0 bytes
   426 ;; Hardware stack levels used:    1
   427 ;; Hardware stack levels required when called:    3
   428 ;; This function calls:
   429 ;;		Nothing
   430 ;; This function is called by:
   431 ;;		_SYSTEM_Initialize
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435                           	psect	text4
   436  0000AC                     __ptext4:
   437                           	opt stack 0
   438  0000AC                     _PIN_MANAGER_Initialize:
   439                           	opt stack 26
   440                           
   441                           ;pin_manager.c: 52: LATA = 0x00;
   442                           
   443                           ;incstack = 0
   444  0000AC  0E00               	movlw	0
   445  0000AE  6E89               	movwf	3977,c	;volatile
   446                           
   447                           ;pin_manager.c: 53: TRISA = 0xBE;
   448  0000B0  0EBE               	movlw	190
   449  0000B2  6E92               	movwf	3986,c	;volatile
   450                           
   451                           ;pin_manager.c: 54: ANSELA = 0x2E;
   452  0000B4  0E2E               	movlw	46
   453  0000B6  010F               	movlb	15	; () banked
   454  0000B8  6F38               	movwf	56,b	;volatile
   455                           
   456                           ;pin_manager.c: 56: LATB = 0x00;
   457  0000BA  0E00               	movlw	0
   458  0000BC  6E8A               	movwf	3978,c	;volatile
   459                           
   460                           ;pin_manager.c: 57: TRISB = 0xF4;
   461  0000BE  0EF4               	movlw	244
   462  0000C0  6E93               	movwf	3987,c	;volatile
   463                           
   464                           ;pin_manager.c: 58: ANSELB = 0x34;
   465  0000C2  0E34               	movlw	52
   466  0000C4  010F               	movlb	15	; () banked
   467  0000C6  6F39               	movwf	57,b	;volatile
   468                           
   469                           ;pin_manager.c: 59: WPUB = 0x00;
   470  0000C8  0E00               	movlw	0
   471  0000CA  6E61               	movwf	3937,c	;volatile
   472                           
   473                           ;pin_manager.c: 61: LATC = 0x08;
   474  0000CC  0E08               	movlw	8
   475  0000CE  6E8B               	movwf	3979,c	;volatile
   476                           
   477                           ;pin_manager.c: 62: TRISC = 0xC4;
   478  0000D0  0EC4               	movlw	196
   479  0000D2  6E94               	movwf	3988,c	;volatile
   480                           
   481                           ;pin_manager.c: 63: ANSELC = 0x04;
   482  0000D4  0E04               	movlw	4
   483  0000D6  010F               	movlb	15	; () banked
   484  0000D8  6F3A               	movwf	58,b	;volatile
   485                           
   486                           ;pin_manager.c: 65: LATD = 0x00;
   487  0000DA  0E00               	movlw	0
   488  0000DC  6E8C               	movwf	3980,c	;volatile
   489                           
   490                           ;pin_manager.c: 66: TRISD = 0xD1;
   491  0000DE  0ED1               	movlw	209
   492  0000E0  6E95               	movwf	3989,c	;volatile
   493                           
   494                           ;pin_manager.c: 67: ANSELD = 0xD1;
   495  0000E2  0ED1               	movlw	209
   496  0000E4  010F               	movlb	15	; () banked
   497  0000E6  6F3B               	movwf	59,b	;volatile
   498                           
   499                           ;pin_manager.c: 69: LATE = 0x00;
   500  0000E8  0E00               	movlw	0
   501  0000EA  6E8D               	movwf	3981,c	;volatile
   502                           
   503                           ;pin_manager.c: 70: TRISE = 0x05;
   504  0000EC  0E05               	movlw	5
   505  0000EE  6E96               	movwf	3990,c	;volatile
   506                           
   507                           ;pin_manager.c: 71: ANSELE = 0x05;
   508  0000F0  0E05               	movlw	5
   509  0000F2  010F               	movlb	15	; () banked
   510  0000F4  6F3C               	movwf	60,b	;volatile
   511                           
   512                           ; BSR set to: 15
   513                           ;pin_manager.c: 73: INTCON2bits.nRBPU = 0x01;
   514  0000F6  8EF1               	bsf	intcon2,7,c	;volatile
   515                           
   516                           ; BSR set to: 15
   517  0000F8  0012               	return	
   518  0000FA                     __end_of_PIN_MANAGER_Initialize:
   519                           	opt stack 0
   520                           intcon	equ	0xFF2
   521                           intcon2	equ	0xFF1
   522                           postinc0	equ	0xFEE
   523                           wreg	equ	0xFE8
   524                           
   525 ;; *************** function _OSCILLATOR_Initialize *****************
   526 ;; Defined at:
   527 ;;		line 122 in file "mcc_generated_files/mcc.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;		None
   530 ;; Auto vars:     Size  Location     Type
   531 ;;		None
   532 ;; Return value:  Size  Location     Type
   533 ;;		None               void
   534 ;; Registers used:
   535 ;;		wreg, status,2
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   541 ;;      Params:         0       0       0       0       0       0       0
   542 ;;      Locals:         0       0       0       0       0       0       0
   543 ;;      Temps:          0       0       0       0       0       0       0
   544 ;;      Totals:         0       0       0       0       0       0       0
   545 ;;Total ram usage:        0 bytes
   546 ;; Hardware stack levels used:    1
   547 ;; Hardware stack levels required when called:    3
   548 ;; This function calls:
   549 ;;		Nothing
   550 ;; This function is called by:
   551 ;;		_SYSTEM_Initialize
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           	psect	text5
   556  000212                     __ptext5:
   557                           	opt stack 0
   558  000212                     _OSCILLATOR_Initialize:
   559                           	opt stack 26
   560                           
   561                           ;mcc.c: 125: OSCCON = 0x62;
   562                           
   563                           ; BSR set to: 15
   564                           ;incstack = 0
   565  000212  0E62               	movlw	98
   566  000214  6ED3               	movwf	4051,c	;volatile
   567                           
   568                           ;mcc.c: 127: OSCCON2 = 0x04;
   569  000216  0E04               	movlw	4
   570  000218  6ED2               	movwf	4050,c	;volatile
   571                           
   572                           ;mcc.c: 129: OSCTUNE = 0x00;
   573  00021A  0E00               	movlw	0
   574  00021C  6E9B               	movwf	3995,c	;volatile
   575  00021E  0012               	return	
   576  000220                     __end_of_OSCILLATOR_Initialize:
   577                           	opt stack 0
   578                           intcon	equ	0xFF2
   579                           intcon2	equ	0xFF1
   580                           postinc0	equ	0xFEE
   581                           wreg	equ	0xFE8
   582                           
   583 ;; *************** function _INTERRUPT_Initialize *****************
   584 ;; Defined at:
   585 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;		None
   588 ;; Auto vars:     Size  Location     Type
   589 ;;		None
   590 ;; Return value:  Size  Location     Type
   591 ;;		None               void
   592 ;; Registers used:
   593 ;;		None
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   599 ;;      Params:         0       0       0       0       0       0       0
   600 ;;      Locals:         0       0       0       0       0       0       0
   601 ;;      Temps:          0       0       0       0       0       0       0
   602 ;;      Totals:         0       0       0       0       0       0       0
   603 ;;Total ram usage:        0 bytes
   604 ;; Hardware stack levels used:    1
   605 ;; Hardware stack levels required when called:    3
   606 ;; This function calls:
   607 ;;		Nothing
   608 ;; This function is called by:
   609 ;;		_SYSTEM_Initialize
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	text6
   614  000220                     __ptext6:
   615                           	opt stack 0
   616  000220                     _INTERRUPT_Initialize:
   617                           	opt stack 26
   618                           
   619                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
   620                           
   621                           ;incstack = 0
   622  000220  9ED0               	bcf	4048,7,c	;volatile
   623                           
   624                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
   625  000222  9A9F               	bcf	3999,5,c	;volatile
   626                           
   627                           ;interrupt_manager.c: 62: IPR1bits.ADIP = 0;
   628  000224  9C9F               	bcf	3999,6,c	;volatile
   629                           
   630                           ;interrupt_manager.c: 64: IPR1bits.TMR1IP = 0;
   631  000226  909F               	bcf	3999,0,c	;volatile
   632                           
   633                           ;interrupt_manager.c: 66: IPR1bits.TX1IP = 0;
   634  000228  989F               	bcf	3999,4,c	;volatile
   635  00022A  0012               	return	
   636  00022C                     __end_of_INTERRUPT_Initialize:
   637                           	opt stack 0
   638                           intcon	equ	0xFF2
   639                           intcon2	equ	0xFF1
   640                           postinc0	equ	0xFEE
   641                           wreg	equ	0xFE8
   642                           
   643 ;; *************** function _EUSART1_Initialize *****************
   644 ;; Defined at:
   645 ;;		line 76 in file "mcc_generated_files/eusart1.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;		None
   648 ;; Auto vars:     Size  Location     Type
   649 ;;		None
   650 ;; Return value:  Size  Location     Type
   651 ;;		None               void
   652 ;; Registers used:
   653 ;;		wreg, status,2
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   659 ;;      Params:         0       0       0       0       0       0       0
   660 ;;      Locals:         0       0       0       0       0       0       0
   661 ;;      Temps:          0       0       0       0       0       0       0
   662 ;;      Totals:         0       0       0       0       0       0       0
   663 ;;Total ram usage:        0 bytes
   664 ;; Hardware stack levels used:    1
   665 ;; Hardware stack levels required when called:    3
   666 ;; This function calls:
   667 ;;		Nothing
   668 ;; This function is called by:
   669 ;;		_SYSTEM_Initialize
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           	psect	text7
   674  0000FA                     __ptext7:
   675                           	opt stack 0
   676  0000FA                     _EUSART1_Initialize:
   677                           	opt stack 26
   678                           
   679                           ;eusart1.c: 79: PIE1bits.RC1IE = 0;
   680                           
   681                           ;incstack = 0
   682  0000FA  9A9D               	bcf	3997,5,c	;volatile
   683                           
   684                           ;eusart1.c: 80: PIE1bits.TX1IE = 0;
   685  0000FC  989D               	bcf	3997,4,c	;volatile
   686                           
   687                           ;eusart1.c: 85: BAUD1CON = 0x48;
   688  0000FE  0E48               	movlw	72
   689  000100  6EB8               	movwf	4024,c	;volatile
   690                           
   691                           ;eusart1.c: 88: RC1STA = 0x98;
   692  000102  0E98               	movlw	152
   693  000104  6EAB               	movwf	4011,c	;volatile
   694                           
   695                           ;eusart1.c: 91: TX1STA = 0x26;
   696  000106  0E26               	movlw	38
   697  000108  6EAC               	movwf	4012,c	;volatile
   698                           
   699                           ;eusart1.c: 94: SPBRG1 = 0x22;
   700  00010A  0E22               	movlw	34
   701  00010C  6EAF               	movwf	4015,c	;volatile
   702                           
   703                           ;eusart1.c: 97: SPBRGH1 = 0x00;
   704  00010E  0E00               	movlw	0
   705  000110  6EB0               	movwf	4016,c	;volatile
   706                           
   707                           ;eusart1.c: 100: TXREG1 = 0x00;
   708  000112  0E00               	movlw	0
   709  000114  6EAD               	movwf	4013,c	;volatile
   710                           
   711                           ;eusart1.c: 103: RCREG1 = 0x00;
   712  000116  0E00               	movlw	0
   713  000118  6EAE               	movwf	4014,c	;volatile
   714                           
   715                           ;eusart1.c: 107: eusart1TxHead = 0;
   716  00011A  0E00               	movlw	0
   717  00011C  6E2A               	movwf	_eusart1TxHead,c
   718                           
   719                           ;eusart1.c: 108: eusart1TxTail = 0;
   720  00011E  0E00               	movlw	0
   721  000120  6E2B               	movwf	_eusart1TxTail,c
   722                           
   723                           ;eusart1.c: 109: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
   724  000122  0E08               	movlw	8
   725  000124  6E2E               	movwf	_eusart1TxBufferRemaining,c	;volatile
   726                           
   727                           ;eusart1.c: 111: eusart1RxHead = 0;
   728  000126  0E00               	movlw	0
   729  000128  6E28               	movwf	_eusart1RxHead,c
   730                           
   731                           ;eusart1.c: 112: eusart1RxTail = 0;
   732  00012A  0E00               	movlw	0
   733  00012C  6E29               	movwf	_eusart1RxTail,c
   734                           
   735                           ;eusart1.c: 113: eusart1RxCount = 0;
   736  00012E  0E00               	movlw	0
   737  000130  6E27               	movwf	_eusart1RxCount,c	;volatile
   738                           
   739                           ;eusart1.c: 116: PIE1bits.RC1IE = 1;
   740  000132  8A9D               	bsf	3997,5,c	;volatile
   741  000134  0012               	return	
   742  000136                     __end_of_EUSART1_Initialize:
   743                           	opt stack 0
   744                           intcon	equ	0xFF2
   745                           intcon2	equ	0xFF1
   746                           postinc0	equ	0xFEE
   747                           wreg	equ	0xFE8
   748                           
   749 ;; *************** function _ADC_Initialize *****************
   750 ;; Defined at:
   751 ;;		line 59 in file "mcc_generated_files/adc.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;		None
   754 ;; Auto vars:     Size  Location     Type
   755 ;;		None
   756 ;; Return value:  Size  Location     Type
   757 ;;		None               void
   758 ;; Registers used:
   759 ;;		wreg, status,2
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   765 ;;      Params:         0       0       0       0       0       0       0
   766 ;;      Locals:         0       0       0       0       0       0       0
   767 ;;      Temps:          0       0       0       0       0       0       0
   768 ;;      Totals:         0       0       0       0       0       0       0
   769 ;;Total ram usage:        0 bytes
   770 ;; Hardware stack levels used:    1
   771 ;; Hardware stack levels required when called:    3
   772 ;; This function calls:
   773 ;;		Nothing
   774 ;; This function is called by:
   775 ;;		_SYSTEM_Initialize
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           	psect	text8
   780  0001E8                     __ptext8:
   781                           	opt stack 0
   782  0001E8                     _ADC_Initialize:
   783                           	opt stack 26
   784                           
   785                           ;adc.c: 64: ADCON0 = 0x01;
   786                           
   787                           ;incstack = 0
   788  0001E8  0E01               	movlw	1
   789  0001EA  6EC2               	movwf	4034,c	;volatile
   790                           
   791                           ;adc.c: 67: ADCON1 = 0x81;
   792  0001EC  0E81               	movlw	129
   793  0001EE  6EC1               	movwf	4033,c	;volatile
   794                           
   795                           ;adc.c: 70: ADCON2 = 0x0A;
   796  0001F0  0E0A               	movlw	10
   797  0001F2  6EC0               	movwf	4032,c	;volatile
   798                           
   799                           ;adc.c: 73: ADRESL = 0x00;
   800  0001F4  0E00               	movlw	0
   801  0001F6  6EC3               	movwf	4035,c	;volatile
   802                           
   803                           ;adc.c: 76: ADRESH = 0x00;
   804  0001F8  0E00               	movlw	0
   805  0001FA  6EC4               	movwf	4036,c	;volatile
   806                           
   807                           ;adc.c: 79: PIE1bits.ADIE = 1;
   808  0001FC  8C9D               	bsf	3997,6,c	;volatile
   809  0001FE  0012               	return	
   810  000200                     __end_of_ADC_Initialize:
   811                           	opt stack 0
   812                           intcon	equ	0xFF2
   813                           intcon2	equ	0xFF1
   814                           postinc0	equ	0xFEE
   815                           wreg	equ	0xFE8
   816                           
   817 ;; *************** function _INTERRUPT_InterruptManager *****************
   818 ;; Defined at:
   819 ;;		line 69 in file "mcc_generated_files/interrupt_manager.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;		None
   822 ;; Auto vars:     Size  Location     Type
   823 ;;		None
   824 ;; Return value:  Size  Location     Type
   825 ;;		None               void
   826 ;; Registers used:
   827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   833 ;;      Params:         0       0       0       0       0       0       0
   834 ;;      Locals:         0       0       0       0       0       0       0
   835 ;;      Temps:         14       0       0       0       0       0       0
   836 ;;      Totals:        14       0       0       0       0       0       0
   837 ;;Total ram usage:       14 bytes
   838 ;; Hardware stack levels used:    1
   839 ;; Hardware stack levels required when called:    2
   840 ;; This function calls:
   841 ;;		_ADC_ISR
   842 ;;		_EUSART1_Receive_ISR
   843 ;;		_EUSART1_Transmit_ISR
   844 ;;		_TMR1_ISR
   845 ;; This function is called by:
   846 ;;		Interrupt level 2
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           	psect	intcode
   851  000008                     __pintcode:
   852                           	opt stack 0
   853  000008                     _INTERRUPT_InterruptManager:
   854                           	opt stack 25
   855                           
   856                           ;incstack = 0
   857  000008  CFFA F004          	movff	pclath,??_INTERRUPT_InterruptManager
   858  00000C  CFFB F005          	movff	pclatu,??_INTERRUPT_InterruptManager+1
   859  000010  CFE9 F006          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
   860  000014  CFEA F007          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
   861  000018  CFE1 F008          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
   862  00001C  CFE2 F009          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
   863  000020  CFD9 F00A          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
   864  000024  CFDA F00B          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
   865  000028  CFF3 F00C          	movff	prodl,??_INTERRUPT_InterruptManager+8
   866  00002C  CFF4 F00D          	movff	prodh,??_INTERRUPT_InterruptManager+9
   867  000030  CFF6 F00E          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
   868  000034  CFF7 F00F          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
   869  000038  CFF8 F010          	movff	tblptru,??_INTERRUPT_InterruptManager+12
   870  00003C  CFF5 F011          	movff	tablat,??_INTERRUPT_InterruptManager+13
   871                           
   872                           ;interrupt_manager.c: 72: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
   873  000040  BA9D               	btfsc	3997,5,c	;volatile
   874  000042  AA9E               	btfss	3998,5,c	;volatile
   875  000044  D003               	goto	i2l226
   876                           
   877                           ;interrupt_manager.c: 73: {
   878                           ;interrupt_manager.c: 74: EUSART1_Receive_ISR();
   879  000046  ECB3  F000         	call	_EUSART1_Receive_ISR	;wreg free
   880                           
   881                           ;interrupt_manager.c: 75: }
   882  00004A  D011               	goto	i2l234
   883  00004C                     i2l226:
   884                           
   885                           ;interrupt_manager.c: 76: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
   886  00004C  BC9D               	btfsc	3997,6,c	;volatile
   887  00004E  AC9E               	btfss	3998,6,c	;volatile
   888  000050  D003               	goto	i2l228
   889                           
   890                           ;interrupt_manager.c: 77: {
   891                           ;interrupt_manager.c: 78: ADC_ISR();
   892  000052  EC1D  F001         	call	_ADC_ISR	;wreg free
   893                           
   894                           ;interrupt_manager.c: 79: }
   895  000056  D00B               	goto	i2l234
   896  000058                     i2l228:
   897                           
   898                           ;interrupt_manager.c: 80: else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
   899  000058  B09D               	btfsc	3997,0,c	;volatile
   900  00005A  A09E               	btfss	3998,0,c	;volatile
   901  00005C  D003               	goto	i2l230
   902                           
   903                           ;interrupt_manager.c: 81: {
   904                           ;interrupt_manager.c: 82: TMR1_ISR();
   905  00005E  ECE7  F000         	call	_TMR1_ISR	;wreg free
   906                           
   907                           ;interrupt_manager.c: 83: }
   908  000062  D005               	goto	i2l234
   909  000064                     i2l230:
   910                           
   911                           ;interrupt_manager.c: 84: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
   912  000064  B89D               	btfsc	3997,4,c	;volatile
   913  000066  A89E               	btfss	3998,4,c	;volatile
   914  000068  D002               	goto	i2l234
   915                           
   916                           ;interrupt_manager.c: 85: {
   917                           ;interrupt_manager.c: 86: EUSART1_Transmit_ISR();
   918  00006A  EC9B  F000         	call	_EUSART1_Transmit_ISR	;wreg free
   919  00006E                     i2l234:
   920  00006E  C011  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
   921  000072  C010  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
   922  000076  C00F  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
   923  00007A  C00E  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
   924  00007E  C00D  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
   925  000082  C00C  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
   926  000086  C00B  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
   927  00008A  C00A  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
   928  00008E  C009  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
   929  000092  C008  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
   930  000096  C007  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
   931  00009A  C006  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
   932  00009E  C005  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
   933  0000A2  C004  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
   934  0000A6  0011               	retfie		f
   935  0000A8                     __end_of_INTERRUPT_InterruptManager:
   936                           	opt stack 0
   937                           pclatu	equ	0xFFB
   938                           pclath	equ	0xFFA
   939                           tblptru	equ	0xFF8
   940                           tblptrh	equ	0xFF7
   941                           tblptrl	equ	0xFF6
   942                           tablat	equ	0xFF5
   943                           prodh	equ	0xFF4
   944                           prodl	equ	0xFF3
   945                           intcon	equ	0xFF2
   946                           intcon2	equ	0xFF1
   947                           postinc0	equ	0xFEE
   948                           fsr0h	equ	0xFEA
   949                           fsr0l	equ	0xFE9
   950                           wreg	equ	0xFE8
   951                           fsr1h	equ	0xFE2
   952                           fsr1l	equ	0xFE1
   953                           fsr2h	equ	0xFDA
   954                           fsr2l	equ	0xFD9
   955                           
   956 ;; *************** function _TMR1_ISR *****************
   957 ;; Defined at:
   958 ;;		line 157 in file "mcc_generated_files/tmr1.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;		None
   961 ;; Auto vars:     Size  Location     Type
   962 ;;		None
   963 ;; Return value:  Size  Location     Type
   964 ;;		None               void
   965 ;; Registers used:
   966 ;;		wreg, status,2, cstack
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   972 ;;      Params:         0       0       0       0       0       0       0
   973 ;;      Locals:         0       0       0       0       0       0       0
   974 ;;      Temps:          3       0       0       0       0       0       0
   975 ;;      Totals:         3       0       0       0       0       0       0
   976 ;;Total ram usage:        3 bytes
   977 ;; Hardware stack levels used:    1
   978 ;; Hardware stack levels required when called:    1
   979 ;; This function calls:
   980 ;;		_TMR1_CallBack
   981 ;; This function is called by:
   982 ;;		_INTERRUPT_InterruptManager
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           	psect	text10
   987  0001CE                     __ptext10:
   988                           	opt stack 0
   989  0001CE                     _TMR1_ISR:
   990                           	opt stack 25
   991                           
   992                           ;tmr1.c: 161: PIR1bits.TMR1IF = 0;
   993                           
   994                           ;incstack = 0
   995  0001CE  909E               	bcf	3998,0,c	;volatile
   996                           
   997                           ;tmr1.c: 164: TMR1H = (timer1ReloadVal >> 8);
   998  0001D0  C02D  F001         	movff	_timer1ReloadVal+1,??_TMR1_ISR	;volatile
   999  0001D4  C001  F002         	movff	??_TMR1_ISR,??_TMR1_ISR+1
  1000  0001D8  6A03               	clrf	(??_TMR1_ISR+2)& (0+255),c
  1001  0001DA  5002               	movf	??_TMR1_ISR+1,w,c
  1002  0001DC  6ECF               	movwf	4047,c	;volatile
  1003                           
  1004                           ;tmr1.c: 165: TMR1L = (uint8_t) timer1ReloadVal;
  1005  0001DE  C02C  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  1006                           
  1007                           ;tmr1.c: 169: TMR1_CallBack();
  1008  0001E2  EC1F  F001         	call	_TMR1_CallBack	;wreg free
  1009  0001E6  0012               	return	
  1010  0001E8                     __end_of_TMR1_ISR:
  1011                           	opt stack 0
  1012                           pclatu	equ	0xFFB
  1013                           pclath	equ	0xFFA
  1014                           tblptru	equ	0xFF8
  1015                           tblptrh	equ	0xFF7
  1016                           tblptrl	equ	0xFF6
  1017                           tablat	equ	0xFF5
  1018                           prodh	equ	0xFF4
  1019                           prodl	equ	0xFF3
  1020                           intcon	equ	0xFF2
  1021                           intcon2	equ	0xFF1
  1022                           postinc0	equ	0xFEE
  1023                           fsr0h	equ	0xFEA
  1024                           fsr0l	equ	0xFE9
  1025                           wreg	equ	0xFE8
  1026                           fsr1h	equ	0xFE2
  1027                           fsr1l	equ	0xFE1
  1028                           fsr2h	equ	0xFDA
  1029                           fsr2l	equ	0xFD9
  1030                           
  1031 ;; *************** function _TMR1_CallBack *****************
  1032 ;; Defined at:
  1033 ;;		line 173 in file "mcc_generated_files/tmr1.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;		None
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;		None
  1038 ;; Return value:  Size  Location     Type
  1039 ;;		None               void
  1040 ;; Registers used:
  1041 ;;		None
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1047 ;;      Params:         0       0       0       0       0       0       0
  1048 ;;      Locals:         0       0       0       0       0       0       0
  1049 ;;      Temps:          0       0       0       0       0       0       0
  1050 ;;      Totals:         0       0       0       0       0       0       0
  1051 ;;Total ram usage:        0 bytes
  1052 ;; Hardware stack levels used:    1
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_TMR1_ISR
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text11
  1061  00023E                     __ptext11:
  1062                           	opt stack 0
  1063  00023E                     _TMR1_CallBack:
  1064                           	opt stack 25
  1065                           
  1066                           ;incstack = 0
  1067  00023E  0012               	return	
  1068  000240                     __end_of_TMR1_CallBack:
  1069                           	opt stack 0
  1070                           pclatu	equ	0xFFB
  1071                           pclath	equ	0xFFA
  1072                           tblptru	equ	0xFF8
  1073                           tblptrh	equ	0xFF7
  1074                           tblptrl	equ	0xFF6
  1075                           tablat	equ	0xFF5
  1076                           prodh	equ	0xFF4
  1077                           prodl	equ	0xFF3
  1078                           intcon	equ	0xFF2
  1079                           intcon2	equ	0xFF1
  1080                           postinc0	equ	0xFEE
  1081                           fsr0h	equ	0xFEA
  1082                           fsr0l	equ	0xFE9
  1083                           wreg	equ	0xFE8
  1084                           fsr1h	equ	0xFE2
  1085                           fsr1l	equ	0xFE1
  1086                           fsr2h	equ	0xFDA
  1087                           fsr2l	equ	0xFD9
  1088                           
  1089 ;; *************** function _EUSART1_Transmit_ISR *****************
  1090 ;; Defined at:
  1091 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;		None
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;		None
  1096 ;; Return value:  Size  Location     Type
  1097 ;;		None               void
  1098 ;; Registers used:
  1099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1105 ;;      Params:         0       0       0       0       0       0       0
  1106 ;;      Locals:         0       0       0       0       0       0       0
  1107 ;;      Temps:          0       0       0       0       0       0       0
  1108 ;;      Totals:         0       0       0       0       0       0       0
  1109 ;;Total ram usage:        0 bytes
  1110 ;; Hardware stack levels used:    1
  1111 ;; This function calls:
  1112 ;;		Nothing
  1113 ;; This function is called by:
  1114 ;;		_INTERRUPT_InterruptManager
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           	psect	text12
  1119  000136                     __ptext12:
  1120                           	opt stack 0
  1121  000136                     _EUSART1_Transmit_ISR:
  1122                           	opt stack 26
  1123                           
  1124                           ;eusart1.c: 177: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  1125                           
  1126                           ;incstack = 0
  1127  000136  0E08               	movlw	8
  1128  000138  5C2E               	subwf	_eusart1TxBufferRemaining,w,c	;volatile
  1129  00013A  B0D8               	btfsc	status,0,c
  1130  00013C  D012               	goto	i2l122
  1131                           
  1132                           ;eusart1.c: 178: {
  1133                           ;eusart1.c: 179: TX1REG = eusart1TxBuffer[eusart1TxTail++];
  1134  00013E  502B               	movf	_eusart1TxTail,w,c
  1135  000140  0D01               	mullw	1
  1136  000142  0E1F               	movlw	low _eusart1TxBuffer
  1137  000144  24F3               	addwf	prodl,w,c
  1138  000146  6ED9               	movwf	fsr2l,c
  1139  000148  0E00               	movlw	high _eusart1TxBuffer
  1140  00014A  20F4               	addwfc	prodh,w,c
  1141  00014C  6EDA               	movwf	fsr2h,c
  1142  00014E  50DF               	movf	indf2,w,c
  1143  000150  6EAD               	movwf	4013,c	;volatile
  1144  000152  2A2B               	incf	_eusart1TxTail,f,c
  1145                           
  1146                           ;eusart1.c: 180: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  1147  000154  0E07               	movlw	7
  1148  000156  642B               	cpfsgt	_eusart1TxTail,c
  1149  000158  D002               	goto	i2l930
  1150                           
  1151                           ;eusart1.c: 181: {
  1152                           ;eusart1.c: 182: eusart1TxTail = 0;
  1153  00015A  0E00               	movlw	0
  1154  00015C  6E2B               	movwf	_eusart1TxTail,c
  1155  00015E                     i2l930:
  1156                           
  1157                           ;eusart1.c: 183: }
  1158                           ;eusart1.c: 184: eusart1TxBufferRemaining++;
  1159  00015E  2A2E               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  1160                           
  1161                           ;eusart1.c: 185: }
  1162  000160  0012               	return	
  1163  000162                     i2l122:
  1164                           
  1165                           ;eusart1.c: 186: else
  1166                           ;eusart1.c: 187: {
  1167                           ;eusart1.c: 188: PIE1bits.TX1IE = 0;
  1168  000162  989D               	bcf	3997,4,c	;volatile
  1169  000164  0012               	return	
  1170  000166                     __end_of_EUSART1_Transmit_ISR:
  1171                           	opt stack 0
  1172                           pclatu	equ	0xFFB
  1173                           pclath	equ	0xFFA
  1174                           tblptru	equ	0xFF8
  1175                           tblptrh	equ	0xFF7
  1176                           tblptrl	equ	0xFF6
  1177                           tablat	equ	0xFF5
  1178                           prodh	equ	0xFF4
  1179                           prodl	equ	0xFF3
  1180                           intcon	equ	0xFF2
  1181                           intcon2	equ	0xFF1
  1182                           postinc0	equ	0xFEE
  1183                           fsr0h	equ	0xFEA
  1184                           fsr0l	equ	0xFE9
  1185                           wreg	equ	0xFE8
  1186                           fsr1h	equ	0xFE2
  1187                           fsr1l	equ	0xFE1
  1188                           indf2	equ	0xFDF
  1189                           fsr2h	equ	0xFDA
  1190                           fsr2l	equ	0xFD9
  1191                           status	equ	0xFD8
  1192                           
  1193 ;; *************** function _EUSART1_Receive_ISR *****************
  1194 ;; Defined at:
  1195 ;;		line 192 in file "mcc_generated_files/eusart1.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;		None
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;		None
  1200 ;; Return value:  Size  Location     Type
  1201 ;;		None               void
  1202 ;; Registers used:
  1203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1209 ;;      Params:         0       0       0       0       0       0       0
  1210 ;;      Locals:         0       0       0       0       0       0       0
  1211 ;;      Temps:          0       0       0       0       0       0       0
  1212 ;;      Totals:         0       0       0       0       0       0       0
  1213 ;;Total ram usage:        0 bytes
  1214 ;; Hardware stack levels used:    1
  1215 ;; This function calls:
  1216 ;;		Nothing
  1217 ;; This function is called by:
  1218 ;;		_INTERRUPT_InterruptManager
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text13
  1223  000166                     __ptext13:
  1224                           	opt stack 0
  1225  000166                     _EUSART1_Receive_ISR:
  1226                           	opt stack 26
  1227                           
  1228                           ;eusart1.c: 194: if(1 == RC1STAbits.OERR)
  1229                           
  1230                           ;incstack = 0
  1231  000166  A2AB               	btfss	4011,1,c	;volatile
  1232  000168  D002               	goto	i2l936
  1233                           
  1234                           ;eusart1.c: 195: {
  1235                           ;eusart1.c: 198: RC1STAbits.CREN = 0;
  1236  00016A  98AB               	bcf	4011,4,c	;volatile
  1237                           
  1238                           ;eusart1.c: 199: RC1STAbits.CREN = 1;
  1239  00016C  88AB               	bsf	4011,4,c	;volatile
  1240  00016E                     i2l936:
  1241                           
  1242                           ;eusart1.c: 200: }
  1243                           ;eusart1.c: 203: eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  1244  00016E  5028               	movf	_eusart1RxHead,w,c
  1245  000170  0D01               	mullw	1
  1246  000172  0E17               	movlw	low _eusart1RxBuffer
  1247  000174  24F3               	addwf	prodl,w,c
  1248  000176  6ED9               	movwf	fsr2l,c
  1249  000178  0E00               	movlw	high _eusart1RxBuffer
  1250  00017A  20F4               	addwfc	prodh,w,c
  1251  00017C  6EDA               	movwf	fsr2h,c
  1252  00017E  CFAE FFDF          	movff	4014,indf2	;volatile
  1253  000182  2A28               	incf	_eusart1RxHead,f,c
  1254                           
  1255                           ;eusart1.c: 204: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  1256  000184  0E07               	movlw	7
  1257  000186  6428               	cpfsgt	_eusart1RxHead,c
  1258  000188  D002               	goto	i2l944
  1259                           
  1260                           ;eusart1.c: 205: {
  1261                           ;eusart1.c: 206: eusart1RxHead = 0;
  1262  00018A  0E00               	movlw	0
  1263  00018C  6E28               	movwf	_eusart1RxHead,c
  1264  00018E                     i2l944:
  1265                           
  1266                           ;eusart1.c: 207: }
  1267                           ;eusart1.c: 208: eusart1RxCount++;
  1268  00018E  2A27               	incf	_eusart1RxCount,f,c	;volatile
  1269  000190  0012               	return	
  1270  000192                     __end_of_EUSART1_Receive_ISR:
  1271                           	opt stack 0
  1272                           pclatu	equ	0xFFB
  1273                           pclath	equ	0xFFA
  1274                           tblptru	equ	0xFF8
  1275                           tblptrh	equ	0xFF7
  1276                           tblptrl	equ	0xFF6
  1277                           tablat	equ	0xFF5
  1278                           prodh	equ	0xFF4
  1279                           prodl	equ	0xFF3
  1280                           intcon	equ	0xFF2
  1281                           intcon2	equ	0xFF1
  1282                           postinc0	equ	0xFEE
  1283                           fsr0h	equ	0xFEA
  1284                           fsr0l	equ	0xFE9
  1285                           wreg	equ	0xFE8
  1286                           fsr1h	equ	0xFE2
  1287                           fsr1l	equ	0xFE1
  1288                           indf2	equ	0xFDF
  1289                           fsr2h	equ	0xFDA
  1290                           fsr2l	equ	0xFD9
  1291                           status	equ	0xFD8
  1292                           
  1293 ;; *************** function _ADC_ISR *****************
  1294 ;; Defined at:
  1295 ;;		line 128 in file "mcc_generated_files/adc.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;		None
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;		None
  1300 ;; Return value:  Size  Location     Type
  1301 ;;		None               void
  1302 ;; Registers used:
  1303 ;;		None
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1309 ;;      Params:         0       0       0       0       0       0       0
  1310 ;;      Locals:         0       0       0       0       0       0       0
  1311 ;;      Temps:          0       0       0       0       0       0       0
  1312 ;;      Totals:         0       0       0       0       0       0       0
  1313 ;;Total ram usage:        0 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; This function calls:
  1316 ;;		Nothing
  1317 ;; This function is called by:
  1318 ;;		_INTERRUPT_InterruptManager
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text14
  1323  00023A                     __ptext14:
  1324                           	opt stack 0
  1325  00023A                     _ADC_ISR:
  1326                           	opt stack 26
  1327                           
  1328                           ;adc.c: 131: PIR1bits.ADIF = 0;
  1329                           
  1330                           ;incstack = 0
  1331  00023A  9C9E               	bcf	3998,6,c	;volatile
  1332  00023C  0012               	return	
  1333  00023E                     __end_of_ADC_ISR:
  1334                           	opt stack 0
  1335  0000                     pclatu	equ	0xFFB
  1336                           pclath	equ	0xFFA
  1337                           tblptru	equ	0xFF8
  1338                           tblptrh	equ	0xFF7
  1339                           tblptrl	equ	0xFF6
  1340                           tablat	equ	0xFF5
  1341                           prodh	equ	0xFF4
  1342                           prodl	equ	0xFF3
  1343                           intcon	equ	0xFF2
  1344                           intcon2	equ	0xFF1
  1345                           postinc0	equ	0xFEE
  1346                           fsr0h	equ	0xFEA
  1347                           fsr0l	equ	0xFE9
  1348                           wreg	equ	0xFE8
  1349                           fsr1h	equ	0xFE2
  1350                           fsr1l	equ	0xFE1
  1351                           indf2	equ	0xFDF
  1352                           fsr2h	equ	0xFDA
  1353                           fsr2l	equ	0xFD9
  1354                           status	equ	0xFD8
  1355                           pclatu	equ	0xFFB
  1356                           pclath	equ	0xFFA
  1357                           tblptru	equ	0xFF8
  1358                           tblptrh	equ	0xFF7
  1359                           tblptrl	equ	0xFF6
  1360                           tablat	equ	0xFF5
  1361                           prodh	equ	0xFF4
  1362                           prodl	equ	0xFF3
  1363                           intcon	equ	0xFF2
  1364                           intcon2	equ	0xFF1
  1365                           postinc0	equ	0xFEE
  1366                           fsr0h	equ	0xFEA
  1367                           fsr0l	equ	0xFE9
  1368                           wreg	equ	0xFE8
  1369                           fsr1h	equ	0xFE2
  1370                           fsr1l	equ	0xFE1
  1371                           indf2	equ	0xFDF
  1372                           fsr2h	equ	0xFDA
  1373                           fsr2l	equ	0xFD9
  1374                           status	equ	0xFD8
  1375                           
  1376                           	psect	rparam
  1377  0000                     pclatu	equ	0xFFB
  1378                           pclath	equ	0xFFA
  1379                           tblptru	equ	0xFF8
  1380                           tblptrh	equ	0xFF7
  1381                           tblptrl	equ	0xFF6
  1382                           tablat	equ	0xFF5
  1383                           prodh	equ	0xFF4
  1384                           prodl	equ	0xFF3
  1385                           intcon	equ	0xFF2
  1386                           intcon2	equ	0xFF1
  1387                           postinc0	equ	0xFEE
  1388                           fsr0h	equ	0xFEA
  1389                           fsr0l	equ	0xFE9
  1390                           wreg	equ	0xFE8
  1391                           fsr1h	equ	0xFE2
  1392                           fsr1l	equ	0xFE1
  1393                           indf2	equ	0xFDF
  1394                           fsr2h	equ	0xFDA
  1395                           fsr2l	equ	0xFD9
  1396                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         21
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     22      46
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_TMR1_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5       0
                                             17 COMRAM     5     0      5
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              3 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             3     3      0       0
                                              0 COMRAM     3     3      0
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _TMR1_ISR
     _TMR1_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     16      2E       1       48.4%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2E       9        0.0%
DATA                 0      0      2E      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Mar 25 03:59:08 2015

           _eusart1TxBufferRemaining 002E                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                                  l265 0234  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                    _timer1ReloadVal 002C                      __end_of_ADC_ISR 023E  
                                prod 000FF3                                  wreg 000FE8  
                       __CFG_LVP$OFF 000000                                 _LATA 000F89  
                               _LATB 000F8A                                 _LATC 000F8B  
                               _LATD 000F8C                                 _LATE 000F8D  
                               _TMR1 000FCE                                 _WPUB 000F61  
                               _main 022C                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                      __CFG_BORV$190 000000                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 00A8                        __CFG_IESO$OFF 000000  
     __size_of_OSCILLATOR_Initialize 000E        __end_of_OSCILLATOR_Initialize 0220  
                              ?_main 0012                      _TMR1_StartTimer 0236  
                              _T1CON 000FCD                       __CFG_DEBUG$OFF 000000  
                              i2l122 0162                                i2l230 0064  
                              i2l234 006E                                i2l226 004C  
                              i2l228 0058                                i2l930 015E  
                              i2l944 018E                                i2l936 016E  
                              _TMR1H 000FCF                                _TMR1L 000FCE  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                                _TRISD 000F95  
                              _TRISE 000F96                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                 _EUSART1_Transmit_ISR 0136  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                     __end_of_TMR1_ISR 01E8  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                 __CFG_MCLRE$EXTMCLR 000000              __end_of_TMR1_Initialize 01B4  
                              tablat 000FF5                                status 000FD8  
                     __CFG_HFOFST$ON 000000                       __CFG_PBADEN$ON 000000  
                    __initialization 0200           __end_of_EUSART1_Initialize 0136  
                       __end_of_main 0236                            ??_ADC_ISR 0001  
        ?_INTERRUPT_InterruptManager 0001                               ??_main 0017  
                      __activetblptr 000000                ?_EUSART1_Transmit_ISR 0001  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               _ANSELA 000F38  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             _ANSELD 000F3B                               _ANSELE 000F3C  
                             _T1GCON 000FCC                               _RC1REG 000FAE  
                             _RC1STA 000FAB                       __CFG_WDTEN$OFF 000000  
                             _RCREG1 000FAE                               _OSCCON 000FD3  
                             _SPBRG1 000FAF                               _TX1REG 000FAD  
                             _TX1STA 000FAC                               _TXREG1 000FAD  
                     __CFG_XINST$OFF 000000              __end_of_TMR1_StartTimer 023A  
                     __CFG_STVREN$ON 000000                               clear_0 0206  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                      _eusart1RxBuffer 0017  
      __size_of_INTERRUPT_Initialize 000C                __end_of_TMR1_CallBack 0240  
                    _eusart1TxBuffer 001F                     ?_TMR1_Initialize 0001  
                  _SYSTEM_Initialize 01B4                           __accesstop 0060  
            __end_of__initialization 020C                   ?_SYSTEM_Initialize 0001  
                     __pcstackCOMRAM 0001                  ??_SYSTEM_Initialize 0012  
                          ?_TMR1_ISR 0001               ??_EUSART1_Transmit_ISR 0001  
        __end_of_EUSART1_Receive_ISR 0192            __end_of_SYSTEM_Initialize 01CE  
                      _eusart1RxHead 0028                        _eusart1TxHead 002A  
                      _eusart1RxTail 0029                        _eusart1TxTail 002B  
                    __CFG_PLLCFG$OFF 000000                           __pnvCOMRAM 002C  
                 __CFG_CCP2MX$PORTC1 000000                     ?_TMR1_StartTimer 0001  
                         ??_TMR1_ISR 0001                   __CFG_CCP3MX$PORTB5 000000  
                            _ADC_ISR 023A              __size_of_ADC_Initialize 0018  
                            _OSCCON2 000FD2                    __CFG_PRICLKEN$OFF 000000  
                            _OSCTUNE 000F9B                              _SPBRGH1 000FB0  
                    __CFG_PWRTEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000                              __pcinit 0200  
                            __ramtop 0600                              __ptext0 022C  
                            __ptext1 01B4                              __ptext2 0192  
                            __ptext3 0236                              __ptext4 00AC  
                            __ptext5 0212                              __ptext6 0220  
                            __ptext7 00FA                              __ptext8 01E8  
                          _T1CONbits 000FCD                _OSCILLATOR_Initialize 0212  
                 _EUSART1_Initialize 00FA             ??_PIN_MANAGER_Initialize 0012  
         __size_of_SYSTEM_Initialize 001A                 end_of_initialization 020C  
                ?_EUSART1_Initialize 0001                              postinc0 000FEE  
               ??_EUSART1_Initialize 0012         __end_of_INTERRUPT_Initialize 022C  
                  __size_of_TMR1_ISR 001A                       _ADC_Initialize 01E8  
             ?_OSCILLATOR_Initialize 0001                  start_initialization 0200  
    __size_of_PIN_MANAGER_Initialize 004E             __size_of_TMR1_Initialize 0022  
             __end_of_ADC_Initialize 0200                             ?_ADC_ISR 0001  
             __size_of_TMR1_CallBack 0002                       _eusart1RxCount 0027  
                        __pbssCOMRAM 0017        __size_of_EUSART1_Transmit_ISR 0030  
       __size_of_EUSART1_Receive_ISR 002C               _PIN_MANAGER_Initialize 00AC  
                          __pintcode 0008                      ?_ADC_Initialize 0001  
       ??_INTERRUPT_InterruptManager 0004                             _BAUD1CON 000FB8  
           __size_of_TMR1_StartTimer 0004                 _INTERRUPT_Initialize 0220  
                      _TMR1_CallBack 023E                             _IPR1bits 000F9F  
                           _PIE1bits 000F9D  __size_of_INTERRUPT_InterruptManager 00A0  
                           _PIR1bits 000F9E                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                             _TMR1_ISR 01CE  
                  ??_TMR1_Initialize 0012                     __size_of_ADC_ISR 0004  
                         _ADCON0bits 000FC2                          _INTCON2bits 000FF1  
              ?_INTERRUPT_Initialize 0001                       ?_TMR1_CallBack 0001  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000                    __CFG_P2BMX$PORTD2 000000  
            ??_OSCILLATOR_Initialize 0012          __size_of_EUSART1_Initialize 003C  
                           __ptext10 01CE                             __ptext11 023E  
                           __ptext12 0136                             __ptext13 0166  
                         _T1GCONbits 000FCC                             __ptext14 023A  
                  ??_TMR1_StartTimer 0012                        __size_of_main 000A  
                         _RC1STAbits 000FAB   __end_of_INTERRUPT_InterruptManager 00A8  
         _INTERRUPT_InterruptManager 0008                             main@argc 0012  
                           main@argv 0014                  _EUSART1_Receive_ISR 0166  
                         _INTCONbits 000FF2               ??_INTERRUPT_Initialize 0012  
                    ??_TMR1_CallBack 0001                             intlevel2 0000  
               ?_EUSART1_Receive_ISR 0001              ?_PIN_MANAGER_Initialize 0001  
       __end_of_EUSART1_Transmit_ISR 0166                     ??_ADC_Initialize 0012  
                  __CFG_T3CMX$PORTC0 000000                ??_EUSART1_Receive_ISR 0001  
     __end_of_PIN_MANAGER_Initialize 00FA                    __CFG_FOSC$INTIO67 000000  
                    _TMR1_Initialize 0192  
