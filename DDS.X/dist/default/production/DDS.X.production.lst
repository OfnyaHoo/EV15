

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat Dec 12 20:56:53 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    90  0000                     
    91                           	psect	idataCOMRAM
    92  002C16                     __pidataCOMRAM:
    93                           	opt stack 0
    94                           
    95                           ;initializer for _Transmit_stall
    96  002C16  01                 	db	1
    97  0000                     _ADCON0	set	4034
    98  0000                     _ADCON0bits	set	4034
    99  0000                     _ADCON1	set	4033
   100  0000                     _ADCON2	set	4032
   101  0000                     _ADRESH	set	4036
   102  0000                     _ADRESL	set	4035
   103  0000                     _ANSELA	set	3896
   104  0000                     _ANSELB	set	3897
   105  0000                     _ANSELC	set	3898
   106  0000                     _ANSELD	set	3899
   107  0000                     _ANSELE	set	3900
   108  0000                     _BAUD1CON	set	4024
   109  0000                     _INTCON2bits	set	4081
   110  0000                     _INTCONbits	set	4082
   111  0000                     _IPR1bits	set	3999
   112  0000                     _IPR2bits	set	4002
   113  0000                     _LATA	set	3977
   114  0000                     _LATB	set	3978
   115  0000                     _LATC	set	3979
   116  0000                     _LATCbits	set	3979
   117  0000                     _LATD	set	3980
   118  0000                     _LATE	set	3981
   119  0000                     _OSCCON	set	4051
   120  0000                     _OSCCON2	set	4050
   121  0000                     _OSCTUNE	set	3995
   122  0000                     _PIE1bits	set	3997
   123  0000                     _PIE2bits	set	4000
   124  0000                     _PIR1bits	set	3998
   125  0000                     _PIR2bits	set	4001
   126  0000                     _PORTAbits	set	3968
   127  0000                     _PORTBbits	set	3969
   128  0000                     _PORTDbits	set	3971
   129  0000                     _RC1STA	set	4011
   130  0000                     _RC1STAbits	set	4011
   131  0000                     _RCONbits	set	4048
   132  0000                     _RCREG1	set	4014
   133  0000                     _SPBRG1	set	4015
   134  0000                     _SPBRGH1	set	4016
   135  0000                     _SSP1ADD	set	4040
   136  0000                     _SSP1BUF	set	4041
   137  0000                     _SSP1CON1	set	4038
   138  0000                     _SSP1CON1bits	set	4038
   139  0000                     _SSP1CON2bits	set	4037
   140  0000                     _SSP1CON3	set	4043
   141  0000                     _SSP1STAT	set	4039
   142  0000                     _T0CON	set	4053
   143  0000                     _T0CONbits	set	4053
   144  0000                     _TMR0H	set	4055
   145  0000                     _TMR0L	set	4054
   146  0000                     _TRISA	set	3986
   147  0000                     _TRISB	set	3987
   148  0000                     _TRISC	set	3988
   149  0000                     _TRISCbits	set	3988
   150  0000                     _TRISD	set	3989
   151  0000                     _TRISE	set	3990
   152  0000                     _TX1STA	set	4012
   153  0000                     _TXREG1	set	4013
   154  0000                     _WPUB	set	3937
   155  0000                     _LATA3	set	31819
   156  0000                     _LATB3	set	31827
   157  0000                     _LATB5	set	31829
   158  0000                     _LATD1	set	31841
   159  0000                     _LATE1	set	31849
   160  0000                     _LATE2	set	31850
   161                           
   162                           	psect	nvCOMRAM
   163  000043                     __pnvCOMRAM:
   164                           	opt stack 0
   165  000043                     _timer0ReloadVal16bit:
   166                           	opt stack 0
   167  000043                     	ds	2
   168                           
   169                           ; #config settings
   170  0000                     
   171                           	psect	cinit
   172  0025B2                     __pcinit:
   173                           	opt stack 0
   174  0025B2                     start_initialization:
   175                           	opt stack 0
   176  0025B2                     __initialization:
   177                           	opt stack 0
   178                           
   179                           ; Clear objects allocated to BANK4 (206 bytes)
   180  0025B2  EE04  F000         	lfsr	0,__pbssBANK4
   181  0025B6  0ECE               	movlw	206
   182  0025B8                     clear_0:
   183  0025B8  6AEE               	clrf	postinc0,c
   184  0025BA  06E8               	decf	wreg,f,c
   185  0025BC  E1FD               	bnz	clear_0
   186                           
   187                           ; Clear objects allocated to BANK3 (206 bytes)
   188  0025BE  EE03  F000         	lfsr	0,__pbssBANK3
   189  0025C2  0ECE               	movlw	206
   190  0025C4                     clear_1:
   191  0025C4  6AEE               	clrf	postinc0,c
   192  0025C6  06E8               	decf	wreg,f,c
   193  0025C8  E1FD               	bnz	clear_1
   194                           
   195                           ; Clear objects allocated to BANK2 (200 bytes)
   196  0025CA  EE02  F000         	lfsr	0,__pbssBANK2
   197  0025CE  0EC8               	movlw	200
   198  0025D0                     clear_2:
   199  0025D0  6AEE               	clrf	postinc0,c
   200  0025D2  06E8               	decf	wreg,f,c
   201  0025D4  E1FD               	bnz	clear_2
   202                           
   203                           ; Clear objects allocated to BANK1 (246 bytes)
   204  0025D6  EE01  F000         	lfsr	0,__pbssBANK1
   205  0025DA  0EF6               	movlw	246
   206  0025DC                     clear_3:
   207  0025DC  6AEE               	clrf	postinc0,c
   208  0025DE  06E8               	decf	wreg,f,c
   209  0025E0  E1FD               	bnz	clear_3
   210                           
   211                           ; Clear objects allocated to BANK0 (115 bytes)
   212  0025E2  EE00  F060         	lfsr	0,__pbssBANK0
   213  0025E6  0E73               	movlw	115
   214  0025E8                     clear_4:
   215  0025E8  6AEE               	clrf	postinc0,c
   216  0025EA  06E8               	decf	wreg,f,c
   217  0025EC  E1FD               	bnz	clear_4
   218                           
   219                           ; Clear objects allocated to COMRAM (24 bytes)
   220  0025EE  EE00  F02B         	lfsr	0,__pbssCOMRAM
   221  0025F2  0E18               	movlw	24
   222  0025F4                     clear_5:
   223  0025F4  6AEE               	clrf	postinc0,c
   224  0025F6  06E8               	decf	wreg,f,c
   225  0025F8  E1FD               	bnz	clear_5
   226                           
   227                           ; Initialize objects allocated to COMRAM (1 bytes)
   228                           ; load TBLPTR registers with __pidataCOMRAM
   229  0025FA  0E16               	movlw	low __pidataCOMRAM
   230  0025FC  6EF6               	movwf	tblptrl,c
   231  0025FE  0E2C               	movlw	high __pidataCOMRAM
   232  002600  6EF7               	movwf	tblptrh,c
   233  002602  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   234  002604  6EF8               	movwf	tblptru,c
   235  002606  0009               	tblrd		*+	;fetch initializer
   236  002608  CFF5 F045          	movff	tablat,__pdataCOMRAM
   237  00260C                     end_of_initialization:
   238                           	opt stack 0
   239  00260C                     __end_of__initialization:
   240                           	opt stack 0
   241  00260C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   242  00260E  6EF8               	movwf	tblptru,c
   243  002610  0100               	movlb	0
   244  002612  EFB3  F00C         	goto	_main	;jump to C main() function
   245                           tblptru	equ	0xFF8
   246                           tblptrh	equ	0xFF7
   247                           tblptrl	equ	0xFF6
   248                           tablat	equ	0xFF5
   249                           postinc0	equ	0xFEE
   250                           wreg	equ	0xFE8
   251                           
   252                           	psect	bssCOMRAM
   253  00002B                     __pbssCOMRAM:
   254                           	opt stack 0
   255  00002B                     _p_i2c1_trb_current:
   256                           	opt stack 0
   257  00002B                     	ds	2
   258  00002D                     _serial_available:
   259                           	opt stack 0
   260  00002D                     	ds	2
   261  00002F                     _serial_read:
   262                           	opt stack 0
   263  00002F                     	ds	2
   264  000031                     _serial_write:
   265                           	opt stack 0
   266  000031                     	ds	2
   267  000033                     I2C1_ISR@i2c_10bit_address_restart:
   268                           	opt stack 0
   269  000033                     	ds	1
   270  000034                     I2C1_ISR@i2c_bytes_left:
   271                           	opt stack 0
   272  000034                     	ds	1
   273  000035                     _AKNAKsend:
   274                           	opt stack 0
   275  000035                     	ds	1
   276  000036                     _calc_CS:
   277                           	opt stack 0
   278  000036                     	ds	1
   279  000037                     _i2c1_state:
   280                           	opt stack 0
   281  000037                     	ds	1
   282  000038                     _i2c1_trb_count:
   283                           	opt stack 0
   284  000038                     	ds	1
   285  000039                     _maxDataAddress:
   286                           	opt stack 0
   287  000039                     	ds	1
   288  00003A                     _moduleAddress:
   289                           	opt stack 0
   290  00003A                     	ds	1
   291  00003B                     _returnAddress:
   292                           	opt stack 0
   293  00003B                     	ds	1
   294  00003C                     _rx_address:
   295                           	opt stack 0
   296  00003C                     	ds	1
   297  00003D                     _rx_array_inx:
   298                           	opt stack 0
   299  00003D                     	ds	1
   300  00003E                     _rx_len:
   301                           	opt stack 0
   302  00003E                     	ds	1
   303  00003F                     I2C1_ISR@i2c_address:
   304                           	opt stack 0
   305  00003F                     	ds	2
   306  000041                     _group:
   307                           	opt stack 0
   308  000041                     	ds	2
   309                           tblptru	equ	0xFF8
   310                           tblptrh	equ	0xFF7
   311                           tblptrl	equ	0xFF6
   312                           tablat	equ	0xFF5
   313                           postinc0	equ	0xFEE
   314                           wreg	equ	0xFE8
   315                           
   316                           	psect	dataCOMRAM
   317  000045                     __pdataCOMRAM:
   318                           	opt stack 0
   319  000045                     _Transmit_stall:
   320                           	opt stack 0
   321  000045                     	ds	1
   322                           tblptru	equ	0xFF8
   323                           tblptrh	equ	0xFF7
   324                           tblptrl	equ	0xFF6
   325                           tablat	equ	0xFF5
   326                           postinc0	equ	0xFEE
   327                           wreg	equ	0xFE8
   328                           
   329                           	psect	bssBANK0
   330  000060                     __pbssBANK0:
   331                           	opt stack 0
   332  000060                     _displaybuffer:
   333                           	opt stack 0
   334  000060                     	ds	40
   335  000088                     _butnarray:
   336                           	opt stack 0
   337  000088                     	ds	8
   338  000090                     _i2c1_object:
   339                           	opt stack 0
   340  000090                     	ds	7
   341  000097                     I2C1_ISR@pi2c_buf_ptr:
   342                           	opt stack 0
   343  000097                     	ds	2
   344  000099                     TMR0_ISR@CountCallBack:
   345                           	opt stack 0
   346  000099                     	ds	2
   347  00009B                     _addressErrorCounter:
   348                           	opt stack 0
   349  00009B                     	ds	2
   350  00009D                     _alignErrorCounter:
   351                           	opt stack 0
   352  00009D                     	ds	2
   353  00009F                     _brake:
   354                           	opt stack 0
   355  00009F                     	ds	2
   356  0000A1                     _crcErrorCounter:
   357                           	opt stack 0
   358  0000A1                     	ds	2
   359  0000A3                     _dataAdressErrorCounter:
   360                           	opt stack 0
   361  0000A3                     	ds	2
   362  0000A5                     _p_i2c1_current:
   363                           	opt stack 0
   364  0000A5                     	ds	2
   365  0000A7                     _receiveArrayAddress:
   366                           	opt stack 0
   367  0000A7                     	ds	2
   368  0000A9                     _sendStructAddress:
   369                           	opt stack 0
   370  0000A9                     	ds	2
   371  0000AB                     _serial_peek:
   372                           	opt stack 0
   373  0000AB                     	ds	2
   374  0000AD                     _throttle:
   375                           	opt stack 0
   376  0000AD                     	ds	2
   377  0000AF                     _time:
   378                           	opt stack 0
   379  0000AF                     	ds	2
   380  0000B1                     handleIndicators@oldIndicators:
   381                           	opt stack 0
   382  0000B1                     	ds	2
   383  0000B3                     _crc_buffer:
   384                           	opt stack 0
   385  0000B3                     	ds	17
   386  0000C4                     I2C1_MasterRead@trBlock:
   387                           	opt stack 0
   388  0000C4                     	ds	5
   389  0000C9                     I2C1_MasterWrite@trBlock:
   390                           	opt stack 0
   391  0000C9                     	ds	5
   392  0000CE                     _i2c1_tr_queue:
   393                           	opt stack 0
   394  0000CE                     	ds	5
   395                           tblptru	equ	0xFF8
   396                           tblptrh	equ	0xFF7
   397                           tblptrl	equ	0xFF6
   398                           tablat	equ	0xFF5
   399                           postinc0	equ	0xFEE
   400                           wreg	equ	0xFE8
   401                           
   402                           	psect	bssBANK1
   403  000100                     __pbssBANK1:
   404                           	opt stack 0
   405  000100                     _ring_buffer:
   406                           	opt stack 0
   407  000100                     	ds	206
   408  0001CE                     _receiveArray:
   409                           	opt stack 0
   410  0001CE                     	ds	40
   411                           tblptru	equ	0xFF8
   412                           tblptrh	equ	0xFF7
   413                           tblptrl	equ	0xFF6
   414                           tablat	equ	0xFF5
   415                           postinc0	equ	0xFEE
   416                           wreg	equ	0xFE8
   417                           
   418                           	psect	bssBANK2
   419  000200                     __pbssBANK2:
   420                           	opt stack 0
   421  000200                     _rx_buffer:
   422                           	opt stack 0
   423  000200                     	ds	200
   424                           tblptru	equ	0xFF8
   425                           tblptrh	equ	0xFF7
   426                           tblptrl	equ	0xFF6
   427                           tablat	equ	0xFF5
   428                           postinc0	equ	0xFEE
   429                           wreg	equ	0xFE8
   430                           
   431                           	psect	bssBANK3
   432  000300                     __pbssBANK3:
   433                           	opt stack 0
   434  000300                     _input_buffer:
   435                           	opt stack 0
   436  000300                     	ds	206
   437                           tblptru	equ	0xFF8
   438                           tblptrh	equ	0xFF7
   439                           tblptrl	equ	0xFF6
   440                           tablat	equ	0xFF5
   441                           postinc0	equ	0xFEE
   442                           wreg	equ	0xFE8
   443                           
   444                           	psect	bssBANK4
   445  000400                     __pbssBANK4:
   446                           	opt stack 0
   447  000400                     _output_buffer:
   448                           	opt stack 0
   449  000400                     	ds	206
   450                           tblptru	equ	0xFF8
   451                           tblptrh	equ	0xFF7
   452                           tblptrl	equ	0xFF6
   453                           tablat	equ	0xFF5
   454                           postinc0	equ	0xFEE
   455                           wreg	equ	0xFE8
   456                           
   457                           	psect	cstackBANK0
   458  0000D3                     __pcstackBANK0:
   459                           	opt stack 0
   460  0000D3                     ??_LEDsetBar:
   461  0000D3                     ?___ftmul:
   462                           	opt stack 0
   463  0000D3                     sendData@whereToSend:
   464                           	opt stack 0
   465  0000D3                     CRCcheck@SentCRC:
   466                           	opt stack 0
   467  0000D3                     LEDBsetBrightness@b:
   468                           	opt stack 0
   469  0000D3                     LEDblinkRate@b:
   470                           	opt stack 0
   471  0000D3                     begin@ptr:
   472                           	opt stack 0
   473  0000D3                     ToSend@what:
   474                           	opt stack 0
   475  0000D3                     ___ftmul@f1:
   476                           	opt stack 0
   477  0000D3                     LEDwriteDisplay@writeBuffer:
   478                           	opt stack 0
   479                           
   480                           ; 20 bytes @ 0x0
   481  0000D3                     	ds	1
   482  0000D4                     sendData@CS:
   483                           	opt stack 0
   484  0000D4                     CRCcheck@calculatedCRC:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0x1
   488  0000D4                     	ds	1
   489  0000D5                     LEDBsetBrightness@i2c_addr:
   490                           	opt stack 0
   491  0000D5                     LEDblinkRate@i2c_addr:
   492                           	opt stack 0
   493  0000D5                     begin@maxSize:
   494                           	opt stack 0
   495  0000D5                     sendData@i:
   496                           	opt stack 0
   497  0000D5                     CRCcheck@arrayHolder:
   498                           	opt stack 0
   499                           
   500                           ; 3 bytes @ 0x2
   501  0000D5                     	ds	1
   502  0000D6                     begin@givenAddress:
   503                           	opt stack 0
   504  0000D6                     LEDBsetBrightness@writeBuffer:
   505                           	opt stack 0
   506  0000D6                     LEDblinkRate@writeBuffer:
   507                           	opt stack 0
   508  0000D6                     ___ftmul@f2:
   509                           	opt stack 0
   510                           
   511                           ; 3 bytes @ 0x3
   512  0000D6                     	ds	1
   513  0000D7                     begin@error:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x4
   517  0000D7                     	ds	1
   518  0000D8                     LEDBsetBrightness@timeOut:
   519                           	opt stack 0
   520  0000D8                     LEDblinkRate@timeOut:
   521                           	opt stack 0
   522  0000D8                     begin@stufftosend:
   523                           	opt stack 0
   524  0000D8                     CRCcheck@rt:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x5
   528  0000D8                     	ds	1
   529  0000D9                     ___ftmul@exp:
   530                           	opt stack 0
   531                           
   532                           ; 1 bytes @ 0x6
   533  0000D9                     	ds	1
   534  0000DA                     LEDBsetBrightness@status:
   535                           	opt stack 0
   536  0000DA                     LEDblinkRate@status:
   537                           	opt stack 0
   538  0000DA                     begin@stufftoreceive:
   539                           	opt stack 0
   540  0000DA                     receiveData@holder:
   541                           	opt stack 0
   542  0000DA                     ___ftmul@f3_as_product:
   543                           	opt stack 0
   544                           
   545                           ; 3 bytes @ 0x7
   546  0000DA                     	ds	1
   547  0000DB                     LEDbegin@writeBuffer:
   548                           	opt stack 0
   549                           
   550                           ; 3 bytes @ 0x8
   551  0000DB                     	ds	1
   552  0000DC                     begin@stuffavailable:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0x9
   556  0000DC                     	ds	1
   557  0000DD                     ___ftmul@cntr:
   558                           	opt stack 0
   559  0000DD                     receiveData@holder_2257:
   560                           	opt stack 0
   561                           
   562                           ; 3 bytes @ 0xA
   563  0000DD                     	ds	1
   564  0000DE                     ___ftmul@sign:
   565                           	opt stack 0
   566  0000DE                     LEDbegin@timeOut:
   567                           	opt stack 0
   568  0000DE                     begin@stuffpeek:
   569                           	opt stack 0
   570                           
   571                           ; 2 bytes @ 0xB
   572  0000DE                     	ds	1
   573  0000DF                     ?___fttol:
   574                           	opt stack 0
   575  0000DF                     ___fttol@f1:
   576                           	opt stack 0
   577                           
   578                           ; 3 bytes @ 0xC
   579  0000DF                     	ds	1
   580  0000E0                     LEDbegin@i2c_addr:
   581                           	opt stack 0
   582  0000E0                     receiveData@crcHolder:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0xD
   586  0000E0                     	ds	1
   587  0000E1                     LEDbegin@status:
   588                           	opt stack 0
   589  0000E1                     receiveData@crcHolder_2258:
   590                           	opt stack 0
   591                           
   592                           ; 1 bytes @ 0xE
   593  0000E1                     	ds	1
   594  0000E2                     receiveData@u:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0xF
   598  0000E2                     	ds	1
   599  0000E3                     ??___fttol:
   600                           
   601                           ; 0 bytes @ 0x10
   602  0000E3                     	ds	1
   603  0000E4                     receiveData@r:
   604                           	opt stack 0
   605                           
   606                           ; 2 bytes @ 0x11
   607  0000E4                     	ds	3
   608  0000E7                     LEDwriteDisplay@i2c_addr:
   609                           	opt stack 0
   610                           
   611                           ; 1 bytes @ 0x14
   612  0000E7                     	ds	1
   613  0000E8                     ___fttol@sign1:
   614                           	opt stack 0
   615  0000E8                     LEDwriteDisplay@timeOut:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0x15
   619  0000E8                     	ds	1
   620  0000E9                     ___fttol@lval:
   621                           	opt stack 0
   622                           
   623                           ; 4 bytes @ 0x16
   624  0000E9                     	ds	1
   625  0000EA                     LEDwriteDisplay@status:
   626                           	opt stack 0
   627                           
   628                           ; 1 bytes @ 0x17
   629  0000EA                     	ds	3
   630  0000ED                     ___fttol@exp1:
   631                           	opt stack 0
   632                           
   633                           ; 1 bytes @ 0x1A
   634  0000ED                     	ds	1
   635  0000EE                     LEDsetValue@value:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x1B
   639  0000EE                     	ds	2
   640  0000F0                     LEDsetValue@color:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0x1D
   644  0000F0                     	ds	2
   645  0000F2                     ??_LEDsetValue:
   646                           
   647                           ; 0 bytes @ 0x1F
   648  0000F2                     	ds	1
   649  0000F3                     LEDsetValue@k:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0x20
   653  0000F3                     	ds	2
   654  0000F5                     ??_main:
   655                           
   656                           ; 0 bytes @ 0x22
   657  0000F5                     	ds	4
   658  0000F9                     main@ADCNT:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0x26
   662  0000F9                     	ds	2
   663                           tblptru	equ	0xFF8
   664                           tblptrh	equ	0xFF7
   665                           tblptrl	equ	0xFF6
   666                           tablat	equ	0xFF5
   667                           postinc0	equ	0xFEE
   668                           wreg	equ	0xFE8
   669                           
   670                           	psect	cstackCOMRAM
   671  000001                     __pcstackCOMRAM:
   672                           	opt stack 0
   673  000001                     ??_I2C1_Stop:
   674  000001                     ?i2_UART_buff_size:
   675                           	opt stack 0
   676  000001                     ?i2_UART_buff_modulo_inc:
   677                           	opt stack 0
   678  000001                     ReadButtonState@btnnum:
   679                           	opt stack 0
   680  000001                     i2UART_buff_size@_this:
   681                           	opt stack 0
   682  000001                     i2UART_buff_modulo_inc@value:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0x0
   686  000001                     	ds	2
   687  000003                     ??_ReadButtonState:
   688  000003                     I2C1_Stop@completion_code:
   689                           	opt stack 0
   690  000003                     i2UART_buff_modulo_inc@modulus:
   691                           	opt stack 0
   692                           
   693                           ; 2 bytes @ 0x2
   694  000003                     	ds	1
   695  000004                     ??_I2C1_ISR:
   696                           
   697                           ; 0 bytes @ 0x3
   698  000004                     	ds	1
   699  000005                     ??_TMR0_ISR:
   700  000005                     i2UART_buff_modulo_inc@my_value:
   701                           	opt stack 0
   702                           
   703                           ; 2 bytes @ 0x4
   704  000005                     	ds	2
   705  000007                     i2UART_buff_put@_this:
   706                           	opt stack 0
   707  000007                     i2UART_buff_get@_this:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x6
   711  000007                     	ds	1
   712  000008                     TMR0_ISR@x:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x7
   716  000008                     	ds	1
   717  000009                     ??i2_UART_buff_get:
   718  000009                     i2UART_buff_put@c:
   719                           	opt stack 0
   720                           
   721                           ; 1 bytes @ 0x8
   722  000009                     	ds	1
   723  00000A                     ??i2_UART_buff_put:
   724                           
   725                           ; 0 bytes @ 0x9
   726  00000A                     	ds	1
   727  00000B                     i2UART_buff_get@c:
   728                           	opt stack 0
   729                           
   730                           ; 1 bytes @ 0xA
   731  00000B                     	ds	1
   732  00000C                     EUSART1_Receive_ISR@data:
   733                           	opt stack 0
   734                           
   735                           ; 1 bytes @ 0xB
   736  00000C                     	ds	1
   737  00000D                     ??_INTERRUPT_InterruptManager:
   738                           
   739                           ; 0 bytes @ 0xC
   740  00000D                     	ds	14
   741  00001B                     ?_FastTransfer_buffer_modulo_inc:
   742                           	opt stack 0
   743  00001B                     ?_UART_buff_modulo_inc:
   744                           	opt stack 0
   745  00001B                     ?_UART_buff_size:
   746                           	opt stack 0
   747  00001B                     ?___awdiv:
   748                           	opt stack 0
   749  00001B                     ?___ftpack:
   750                           	opt stack 0
   751  00001B                     I2C1_MasterTRBInsert@ptrb_list:
   752                           	opt stack 0
   753  00001B                     I2C1_MasterWriteTRBBuild@ptrb:
   754                           	opt stack 0
   755  00001B                     Delay@wait:
   756                           	opt stack 0
   757  00001B                     SetLEDOut@lednum:
   758                           	opt stack 0
   759  00001B                     GetButtonState@btnnum:
   760                           	opt stack 0
   761  00001B                     TBbarGraphs@t:
   762                           	opt stack 0
   763  00001B                     CRC8@data:
   764                           	opt stack 0
   765  00001B                     FastTransfer_buffer_modulo_inc@value:
   766                           	opt stack 0
   767  00001B                     crcBufS_put@_this:
   768                           	opt stack 0
   769  00001B                     crcBufS_status_put@_this:
   770                           	opt stack 0
   771  00001B                     crcBufS_get@_this:
   772                           	opt stack 0
   773  00001B                     UART_buff_size@_this:
   774                           	opt stack 0
   775  00001B                     UART_buff_modulo_inc@value:
   776                           	opt stack 0
   777  00001B                     UART_buff_peek@_this:
   778                           	opt stack 0
   779  00001B                     ___awdiv@dividend:
   780                           	opt stack 0
   781  00001B                     memset@p1:
   782                           	opt stack 0
   783  00001B                     ___ftpack@arg:
   784                           	opt stack 0
   785                           
   786                           ; 3 bytes @ 0x1A
   787  00001B                     	ds	2
   788  00001D                     ??_Delay:
   789  00001D                     ??_GetButtonState:
   790  00001D                     ??_UART_buff_peek:
   791  00001D                     ?_Receive_available:
   792                           	opt stack 0
   793  00001D                     SetLEDOut@state:
   794                           	opt stack 0
   795  00001D                     CRC8@len:
   796                           	opt stack 0
   797  00001D                     crcBufS_put@address:
   798                           	opt stack 0
   799  00001D                     crcBufS_status_put@time:
   800                           	opt stack 0
   801  00001D                     crcBufS_get@time:
   802                           	opt stack 0
   803  00001D                     I2C1_MasterTRBInsert@pflag:
   804                           	opt stack 0
   805  00001D                     I2C1_MasterWriteTRBBuild@pdata:
   806                           	opt stack 0
   807  00001D                     TBbarGraphs@b:
   808                           	opt stack 0
   809  00001D                     FastTransfer_buffer_modulo_inc@modulus:
   810                           	opt stack 0
   811  00001D                     UART_buff_modulo_inc@modulus:
   812                           	opt stack 0
   813  00001D                     ___awdiv@divisor:
   814                           	opt stack 0
   815  00001D                     memset@c:
   816                           	opt stack 0
   817                           
   818                           ; 2 bytes @ 0x1C
   819  00001D                     	ds	1
   820  00001E                     ??_SetLEDOut:
   821  00001E                     CRC8@sum:
   822                           	opt stack 0
   823  00001E                     crcBufS_put@oldCRC:
   824                           	opt stack 0
   825  00001E                     crcBufS_status_put@status:
   826                           	opt stack 0
   827  00001E                     crcBufS_get@space:
   828                           	opt stack 0
   829  00001E                     ___ftpack@exp:
   830                           	opt stack 0
   831  00001E                     Delay@x:
   832                           	opt stack 0
   833                           
   834                           ; 2 bytes @ 0x1D
   835  00001E                     	ds	1
   836  00001F                     ??_I2C1_MasterTRBInsert:
   837  00001F                     ??_crcBufS_get:
   838  00001F                     ??_crcBufS_status_put:
   839  00001F                     I2C1_MasterWriteTRBBuild@length:
   840                           	opt stack 0
   841  00001F                     CRC8@extract:
   842                           	opt stack 0
   843  00001F                     crcBufS_put@status:
   844                           	opt stack 0
   845  00001F                     ___awdiv@counter:
   846                           	opt stack 0
   847  00001F                     ___ftpack@sign:
   848                           	opt stack 0
   849  00001F                     FastTransfer_buffer_modulo_inc@my_value:
   850                           	opt stack 0
   851  00001F                     UART_buff_modulo_inc@my_value:
   852                           	opt stack 0
   853  00001F                     memset@n:
   854                           	opt stack 0
   855                           
   856                           ; 2 bytes @ 0x1E
   857  00001F                     	ds	1
   858  000020                     ??_crcBufS_put:
   859  000020                     ??___ftpack:
   860  000020                     CRC8@tempI:
   861                           	opt stack 0
   862  000020                     ___awdiv@sign:
   863                           	opt stack 0
   864  000020                     I2C1_MasterWriteTRBBuild@address:
   865                           	opt stack 0
   866  000020                     handleIndicators@receivedIndicators:
   867                           	opt stack 0
   868                           
   869                           ; 2 bytes @ 0x1F
   870  000020                     	ds	1
   871  000021                     ?_buttonsCollector:
   872                           	opt stack 0
   873  000021                     I2C1_MasterTRBInsert@count:
   874                           	opt stack 0
   875  000021                     CRC8@crc:
   876                           	opt stack 0
   877  000021                     FastTransfer_buffer_put@_this:
   878                           	opt stack 0
   879  000021                     UART_buff_put@_this:
   880                           	opt stack 0
   881  000021                     UART_buff_get@_this:
   882                           	opt stack 0
   883  000021                     ___awdiv@quotient:
   884                           	opt stack 0
   885  000021                     memset@p:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x20
   889  000021                     	ds	1
   890  000022                     ??_I2C1_MasterWriteTRBBuild:
   891  000022                     ??_handleIndicators:
   892                           
   893                           ; 0 bytes @ 0x21
   894  000022                     	ds	1
   895  000023                     ??_buttonsCollector:
   896  000023                     ??_UART_buff_get:
   897  000023                     ?___lwtoft:
   898                           	opt stack 0
   899  000023                     FastTransfer_buffer_put@towhere:
   900                           	opt stack 0
   901  000023                     UART_buff_put@c:
   902                           	opt stack 0
   903  000023                     LEDsetBar@bar:
   904                           	opt stack 0
   905  000023                     FastTransfer_buffer_flush@_this:
   906                           	opt stack 0
   907  000023                     crcBufS_status_put@wantedTime:
   908                           	opt stack 0
   909  000023                     UART_buff_init@_this:
   910                           	opt stack 0
   911  000023                     ___lwtoft@c:
   912                           	opt stack 0
   913                           
   914                           ; 2 bytes @ 0x22
   915  000023                     	ds	1
   916  000024                     ??_UART_buff_put:
   917  000024                     I2C1_MasterWrite@pdata:
   918                           	opt stack 0
   919  000024                     FastTransfer_buffer_put@towhat:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x23
   923  000024                     	ds	1
   924  000025                     UART_buff_get@c:
   925                           	opt stack 0
   926  000025                     LEDsetBar@color:
   927                           	opt stack 0
   928  000025                     handleIndicators@i:
   929                           	opt stack 0
   930  000025                     FastTransfer_buffer_flush@clearBuffer:
   931                           	opt stack 0
   932  000025                     crcBufS_get@wantedTime:
   933                           	opt stack 0
   934                           
   935                           ; 2 bytes @ 0x24
   936  000025                     	ds	1
   937  000026                     ??_FastTransfer_buffer_put:
   938  000026                     ??___ftmul:
   939  000026                     I2C1_MasterWrite@length:
   940                           	opt stack 0
   941  000026                     Send_put@_data:
   942                           	opt stack 0
   943  000026                     buttonsCollector@sendVal:
   944                           	opt stack 0
   945                           
   946                           ; 2 bytes @ 0x25
   947  000026                     	ds	1
   948  000027                     ??_receiveData:
   949  000027                     ??_sendData:
   950  000027                     I2C1_MasterWrite@address:
   951                           	opt stack 0
   952  000027                     LEDsetBar@c:
   953                           	opt stack 0
   954                           
   955                           ; 2 bytes @ 0x26
   956  000027                     	ds	1
   957  000028                     buttonsCollector@i:
   958                           	opt stack 0
   959                           
   960                           ; 2 bytes @ 0x27
   961  000028                     	ds	1
   962  000029                     I2C1_MasterWrite@pflag:
   963                           	opt stack 0
   964  000029                     LEDsetBar@a:
   965                           	opt stack 0
   966                           
   967                           ; 2 bytes @ 0x28
   968  000029                     	ds	1
   969  00002A                     ToSend@where:
   970                           	opt stack 0
   971                           
   972                           ; 1 bytes @ 0x29
   973  00002A                     	ds	1
   974  00002B                     tblptru	equ	0xFF8
   975                           tblptrh	equ	0xFF7
   976                           tblptrl	equ	0xFF6
   977                           tablat	equ	0xFF5
   978                           postinc0	equ	0xFEE
   979                           wreg	equ	0xFE8
   980                           
   981                           ; 0 bytes @ 0x2A
   982 ;;
   983 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   984 ;;
   985 ;; *************** function _main *****************
   986 ;; Defined at:
   987 ;;		line 32 in file "main.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;		None
   990 ;; Auto vars:     Size  Location     Type
   991 ;;  ADCNT           2   38[BANK0 ] int 
   992 ;; Return value:  Size  Location     Type
   993 ;;		None               void
   994 ;; Registers used:
   995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1001 ;;      Params:         0       0       0       0       0       0       0
  1002 ;;      Locals:         0       2       0       0       0       0       0
  1003 ;;      Temps:          0       4       0       0       0       0       0
  1004 ;;      Totals:         0       6       0       0       0       0       0
  1005 ;;Total ram usage:        6 bytes
  1006 ;; Hardware stack levels required when called:   10
  1007 ;; This function calls:
  1008 ;;		_LEDbegin
  1009 ;;		_LEDsetValue
  1010 ;;		_LEDwriteDisplay
  1011 ;;		_SYSTEM_Initialize
  1012 ;;		___ftmul
  1013 ;;		___fttol
  1014 ;;		___lwtoft
  1015 ;;		_updateComms
  1016 ;; This function is called by:
  1017 ;;		Startup code after reset
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           	psect	text0
  1022  001966                     __ptext0:
  1023                           	opt stack 0
  1024  001966                     _main:
  1025                           	opt stack 21
  1026                           
  1027                           ;main.c: 34: SYSTEM_Initialize();
  1028                           
  1029                           ;incstack = 0
  1030  001966  ECFE  F011         	call	_SYSTEM_Initialize	;wreg free
  1031                           
  1032                           ;main.c: 53: (INTCONbits.GIE = 1);
  1033  00196A  8EF2               	bsf	intcon,7,c	;volatile
  1034                           
  1035                           ;main.c: 56: (INTCONbits.PEIE = 1);
  1036  00196C  8CF2               	bsf	intcon,6,c	;volatile
  1037                           
  1038                           ;main.c: 63: int ADCNT = 1;
  1039  00196E  0E00               	movlw	0
  1040  001970  0100               	movlb	0	; () banked
  1041  001972  6FFA               	movwf	(main@ADCNT+1)& (0+255),b
  1042  001974  0E01               	movlw	1
  1043  001976  0100               	movlb	0	; () banked
  1044  001978  6FF9               	movwf	main@ADCNT& (0+255),b
  1045                           
  1046                           ; BSR set to: 0
  1047                           ;main.c: 64: LEDbegin(0x70);
  1048  00197A  0E70               	movlw	112
  1049  00197C  ECFA  F00F         	call	_LEDbegin
  1050                           
  1051                           ;main.c: 65: LEDbegin(0x71);
  1052  001980  0E71               	movlw	113
  1053  001982  ECFA  F00F         	call	_LEDbegin
  1054                           
  1055                           ;main.c: 66: do { LATA3 = 1; } while(0);
  1056  001986  8689               	bsf	3977,3,c	;volatile
  1057                           
  1058                           ;main.c: 68: LATCbits.LATC5 = 0;
  1059  001988  9A8B               	bcf	3979,5,c	;volatile
  1060  00198A                     l5448:
  1061                           
  1062                           ;main.c: 70: updateComms();
  1063  00198A  EC61  F014         	call	_updateComms	;wreg free
  1064                           
  1065                           ;main.c: 76: if (time > 1) {
  1066  00198E  0E02               	movlw	2
  1067  001990  0100               	movlb	0	; () banked
  1068  001992  5DAF               	subwf	_time& (0+255),w,b	;volatile
  1069  001994  0E00               	movlw	0
  1070  001996  0100               	movlb	0	; () banked
  1071  001998  59B0               	subwfb	(_time+1)& (0+255),w,b	;volatile
  1072  00199A  A0D8               	btfss	status,0,c
  1073  00199C  D7F6               	goto	l5448
  1074                           
  1075                           ; BSR set to: 0
  1076                           ;main.c: 77: LEDsetValue((throttle)*(24.0 / 100.0), 1);
  1077  00199E  0EC3               	movlw	195
  1078  0019A0  0100               	movlb	0	; () banked
  1079  0019A2  6FD6               	movwf	___ftmul@f2& (0+255),b
  1080  0019A4  0E75               	movlw	117
  1081  0019A6  0100               	movlb	0	; () banked
  1082  0019A8  6FD7               	movwf	(___ftmul@f2+1)& (0+255),b
  1083  0019AA  0E3E               	movlw	62
  1084  0019AC  0100               	movlb	0	; () banked
  1085  0019AE  6FD8               	movwf	(___ftmul@f2+2)& (0+255),b
  1086  0019B0  C0AD  F023         	movff	_throttle,___lwtoft@c
  1087  0019B4  C0AE  F024         	movff	_throttle+1,___lwtoft@c+1
  1088  0019B8  EC4F  F015         	call	___lwtoft	;wreg free
  1089  0019BC  C023  F0D3         	movff	?___lwtoft,___ftmul@f1
  1090  0019C0  C024  F0D4         	movff	?___lwtoft+1,___ftmul@f1+1
  1091  0019C4  C025  F0D5         	movff	?___lwtoft+2,___ftmul@f1+2
  1092  0019C8  ECFB  F008         	call	___ftmul	;wreg free
  1093  0019CC  C0D3  F0DF         	movff	?___ftmul,___fttol@f1
  1094  0019D0  C0D4  F0E0         	movff	?___ftmul+1,___fttol@f1+1
  1095  0019D4  C0D5  F0E1         	movff	?___ftmul+2,___fttol@f1+2
  1096  0019D8  ECCF  F006         	call	___fttol	;wreg free
  1097  0019DC  C0DF  F0F5         	movff	?___fttol,??_main
  1098  0019E0  C0E0  F0F6         	movff	?___fttol+1,??_main+1
  1099  0019E4  C0E1  F0F7         	movff	?___fttol+2,??_main+2
  1100  0019E8  C0E2  F0F8         	movff	?___fttol+3,??_main+3
  1101  0019EC  C0F5  F0EE         	movff	??_main,LEDsetValue@value
  1102  0019F0  C0F6  F0EF         	movff	??_main+1,LEDsetValue@value+1
  1103  0019F4  0E00               	movlw	0
  1104  0019F6  0100               	movlb	0	; () banked
  1105  0019F8  6FF1               	movwf	(LEDsetValue@color+1)& (0+255),b
  1106  0019FA  0E01               	movlw	1
  1107  0019FC  0100               	movlb	0	; () banked
  1108  0019FE  6FF0               	movwf	LEDsetValue@color& (0+255),b
  1109  001A00  ECFC  F00E         	call	_LEDsetValue	;wreg free
  1110                           
  1111                           ;main.c: 78: LEDwriteDisplay(0x70);
  1112  001A04  0E70               	movlw	112
  1113  001A06  EC59  F00A         	call	_LEDwriteDisplay
  1114                           
  1115                           ;main.c: 79: LEDsetValue((brake)*(24.0 / 100.0), 1);
  1116  001A0A  0EC3               	movlw	195
  1117  001A0C  0100               	movlb	0	; () banked
  1118  001A0E  6FD6               	movwf	___ftmul@f2& (0+255),b
  1119  001A10  0E75               	movlw	117
  1120  001A12  0100               	movlb	0	; () banked
  1121  001A14  6FD7               	movwf	(___ftmul@f2+1)& (0+255),b
  1122  001A16  0E3E               	movlw	62
  1123  001A18  0100               	movlb	0	; () banked
  1124  001A1A  6FD8               	movwf	(___ftmul@f2+2)& (0+255),b
  1125  001A1C  C09F  F023         	movff	_brake,___lwtoft@c
  1126  001A20  C0A0  F024         	movff	_brake+1,___lwtoft@c+1
  1127  001A24  EC4F  F015         	call	___lwtoft	;wreg free
  1128  001A28  C023  F0D3         	movff	?___lwtoft,___ftmul@f1
  1129  001A2C  C024  F0D4         	movff	?___lwtoft+1,___ftmul@f1+1
  1130  001A30  C025  F0D5         	movff	?___lwtoft+2,___ftmul@f1+2
  1131  001A34  ECFB  F008         	call	___ftmul	;wreg free
  1132  001A38  C0D3  F0DF         	movff	?___ftmul,___fttol@f1
  1133  001A3C  C0D4  F0E0         	movff	?___ftmul+1,___fttol@f1+1
  1134  001A40  C0D5  F0E1         	movff	?___ftmul+2,___fttol@f1+2
  1135  001A44  ECCF  F006         	call	___fttol	;wreg free
  1136  001A48  C0DF  F0F5         	movff	?___fttol,??_main
  1137  001A4C  C0E0  F0F6         	movff	?___fttol+1,??_main+1
  1138  001A50  C0E1  F0F7         	movff	?___fttol+2,??_main+2
  1139  001A54  C0E2  F0F8         	movff	?___fttol+3,??_main+3
  1140  001A58  C0F5  F0EE         	movff	??_main,LEDsetValue@value
  1141  001A5C  C0F6  F0EF         	movff	??_main+1,LEDsetValue@value+1
  1142  001A60  0E00               	movlw	0
  1143  001A62  0100               	movlb	0	; () banked
  1144  001A64  6FF1               	movwf	(LEDsetValue@color+1)& (0+255),b
  1145  001A66  0E01               	movlw	1
  1146  001A68  0100               	movlb	0	; () banked
  1147  001A6A  6FF0               	movwf	LEDsetValue@color& (0+255),b
  1148  001A6C  ECFC  F00E         	call	_LEDsetValue	;wreg free
  1149                           
  1150                           ;main.c: 80: LEDwriteDisplay(0x71);
  1151  001A70  0E71               	movlw	113
  1152  001A72  EC59  F00A         	call	_LEDwriteDisplay
  1153                           
  1154                           ;main.c: 81: do { LATA3 = ~LATA3; } while(0);
  1155  001A76  7689               	btg	3977,3,c	;volatile
  1156                           
  1157                           ;main.c: 82: time = 0;
  1158  001A78  0E00               	movlw	0
  1159  001A7A  0100               	movlb	0	; () banked
  1160  001A7C  6FB0               	movwf	(_time+1)& (0+255),b	;volatile
  1161  001A7E  0E00               	movlw	0
  1162  001A80  0100               	movlb	0	; () banked
  1163  001A82  6FAF               	movwf	_time& (0+255),b	;volatile
  1164  001A84  D782               	goto	l5448
  1165  001A86                     __end_of_main:
  1166                           	opt stack 0
  1167                           tblptru	equ	0xFF8
  1168                           tblptrh	equ	0xFF7
  1169                           tblptrl	equ	0xFF6
  1170                           tablat	equ	0xFF5
  1171                           intcon	equ	0xFF2
  1172                           postinc0	equ	0xFEE
  1173                           wreg	equ	0xFE8
  1174                           status	equ	0xFD8
  1175                           
  1176 ;; *************** function _updateComms *****************
  1177 ;; Defined at:
  1178 ;;		line 7 in file "Communications.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;		None
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;		None
  1183 ;; Return value:  Size  Location     Type
  1184 ;;		None               void
  1185 ;; Registers used:
  1186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1192 ;;      Params:         0       0       0       0       0       0       0
  1193 ;;      Locals:         0       0       0       0       0       0       0
  1194 ;;      Temps:          0       0       0       0       0       0       0
  1195 ;;      Totals:         0       0       0       0       0       0       0
  1196 ;;Total ram usage:        0 bytes
  1197 ;; Hardware stack levels used:    1
  1198 ;; Hardware stack levels required when called:    9
  1199 ;; This function calls:
  1200 ;;		_TBbarGraphs
  1201 ;;		_handleIndicators
  1202 ;;		_receiveData
  1203 ;;		_respondECU
  1204 ;; This function is called by:
  1205 ;;		_main
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text1
  1210  0028C2                     __ptext1:
  1211                           	opt stack 0
  1212  0028C2                     _updateComms:
  1213                           	opt stack 21
  1214                           
  1215                           ;Communications.c: 8: if (receiveData()) {
  1216                           
  1217                           ; BSR set to: 0
  1218                           ;incstack = 0
  1219  0028C2  EC62  F000         	call	_receiveData	;wreg free
  1220  0028C6  0900               	iorlw	0
  1221  0028C8  B4D8               	btfsc	status,2,c
  1222  0028CA  0012               	return	
  1223                           
  1224                           ;Communications.c: 10: respondECU();
  1225  0028CC  ECB3  F013         	call	_respondECU	;wreg free
  1226                           
  1227                           ;Communications.c: 12: handleIndicators(receiveArray[2]);
  1228  0028D0  C1D2  F020         	movff	_receiveArray+4,handleIndicators@receivedIndicators	;volatile
  1229  0028D4  C1D3  F021         	movff	_receiveArray+5,handleIndicators@receivedIndicators+1	;volatile
  1230  0028D8  EC38  F012         	call	_handleIndicators	;wreg free
  1231                           
  1232                           ;Communications.c: 13: TBbarGraphs(receiveArray[3], receiveArray[4]);
  1233  0028DC  C1D4  F01B         	movff	_receiveArray+6,TBbarGraphs@t	;volatile
  1234  0028E0  C1D5  F01C         	movff	_receiveArray+7,TBbarGraphs@t+1	;volatile
  1235  0028E4  C1D6  F01D         	movff	_receiveArray+8,TBbarGraphs@b	;volatile
  1236  0028E8  C1D7  F01E         	movff	_receiveArray+9,TBbarGraphs@b+1	;volatile
  1237  0028EC  ECED  F015         	call	_TBbarGraphs	;wreg free
  1238                           
  1239                           ;Communications.c: 14: receiveArray[0] = 0;
  1240  0028F0  0E00               	movlw	0
  1241  0028F2  0101               	movlb	1	; () banked
  1242  0028F4  6FCF               	movwf	(_receiveArray+1)& (0+255),b	;volatile
  1243  0028F6  0E00               	movlw	0
  1244  0028F8  0101               	movlb	1	; () banked
  1245  0028FA  6FCE               	movwf	_receiveArray& (0+255),b	;volatile
  1246  0028FC  0012               	return	
  1247  0028FE                     __end_of_updateComms:
  1248                           	opt stack 0
  1249                           tblptru	equ	0xFF8
  1250                           tblptrh	equ	0xFF7
  1251                           tblptrl	equ	0xFF6
  1252                           tablat	equ	0xFF5
  1253                           intcon	equ	0xFF2
  1254                           postinc0	equ	0xFEE
  1255                           wreg	equ	0xFE8
  1256                           status	equ	0xFD8
  1257                           
  1258 ;; *************** function _respondECU *****************
  1259 ;; Defined at:
  1260 ;;		line 18 in file "Communications.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;		None
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;		None
  1265 ;; Return value:  Size  Location     Type
  1266 ;;		None               void
  1267 ;; Registers used:
  1268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, cstack
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1274 ;;      Params:         0       0       0       0       0       0       0
  1275 ;;      Locals:         0       0       0       0       0       0       0
  1276 ;;      Temps:          0       0       0       0       0       0       0
  1277 ;;      Totals:         0       0       0       0       0       0       0
  1278 ;;Total ram usage:        0 bytes
  1279 ;; Hardware stack levels used:    1
  1280 ;; Hardware stack levels required when called:    8
  1281 ;; This function calls:
  1282 ;;		_Delay
  1283 ;;		_ToSend
  1284 ;;		_buttonsCollector
  1285 ;;		_sendData
  1286 ;; This function is called by:
  1287 ;;		_updateComms
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text2
  1292  002766                     __ptext2:
  1293                           	opt stack 0
  1294  002766                     _respondECU:
  1295                           	opt stack 21
  1296                           
  1297                           ;Communications.c: 19: LATCbits.LATC5 = 1;
  1298                           
  1299                           ;incstack = 0
  1300  002766  8A8B               	bsf	3979,5,c	;volatile
  1301                           
  1302                           ;Communications.c: 20: ToSend(0, 3);
  1303  002768  0E00               	movlw	0
  1304  00276A  0100               	movlb	0	; () banked
  1305  00276C  6FD4               	movwf	(ToSend@what+1)& (0+255),b
  1306  00276E  0E03               	movlw	3
  1307  002770  0100               	movlb	0	; () banked
  1308  002772  6FD3               	movwf	ToSend@what& (0+255),b
  1309  002774  0E00               	movlw	0
  1310  002776  EC72  F015         	call	_ToSend
  1311                           
  1312                           ;Communications.c: 21: ToSend(8, buttonsCollector());
  1313  00277A  ECA5  F012         	call	_buttonsCollector	;wreg free
  1314  00277E  C021  F0D3         	movff	?_buttonsCollector,ToSend@what
  1315  002782  C022  F0D4         	movff	?_buttonsCollector+1,ToSend@what+1
  1316  002786  0E08               	movlw	8
  1317  002788  EC72  F015         	call	_ToSend
  1318                           
  1319                           ;Communications.c: 22: Delay(9);
  1320  00278C  0E00               	movlw	0
  1321  00278E  6E1C               	movwf	Delay@wait+1,c
  1322  002790  0E09               	movlw	9
  1323  002792  6E1B               	movwf	Delay@wait,c
  1324  002794  ECB8  F014         	call	_Delay	;wreg free
  1325                           
  1326                           ;Communications.c: 23: sendData(1);
  1327  002798  0E01               	movlw	1
  1328  00279A  ECB0  F009         	call	_sendData
  1329                           
  1330                           ;Communications.c: 24: Delay(3);
  1331  00279E  0E00               	movlw	0
  1332  0027A0  6E1C               	movwf	Delay@wait+1,c
  1333  0027A2  0E03               	movlw	3
  1334  0027A4  6E1B               	movwf	Delay@wait,c
  1335  0027A6  ECB8  F014         	call	_Delay	;wreg free
  1336                           
  1337                           ;Communications.c: 25: LATCbits.LATC5 = 0;
  1338  0027AA  9A8B               	bcf	3979,5,c	;volatile
  1339  0027AC  0012               	return	
  1340  0027AE                     __end_of_respondECU:
  1341                           	opt stack 0
  1342                           tblptru	equ	0xFF8
  1343                           tblptrh	equ	0xFF7
  1344                           tblptrl	equ	0xFF6
  1345                           tablat	equ	0xFF5
  1346                           intcon	equ	0xFF2
  1347                           postinc0	equ	0xFEE
  1348                           wreg	equ	0xFE8
  1349                           status	equ	0xFD8
  1350                           
  1351 ;; *************** function _sendData *****************
  1352 ;; Defined at:
  1353 ;;		line 53 in file "FastTransfer.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;  whereToSend     1    wreg     unsigned char 
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;  whereToSend     1    0[BANK0 ] unsigned char 
  1358 ;;  i               2    2[BANK0 ] int 
  1359 ;;  CS              1    1[BANK0 ] unsigned char 
  1360 ;; Return value:  Size  Location     Type
  1361 ;;		None               void
  1362 ;; Registers used:
  1363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, cstack
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1369 ;;      Params:         0       0       0       0       0       0       0
  1370 ;;      Locals:         0       4       0       0       0       0       0
  1371 ;;      Temps:          1       0       0       0       0       0       0
  1372 ;;      Totals:         1       4       0       0       0       0       0
  1373 ;;Total ram usage:        5 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; Hardware stack levels required when called:    7
  1376 ;; This function calls:
  1377 ;;		Absolute function
  1378 ;;		_CRC8
  1379 ;;		_FastTransfer_buffer_flush
  1380 ;;		_Send_put
  1381 ;;		_crcBufS_put
  1382 ;; This function is called by:
  1383 ;;		_respondECU
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           	psect	text3
  1388  001360                     __ptext3:
  1389                           	opt stack 0
  1390  001360                     _sendData:
  1391                           	opt stack 21
  1392                           
  1393                           ;incstack = 0
  1394                           ;sendData@whereToSend stored from wreg
  1395  001360  0100               	movlb	0	; () banked
  1396  001362  6FD3               	movwf	sendData@whereToSend& (0+255),b
  1397                           
  1398                           ; BSR set to: 0
  1399                           ;FastTransfer.c: 56: unsigned char CS = CRC8(sendStructAddress, ring_buffer.count);
  1400  001364  0100               	movlb	0	; () banked
  1401  001366  C0AA  F01C         	movff	_sendStructAddress+1,CRC8@data+1
  1402  00136A  0100               	movlb	0	; () banked
  1403  00136C  C0A9  F01B         	movff	_sendStructAddress,CRC8@data
  1404  001370  C1CC  F01D         	movff	_ring_buffer+204,CRC8@len
  1405  001374  ECD7  F013         	call	_CRC8	;wreg free
  1406  001378  0100               	movlb	0	; () banked
  1407  00137A  6FD4               	movwf	sendData@CS& (0+255),b
  1408                           
  1409                           ; BSR set to: 0
  1410                           ;FastTransfer.c: 58: serial_write(0x06);
  1411  00137C  D801               	call	u4918
  1412  00137E  D00B               	goto	u4919
  1413  001380                     u4918:
  1414  001380  0005               	push	
  1415  001382  6EFA               	movwf	pclath,c
  1416  001384  5031               	movf	_serial_write,w,c
  1417  001386  6EFD               	movwf	tosl,c
  1418  001388  5032               	movf	_serial_write+1,w,c
  1419  00138A  6EFE               	movwf	tosh,c
  1420  00138C  50F8               	movf	tblptru,w,c
  1421  00138E  6EFF               	movwf	tosu,c
  1422  001390  50FA               	movf	pclath,w,c
  1423  001392  0E06               	movlw	6
  1424  001394  0012               	return		;indir
  1425  001396                     u4919:
  1426                           
  1427                           ;FastTransfer.c: 59: serial_write(0x85);
  1428  001396  D801               	call	u4928
  1429  001398  D00B               	goto	u4929
  1430  00139A                     u4928:
  1431  00139A  0005               	push	
  1432  00139C  6EFA               	movwf	pclath,c
  1433  00139E  5031               	movf	_serial_write,w,c
  1434  0013A0  6EFD               	movwf	tosl,c
  1435  0013A2  5032               	movf	_serial_write+1,w,c
  1436  0013A4  6EFE               	movwf	tosh,c
  1437  0013A6  50F8               	movf	tblptru,w,c
  1438  0013A8  6EFF               	movwf	tosu,c
  1439  0013AA  50FA               	movf	pclath,w,c
  1440  0013AC  0E85               	movlw	133
  1441  0013AE  0012               	return		;indir
  1442  0013B0                     u4929:
  1443                           
  1444                           ;FastTransfer.c: 60: serial_write(whereToSend);
  1445  0013B0  D801               	call	u4938
  1446  0013B2  D00C               	goto	u4939
  1447  0013B4                     u4938:
  1448  0013B4  0005               	push	
  1449  0013B6  6EFA               	movwf	pclath,c
  1450  0013B8  5031               	movf	_serial_write,w,c
  1451  0013BA  6EFD               	movwf	tosl,c
  1452  0013BC  5032               	movf	_serial_write+1,w,c
  1453  0013BE  6EFE               	movwf	tosh,c
  1454  0013C0  50F8               	movf	tblptru,w,c
  1455  0013C2  6EFF               	movwf	tosu,c
  1456  0013C4  50FA               	movf	pclath,w,c
  1457  0013C6  0100               	movlb	0	; () banked
  1458  0013C8  51D3               	movf	sendData@whereToSend& (0+255),w,b
  1459  0013CA  0012               	return		;indir
  1460  0013CC                     u4939:
  1461                           
  1462                           ;FastTransfer.c: 61: serial_write(moduleAddress);
  1463  0013CC  D801               	call	u4948
  1464  0013CE  D00B               	goto	u4949
  1465  0013D0                     u4948:
  1466  0013D0  0005               	push	
  1467  0013D2  6EFA               	movwf	pclath,c
  1468  0013D4  5031               	movf	_serial_write,w,c
  1469  0013D6  6EFD               	movwf	tosl,c
  1470  0013D8  5032               	movf	_serial_write+1,w,c
  1471  0013DA  6EFE               	movwf	tosh,c
  1472  0013DC  50F8               	movf	tblptru,w,c
  1473  0013DE  6EFF               	movwf	tosu,c
  1474  0013E0  50FA               	movf	pclath,w,c
  1475  0013E2  503A               	movf	_moduleAddress,w,c
  1476  0013E4  0012               	return		;indir
  1477  0013E6                     u4949:
  1478                           
  1479                           ;FastTransfer.c: 62: serial_write(ring_buffer.count);
  1480  0013E6  D801               	call	u4958
  1481  0013E8  D00C               	goto	u4959
  1482  0013EA                     u4958:
  1483  0013EA  0005               	push	
  1484  0013EC  6EFA               	movwf	pclath,c
  1485  0013EE  5031               	movf	_serial_write,w,c
  1486  0013F0  6EFD               	movwf	tosl,c
  1487  0013F2  5032               	movf	_serial_write+1,w,c
  1488  0013F4  6EFE               	movwf	tosh,c
  1489  0013F6  50F8               	movf	tblptru,w,c
  1490  0013F8  6EFF               	movwf	tosu,c
  1491  0013FA  50FA               	movf	pclath,w,c
  1492  0013FC  0101               	movlb	1	; () banked
  1493  0013FE  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  1494  001400  0012               	return		;indir
  1495  001402                     u4959:
  1496                           
  1497                           ;FastTransfer.c: 66: int i;
  1498                           ;FastTransfer.c: 67: for (i = 0; i < ring_buffer.count; i++) {
  1499  001402  0E00               	movlw	0
  1500  001404  0100               	movlb	0	; () banked
  1501  001406  6FD6               	movwf	(sendData@i+1)& (0+255),b
  1502  001408  0E00               	movlw	0
  1503  00140A  0100               	movlb	0	; () banked
  1504  00140C  6FD5               	movwf	sendData@i& (0+255),b
  1505  00140E  D01A               	goto	l4632
  1506  001410                     l4628:
  1507                           
  1508                           ;FastTransfer.c: 68: serial_write(*(sendStructAddress + i));
  1509  001410  D801               	call	u4968
  1510  001412  D015               	goto	u4969
  1511  001414                     u4968:
  1512  001414  0005               	push	
  1513  001416  6EFA               	movwf	pclath,c
  1514  001418  5031               	movf	_serial_write,w,c
  1515  00141A  6EFD               	movwf	tosl,c
  1516  00141C  5032               	movf	_serial_write+1,w,c
  1517  00141E  6EFE               	movwf	tosh,c
  1518  001420  50F8               	movf	tblptru,w,c
  1519  001422  6EFF               	movwf	tosu,c
  1520  001424  50FA               	movf	pclath,w,c
  1521  001426  0100               	movlb	0	; () banked
  1522  001428  51D5               	movf	sendData@i& (0+255),w,b
  1523  00142A  0100               	movlb	0	; () banked
  1524  00142C  25A9               	addwf	_sendStructAddress& (0+255),w,b
  1525  00142E  6ED9               	movwf	fsr2l,c
  1526  001430  0100               	movlb	0	; () banked
  1527  001432  51D6               	movf	(sendData@i+1)& (0+255),w,b
  1528  001434  0100               	movlb	0	; () banked
  1529  001436  21AA               	addwfc	(_sendStructAddress+1)& (0+255),w,b
  1530  001438  6EDA               	movwf	fsr2h,c
  1531  00143A  50DF               	movf	indf2,w,c
  1532  00143C  0012               	return		;indir
  1533  00143E                     u4969:
  1534  00143E  0100               	movlb	0	; () banked
  1535  001440  4BD5               	infsnz	sendData@i& (0+255),f,b
  1536  001442  2BD6               	incf	(sendData@i+1)& (0+255),f,b
  1537  001444                     l4632:
  1538                           
  1539                           ; BSR set to: 0
  1540  001444  0100               	movlb	0	; () banked
  1541  001446  51D6               	movf	(sendData@i+1)& (0+255),w,b
  1542  001448  0A80               	xorlw	128
  1543  00144A  6E27               	movwf	??_sendData& (0+255),c
  1544  00144C  0101               	movlb	1	; () banked
  1545  00144E  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  1546  001450  0100               	movlb	0	; () banked
  1547  001452  5DD5               	subwf	sendData@i& (0+255),w,b
  1548  001454  0101               	movlb	1	; () banked
  1549  001456  51CD               	movf	(_ring_buffer+205)& (0+255),w,b
  1550  001458  0A80               	xorlw	128
  1551  00145A  5827               	subwfb	??_sendData& (0+255),w,c
  1552  00145C  A0D8               	btfss	status,0,c
  1553  00145E  D7D8               	goto	l4628
  1554                           
  1555                           ; BSR set to: 1
  1556                           ;FastTransfer.c: 69: }
  1557                           ;FastTransfer.c: 72: serial_write(CS);
  1558                           
  1559                           ; BSR set to: 1
  1560  001460  D801               	call	u4988
  1561  001462  D00C               	goto	u4989
  1562  001464                     u4988:
  1563  001464  0005               	push	
  1564  001466  6EFA               	movwf	pclath,c
  1565  001468  5031               	movf	_serial_write,w,c
  1566  00146A  6EFD               	movwf	tosl,c
  1567  00146C  5032               	movf	_serial_write+1,w,c
  1568  00146E  6EFE               	movwf	tosh,c
  1569  001470  50F8               	movf	tblptru,w,c
  1570  001472  6EFF               	movwf	tosu,c
  1571  001474  50FA               	movf	pclath,w,c
  1572  001476  0100               	movlb	0	; () banked
  1573  001478  51D4               	movf	sendData@CS& (0+255),w,b
  1574  00147A  0012               	return		;indir
  1575  00147C                     u4989:
  1576                           
  1577                           ;FastTransfer.c: 75: crcBufS_put(&crc_buffer, whereToSend, CS, 0);
  1578  00147C  0100               	movlb	0	; () banked
  1579  00147E  0E00               	movlw	high _crc_buffer
  1580  001480  6E1C               	movwf	crcBufS_put@_this+1,c
  1581  001482  0100               	movlb	0	; () banked
  1582  001484  0EB3               	movlw	low _crc_buffer
  1583  001486  6E1B               	movwf	crcBufS_put@_this,c
  1584  001488  C0D3  F01D         	movff	sendData@whereToSend,crcBufS_put@address
  1585  00148C  C0D4  F01E         	movff	sendData@CS,crcBufS_put@oldCRC
  1586  001490  0E00               	movlw	0
  1587  001492  6E1F               	movwf	crcBufS_put@status,c
  1588  001494  EC27  F00E         	call	_crcBufS_put
  1589                           
  1590                           ;FastTransfer.c: 78: FastTransfer_buffer_flush(&ring_buffer, 1);
  1591  001498  0101               	movlb	1	; () banked
  1592  00149A  0E01               	movlw	high _ring_buffer
  1593  00149C  6E24               	movwf	FastTransfer_buffer_flush@_this+1,c
  1594  00149E  0101               	movlb	1	; () banked
  1595  0014A0  0E00               	movlw	low _ring_buffer
  1596  0014A2  6E23               	movwf	FastTransfer_buffer_flush@_this,c
  1597  0014A4  0E00               	movlw	0
  1598  0014A6  6E26               	movwf	FastTransfer_buffer_flush@clearBuffer+1,c
  1599  0014A8  0E01               	movlw	1
  1600  0014AA  6E25               	movwf	FastTransfer_buffer_flush@clearBuffer,c
  1601  0014AC  EC0B  F013         	call	_FastTransfer_buffer_flush	;wreg free
  1602  0014B0  0012               	return	
  1603  0014B2                     __end_of_sendData:
  1604                           	opt stack 0
  1605                           tosu	equ	0xFFF
  1606                           tosh	equ	0xFFE
  1607                           tosl	equ	0xFFD
  1608                           pclath	equ	0xFFA
  1609                           tblptru	equ	0xFF8
  1610                           tblptrh	equ	0xFF7
  1611                           tblptrl	equ	0xFF6
  1612                           tablat	equ	0xFF5
  1613                           intcon	equ	0xFF2
  1614                           postinc0	equ	0xFEE
  1615                           wreg	equ	0xFE8
  1616                           indf2	equ	0xFDF
  1617                           fsr2h	equ	0xFDA
  1618                           fsr2l	equ	0xFD9
  1619                           status	equ	0xFD8
  1620                           
  1621 ;; *************** function _crcBufS_put *****************
  1622 ;; Defined at:
  1623 ;;		line 321 in file "FastTransfer.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  1626 ;;		 -> crc_buffer(17), 
  1627 ;;  address         1   28[COMRAM] unsigned char 
  1628 ;;  oldCRC          1   29[COMRAM] unsigned char 
  1629 ;;  status          1   30[COMRAM] unsigned char 
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;		None
  1632 ;; Return value:  Size  Location     Type
  1633 ;;		None               void
  1634 ;; Registers used:
  1635 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1641 ;;      Params:         5       0       0       0       0       0       0
  1642 ;;      Locals:         0       0       0       0       0       0       0
  1643 ;;      Temps:          2       0       0       0       0       0       0
  1644 ;;      Totals:         7       0       0       0       0       0       0
  1645 ;;Total ram usage:        7 bytes
  1646 ;; Hardware stack levels used:    1
  1647 ;; Hardware stack levels required when called:    4
  1648 ;; This function calls:
  1649 ;;		Nothing
  1650 ;; This function is called by:
  1651 ;;		_sendData
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	text4
  1656  001C4E                     __ptext4:
  1657                           	opt stack 0
  1658  001C4E                     _crcBufS_put:
  1659                           	opt stack 23
  1660                           
  1661                           ;FastTransfer.c: 322: _this->buf[_this->head] = address;
  1662                           
  1663                           ;incstack = 0
  1664  001C4E  EE20 F00F          	lfsr	2,15
  1665  001C52  501B               	movf	crcBufS_put@_this,w,c
  1666  001C54  26D9               	addwf	fsr2l,f,c
  1667  001C56  501C               	movf	crcBufS_put@_this+1,w,c
  1668  001C58  22DA               	addwfc	fsr2h,f,c
  1669  001C5A  CFDE F020          	movff	postinc2,??_crcBufS_put
  1670  001C5E  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  1671  001C62  5020               	movf	??_crcBufS_put,w,c
  1672  001C64  241B               	addwf	crcBufS_put@_this,w,c
  1673  001C66  6ED9               	movwf	fsr2l,c
  1674  001C68  5021               	movf	??_crcBufS_put+1,w,c
  1675  001C6A  201C               	addwfc	crcBufS_put@_this+1,w,c
  1676  001C6C  6EDA               	movwf	fsr2h,c
  1677  001C6E  C01D  FFDF         	movff	crcBufS_put@address,indf2
  1678                           
  1679                           ;FastTransfer.c: 323: _this->head++;
  1680  001C72  EE20 F00F          	lfsr	2,15
  1681  001C76  501B               	movf	crcBufS_put@_this,w,c
  1682  001C78  26D9               	addwf	fsr2l,f,c
  1683  001C7A  501C               	movf	crcBufS_put@_this+1,w,c
  1684  001C7C  22DA               	addwfc	fsr2h,f,c
  1685  001C7E  2ADE               	incf	postinc2,f,c
  1686  001C80  0E00               	movlw	0
  1687  001C82  22DD               	addwfc	postdec2,f,c
  1688                           
  1689                           ;FastTransfer.c: 324: _this->buf[_this->head] = oldCRC;
  1690  001C84  EE20 F00F          	lfsr	2,15
  1691  001C88  501B               	movf	crcBufS_put@_this,w,c
  1692  001C8A  26D9               	addwf	fsr2l,f,c
  1693  001C8C  501C               	movf	crcBufS_put@_this+1,w,c
  1694  001C8E  22DA               	addwfc	fsr2h,f,c
  1695  001C90  CFDE F020          	movff	postinc2,??_crcBufS_put
  1696  001C94  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  1697  001C98  5020               	movf	??_crcBufS_put,w,c
  1698  001C9A  241B               	addwf	crcBufS_put@_this,w,c
  1699  001C9C  6ED9               	movwf	fsr2l,c
  1700  001C9E  5021               	movf	??_crcBufS_put+1,w,c
  1701  001CA0  201C               	addwfc	crcBufS_put@_this+1,w,c
  1702  001CA2  6EDA               	movwf	fsr2h,c
  1703  001CA4  C01E  FFDF         	movff	crcBufS_put@oldCRC,indf2
  1704                           
  1705                           ;FastTransfer.c: 325: _this->head++;
  1706  001CA8  EE20 F00F          	lfsr	2,15
  1707  001CAC  501B               	movf	crcBufS_put@_this,w,c
  1708  001CAE  26D9               	addwf	fsr2l,f,c
  1709  001CB0  501C               	movf	crcBufS_put@_this+1,w,c
  1710  001CB2  22DA               	addwfc	fsr2h,f,c
  1711  001CB4  2ADE               	incf	postinc2,f,c
  1712  001CB6  0E00               	movlw	0
  1713  001CB8  22DD               	addwfc	postdec2,f,c
  1714                           
  1715                           ;FastTransfer.c: 326: _this->buf[_this->head] = status;
  1716  001CBA  EE20 F00F          	lfsr	2,15
  1717  001CBE  501B               	movf	crcBufS_put@_this,w,c
  1718  001CC0  26D9               	addwf	fsr2l,f,c
  1719  001CC2  501C               	movf	crcBufS_put@_this+1,w,c
  1720  001CC4  22DA               	addwfc	fsr2h,f,c
  1721  001CC6  CFDE F020          	movff	postinc2,??_crcBufS_put
  1722  001CCA  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  1723  001CCE  5020               	movf	??_crcBufS_put,w,c
  1724  001CD0  241B               	addwf	crcBufS_put@_this,w,c
  1725  001CD2  6ED9               	movwf	fsr2l,c
  1726  001CD4  5021               	movf	??_crcBufS_put+1,w,c
  1727  001CD6  201C               	addwfc	crcBufS_put@_this+1,w,c
  1728  001CD8  6EDA               	movwf	fsr2h,c
  1729  001CDA  C01F  FFDF         	movff	crcBufS_put@status,indf2
  1730                           
  1731                           ;FastTransfer.c: 327: _this->head++;
  1732  001CDE  EE20 F00F          	lfsr	2,15
  1733  001CE2  501B               	movf	crcBufS_put@_this,w,c
  1734  001CE4  26D9               	addwf	fsr2l,f,c
  1735  001CE6  501C               	movf	crcBufS_put@_this+1,w,c
  1736  001CE8  22DA               	addwfc	fsr2h,f,c
  1737  001CEA  2ADE               	incf	postinc2,f,c
  1738  001CEC  0E00               	movlw	0
  1739  001CEE  22DD               	addwfc	postdec2,f,c
  1740                           
  1741                           ;FastTransfer.c: 328: if (_this->head >= (5 * 3)) {
  1742  001CF0  EE20 F00F          	lfsr	2,15
  1743  001CF4  501B               	movf	crcBufS_put@_this,w,c
  1744  001CF6  26D9               	addwf	fsr2l,f,c
  1745  001CF8  501C               	movf	crcBufS_put@_this+1,w,c
  1746  001CFA  22DA               	addwfc	fsr2h,f,c
  1747  001CFC  52DE               	movf	postinc2,f,c
  1748  001CFE  50DD               	movf	postdec2,w,c
  1749  001D00  0A80               	xorlw	128
  1750  001D02  0F80               	addlw	128
  1751  001D04  0E0F               	movlw	15
  1752  001D06  B4D8               	btfsc	status,2,c
  1753  001D08  5CDF               	subwf	indf2,w,c
  1754  001D0A  A0D8               	btfss	status,0,c
  1755  001D0C  0012               	return	
  1756                           
  1757                           ;FastTransfer.c: 329: _this->head = 0;
  1758  001D0E  EE20 F00F          	lfsr	2,15
  1759  001D12  501B               	movf	crcBufS_put@_this,w,c
  1760  001D14  26D9               	addwf	fsr2l,f,c
  1761  001D16  501C               	movf	crcBufS_put@_this+1,w,c
  1762  001D18  22DA               	addwfc	fsr2h,f,c
  1763  001D1A  0E00               	movlw	0
  1764  001D1C  6EDE               	movwf	postinc2,c
  1765  001D1E  0E00               	movlw	0
  1766  001D20  6EDD               	movwf	postdec2,c
  1767  001D22  0012               	return	
  1768  001D24                     __end_of_crcBufS_put:
  1769                           	opt stack 0
  1770                           tosu	equ	0xFFF
  1771                           tosh	equ	0xFFE
  1772                           tosl	equ	0xFFD
  1773                           pclath	equ	0xFFA
  1774                           tblptru	equ	0xFF8
  1775                           tblptrh	equ	0xFF7
  1776                           tblptrl	equ	0xFF6
  1777                           tablat	equ	0xFF5
  1778                           intcon	equ	0xFF2
  1779                           postinc0	equ	0xFEE
  1780                           wreg	equ	0xFE8
  1781                           indf2	equ	0xFDF
  1782                           postinc2	equ	0xFDE
  1783                           postdec2	equ	0xFDD
  1784                           fsr2h	equ	0xFDA
  1785                           fsr2l	equ	0xFD9
  1786                           status	equ	0xFD8
  1787                           
  1788 ;; *************** function _FastTransfer_buffer_flush *****************
  1789 ;; Defined at:
  1790 ;;		line 261 in file "FastTransfer.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  _this           2   34[COMRAM] PTR struct ringBufS
  1793 ;;		 -> ring_buffer(206), 
  1794 ;;  clearBuffer     2   36[COMRAM] const int 
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;		None
  1797 ;; Return value:  Size  Location     Type
  1798 ;;		None               void
  1799 ;; Registers used:
  1800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1806 ;;      Params:         4       0       0       0       0       0       0
  1807 ;;      Locals:         0       0       0       0       0       0       0
  1808 ;;      Temps:          0       0       0       0       0       0       0
  1809 ;;      Totals:         4       0       0       0       0       0       0
  1810 ;;Total ram usage:        4 bytes
  1811 ;; Hardware stack levels used:    1
  1812 ;; Hardware stack levels required when called:    5
  1813 ;; This function calls:
  1814 ;;		_memset
  1815 ;; This function is called by:
  1816 ;;		_sendData
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820                           	psect	text5
  1821  002616                     __ptext5:
  1822                           	opt stack 0
  1823  002616                     _FastTransfer_buffer_flush:
  1824                           	opt stack 22
  1825                           
  1826                           ;FastTransfer.c: 262: _this->count = 0;
  1827                           
  1828                           ;incstack = 0
  1829  002616  EE20 F0CC          	lfsr	2,204
  1830  00261A  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  1831  00261C  26D9               	addwf	fsr2l,f,c
  1832  00261E  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  1833  002620  22DA               	addwfc	fsr2h,f,c
  1834  002622  0E00               	movlw	0
  1835  002624  6EDE               	movwf	postinc2,c
  1836  002626  0E00               	movlw	0
  1837  002628  6EDD               	movwf	postdec2,c
  1838                           
  1839                           ;FastTransfer.c: 263: _this->head = 0;
  1840  00262A  EE20 F0C8          	lfsr	2,200
  1841  00262E  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  1842  002630  26D9               	addwf	fsr2l,f,c
  1843  002632  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  1844  002634  22DA               	addwfc	fsr2h,f,c
  1845  002636  0E00               	movlw	0
  1846  002638  6EDE               	movwf	postinc2,c
  1847  00263A  0E00               	movlw	0
  1848  00263C  6EDD               	movwf	postdec2,c
  1849                           
  1850                           ;FastTransfer.c: 264: _this->tail = 0;
  1851  00263E  EE20 F0CA          	lfsr	2,202
  1852  002642  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  1853  002644  26D9               	addwf	fsr2l,f,c
  1854  002646  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  1855  002648  22DA               	addwfc	fsr2h,f,c
  1856  00264A  0E00               	movlw	0
  1857  00264C  6EDE               	movwf	postinc2,c
  1858  00264E  0E00               	movlw	0
  1859  002650  6EDD               	movwf	postdec2,c
  1860                           
  1861                           ;FastTransfer.c: 265: if (clearBuffer) {
  1862  002652  5026               	movf	FastTransfer_buffer_flush@clearBuffer+1,w,c
  1863  002654  1025               	iorwf	FastTransfer_buffer_flush@clearBuffer,w,c
  1864  002656  B4D8               	btfsc	status,2,c
  1865  002658  0012               	return	
  1866                           
  1867                           ;FastTransfer.c: 266: memset(_this->buf, 0, sizeof (_this->buf));
  1868  00265A  C024  F01C         	movff	FastTransfer_buffer_flush@_this+1,memset@p1+1
  1869  00265E  C023  F01B         	movff	FastTransfer_buffer_flush@_this,memset@p1
  1870  002662  0E00               	movlw	0
  1871  002664  6E1E               	movwf	memset@c+1,c
  1872  002666  0E00               	movlw	0
  1873  002668  6E1D               	movwf	memset@c,c
  1874  00266A  0E00               	movlw	0
  1875  00266C  6E20               	movwf	memset@n+1,c
  1876  00266E  0EC8               	movlw	200
  1877  002670  6E1F               	movwf	memset@n,c
  1878  002672  ECE8  F014         	call	_memset	;wreg free
  1879  002676  0012               	return	
  1880  002678                     __end_of_FastTransfer_buffer_flush:
  1881                           	opt stack 0
  1882                           tosu	equ	0xFFF
  1883                           tosh	equ	0xFFE
  1884                           tosl	equ	0xFFD
  1885                           pclath	equ	0xFFA
  1886                           tblptru	equ	0xFF8
  1887                           tblptrh	equ	0xFF7
  1888                           tblptrl	equ	0xFF6
  1889                           tablat	equ	0xFF5
  1890                           intcon	equ	0xFF2
  1891                           postinc0	equ	0xFEE
  1892                           wreg	equ	0xFE8
  1893                           indf2	equ	0xFDF
  1894                           postinc2	equ	0xFDE
  1895                           postdec2	equ	0xFDD
  1896                           fsr2h	equ	0xFDA
  1897                           fsr2l	equ	0xFD9
  1898                           status	equ	0xFD8
  1899                           
  1900 ;; *************** function _buttonsCollector *****************
  1901 ;; Defined at:
  1902 ;;		line 52 in file "Communications.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;		None
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  i               2   39[COMRAM] int 
  1907 ;;  sendVal         2   37[COMRAM] unsigned int 
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  2   32[COMRAM] unsigned int 
  1910 ;; Registers used:
  1911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1917 ;;      Params:         2       0       0       0       0       0       0
  1918 ;;      Locals:         4       0       0       0       0       0       0
  1919 ;;      Temps:          3       0       0       0       0       0       0
  1920 ;;      Totals:         9       0       0       0       0       0       0
  1921 ;;Total ram usage:        9 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; Hardware stack levels required when called:    5
  1924 ;; This function calls:
  1925 ;;		_GetButtonState
  1926 ;; This function is called by:
  1927 ;;		_respondECU
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text6
  1932  00254A                     __ptext6:
  1933                           	opt stack 0
  1934  00254A                     _buttonsCollector:
  1935                           	opt stack 23
  1936                           
  1937                           ;Communications.c: 53: unsigned int sendVal = 0;
  1938                           
  1939                           ;incstack = 0
  1940  00254A  0E00               	movlw	0
  1941  00254C  6E27               	movwf	buttonsCollector@sendVal+1,c
  1942  00254E  0E00               	movlw	0
  1943  002550  6E26               	movwf	buttonsCollector@sendVal,c
  1944                           
  1945                           ;Communications.c: 54: int i = 0;
  1946  002552  0E00               	movlw	0
  1947  002554  6E29               	movwf	buttonsCollector@i+1,c
  1948  002556  0E00               	movlw	0
  1949  002558  6E28               	movwf	buttonsCollector@i,c
  1950                           
  1951                           ;Communications.c: 55: for (i = 0; i < 8; i++) {
  1952  00255A  0E00               	movlw	0
  1953  00255C  6E29               	movwf	buttonsCollector@i+1,c
  1954  00255E  0E00               	movlw	0
  1955  002560  6E28               	movwf	buttonsCollector@i,c
  1956  002562  5029               	movf	buttonsCollector@i+1,w,c
  1957  002564  0A80               	xorlw	128
  1958  002566  0F80               	addlw	-128
  1959  002568  0E08               	movlw	8
  1960  00256A  B4D8               	btfsc	status,2,c
  1961  00256C  5C28               	subwf	buttonsCollector@i,w,c
  1962  00256E  B0D8               	btfsc	status,0,c
  1963  002570  D01B               	goto	l703
  1964                           
  1965                           ;Communications.c: 56: sendVal = sendVal | ((GetButtonState(i)&0x01) << i);
  1966  002572  C028  F023         	movff	buttonsCollector@i,??_buttonsCollector
  1967  002576  C028  F01B         	movff	buttonsCollector@i,GetButtonState@btnnum
  1968  00257A  C029  F01C         	movff	buttonsCollector@i+1,GetButtonState@btnnum+1
  1969  00257E  ECD2  F014         	call	_GetButtonState	;wreg free
  1970  002582  0B01               	andlw	1
  1971  002584  6E24               	movwf	(??_buttonsCollector+1)& (0+255),c
  1972  002586  6A25               	clrf	(??_buttonsCollector+2)& (0+255),c
  1973  002588  2A23               	incf	??_buttonsCollector,f,c
  1974  00258A  D003               	goto	u2674
  1975  00258C                     u2675:
  1976  00258C  90D8               	bcf	status,0,c
  1977  00258E  3624               	rlcf	??_buttonsCollector+1,f,c
  1978  002590  3625               	rlcf	??_buttonsCollector+2,f,c
  1979  002592                     u2674:
  1980  002592  2E23               	decfsz	??_buttonsCollector,f,c
  1981  002594  D7FB               	goto	u2675
  1982  002596  5026               	movf	buttonsCollector@sendVal,w,c
  1983  002598  1024               	iorwf	??_buttonsCollector+1,w,c
  1984  00259A  6E26               	movwf	buttonsCollector@sendVal,c
  1985  00259C  5027               	movf	buttonsCollector@sendVal+1,w,c
  1986  00259E  1025               	iorwf	??_buttonsCollector+2,w,c
  1987  0025A0  6E27               	movwf	buttonsCollector@sendVal+1,c
  1988  0025A2  4A28               	infsnz	buttonsCollector@i,f,c
  1989  0025A4  2A29               	incf	buttonsCollector@i+1,f,c
  1990  0025A6  D7DD               	goto	L1
  1991  0025A8                     l703:
  1992                           
  1993                           ;Communications.c: 57: }
  1994                           ;Communications.c: 58: return sendVal;
  1995  0025A8  C026  F021         	movff	buttonsCollector@sendVal,?_buttonsCollector
  1996  0025AC  C027  F022         	movff	buttonsCollector@sendVal+1,?_buttonsCollector+1
  1997  0025B0  0012               	return	
  1998  0025B2                     __end_of_buttonsCollector:
  1999                           	opt stack 0
  2000                           tosu	equ	0xFFF
  2001                           tosh	equ	0xFFE
  2002                           tosl	equ	0xFFD
  2003                           pclath	equ	0xFFA
  2004                           tblptru	equ	0xFF8
  2005                           tblptrh	equ	0xFF7
  2006                           tblptrl	equ	0xFF6
  2007                           tablat	equ	0xFF5
  2008                           intcon	equ	0xFF2
  2009                           postinc0	equ	0xFEE
  2010                           wreg	equ	0xFE8
  2011                           indf2	equ	0xFDF
  2012                           postinc2	equ	0xFDE
  2013                           postdec2	equ	0xFDD
  2014                           fsr2h	equ	0xFDA
  2015                           fsr2l	equ	0xFD9
  2016                           status	equ	0xFD8
  2017                           
  2018 ;; *************** function _GetButtonState *****************
  2019 ;; Defined at:
  2020 ;;		line 72 in file "IO.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  btnnum          2   26[COMRAM] int 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;		None
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      unsigned char 
  2027 ;; Registers used:
  2028 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2034 ;;      Params:         2       0       0       0       0       0       0
  2035 ;;      Locals:         0       0       0       0       0       0       0
  2036 ;;      Temps:          4       0       0       0       0       0       0
  2037 ;;      Totals:         6       0       0       0       0       0       0
  2038 ;;Total ram usage:        6 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    4
  2041 ;; This function calls:
  2042 ;;		Nothing
  2043 ;; This function is called by:
  2044 ;;		_buttonsCollector
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           	psect	text7
  2049  0029A4                     __ptext7:
  2050                           	opt stack 0
  2051  0029A4                     _GetButtonState:
  2052                           	opt stack 23
  2053                           
  2054                           ;IO.c: 73: return butnarray[btnnum - 1];
  2055                           
  2056                           ;incstack = 0
  2057  0029A4  0EFF               	movlw	255
  2058  0029A6  6E1D               	movwf	??_GetButtonState& (0+255),c
  2059  0029A8  0EFF               	movlw	255
  2060  0029AA  6E1E               	movwf	(??_GetButtonState+1)& (0+255),c
  2061  0029AC  C01B  F01F         	movff	GetButtonState@btnnum,??_GetButtonState+2
  2062  0029B0  C01C  F020         	movff	GetButtonState@btnnum+1,??_GetButtonState+3
  2063  0029B4  501D               	movf	??_GetButtonState,w,c
  2064  0029B6  261F               	addwf	??_GetButtonState+2,f,c
  2065  0029B8  501E               	movf	??_GetButtonState+1,w,c
  2066  0029BA  2220               	addwfc	??_GetButtonState+3,f,c
  2067  0029BC  0100               	movlb	0	; () banked
  2068  0029BE  0E88               	movlw	low _butnarray
  2069  0029C0  241F               	addwf	??_GetButtonState+2,w,c
  2070  0029C2  6ED9               	movwf	fsr2l,c
  2071  0029C4  0100               	movlb	0	; () banked
  2072  0029C6  0E00               	movlw	high _butnarray
  2073  0029C8  2020               	addwfc	??_GetButtonState+3,w,c
  2074  0029CA  6EDA               	movwf	fsr2h,c
  2075  0029CC  50DF               	movf	indf2,w,c
  2076  0029CE  0012               	return	
  2077  0029D0                     __end_of_GetButtonState:
  2078                           	opt stack 0
  2079                           tosu	equ	0xFFF
  2080                           tosh	equ	0xFFE
  2081                           tosl	equ	0xFFD
  2082                           pclath	equ	0xFFA
  2083                           tblptru	equ	0xFF8
  2084                           tblptrh	equ	0xFF7
  2085                           tblptrl	equ	0xFF6
  2086                           tablat	equ	0xFF5
  2087                           intcon	equ	0xFF2
  2088                           postinc0	equ	0xFEE
  2089                           wreg	equ	0xFE8
  2090                           indf2	equ	0xFDF
  2091                           postinc2	equ	0xFDE
  2092                           postdec2	equ	0xFDD
  2093                           fsr2h	equ	0xFDA
  2094                           fsr2l	equ	0xFD9
  2095                           status	equ	0xFD8
  2096                           
  2097 ;; *************** function _ToSend *****************
  2098 ;; Defined at:
  2099 ;;		line 216 in file "FastTransfer.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  where           1    wreg     unsigned char 
  2102 ;;  what            2    0[BANK0 ] unsigned int 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  where           1   41[COMRAM] unsigned char 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;		None               void
  2107 ;; Registers used:
  2108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2114 ;;      Params:         0       2       0       0       0       0       0
  2115 ;;      Locals:         1       0       0       0       0       0       0
  2116 ;;      Temps:          0       0       0       0       0       0       0
  2117 ;;      Totals:         1       2       0       0       0       0       0
  2118 ;;Total ram usage:        3 bytes
  2119 ;; Hardware stack levels used:    1
  2120 ;; Hardware stack levels required when called:    6
  2121 ;; This function calls:
  2122 ;;		_FastTransfer_buffer_put
  2123 ;; This function is called by:
  2124 ;;		_respondECU
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text8
  2129  002AE4                     __ptext8:
  2130                           	opt stack 0
  2131  002AE4                     _ToSend:
  2132                           	opt stack 22
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;incstack = 0
  2136                           ;ToSend@where stored from wreg
  2137  002AE4  6E2A               	movwf	ToSend@where,c
  2138                           
  2139                           ;FastTransfer.c: 217: FastTransfer_buffer_put(&ring_buffer, where, what);
  2140  002AE6  0101               	movlb	1	; () banked
  2141  002AE8  0E01               	movlw	high _ring_buffer
  2142  002AEA  6E22               	movwf	FastTransfer_buffer_put@_this+1,c
  2143  002AEC  0101               	movlb	1	; () banked
  2144  002AEE  0E00               	movlw	low _ring_buffer
  2145  002AF0  6E21               	movwf	FastTransfer_buffer_put@_this,c
  2146  002AF2  C02A  F023         	movff	ToSend@where,FastTransfer_buffer_put@towhere
  2147  002AF6  C0D3  F024         	movff	ToSend@what,FastTransfer_buffer_put@towhat
  2148  002AFA  C0D4  F025         	movff	ToSend@what+1,FastTransfer_buffer_put@towhat+1
  2149  002AFE  EC8D  F007         	call	_FastTransfer_buffer_put	;wreg free
  2150  002B02  0012               	return	
  2151  002B04                     __end_of_ToSend:
  2152                           	opt stack 0
  2153                           tosu	equ	0xFFF
  2154                           tosh	equ	0xFFE
  2155                           tosl	equ	0xFFD
  2156                           pclath	equ	0xFFA
  2157                           tblptru	equ	0xFF8
  2158                           tblptrh	equ	0xFF7
  2159                           tblptrl	equ	0xFF6
  2160                           tablat	equ	0xFF5
  2161                           intcon	equ	0xFF2
  2162                           postinc0	equ	0xFEE
  2163                           wreg	equ	0xFE8
  2164                           indf2	equ	0xFDF
  2165                           postinc2	equ	0xFDE
  2166                           postdec2	equ	0xFDD
  2167                           fsr2h	equ	0xFDA
  2168                           fsr2l	equ	0xFD9
  2169                           status	equ	0xFD8
  2170                           
  2171 ;; *************** function _FastTransfer_buffer_put *****************
  2172 ;; Defined at:
  2173 ;;		line 223 in file "FastTransfer.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;  _this           2   32[COMRAM] PTR struct ringBufS
  2176 ;;		 -> ring_buffer(206), 
  2177 ;;  towhere         1   34[COMRAM] unsigned char 
  2178 ;;  towhat          2   35[COMRAM] unsigned int 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;		None
  2181 ;; Return value:  Size  Location     Type
  2182 ;;		None               void
  2183 ;; Registers used:
  2184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2190 ;;      Params:         5       0       0       0       0       0       0
  2191 ;;      Locals:         0       0       0       0       0       0       0
  2192 ;;      Temps:          2       0       0       0       0       0       0
  2193 ;;      Totals:         7       0       0       0       0       0       0
  2194 ;;Total ram usage:        7 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; Hardware stack levels required when called:    5
  2197 ;; This function calls:
  2198 ;;		_FastTransfer_buffer_modulo_inc
  2199 ;; This function is called by:
  2200 ;;		_ToSend
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text9
  2205  000F1A                     __ptext9:
  2206                           	opt stack 0
  2207  000F1A                     _FastTransfer_buffer_put:
  2208                           	opt stack 22
  2209                           
  2210                           ;FastTransfer.c: 225: group.integer = towhat;
  2211                           
  2212                           ;incstack = 0
  2213  000F1A  C024  F041         	movff	FastTransfer_buffer_put@towhat,_group
  2214  000F1E  C025  F042         	movff	FastTransfer_buffer_put@towhat+1,_group+1
  2215                           
  2216                           ;FastTransfer.c: 227: if (_this->count < (200 - 3)) {
  2217  000F22  EE20 F0CC          	lfsr	2,204
  2218  000F26  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2219  000F28  26D9               	addwf	fsr2l,f,c
  2220  000F2A  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2221  000F2C  22DA               	addwfc	fsr2h,f,c
  2222  000F2E  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  2223  000F32  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  2224  000F36  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  2225  000F38  0A80               	xorlw	128
  2226  000F3A  6EF3               	movwf	prodl,c
  2227  000F3C  0E80               	movlw	128
  2228  000F3E  5CF3               	subwf	prodl,w,c
  2229  000F40  0EC5               	movlw	197
  2230  000F42  B4D8               	btfsc	status,2,c
  2231  000F44  5C26               	subwf	??_FastTransfer_buffer_put,w,c
  2232  000F46  B0D8               	btfsc	status,0,c
  2233  000F48  0012               	return	
  2234                           
  2235                           ;FastTransfer.c: 228: _this->buf[_this->head] = towhere;
  2236  000F4A  EE20 F0C8          	lfsr	2,200
  2237  000F4E  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2238  000F50  26D9               	addwf	fsr2l,f,c
  2239  000F52  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2240  000F54  22DA               	addwfc	fsr2h,f,c
  2241  000F56  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  2242  000F5A  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  2243  000F5E  5026               	movf	??_FastTransfer_buffer_put,w,c
  2244  000F60  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  2245  000F62  6ED9               	movwf	fsr2l,c
  2246  000F64  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  2247  000F66  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  2248  000F68  6EDA               	movwf	fsr2h,c
  2249  000F6A  C023  FFDF         	movff	FastTransfer_buffer_put@towhere,indf2
  2250                           
  2251                           ;FastTransfer.c: 229: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  2252  000F6E  EE20 F0C8          	lfsr	2,200
  2253  000F72  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2254  000F74  26D9               	addwf	fsr2l,f,c
  2255  000F76  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2256  000F78  22DA               	addwfc	fsr2h,f,c
  2257  000F7A  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  2258  000F7E  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  2259  000F82  0E00               	movlw	0
  2260  000F84  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  2261  000F86  0EC8               	movlw	200
  2262  000F88  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  2263  000F8A  ECFE  F014         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  2264  000F8E  EE20 F0C8          	lfsr	2,200
  2265  000F92  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2266  000F94  26D9               	addwf	fsr2l,f,c
  2267  000F96  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2268  000F98  22DA               	addwfc	fsr2h,f,c
  2269  000F9A  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  2270  000F9E  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  2271                           
  2272                           ;FastTransfer.c: 230: ++_this->count;
  2273  000FA2  EE20 F0CC          	lfsr	2,204
  2274  000FA6  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2275  000FA8  26D9               	addwf	fsr2l,f,c
  2276  000FAA  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2277  000FAC  22DA               	addwfc	fsr2h,f,c
  2278  000FAE  2ADE               	incf	postinc2,f,c
  2279  000FB0  0E00               	movlw	0
  2280  000FB2  22DD               	addwfc	postdec2,f,c
  2281                           
  2282                           ;FastTransfer.c: 231: _this->buf[_this->head] = group.parts[0];
  2283  000FB4  EE20 F0C8          	lfsr	2,200
  2284  000FB8  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2285  000FBA  26D9               	addwf	fsr2l,f,c
  2286  000FBC  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2287  000FBE  22DA               	addwfc	fsr2h,f,c
  2288  000FC0  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  2289  000FC4  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  2290  000FC8  5026               	movf	??_FastTransfer_buffer_put,w,c
  2291  000FCA  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  2292  000FCC  6ED9               	movwf	fsr2l,c
  2293  000FCE  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  2294  000FD0  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  2295  000FD2  6EDA               	movwf	fsr2h,c
  2296  000FD4  C041  FFDF         	movff	_group,indf2
  2297                           
  2298                           ;FastTransfer.c: 232: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  2299  000FD8  EE20 F0C8          	lfsr	2,200
  2300  000FDC  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2301  000FDE  26D9               	addwf	fsr2l,f,c
  2302  000FE0  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2303  000FE2  22DA               	addwfc	fsr2h,f,c
  2304  000FE4  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  2305  000FE8  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  2306  000FEC  0E00               	movlw	0
  2307  000FEE  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  2308  000FF0  0EC8               	movlw	200
  2309  000FF2  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  2310  000FF4  ECFE  F014         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  2311  000FF8  EE20 F0C8          	lfsr	2,200
  2312  000FFC  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2313  000FFE  26D9               	addwf	fsr2l,f,c
  2314  001000  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2315  001002  22DA               	addwfc	fsr2h,f,c
  2316  001004  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  2317  001008  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  2318                           
  2319                           ;FastTransfer.c: 233: ++_this->count;
  2320  00100C  EE20 F0CC          	lfsr	2,204
  2321  001010  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2322  001012  26D9               	addwf	fsr2l,f,c
  2323  001014  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2324  001016  22DA               	addwfc	fsr2h,f,c
  2325  001018  2ADE               	incf	postinc2,f,c
  2326  00101A  0E00               	movlw	0
  2327  00101C  22DD               	addwfc	postdec2,f,c
  2328                           
  2329                           ;FastTransfer.c: 234: _this->buf[_this->head] = group.parts[1];
  2330  00101E  EE20 F0C8          	lfsr	2,200
  2331  001022  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2332  001024  26D9               	addwf	fsr2l,f,c
  2333  001026  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2334  001028  22DA               	addwfc	fsr2h,f,c
  2335  00102A  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  2336  00102E  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  2337  001032  5026               	movf	??_FastTransfer_buffer_put,w,c
  2338  001034  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  2339  001036  6ED9               	movwf	fsr2l,c
  2340  001038  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  2341  00103A  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  2342  00103C  6EDA               	movwf	fsr2h,c
  2343  00103E  C042  FFDF         	movff	_group+1,indf2
  2344                           
  2345                           ;FastTransfer.c: 235: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  2346  001042  EE20 F0C8          	lfsr	2,200
  2347  001046  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2348  001048  26D9               	addwf	fsr2l,f,c
  2349  00104A  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2350  00104C  22DA               	addwfc	fsr2h,f,c
  2351  00104E  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  2352  001052  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  2353  001056  0E00               	movlw	0
  2354  001058  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  2355  00105A  0EC8               	movlw	200
  2356  00105C  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  2357  00105E  ECFE  F014         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  2358  001062  EE20 F0C8          	lfsr	2,200
  2359  001066  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2360  001068  26D9               	addwf	fsr2l,f,c
  2361  00106A  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2362  00106C  22DA               	addwfc	fsr2h,f,c
  2363  00106E  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  2364  001072  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  2365                           
  2366                           ;FastTransfer.c: 236: ++_this->count;
  2367  001076  EE20 F0CC          	lfsr	2,204
  2368  00107A  5021               	movf	FastTransfer_buffer_put@_this,w,c
  2369  00107C  26D9               	addwf	fsr2l,f,c
  2370  00107E  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  2371  001080  22DA               	addwfc	fsr2h,f,c
  2372  001082  2ADE               	incf	postinc2,f,c
  2373  001084  0E00               	movlw	0
  2374  001086  22DD               	addwfc	postdec2,f,c
  2375  001088  0012               	return	
  2376  00108A                     __end_of_FastTransfer_buffer_put:
  2377                           	opt stack 0
  2378                           tosu	equ	0xFFF
  2379                           tosh	equ	0xFFE
  2380                           tosl	equ	0xFFD
  2381                           pclath	equ	0xFFA
  2382                           tblptru	equ	0xFF8
  2383                           tblptrh	equ	0xFF7
  2384                           tblptrl	equ	0xFF6
  2385                           tablat	equ	0xFF5
  2386                           prodl	equ	0xFF3
  2387                           intcon	equ	0xFF2
  2388                           postinc0	equ	0xFEE
  2389                           wreg	equ	0xFE8
  2390                           indf2	equ	0xFDF
  2391                           postinc2	equ	0xFDE
  2392                           postdec2	equ	0xFDD
  2393                           fsr2h	equ	0xFDA
  2394                           fsr2l	equ	0xFD9
  2395                           status	equ	0xFD8
  2396                           
  2397 ;; *************** function _FastTransfer_buffer_modulo_inc *****************
  2398 ;; Defined at:
  2399 ;;		line 273 in file "FastTransfer.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;  value           2   26[COMRAM] const unsigned int 
  2402 ;;  modulus         2   28[COMRAM] const unsigned int 
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;  my_value        2   30[COMRAM] unsigned int 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  2   26[COMRAM] unsigned int 
  2407 ;; Registers used:
  2408 ;;		wreg, status,2, status,0
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2414 ;;      Params:         4       0       0       0       0       0       0
  2415 ;;      Locals:         2       0       0       0       0       0       0
  2416 ;;      Temps:          0       0       0       0       0       0       0
  2417 ;;      Totals:         6       0       0       0       0       0       0
  2418 ;;Total ram usage:        6 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; Hardware stack levels required when called:    4
  2421 ;; This function calls:
  2422 ;;		Nothing
  2423 ;; This function is called by:
  2424 ;;		_FastTransfer_buffer_put
  2425 ;;		_FastTransfer_buffer_get
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           	psect	text10
  2430  0029FC                     __ptext10:
  2431                           	opt stack 0
  2432  0029FC                     _FastTransfer_buffer_modulo_inc:
  2433                           	opt stack 22
  2434                           
  2435                           ;FastTransfer.c: 274: unsigned int my_value = value + 1;
  2436                           
  2437                           ;incstack = 0
  2438  0029FC  0E01               	movlw	1
  2439  0029FE  241B               	addwf	FastTransfer_buffer_modulo_inc@value,w,c
  2440  002A00  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  2441  002A02  0E00               	movlw	0
  2442  002A04  201C               	addwfc	FastTransfer_buffer_modulo_inc@value+1,w,c
  2443  002A06  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  2444                           
  2445                           ;FastTransfer.c: 275: if (my_value >= modulus) {
  2446  002A08  501D               	movf	FastTransfer_buffer_modulo_inc@modulus,w,c
  2447  002A0A  5C1F               	subwf	FastTransfer_buffer_modulo_inc@my_value,w,c
  2448  002A0C  501E               	movf	FastTransfer_buffer_modulo_inc@modulus+1,w,c
  2449  002A0E  5820               	subwfb	FastTransfer_buffer_modulo_inc@my_value+1,w,c
  2450  002A10  A0D8               	btfss	status,0,c
  2451  002A12  D004               	goto	l3044
  2452                           
  2453                           ;FastTransfer.c: 276: my_value = 0;
  2454  002A14  0E00               	movlw	0
  2455  002A16  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  2456  002A18  0E00               	movlw	0
  2457  002A1A  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  2458  002A1C                     l3044:
  2459                           
  2460                           ;FastTransfer.c: 277: }
  2461                           ;FastTransfer.c: 278: return (my_value);
  2462  002A1C  C01F  F01B         	movff	FastTransfer_buffer_modulo_inc@my_value,?_FastTransfer_buffer_modulo_inc
  2463  002A20  C020  F01C         	movff	FastTransfer_buffer_modulo_inc@my_value+1,?_FastTransfer_buffer_modulo_inc+1
  2464  002A24  0012               	return	
  2465  002A26                     __end_of_FastTransfer_buffer_modulo_inc:
  2466                           	opt stack 0
  2467                           tosu	equ	0xFFF
  2468                           tosh	equ	0xFFE
  2469                           tosl	equ	0xFFD
  2470                           pclath	equ	0xFFA
  2471                           tblptru	equ	0xFF8
  2472                           tblptrh	equ	0xFF7
  2473                           tblptrl	equ	0xFF6
  2474                           tablat	equ	0xFF5
  2475                           prodl	equ	0xFF3
  2476                           intcon	equ	0xFF2
  2477                           postinc0	equ	0xFEE
  2478                           wreg	equ	0xFE8
  2479                           indf2	equ	0xFDF
  2480                           postinc2	equ	0xFDE
  2481                           postdec2	equ	0xFDD
  2482                           fsr2h	equ	0xFDA
  2483                           fsr2l	equ	0xFD9
  2484                           status	equ	0xFD8
  2485                           
  2486 ;; *************** function _Delay *****************
  2487 ;; Defined at:
  2488 ;;		line 118 in file "main.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  wait            2   26[COMRAM] int 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  x               2   29[COMRAM] int 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;		None               void
  2495 ;; Registers used:
  2496 ;;		wreg, status,2, status,0
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2502 ;;      Params:         2       0       0       0       0       0       0
  2503 ;;      Locals:         2       0       0       0       0       0       0
  2504 ;;      Temps:          1       0       0       0       0       0       0
  2505 ;;      Totals:         5       0       0       0       0       0       0
  2506 ;;Total ram usage:        5 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:    4
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_respondECU
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text11
  2517  002970                     __ptext11:
  2518                           	opt stack 0
  2519  002970                     _Delay:
  2520                           	opt stack 24
  2521                           
  2522                           ;main.c: 119: int x;
  2523                           ;main.c: 120: for (x = 0; x < wait; x++) {
  2524                           
  2525                           ;incstack = 0
  2526  002970  0E00               	movlw	0
  2527  002972  6E1F               	movwf	Delay@x+1,c
  2528  002974  0E00               	movlw	0
  2529  002976  6E1E               	movwf	Delay@x,c
  2530  002978  D00A               	goto	l420
  2531  00297A                     l3244:
  2532                           
  2533                           ;main.c: 121: _delay((unsigned long)((1)*(16000000/4000.0)));
  2534  00297A  0E06               	movlw	6
  2535  00297C  6E1D               	movwf	??_Delay& (0+255),c
  2536  00297E  0E30               	movlw	48
  2537  002980                     u6637:
  2538  002980  2EE8               	decfsz	wreg,f,c
  2539  002982  D7FE               	goto	u6637
  2540  002984  2E1D               	decfsz	??_Delay& (0+255),f,c
  2541  002986  D7FC               	goto	u6637
  2542  002988  D000               	nop2	
  2543  00298A  4A1E               	infsnz	Delay@x,f,c
  2544  00298C  2A1F               	incf	Delay@x+1,f,c
  2545  00298E                     l420:
  2546  00298E  501F               	movf	Delay@x+1,w,c
  2547  002990  0A80               	xorlw	128
  2548  002992  6E1D               	movwf	??_Delay& (0+255),c
  2549  002994  501B               	movf	Delay@wait,w,c
  2550  002996  5C1E               	subwf	Delay@x,w,c
  2551  002998  501C               	movf	Delay@wait+1,w,c
  2552  00299A  0A80               	xorlw	128
  2553  00299C  581D               	subwfb	??_Delay& (0+255),w,c
  2554  00299E  B0D8               	btfsc	status,0,c
  2555  0029A0  0012               	return	
  2556  0029A2  D7EB               	goto	l3244
  2557  0029A4                     __end_of_Delay:
  2558                           	opt stack 0
  2559                           tosu	equ	0xFFF
  2560                           tosh	equ	0xFFE
  2561                           tosl	equ	0xFFD
  2562                           pclath	equ	0xFFA
  2563                           tblptru	equ	0xFF8
  2564                           tblptrh	equ	0xFF7
  2565                           tblptrl	equ	0xFF6
  2566                           tablat	equ	0xFF5
  2567                           prodl	equ	0xFF3
  2568                           intcon	equ	0xFF2
  2569                           postinc0	equ	0xFEE
  2570                           wreg	equ	0xFE8
  2571                           indf2	equ	0xFDF
  2572                           postinc2	equ	0xFDE
  2573                           postdec2	equ	0xFDD
  2574                           fsr2h	equ	0xFDA
  2575                           fsr2l	equ	0xFD9
  2576                           status	equ	0xFD8
  2577                           
  2578 ;; *************** function _receiveData *****************
  2579 ;; Defined at:
  2580 ;;		line 82 in file "FastTransfer.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;		None
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;  holder          3   10[BANK0 ] unsigned char [3]
  2585 ;;  crcHolder       1   14[BANK0 ] unsigned char 
  2586 ;;  holder          3    7[BANK0 ] unsigned char [3]
  2587 ;;  crcHolder       1   13[BANK0 ] unsigned char 
  2588 ;;  u               2   15[BANK0 ] int 
  2589 ;;  r               2   17[BANK0 ] int 
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  1    wreg      unsigned char 
  2592 ;; Registers used:
  2593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2599 ;;      Params:         0       0       0       0       0       0       0
  2600 ;;      Locals:         0      12       0       0       0       0       0
  2601 ;;      Temps:          4       0       0       0       0       0       0
  2602 ;;      Totals:         4      12       0       0       0       0       0
  2603 ;;Total ram usage:       16 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; Hardware stack levels required when called:    8
  2606 ;; This function calls:
  2607 ;;		Absolute function
  2608 ;;		_CRC8
  2609 ;;		_CRCcheck
  2610 ;;		_Receive_available
  2611 ;;		_Receive_get
  2612 ;;		_Receive_peek
  2613 ;;		_Send_put
  2614 ;; This function is called by:
  2615 ;;		_updateComms
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text12
  2620  0000C4                     __ptext12:
  2621                           	opt stack 0
  2622  0000C4                     _receiveData:
  2623                           	opt stack 21
  2624                           
  2625                           ;FastTransfer.c: 85: if (rx_len == 0) {
  2626                           
  2627                           ;incstack = 0
  2628  0000C4  663E               	tstfsz	_rx_len,c
  2629  0000C6  D0A9               	goto	l4844
  2630                           
  2631                           ;FastTransfer.c: 87: if (serial_available() > 4) {
  2632  0000C8  D801               	call	u5408
  2633  0000CA  D00A               	goto	u5409
  2634  0000CC                     u5408:
  2635  0000CC  0005               	push	
  2636  0000CE  6EFA               	movwf	pclath,c
  2637  0000D0  502D               	movf	_serial_available,w,c
  2638  0000D2  6EFD               	movwf	tosl,c
  2639  0000D4  502E               	movf	_serial_available+1,w,c
  2640  0000D6  6EFE               	movwf	tosh,c
  2641  0000D8  50F8               	movf	tblptru,w,c
  2642  0000DA  6EFF               	movwf	tosu,c
  2643  0000DC  50FA               	movf	pclath,w,c
  2644  0000DE  0012               	return		;indir
  2645  0000E0                     u5409:
  2646  0000E0  501E               	movf	?_Receive_available+1,w,c
  2647  0000E2  0A80               	xorlw	128
  2648  0000E4  0F80               	addlw	-128
  2649  0000E6  0E05               	movlw	5
  2650  0000E8  B4D8               	btfsc	status,2,c
  2651  0000EA  5C1D               	subwf	?_Receive_available,w,c
  2652  0000EC  B0D8               	btfsc	status,0,c
  2653  0000EE  D01C               	goto	l4820
  2654  0000F0  D094               	goto	l4844
  2655  0000F2                     l4812:
  2656                           
  2657                           ;FastTransfer.c: 93: alignErrorCounter++;
  2658  0000F2  0100               	movlb	0	; () banked
  2659  0000F4  4B9D               	infsnz	_alignErrorCounter& (0+255),f,b
  2660  0000F6  2B9E               	incf	(_alignErrorCounter+1)& (0+255),f,b
  2661                           
  2662                           ; BSR set to: 0
  2663                           ;FastTransfer.c: 94: if (serial_available() < 5)
  2664  0000F8  D801               	call	u5428
  2665  0000FA  D00A               	goto	u5429
  2666  0000FC                     u5428:
  2667  0000FC  0005               	push	
  2668  0000FE  6EFA               	movwf	pclath,c
  2669  000100  502D               	movf	_serial_available,w,c
  2670  000102  6EFD               	movwf	tosl,c
  2671  000104  502E               	movf	_serial_available+1,w,c
  2672  000106  6EFE               	movwf	tosh,c
  2673  000108  50F8               	movf	tblptru,w,c
  2674  00010A  6EFF               	movwf	tosu,c
  2675  00010C  50FA               	movf	pclath,w,c
  2676  00010E  0012               	return		;indir
  2677  000110                     u5429:
  2678  000110  501E               	movf	?_Receive_available+1,w,c
  2679  000112  0A80               	xorlw	128
  2680  000114  6EF3               	movwf	prodl,c
  2681  000116  0E80               	movlw	128
  2682  000118  5CF3               	subwf	prodl,w,c
  2683  00011A  0E05               	movlw	5
  2684  00011C  B4D8               	btfsc	status,2,c
  2685  00011E  5C1D               	subwf	?_Receive_available,w,c
  2686  000120  B0D8               	btfsc	status,0,c
  2687  000122  D002               	goto	l4820
  2688                           
  2689                           ;FastTransfer.c: 95: return 0;
  2690  000124  0E00               	movlw	0
  2691  000126  0012               	return	
  2692  000128                     l4820:
  2693  000128  D801               	call	u5448
  2694  00012A  D00A               	goto	u5449
  2695  00012C                     u5448:
  2696  00012C  0005               	push	
  2697  00012E  6EFA               	movwf	pclath,c
  2698  000130  502F               	movf	_serial_read,w,c
  2699  000132  6EFD               	movwf	tosl,c
  2700  000134  5030               	movf	_serial_read+1,w,c
  2701  000136  6EFE               	movwf	tosh,c
  2702  000138  50F8               	movf	tblptru,w,c
  2703  00013A  6EFF               	movwf	tosu,c
  2704  00013C  50FA               	movf	pclath,w,c
  2705  00013E  0012               	return		;indir
  2706  000140                     u5449:
  2707  000140  0A06               	xorlw	6
  2708  000142  A4D8               	btfss	status,2,c
  2709  000144  D7D6               	goto	l4812
  2710                           
  2711                           ;FastTransfer.c: 96: }
  2712                           ;FastTransfer.c: 97: if (serial_read() == 0x85) {
  2713  000146  D801               	call	u5468
  2714  000148  D00A               	goto	u5469
  2715  00014A                     u5468:
  2716  00014A  0005               	push	
  2717  00014C  6EFA               	movwf	pclath,c
  2718  00014E  502F               	movf	_serial_read,w,c
  2719  000150  6EFD               	movwf	tosl,c
  2720  000152  5030               	movf	_serial_read+1,w,c
  2721  000154  6EFE               	movwf	tosh,c
  2722  000156  50F8               	movf	tblptru,w,c
  2723  000158  6EFF               	movwf	tosu,c
  2724  00015A  50FA               	movf	pclath,w,c
  2725  00015C  0012               	return		;indir
  2726  00015E                     u5469:
  2727  00015E  0A85               	xorlw	133
  2728  000160  A4D8               	btfss	status,2,c
  2729  000162  D05B               	goto	l4844
  2730                           
  2731                           ;FastTransfer.c: 98: rx_address = serial_read();
  2732  000164  D801               	call	u5488
  2733  000166  D00A               	goto	u5489
  2734  000168                     u5488:
  2735  000168  0005               	push	
  2736  00016A  6EFA               	movwf	pclath,c
  2737  00016C  502F               	movf	_serial_read,w,c
  2738  00016E  6EFD               	movwf	tosl,c
  2739  000170  5030               	movf	_serial_read+1,w,c
  2740  000172  6EFE               	movwf	tosh,c
  2741  000174  50F8               	movf	tblptru,w,c
  2742  000176  6EFF               	movwf	tosu,c
  2743  000178  50FA               	movf	pclath,w,c
  2744  00017A  0012               	return		;indir
  2745  00017C                     u5489:
  2746  00017C  6E3C               	movwf	_rx_address,c
  2747                           
  2748                           ;FastTransfer.c: 99: returnAddress = serial_read();
  2749  00017E  D801               	call	u5498
  2750  000180  D00A               	goto	u5499
  2751  000182                     u5498:
  2752  000182  0005               	push	
  2753  000184  6EFA               	movwf	pclath,c
  2754  000186  502F               	movf	_serial_read,w,c
  2755  000188  6EFD               	movwf	tosl,c
  2756  00018A  5030               	movf	_serial_read+1,w,c
  2757  00018C  6EFE               	movwf	tosh,c
  2758  00018E  50F8               	movf	tblptru,w,c
  2759  000190  6EFF               	movwf	tosu,c
  2760  000192  50FA               	movf	pclath,w,c
  2761  000194  0012               	return		;indir
  2762  000196                     u5499:
  2763  000196  6E3B               	movwf	_returnAddress,c
  2764                           
  2765                           ;FastTransfer.c: 100: rx_len = serial_read();
  2766  000198  D801               	call	u5508
  2767  00019A  D00A               	goto	u5509
  2768  00019C                     u5508:
  2769  00019C  0005               	push	
  2770  00019E  6EFA               	movwf	pclath,c
  2771  0001A0  502F               	movf	_serial_read,w,c
  2772  0001A2  6EFD               	movwf	tosl,c
  2773  0001A4  5030               	movf	_serial_read+1,w,c
  2774  0001A6  6EFE               	movwf	tosh,c
  2775  0001A8  50F8               	movf	tblptru,w,c
  2776  0001AA  6EFF               	movwf	tosu,c
  2777  0001AC  50FA               	movf	pclath,w,c
  2778  0001AE  0012               	return		;indir
  2779  0001B0                     u5509:
  2780  0001B0  6E3E               	movwf	_rx_len,c
  2781                           
  2782                           ;FastTransfer.c: 102: if (rx_address != moduleAddress) {
  2783  0001B2  503C               	movf	_rx_address,w,c
  2784  0001B4  183A               	xorwf	_moduleAddress,w,c
  2785  0001B6  B4D8               	btfsc	status,2,c
  2786  0001B8  D030               	goto	l4844
  2787                           
  2788                           ;FastTransfer.c: 103: addressErrorCounter++;
  2789  0001BA  0100               	movlb	0	; () banked
  2790  0001BC  4B9B               	infsnz	_addressErrorCounter& (0+255),f,b
  2791  0001BE  2B9C               	incf	(_addressErrorCounter+1)& (0+255),f,b
  2792                           
  2793                           ; BSR set to: 0
  2794                           ;FastTransfer.c: 106: int u;
  2795                           ;FastTransfer.c: 107: for (u = 0; u <= (rx_len + 1); u++) {
  2796  0001C0  0E00               	movlw	0
  2797  0001C2  0100               	movlb	0	; () banked
  2798  0001C4  6FE3               	movwf	(receiveData@u+1)& (0+255),b
  2799  0001C6  0E00               	movlw	0
  2800  0001C8  0100               	movlb	0	; () banked
  2801  0001CA  6FE2               	movwf	receiveData@u& (0+255),b
  2802  0001CC  D00F               	goto	l4836
  2803  0001CE                     l4832:
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;FastTransfer.c: 108: serial_read();
  2807  0001CE  D801               	call	u5528
  2808  0001D0  D00A               	goto	u5529
  2809  0001D2                     u5528:
  2810  0001D2  0005               	push	
  2811  0001D4  6EFA               	movwf	pclath,c
  2812  0001D6  502F               	movf	_serial_read,w,c
  2813  0001D8  6EFD               	movwf	tosl,c
  2814  0001DA  5030               	movf	_serial_read+1,w,c
  2815  0001DC  6EFE               	movwf	tosh,c
  2816  0001DE  50F8               	movf	tblptru,w,c
  2817  0001E0  6EFF               	movwf	tosu,c
  2818  0001E2  50FA               	movf	pclath,w,c
  2819  0001E4  0012               	return		;indir
  2820  0001E6                     u5529:
  2821  0001E6  0100               	movlb	0	; () banked
  2822  0001E8  4BE2               	infsnz	receiveData@u& (0+255),f,b
  2823  0001EA  2BE3               	incf	(receiveData@u+1)& (0+255),f,b
  2824  0001EC                     l4836:
  2825                           
  2826                           ; BSR set to: 0
  2827  0001EC  503E               	movf	_rx_len,w,c
  2828  0001EE  6E27               	movwf	??_receiveData& (0+255),c
  2829  0001F0  6A28               	clrf	(??_receiveData+1)& (0+255),c
  2830  0001F2  0E01               	movlw	1
  2831  0001F4  2627               	addwf	??_receiveData,f,c
  2832  0001F6  0E00               	movlw	0
  2833  0001F8  2228               	addwfc	??_receiveData+1,f,c
  2834  0001FA  5028               	movf	??_receiveData+1,w,c
  2835  0001FC  0A80               	xorlw	128
  2836  0001FE  6E29               	movwf	(??_receiveData+2)& (0+255),c
  2837  000200  0100               	movlb	0	; () banked
  2838  000202  51E2               	movf	receiveData@u& (0+255),w,b
  2839  000204  5C27               	subwf	??_receiveData,w,c
  2840  000206  0100               	movlb	0	; () banked
  2841  000208  51E3               	movf	(receiveData@u+1)& (0+255),w,b
  2842  00020A  0A80               	xorlw	128
  2843  00020C  5829               	subwfb	(??_receiveData+2)& (0+255),w,c
  2844  00020E  B0D8               	btfsc	status,0,c
  2845  000210  D7DE               	goto	l4832
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;FastTransfer.c: 109: }
  2849                           ;FastTransfer.c: 110: rx_len = 0;
  2850                           
  2851                           ; BSR set to: 0
  2852  000212  0E00               	movlw	0
  2853  000214  6E3E               	movwf	_rx_len,c
  2854                           
  2855                           ; BSR set to: 0
  2856                           ;FastTransfer.c: 111: return 0;
  2857  000216  0E00               	movlw	0
  2858  000218  0012               	return	
  2859  00021A                     l4844:
  2860                           
  2861                           ;FastTransfer.c: 112: }
  2862                           ;FastTransfer.c: 114: }
  2863                           ;FastTransfer.c: 115: }
  2864                           ;FastTransfer.c: 116: }
  2865                           ;FastTransfer.c: 119: if (rx_len != 0) {
  2866  00021A  503E               	movf	_rx_len,w,c
  2867  00021C  B4D8               	btfsc	status,2,c
  2868  00021E  D277               	goto	l4968
  2869                           
  2870                           ;FastTransfer.c: 122: if (rx_array_inx == 0) {
  2871  000220  663D               	tstfsz	_rx_array_inx,c
  2872  000222  D049               	goto	l4868
  2873  000224                     l4850:
  2874  000224  D801               	call	u5568
  2875  000226  D00A               	goto	u5569
  2876  000228                     u5568:
  2877  000228  0005               	push	
  2878  00022A  6EFA               	movwf	pclath,c
  2879  00022C  502D               	movf	_serial_available,w,c
  2880  00022E  6EFD               	movwf	tosl,c
  2881  000230  502E               	movf	_serial_available+1,w,c
  2882  000232  6EFE               	movwf	tosh,c
  2883  000234  50F8               	movf	tblptru,w,c
  2884  000236  6EFF               	movwf	tosu,c
  2885  000238  50FA               	movf	pclath,w,c
  2886  00023A  0012               	return		;indir
  2887  00023C                     u5569:
  2888  00023C  501E               	movf	?_Receive_available+1,w,c
  2889  00023E  0A80               	xorlw	128
  2890  000240  0F80               	addlw	-128
  2891  000242  0E01               	movlw	1
  2892  000244  B4D8               	btfsc	status,2,c
  2893  000246  5C1D               	subwf	?_Receive_available,w,c
  2894  000248  A0D8               	btfss	status,0,c
  2895  00024A  D7EC               	goto	l4850
  2896                           
  2897                           ;FastTransfer.c: 124: if (255 == serial_peek()) {
  2898  00024C  D801               	call	u5588
  2899  00024E  D00D               	goto	u5589
  2900  000250                     u5588:
  2901  000250  0005               	push	
  2902  000252  0100               	movlb	0	; () banked
  2903  000254  6EFA               	movwf	pclath,c
  2904  000256  0100               	movlb	0	; () banked
  2905  000258  51AB               	movf	_serial_peek& (0+255),w,b
  2906  00025A  6EFD               	movwf	tosl,c
  2907  00025C  0100               	movlb	0	; () banked
  2908  00025E  51AC               	movf	(_serial_peek+1)& (0+255),w,b
  2909  000260  6EFE               	movwf	tosh,c
  2910  000262  50F8               	movf	tblptru,w,c
  2911  000264  6EFF               	movwf	tosu,c
  2912  000266  50FA               	movf	pclath,w,c
  2913  000268  0012               	return		;indir
  2914  00026A                     u5589:
  2915  00026A  6E27               	movwf	??_receiveData& (0+255),c
  2916  00026C  2827               	incf	??_receiveData,w,c
  2917  00026E  A4D8               	btfss	status,2,c
  2918  000270  D022               	goto	l4868
  2919                           
  2920                           ;FastTransfer.c: 125: CRCcheck();
  2921  000272  EC45  F008         	call	_CRCcheck	;wreg free
  2922                           
  2923                           ;FastTransfer.c: 126: rx_len = 0;
  2924  000276  0E00               	movlw	0
  2925  000278  6E3E               	movwf	_rx_len,c
  2926                           
  2927                           ;FastTransfer.c: 127: rx_array_inx = 0;
  2928  00027A  0E00               	movlw	0
  2929  00027C  6E3D               	movwf	_rx_array_inx,c
  2930                           
  2931                           ;FastTransfer.c: 128: return 0;
  2932  00027E  0E00               	movlw	0
  2933  000280  0012               	return	
  2934  000282                     l4864:
  2935                           
  2936                           ;FastTransfer.c: 134: rx_buffer[rx_array_inx++] = serial_read();
  2937  000282  D801               	call	u5608
  2938  000284  D00A               	goto	u5609
  2939  000286                     u5608:
  2940  000286  0005               	push	
  2941  000288  6EFA               	movwf	pclath,c
  2942  00028A  502F               	movf	_serial_read,w,c
  2943  00028C  6EFD               	movwf	tosl,c
  2944  00028E  5030               	movf	_serial_read+1,w,c
  2945  000290  6EFE               	movwf	tosh,c
  2946  000292  50F8               	movf	tblptru,w,c
  2947  000294  6EFF               	movwf	tosu,c
  2948  000296  50FA               	movf	pclath,w,c
  2949  000298  0012               	return		;indir
  2950  00029A                     u5609:
  2951  00029A  6E27               	movwf	??_receiveData& (0+255),c
  2952  00029C  503D               	movf	_rx_array_inx,w,c
  2953  00029E  0D01               	mullw	1
  2954  0002A0  0102               	movlb	2	; () banked
  2955  0002A2  0E00               	movlw	low _rx_buffer
  2956  0002A4  24F3               	addwf	prodl,w,c
  2957  0002A6  6ED9               	movwf	fsr2l,c
  2958  0002A8  0102               	movlb	2	; () banked
  2959  0002AA  0E02               	movlw	high _rx_buffer
  2960  0002AC  20F4               	addwfc	prodh,w,c
  2961  0002AE  6EDA               	movwf	fsr2h,c
  2962  0002B0  C027  FFDF         	movff	??_receiveData,indf2
  2963                           
  2964                           ; BSR set to: 2
  2965  0002B4  2A3D               	incf	_rx_array_inx,f,c
  2966  0002B6                     l4868:
  2967  0002B6  D801               	call	u5618
  2968  0002B8  D00A               	goto	u5619
  2969  0002BA                     u5618:
  2970  0002BA  0005               	push	
  2971  0002BC  6EFA               	movwf	pclath,c
  2972  0002BE  502D               	movf	_serial_available,w,c
  2973  0002C0  6EFD               	movwf	tosl,c
  2974  0002C2  502E               	movf	_serial_available+1,w,c
  2975  0002C4  6EFE               	movwf	tosh,c
  2976  0002C6  50F8               	movf	tblptru,w,c
  2977  0002C8  6EFF               	movwf	tosu,c
  2978  0002CA  50FA               	movf	pclath,w,c
  2979  0002CC  0012               	return		;indir
  2980  0002CE                     u5619:
  2981  0002CE  501E               	movf	?_Receive_available+1,w,c
  2982  0002D0  101D               	iorwf	?_Receive_available,w,c
  2983  0002D2  B4D8               	btfsc	status,2,c
  2984  0002D4  D004               	goto	l4872
  2985  0002D6  503D               	movf	_rx_array_inx,w,c
  2986  0002D8  5C3E               	subwf	_rx_len,w,c
  2987  0002DA  B0D8               	btfsc	status,0,c
  2988  0002DC  D7D2               	goto	l4864
  2989  0002DE                     l4872:
  2990                           
  2991                           ;FastTransfer.c: 135: }
  2992                           ;FastTransfer.c: 137: if (rx_len == (rx_array_inx - 1)) {
  2993  0002DE  0EFF               	movlw	255
  2994  0002E0  6E27               	movwf	??_receiveData& (0+255),c
  2995  0002E2  0EFF               	movlw	255
  2996  0002E4  6E28               	movwf	(??_receiveData+1)& (0+255),c
  2997  0002E6  503D               	movf	_rx_array_inx,w,c
  2998  0002E8  6E29               	movwf	(??_receiveData+2)& (0+255),c
  2999  0002EA  6A2A               	clrf	(??_receiveData+3)& (0+255),c
  3000  0002EC  5027               	movf	??_receiveData,w,c
  3001  0002EE  2629               	addwf	??_receiveData+2,f,c
  3002  0002F0  5028               	movf	??_receiveData+1,w,c
  3003  0002F2  222A               	addwfc	??_receiveData+3,f,c
  3004  0002F4  503E               	movf	_rx_len,w,c
  3005  0002F6  1829               	xorwf	??_receiveData+2,w,c
  3006  0002F8  102A               	iorwf	??_receiveData+3,w,c
  3007  0002FA  A4D8               	btfss	status,2,c
  3008  0002FC  D208               	goto	l4968
  3009                           
  3010                           ;FastTransfer.c: 140: calc_CS = CRC8(rx_buffer, rx_len);
  3011  0002FE  0102               	movlb	2	; () banked
  3012  000300  0E02               	movlw	high _rx_buffer
  3013  000302  6E1C               	movwf	CRC8@data+1,c
  3014  000304  0102               	movlb	2	; () banked
  3015  000306  0E00               	movlw	low _rx_buffer
  3016  000308  6E1B               	movwf	CRC8@data,c
  3017  00030A  C03E  F01D         	movff	_rx_len,CRC8@len
  3018  00030E  ECD7  F013         	call	_CRC8	;wreg free
  3019  000312  6E36               	movwf	_calc_CS,c
  3020                           
  3021                           ;FastTransfer.c: 144: if (calc_CS == rx_buffer[rx_array_inx - 1]) {
  3022  000314  0EFF               	movlw	255
  3023  000316  6E27               	movwf	??_receiveData& (0+255),c
  3024  000318  0EFF               	movlw	255
  3025  00031A  6E28               	movwf	(??_receiveData+1)& (0+255),c
  3026  00031C  503D               	movf	_rx_array_inx,w,c
  3027  00031E  6E29               	movwf	(??_receiveData+2)& (0+255),c
  3028  000320  6A2A               	clrf	(??_receiveData+3)& (0+255),c
  3029  000322  5027               	movf	??_receiveData,w,c
  3030  000324  2629               	addwf	??_receiveData+2,f,c
  3031  000326  5028               	movf	??_receiveData+1,w,c
  3032  000328  222A               	addwfc	??_receiveData+3,f,c
  3033  00032A  0102               	movlb	2	; () banked
  3034  00032C  0E00               	movlw	low _rx_buffer
  3035  00032E  2429               	addwf	??_receiveData+2,w,c
  3036  000330  6ED9               	movwf	fsr2l,c
  3037  000332  0102               	movlb	2	; () banked
  3038  000334  0E02               	movlw	high _rx_buffer
  3039  000336  202A               	addwfc	??_receiveData+3,w,c
  3040  000338  6EDA               	movwf	fsr2h,c
  3041  00033A  5036               	movf	_calc_CS,w,c
  3042  00033C  62DF               	cpfseq	indf2,c
  3043  00033E  D12B               	goto	l4930
  3044                           
  3045                           ; BSR set to: 2
  3046                           ;FastTransfer.c: 147: int r;
  3047                           ;FastTransfer.c: 148: for (r = 0; r < rx_len; r = r + 3) {
  3048  000340  0E00               	movlw	0
  3049  000342  0100               	movlb	0	; () banked
  3050  000344  6FE5               	movwf	(receiveData@r+1)& (0+255),b
  3051  000346  0E00               	movlw	0
  3052  000348  0100               	movlb	0	; () banked
  3053  00034A  6FE4               	movwf	receiveData@r& (0+255),b
  3054  00034C  D05C               	goto	l4890
  3055  00034E                     l4880:
  3056                           
  3057                           ; BSR set to: 0
  3058                           ;FastTransfer.c: 149: if (rx_buffer[r] < maxDataAddress) {
  3059  00034E  0102               	movlb	2	; () banked
  3060  000350  0E00               	movlw	low _rx_buffer
  3061  000352  0100               	movlb	0	; () banked
  3062  000354  25E4               	addwf	receiveData@r& (0+255),w,b
  3063  000356  6ED9               	movwf	fsr2l,c
  3064  000358  0102               	movlb	2	; () banked
  3065  00035A  0E02               	movlw	high _rx_buffer
  3066  00035C  0100               	movlb	0	; () banked
  3067  00035E  21E5               	addwfc	(receiveData@r+1)& (0+255),w,b
  3068  000360  6EDA               	movwf	fsr2h,c
  3069  000362  50DF               	movf	indf2,w,c
  3070  000364  6E27               	movwf	??_receiveData& (0+255),c
  3071  000366  5039               	movf	_maxDataAddress,w,c
  3072  000368  5C27               	subwf	??_receiveData,w,c
  3073  00036A  B0D8               	btfsc	status,0,c
  3074  00036C  D03F               	goto	l4886
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;FastTransfer.c: 150: group.parts[0] = rx_buffer[r + 1];
  3078  00036E  0E01               	movlw	1
  3079  000370  0100               	movlb	0	; () banked
  3080  000372  25E4               	addwf	receiveData@r& (0+255),w,b
  3081  000374  6E27               	movwf	??_receiveData& (0+255),c
  3082  000376  0E00               	movlw	0
  3083  000378  0100               	movlb	0	; () banked
  3084  00037A  21E5               	addwfc	(receiveData@r+1)& (0+255),w,b
  3085  00037C  6E28               	movwf	(??_receiveData+1)& (0+255),c
  3086  00037E  0102               	movlb	2	; () banked
  3087  000380  0E00               	movlw	low _rx_buffer
  3088  000382  2427               	addwf	??_receiveData,w,c
  3089  000384  6ED9               	movwf	fsr2l,c
  3090  000386  0102               	movlb	2	; () banked
  3091  000388  0E02               	movlw	high _rx_buffer
  3092  00038A  2028               	addwfc	??_receiveData+1,w,c
  3093  00038C  6EDA               	movwf	fsr2h,c
  3094  00038E  50DF               	movf	indf2,w,c
  3095  000390  6E41               	movwf	_group,c
  3096                           
  3097                           ;FastTransfer.c: 151: group.parts[1] = rx_buffer[r + 2];
  3098  000392  0E02               	movlw	2
  3099  000394  0100               	movlb	0	; () banked
  3100  000396  25E4               	addwf	receiveData@r& (0+255),w,b
  3101  000398  6E27               	movwf	??_receiveData& (0+255),c
  3102  00039A  0E00               	movlw	0
  3103  00039C  0100               	movlb	0	; () banked
  3104  00039E  21E5               	addwfc	(receiveData@r+1)& (0+255),w,b
  3105  0003A0  6E28               	movwf	(??_receiveData+1)& (0+255),c
  3106  0003A2  0102               	movlb	2	; () banked
  3107  0003A4  0E00               	movlw	low _rx_buffer
  3108  0003A6  2427               	addwf	??_receiveData,w,c
  3109  0003A8  6ED9               	movwf	fsr2l,c
  3110  0003AA  0102               	movlb	2	; () banked
  3111  0003AC  0E02               	movlw	high _rx_buffer
  3112  0003AE  2028               	addwfc	??_receiveData+1,w,c
  3113  0003B0  6EDA               	movwf	fsr2h,c
  3114  0003B2  50DF               	movf	indf2,w,c
  3115  0003B4  6E42               	movwf	_group+1,c
  3116                           
  3117                           ; BSR set to: 2
  3118                           ;FastTransfer.c: 152: receiveArrayAddress[(rx_buffer[r])] = group.integer;
  3119  0003B6  0102               	movlb	2	; () banked
  3120  0003B8  0E00               	movlw	low _rx_buffer
  3121  0003BA  0100               	movlb	0	; () banked
  3122  0003BC  25E4               	addwf	receiveData@r& (0+255),w,b
  3123  0003BE  6ED9               	movwf	fsr2l,c
  3124  0003C0  0102               	movlb	2	; () banked
  3125  0003C2  0E02               	movlw	high _rx_buffer
  3126  0003C4  0100               	movlb	0	; () banked
  3127  0003C6  21E5               	addwfc	(receiveData@r+1)& (0+255),w,b
  3128  0003C8  6EDA               	movwf	fsr2h,c
  3129  0003CA  50DF               	movf	indf2,w,c
  3130  0003CC  6E27               	movwf	??_receiveData& (0+255),c
  3131  0003CE  5027               	movf	??_receiveData,w,c
  3132  0003D0  0D02               	mullw	2
  3133  0003D2  50F3               	movf	prodl,w,c
  3134  0003D4  0100               	movlb	0	; () banked
  3135  0003D6  25A7               	addwf	_receiveArrayAddress& (0+255),w,b
  3136  0003D8  6ED9               	movwf	fsr2l,c
  3137  0003DA  50F4               	movf	prodh,w,c
  3138  0003DC  0100               	movlb	0	; () banked
  3139  0003DE  21A8               	addwfc	(_receiveArrayAddress+1)& (0+255),w,b
  3140  0003E0  6EDA               	movwf	fsr2h,c
  3141  0003E2  C041  FFDE         	movff	_group,postinc2
  3142  0003E6  C042  FFDD         	movff	_group+1,postdec2
  3143                           
  3144                           ;FastTransfer.c: 153: } else {
  3145  0003EA  D003               	goto	l4888
  3146  0003EC                     l4886:
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;FastTransfer.c: 154: dataAdressErrorCounter++;
  3150  0003EC  0100               	movlb	0	; () banked
  3151  0003EE  4BA3               	infsnz	_dataAdressErrorCounter& (0+255),f,b
  3152  0003F0  2BA4               	incf	(_dataAdressErrorCounter+1)& (0+255),f,b
  3153  0003F2                     l4888:
  3154                           
  3155                           ; BSR set to: 0
  3156  0003F2  0E03               	movlw	3
  3157  0003F4  0100               	movlb	0	; () banked
  3158  0003F6  25E4               	addwf	receiveData@r& (0+255),w,b
  3159  0003F8  0100               	movlb	0	; () banked
  3160  0003FA  6FE4               	movwf	receiveData@r& (0+255),b
  3161  0003FC  0E00               	movlw	0
  3162  0003FE  0100               	movlb	0	; () banked
  3163  000400  21E5               	addwfc	(receiveData@r+1)& (0+255),w,b
  3164  000402  0100               	movlb	0	; () banked
  3165  000404  6FE5               	movwf	(receiveData@r+1)& (0+255),b
  3166  000406                     l4890:
  3167                           
  3168                           ; BSR set to: 0
  3169  000406  503E               	movf	_rx_len,w,c
  3170  000408  6E27               	movwf	??_receiveData& (0+255),c
  3171  00040A  6A28               	clrf	(??_receiveData+1)& (0+255),c
  3172  00040C  0100               	movlb	0	; () banked
  3173  00040E  51E5               	movf	(receiveData@r+1)& (0+255),w,b
  3174  000410  0A80               	xorlw	128
  3175  000412  6E29               	movwf	(??_receiveData+2)& (0+255),c
  3176  000414  5027               	movf	??_receiveData,w,c
  3177  000416  0100               	movlb	0	; () banked
  3178  000418  5DE4               	subwf	receiveData@r& (0+255),w,b
  3179  00041A  5028               	movf	??_receiveData+1,w,c
  3180  00041C  0A80               	xorlw	128
  3181  00041E  5829               	subwfb	(??_receiveData+2)& (0+255),w,c
  3182  000420  A0D8               	btfss	status,0,c
  3183  000422  D795               	goto	l4880
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;FastTransfer.c: 155: }
  3187                           ;FastTransfer.c: 156: }
  3188                           ;FastTransfer.c: 159: if (AKNAKsend) {
  3189                           
  3190                           ; BSR set to: 0
  3191  000424  5035               	movf	_AKNAKsend,w,c
  3192  000426  B4D8               	btfsc	status,2,c
  3193  000428  D0B0               	goto	l4920
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;FastTransfer.c: 160: unsigned char holder[3];
  3197                           ;FastTransfer.c: 161: holder[0] = 255;
  3198  00042A  0100               	movlb	0	; () banked
  3199  00042C  69DA               	setf	receiveData@holder& (0+255),b
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;FastTransfer.c: 162: holder[1] = 1;
  3203  00042E  0E01               	movlw	1
  3204  000430  0100               	movlb	0	; () banked
  3205  000432  6FDB               	movwf	(receiveData@holder+1)& (0+255),b
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;FastTransfer.c: 163: holder[2] = rx_buffer[rx_array_inx - 1];
  3209  000434  0EFF               	movlw	255
  3210  000436  6E27               	movwf	??_receiveData& (0+255),c
  3211  000438  0EFF               	movlw	255
  3212  00043A  6E28               	movwf	(??_receiveData+1)& (0+255),c
  3213  00043C  503D               	movf	_rx_array_inx,w,c
  3214  00043E  6E29               	movwf	(??_receiveData+2)& (0+255),c
  3215  000440  6A2A               	clrf	(??_receiveData+3)& (0+255),c
  3216  000442  5027               	movf	??_receiveData,w,c
  3217  000444  2629               	addwf	??_receiveData+2,f,c
  3218  000446  5028               	movf	??_receiveData+1,w,c
  3219  000448  222A               	addwfc	??_receiveData+3,f,c
  3220  00044A  0102               	movlb	2	; () banked
  3221  00044C  0E00               	movlw	low _rx_buffer
  3222  00044E  2429               	addwf	??_receiveData+2,w,c
  3223  000450  6ED9               	movwf	fsr2l,c
  3224  000452  0102               	movlb	2	; () banked
  3225  000454  0E02               	movlw	high _rx_buffer
  3226  000456  202A               	addwfc	??_receiveData+3,w,c
  3227  000458  6EDA               	movwf	fsr2h,c
  3228  00045A  50DF               	movf	indf2,w,c
  3229  00045C  0100               	movlb	0	; () banked
  3230  00045E  6FDC               	movwf	(receiveData@holder+2)& (0+255),b
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;FastTransfer.c: 164: unsigned char crcHolder = CRC8(holder, 3);
  3234  000460  0100               	movlb	0	; () banked
  3235  000462  0E00               	movlw	high receiveData@holder
  3236  000464  6E1C               	movwf	CRC8@data+1,c
  3237  000466  0100               	movlb	0	; () banked
  3238  000468  0EDA               	movlw	low receiveData@holder
  3239  00046A  6E1B               	movwf	CRC8@data,c
  3240  00046C  0E03               	movlw	3
  3241  00046E  6E1D               	movwf	CRC8@len,c
  3242  000470  ECD7  F013         	call	_CRC8	;wreg free
  3243  000474  0100               	movlb	0	; () banked
  3244  000476  6FE0               	movwf	receiveData@crcHolder& (0+255),b
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;FastTransfer.c: 165: serial_write(0x06);
  3248  000478  D801               	call	u5698
  3249  00047A  D00B               	goto	u5699
  3250  00047C                     u5698:
  3251  00047C  0005               	push	
  3252  00047E  6EFA               	movwf	pclath,c
  3253  000480  5031               	movf	_serial_write,w,c
  3254  000482  6EFD               	movwf	tosl,c
  3255  000484  5032               	movf	_serial_write+1,w,c
  3256  000486  6EFE               	movwf	tosh,c
  3257  000488  50F8               	movf	tblptru,w,c
  3258  00048A  6EFF               	movwf	tosu,c
  3259  00048C  50FA               	movf	pclath,w,c
  3260  00048E  0E06               	movlw	6
  3261  000490  0012               	return		;indir
  3262  000492                     u5699:
  3263                           
  3264                           ;FastTransfer.c: 166: serial_write(0x85);
  3265  000492  D801               	call	u5708
  3266  000494  D00B               	goto	u5709
  3267  000496                     u5708:
  3268  000496  0005               	push	
  3269  000498  6EFA               	movwf	pclath,c
  3270  00049A  5031               	movf	_serial_write,w,c
  3271  00049C  6EFD               	movwf	tosl,c
  3272  00049E  5032               	movf	_serial_write+1,w,c
  3273  0004A0  6EFE               	movwf	tosh,c
  3274  0004A2  50F8               	movf	tblptru,w,c
  3275  0004A4  6EFF               	movwf	tosu,c
  3276  0004A6  50FA               	movf	pclath,w,c
  3277  0004A8  0E85               	movlw	133
  3278  0004AA  0012               	return		;indir
  3279  0004AC                     u5709:
  3280                           
  3281                           ;FastTransfer.c: 167: serial_write(returnAddress);
  3282  0004AC  D801               	call	u5718
  3283  0004AE  D00B               	goto	u5719
  3284  0004B0                     u5718:
  3285  0004B0  0005               	push	
  3286  0004B2  6EFA               	movwf	pclath,c
  3287  0004B4  5031               	movf	_serial_write,w,c
  3288  0004B6  6EFD               	movwf	tosl,c
  3289  0004B8  5032               	movf	_serial_write+1,w,c
  3290  0004BA  6EFE               	movwf	tosh,c
  3291  0004BC  50F8               	movf	tblptru,w,c
  3292  0004BE  6EFF               	movwf	tosu,c
  3293  0004C0  50FA               	movf	pclath,w,c
  3294  0004C2  503B               	movf	_returnAddress,w,c
  3295  0004C4  0012               	return		;indir
  3296  0004C6                     u5719:
  3297                           
  3298                           ;FastTransfer.c: 168: serial_write(moduleAddress);
  3299  0004C6  D801               	call	u5728
  3300  0004C8  D00B               	goto	u5729
  3301  0004CA                     u5728:
  3302  0004CA  0005               	push	
  3303  0004CC  6EFA               	movwf	pclath,c
  3304  0004CE  5031               	movf	_serial_write,w,c
  3305  0004D0  6EFD               	movwf	tosl,c
  3306  0004D2  5032               	movf	_serial_write+1,w,c
  3307  0004D4  6EFE               	movwf	tosh,c
  3308  0004D6  50F8               	movf	tblptru,w,c
  3309  0004D8  6EFF               	movwf	tosu,c
  3310  0004DA  50FA               	movf	pclath,w,c
  3311  0004DC  503A               	movf	_moduleAddress,w,c
  3312  0004DE  0012               	return		;indir
  3313  0004E0                     u5729:
  3314                           
  3315                           ;FastTransfer.c: 169: serial_write(3);
  3316  0004E0  D801               	call	u5738
  3317  0004E2  D00B               	goto	u5739
  3318  0004E4                     u5738:
  3319  0004E4  0005               	push	
  3320  0004E6  6EFA               	movwf	pclath,c
  3321  0004E8  5031               	movf	_serial_write,w,c
  3322  0004EA  6EFD               	movwf	tosl,c
  3323  0004EC  5032               	movf	_serial_write+1,w,c
  3324  0004EE  6EFE               	movwf	tosh,c
  3325  0004F0  50F8               	movf	tblptru,w,c
  3326  0004F2  6EFF               	movwf	tosu,c
  3327  0004F4  50FA               	movf	pclath,w,c
  3328  0004F6  0E03               	movlw	3
  3329  0004F8  0012               	return		;indir
  3330  0004FA                     u5739:
  3331                           
  3332                           ;FastTransfer.c: 170: serial_write(255);
  3333  0004FA  D801               	call	u5748
  3334  0004FC  D00B               	goto	u5749
  3335  0004FE                     u5748:
  3336  0004FE  0005               	push	
  3337  000500  6EFA               	movwf	pclath,c
  3338  000502  5031               	movf	_serial_write,w,c
  3339  000504  6EFD               	movwf	tosl,c
  3340  000506  5032               	movf	_serial_write+1,w,c
  3341  000508  6EFE               	movwf	tosh,c
  3342  00050A  50F8               	movf	tblptru,w,c
  3343  00050C  6EFF               	movwf	tosu,c
  3344  00050E  50FA               	movf	pclath,w,c
  3345  000510  0EFF               	movlw	255
  3346  000512  0012               	return		;indir
  3347  000514                     u5749:
  3348                           
  3349                           ;FastTransfer.c: 171: serial_write(1);
  3350  000514  D801               	call	u5758
  3351  000516  D00B               	goto	u5759
  3352  000518                     u5758:
  3353  000518  0005               	push	
  3354  00051A  6EFA               	movwf	pclath,c
  3355  00051C  5031               	movf	_serial_write,w,c
  3356  00051E  6EFD               	movwf	tosl,c
  3357  000520  5032               	movf	_serial_write+1,w,c
  3358  000522  6EFE               	movwf	tosh,c
  3359  000524  50F8               	movf	tblptru,w,c
  3360  000526  6EFF               	movwf	tosu,c
  3361  000528  50FA               	movf	pclath,w,c
  3362  00052A  0E01               	movlw	1
  3363  00052C  0012               	return		;indir
  3364  00052E                     u5759:
  3365                           
  3366                           ;FastTransfer.c: 172: serial_write(rx_buffer[rx_array_inx - 1]);
  3367  00052E  D801               	call	u5768
  3368  000530  D01E               	goto	u5769
  3369  000532                     u5768:
  3370  000532  0005               	push	
  3371  000534  6EFA               	movwf	pclath,c
  3372  000536  5031               	movf	_serial_write,w,c
  3373  000538  6EFD               	movwf	tosl,c
  3374  00053A  5032               	movf	_serial_write+1,w,c
  3375  00053C  6EFE               	movwf	tosh,c
  3376  00053E  50F8               	movf	tblptru,w,c
  3377  000540  6EFF               	movwf	tosu,c
  3378  000542  50FA               	movf	pclath,w,c
  3379  000544  0EFF               	movlw	255
  3380  000546  6E27               	movwf	??_receiveData& (0+255),c
  3381  000548  0EFF               	movlw	255
  3382  00054A  6E28               	movwf	(??_receiveData+1)& (0+255),c
  3383  00054C  503D               	movf	_rx_array_inx,w,c
  3384  00054E  6E29               	movwf	(??_receiveData+2)& (0+255),c
  3385  000550  6A2A               	clrf	(??_receiveData+3)& (0+255),c
  3386  000552  5027               	movf	??_receiveData,w,c
  3387  000554  2629               	addwf	??_receiveData+2,f,c
  3388  000556  5028               	movf	??_receiveData+1,w,c
  3389  000558  222A               	addwfc	??_receiveData+3,f,c
  3390  00055A  0102               	movlb	2	; () banked
  3391  00055C  0E00               	movlw	low _rx_buffer
  3392  00055E  2429               	addwf	??_receiveData+2,w,c
  3393  000560  6ED9               	movwf	fsr2l,c
  3394  000562  0102               	movlb	2	; () banked
  3395  000564  0E02               	movlw	high _rx_buffer
  3396  000566  202A               	addwfc	??_receiveData+3,w,c
  3397  000568  6EDA               	movwf	fsr2h,c
  3398  00056A  50DF               	movf	indf2,w,c
  3399  00056C  0012               	return		;indir
  3400  00056E                     u5769:
  3401                           
  3402                           ;FastTransfer.c: 173: serial_write(crcHolder);
  3403  00056E  D801               	call	u5778
  3404  000570  D00C               	goto	l4920
  3405  000572                     u5778:
  3406  000572  0005               	push	
  3407  000574  6EFA               	movwf	pclath,c
  3408  000576  5031               	movf	_serial_write,w,c
  3409  000578  6EFD               	movwf	tosl,c
  3410  00057A  5032               	movf	_serial_write+1,w,c
  3411  00057C  6EFE               	movwf	tosh,c
  3412  00057E  50F8               	movf	tblptru,w,c
  3413  000580  6EFF               	movwf	tosu,c
  3414  000582  50FA               	movf	pclath,w,c
  3415  000584  0100               	movlb	0	; () banked
  3416  000586  51E0               	movf	receiveData@crcHolder& (0+255),w,b
  3417  000588  0012               	return		;indir
  3418  00058A                     l4920:
  3419                           
  3420                           ;FastTransfer.c: 174: }
  3421                           ;FastTransfer.c: 178: rx_len = 0;
  3422  00058A  0E00               	movlw	0
  3423  00058C  6E3E               	movwf	_rx_len,c
  3424                           
  3425                           ;FastTransfer.c: 179: rx_array_inx = 0;
  3426  00058E  0E00               	movlw	0
  3427  000590  6E3D               	movwf	_rx_array_inx,c
  3428                           
  3429                           ;FastTransfer.c: 180: return 1;
  3430  000592  0E01               	movlw	1
  3431  000594  0012               	return	
  3432  000596                     l4930:
  3433                           
  3434                           ;FastTransfer.c: 182: crcErrorCounter++;
  3435  000596  0100               	movlb	0	; () banked
  3436  000598  4BA1               	infsnz	_crcErrorCounter& (0+255),f,b
  3437  00059A  2BA2               	incf	(_crcErrorCounter+1)& (0+255),f,b
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;FastTransfer.c: 184: if (AKNAKsend) {
  3441  00059C  5035               	movf	_AKNAKsend,w,c
  3442  00059E  B4D8               	btfsc	status,2,c
  3443  0005A0  D0B0               	goto	l4960
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;FastTransfer.c: 185: unsigned char holder[3];
  3447                           ;FastTransfer.c: 186: holder[0] = 255;
  3448  0005A2  0100               	movlb	0	; () banked
  3449  0005A4  69DD               	setf	receiveData@holder_2257& (0+255),b
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;FastTransfer.c: 187: holder[1] = 2;
  3453  0005A6  0E02               	movlw	2
  3454  0005A8  0100               	movlb	0	; () banked
  3455  0005AA  6FDE               	movwf	(receiveData@holder_2257+1)& (0+255),b
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;FastTransfer.c: 188: holder[2] = rx_buffer[rx_array_inx - 1];
  3459  0005AC  0EFF               	movlw	255
  3460  0005AE  6E27               	movwf	??_receiveData& (0+255),c
  3461  0005B0  0EFF               	movlw	255
  3462  0005B2  6E28               	movwf	(??_receiveData+1)& (0+255),c
  3463  0005B4  503D               	movf	_rx_array_inx,w,c
  3464  0005B6  6E29               	movwf	(??_receiveData+2)& (0+255),c
  3465  0005B8  6A2A               	clrf	(??_receiveData+3)& (0+255),c
  3466  0005BA  5027               	movf	??_receiveData,w,c
  3467  0005BC  2629               	addwf	??_receiveData+2,f,c
  3468  0005BE  5028               	movf	??_receiveData+1,w,c
  3469  0005C0  222A               	addwfc	??_receiveData+3,f,c
  3470  0005C2  0102               	movlb	2	; () banked
  3471  0005C4  0E00               	movlw	low _rx_buffer
  3472  0005C6  2429               	addwf	??_receiveData+2,w,c
  3473  0005C8  6ED9               	movwf	fsr2l,c
  3474  0005CA  0102               	movlb	2	; () banked
  3475  0005CC  0E02               	movlw	high _rx_buffer
  3476  0005CE  202A               	addwfc	??_receiveData+3,w,c
  3477  0005D0  6EDA               	movwf	fsr2h,c
  3478  0005D2  50DF               	movf	indf2,w,c
  3479  0005D4  0100               	movlb	0	; () banked
  3480  0005D6  6FDF               	movwf	(receiveData@holder_2257+2)& (0+255),b
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;FastTransfer.c: 189: unsigned char crcHolder = CRC8(holder, 3);
  3484  0005D8  0100               	movlb	0	; () banked
  3485  0005DA  0E00               	movlw	high receiveData@holder_2257
  3486  0005DC  6E1C               	movwf	CRC8@data+1,c
  3487  0005DE  0100               	movlb	0	; () banked
  3488  0005E0  0EDD               	movlw	low receiveData@holder_2257
  3489  0005E2  6E1B               	movwf	CRC8@data,c
  3490  0005E4  0E03               	movlw	3
  3491  0005E6  6E1D               	movwf	CRC8@len,c
  3492  0005E8  ECD7  F013         	call	_CRC8
  3493  0005EC  0100               	movlb	0	; () banked
  3494  0005EE  6FE1               	movwf	receiveData@crcHolder_2258& (0+255),b
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;FastTransfer.c: 190: serial_write(0x06);
  3498  0005F0  D801               	call	u5798
  3499  0005F2  D00B               	goto	u5799
  3500  0005F4                     u5798:
  3501  0005F4  0005               	push	
  3502  0005F6  6EFA               	movwf	pclath,c
  3503  0005F8  5031               	movf	_serial_write,w,c
  3504  0005FA  6EFD               	movwf	tosl,c
  3505  0005FC  5032               	movf	_serial_write+1,w,c
  3506  0005FE  6EFE               	movwf	tosh,c
  3507  000600  50F8               	movf	tblptru,w,c
  3508  000602  6EFF               	movwf	tosu,c
  3509  000604  50FA               	movf	pclath,w,c
  3510  000606  0E06               	movlw	6
  3511  000608  0012               	return		;indir
  3512  00060A                     u5799:
  3513                           
  3514                           ;FastTransfer.c: 191: serial_write(0x85);
  3515  00060A  D801               	call	u5808
  3516  00060C  D00B               	goto	u5809
  3517  00060E                     u5808:
  3518  00060E  0005               	push	
  3519  000610  6EFA               	movwf	pclath,c
  3520  000612  5031               	movf	_serial_write,w,c
  3521  000614  6EFD               	movwf	tosl,c
  3522  000616  5032               	movf	_serial_write+1,w,c
  3523  000618  6EFE               	movwf	tosh,c
  3524  00061A  50F8               	movf	tblptru,w,c
  3525  00061C  6EFF               	movwf	tosu,c
  3526  00061E  50FA               	movf	pclath,w,c
  3527  000620  0E85               	movlw	133
  3528  000622  0012               	return		;indir
  3529  000624                     u5809:
  3530                           
  3531                           ;FastTransfer.c: 192: serial_write(returnAddress);
  3532  000624  D801               	call	u5818
  3533  000626  D00B               	goto	u5819
  3534  000628                     u5818:
  3535  000628  0005               	push	
  3536  00062A  6EFA               	movwf	pclath,c
  3537  00062C  5031               	movf	_serial_write,w,c
  3538  00062E  6EFD               	movwf	tosl,c
  3539  000630  5032               	movf	_serial_write+1,w,c
  3540  000632  6EFE               	movwf	tosh,c
  3541  000634  50F8               	movf	tblptru,w,c
  3542  000636  6EFF               	movwf	tosu,c
  3543  000638  50FA               	movf	pclath,w,c
  3544  00063A  503B               	movf	_returnAddress,w,c
  3545  00063C  0012               	return		;indir
  3546  00063E                     u5819:
  3547                           
  3548                           ;FastTransfer.c: 193: serial_write(moduleAddress);
  3549  00063E  D801               	call	u5828
  3550  000640  D00B               	goto	u5829
  3551  000642                     u5828:
  3552  000642  0005               	push	
  3553  000644  6EFA               	movwf	pclath,c
  3554  000646  5031               	movf	_serial_write,w,c
  3555  000648  6EFD               	movwf	tosl,c
  3556  00064A  5032               	movf	_serial_write+1,w,c
  3557  00064C  6EFE               	movwf	tosh,c
  3558  00064E  50F8               	movf	tblptru,w,c
  3559  000650  6EFF               	movwf	tosu,c
  3560  000652  50FA               	movf	pclath,w,c
  3561  000654  503A               	movf	_moduleAddress,w,c
  3562  000656  0012               	return		;indir
  3563  000658                     u5829:
  3564                           
  3565                           ;FastTransfer.c: 194: serial_write(3);
  3566  000658  D801               	call	u5838
  3567  00065A  D00B               	goto	u5839
  3568  00065C                     u5838:
  3569  00065C  0005               	push	
  3570  00065E  6EFA               	movwf	pclath,c
  3571  000660  5031               	movf	_serial_write,w,c
  3572  000662  6EFD               	movwf	tosl,c
  3573  000664  5032               	movf	_serial_write+1,w,c
  3574  000666  6EFE               	movwf	tosh,c
  3575  000668  50F8               	movf	tblptru,w,c
  3576  00066A  6EFF               	movwf	tosu,c
  3577  00066C  50FA               	movf	pclath,w,c
  3578  00066E  0E03               	movlw	3
  3579  000670  0012               	return		;indir
  3580  000672                     u5839:
  3581                           
  3582                           ;FastTransfer.c: 195: serial_write(255);
  3583  000672  D801               	call	u5848
  3584  000674  D00B               	goto	u5849
  3585  000676                     u5848:
  3586  000676  0005               	push	
  3587  000678  6EFA               	movwf	pclath,c
  3588  00067A  5031               	movf	_serial_write,w,c
  3589  00067C  6EFD               	movwf	tosl,c
  3590  00067E  5032               	movf	_serial_write+1,w,c
  3591  000680  6EFE               	movwf	tosh,c
  3592  000682  50F8               	movf	tblptru,w,c
  3593  000684  6EFF               	movwf	tosu,c
  3594  000686  50FA               	movf	pclath,w,c
  3595  000688  0EFF               	movlw	255
  3596  00068A  0012               	return		;indir
  3597  00068C                     u5849:
  3598                           
  3599                           ;FastTransfer.c: 196: serial_write(2);
  3600  00068C  D801               	call	u5858
  3601  00068E  D00B               	goto	u5859
  3602  000690                     u5858:
  3603  000690  0005               	push	
  3604  000692  6EFA               	movwf	pclath,c
  3605  000694  5031               	movf	_serial_write,w,c
  3606  000696  6EFD               	movwf	tosl,c
  3607  000698  5032               	movf	_serial_write+1,w,c
  3608  00069A  6EFE               	movwf	tosh,c
  3609  00069C  50F8               	movf	tblptru,w,c
  3610  00069E  6EFF               	movwf	tosu,c
  3611  0006A0  50FA               	movf	pclath,w,c
  3612  0006A2  0E02               	movlw	2
  3613  0006A4  0012               	return		;indir
  3614  0006A6                     u5859:
  3615                           
  3616                           ;FastTransfer.c: 197: serial_write(rx_buffer[rx_array_inx - 1]);
  3617  0006A6  D801               	call	u5868
  3618  0006A8  D01E               	goto	u5869
  3619  0006AA                     u5868:
  3620  0006AA  0005               	push	
  3621  0006AC  6EFA               	movwf	pclath,c
  3622  0006AE  5031               	movf	_serial_write,w,c
  3623  0006B0  6EFD               	movwf	tosl,c
  3624  0006B2  5032               	movf	_serial_write+1,w,c
  3625  0006B4  6EFE               	movwf	tosh,c
  3626  0006B6  50F8               	movf	tblptru,w,c
  3627  0006B8  6EFF               	movwf	tosu,c
  3628  0006BA  50FA               	movf	pclath,w,c
  3629  0006BC  0EFF               	movlw	255
  3630  0006BE  6E27               	movwf	??_receiveData& (0+255),c
  3631  0006C0  0EFF               	movlw	255
  3632  0006C2  6E28               	movwf	(??_receiveData+1)& (0+255),c
  3633  0006C4  503D               	movf	_rx_array_inx,w,c
  3634  0006C6  6E29               	movwf	(??_receiveData+2)& (0+255),c
  3635  0006C8  6A2A               	clrf	(??_receiveData+3)& (0+255),c
  3636  0006CA  5027               	movf	??_receiveData,w,c
  3637  0006CC  2629               	addwf	??_receiveData+2,f,c
  3638  0006CE  5028               	movf	??_receiveData+1,w,c
  3639  0006D0  222A               	addwfc	??_receiveData+3,f,c
  3640  0006D2  0102               	movlb	2	; () banked
  3641  0006D4  0E00               	movlw	low _rx_buffer
  3642  0006D6  2429               	addwf	??_receiveData+2,w,c
  3643  0006D8  6ED9               	movwf	fsr2l,c
  3644  0006DA  0102               	movlb	2	; () banked
  3645  0006DC  0E02               	movlw	high _rx_buffer
  3646  0006DE  202A               	addwfc	??_receiveData+3,w,c
  3647  0006E0  6EDA               	movwf	fsr2h,c
  3648  0006E2  50DF               	movf	indf2,w,c
  3649  0006E4  0012               	return		;indir
  3650  0006E6                     u5869:
  3651                           
  3652                           ;FastTransfer.c: 198: serial_write(crcHolder);
  3653  0006E6  D801               	call	u5878
  3654  0006E8  D00C               	goto	l4960
  3655  0006EA                     u5878:
  3656  0006EA  0005               	push	
  3657  0006EC  6EFA               	movwf	pclath,c
  3658  0006EE  5031               	movf	_serial_write,w,c
  3659  0006F0  6EFD               	movwf	tosl,c
  3660  0006F2  5032               	movf	_serial_write+1,w,c
  3661  0006F4  6EFE               	movwf	tosh,c
  3662  0006F6  50F8               	movf	tblptru,w,c
  3663  0006F8  6EFF               	movwf	tosu,c
  3664  0006FA  50FA               	movf	pclath,w,c
  3665  0006FC  0100               	movlb	0	; () banked
  3666  0006FE  51E1               	movf	receiveData@crcHolder_2258& (0+255),w,b
  3667  000700  0012               	return		;indir
  3668  000702                     l4960:
  3669                           
  3670                           ;FastTransfer.c: 199: }
  3671                           ;FastTransfer.c: 202: rx_len = 0;
  3672  000702  0E00               	movlw	0
  3673  000704  6E3E               	movwf	_rx_len,c
  3674                           
  3675                           ;FastTransfer.c: 203: rx_array_inx = 0;
  3676  000706  0E00               	movlw	0
  3677  000708  6E3D               	movwf	_rx_array_inx,c
  3678                           
  3679                           ;FastTransfer.c: 204: return 0;
  3680  00070A  0E00               	movlw	0
  3681  00070C  0012               	return	
  3682  00070E                     l4968:
  3683                           
  3684                           ;FastTransfer.c: 205: }
  3685                           ;FastTransfer.c: 206: }
  3686                           ;FastTransfer.c: 207: }
  3687                           ;FastTransfer.c: 210: return 0;
  3688  00070E  0E00               	movlw	0
  3689  000710  0012               	return	
  3690  000712                     __end_of_receiveData:
  3691                           	opt stack 0
  3692                           tosu	equ	0xFFF
  3693                           tosh	equ	0xFFE
  3694                           tosl	equ	0xFFD
  3695                           pclath	equ	0xFFA
  3696                           tblptru	equ	0xFF8
  3697                           tblptrh	equ	0xFF7
  3698                           tblptrl	equ	0xFF6
  3699                           tablat	equ	0xFF5
  3700                           prodh	equ	0xFF4
  3701                           prodl	equ	0xFF3
  3702                           intcon	equ	0xFF2
  3703                           postinc0	equ	0xFEE
  3704                           wreg	equ	0xFE8
  3705                           indf2	equ	0xFDF
  3706                           postinc2	equ	0xFDE
  3707                           postdec2	equ	0xFDD
  3708                           fsr2h	equ	0xFDA
  3709                           fsr2l	equ	0xFD9
  3710                           status	equ	0xFD8
  3711                           
  3712 ;; *************** function _Send_put *****************
  3713 ;; Defined at:
  3714 ;;		line 130 in file "UART.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;  _data           1    wreg     unsigned char 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  _data           1   37[COMRAM] unsigned char 
  3719 ;; Return value:  Size  Location     Type
  3720 ;;		None               void
  3721 ;; Registers used:
  3722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3728 ;;      Params:         0       0       0       0       0       0       0
  3729 ;;      Locals:         1       0       0       0       0       0       0
  3730 ;;      Temps:          0       0       0       0       0       0       0
  3731 ;;      Totals:         1       0       0       0       0       0       0
  3732 ;;Total ram usage:        1 bytes
  3733 ;; Hardware stack levels used:    1
  3734 ;; Hardware stack levels required when called:    6
  3735 ;; This function calls:
  3736 ;;		_UART_buff_get
  3737 ;;		_UART_buff_put
  3738 ;; This function is called by:
  3739 ;;		_SYSTEM_Initialize
  3740 ;;		_putch
  3741 ;;		_sendData
  3742 ;;		_receiveData
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           	psect	text13
  3747  00293A                     __ptext13:
  3748                           	opt stack 0
  3749  00293A                     _Send_put:
  3750                           	opt stack 21
  3751                           
  3752                           ;incstack = 0
  3753                           ;Send_put@_data stored from wreg
  3754  00293A  6E26               	movwf	Send_put@_data,c
  3755                           
  3756                           ;UART.c: 131: UART_buff_put(&output_buffer, _data);
  3757  00293C  0104               	movlb	4	; () banked
  3758  00293E  0E04               	movlw	high _output_buffer
  3759  002940  6E22               	movwf	UART_buff_put@_this+1,c
  3760  002942  0104               	movlb	4	; () banked
  3761  002944  0E00               	movlw	low _output_buffer
  3762  002946  6E21               	movwf	UART_buff_put@_this,c
  3763  002948  C026  F023         	movff	Send_put@_data,UART_buff_put@c
  3764  00294C  EC91  F00B         	call	_UART_buff_put
  3765                           
  3766                           ;UART.c: 132: if (Transmit_stall == 1) {
  3767  002950  0445               	decf	_Transmit_stall,w,c
  3768  002952  A4D8               	btfss	status,2,c
  3769  002954  0012               	return	
  3770                           
  3771                           ;UART.c: 133: Transmit_stall = 0;
  3772  002956  0E00               	movlw	0
  3773  002958  6E45               	movwf	_Transmit_stall,c
  3774                           
  3775                           ;UART.c: 134: TXREG1 = UART_buff_get(&output_buffer);
  3776  00295A  0104               	movlb	4	; () banked
  3777  00295C  0E04               	movlw	high _output_buffer
  3778  00295E  6E22               	movwf	UART_buff_get@_this+1,c
  3779  002960  0104               	movlb	4	; () banked
  3780  002962  0E00               	movlw	low _output_buffer
  3781  002964  6E21               	movwf	UART_buff_get@_this,c
  3782  002966  ECE8  F010         	call	_UART_buff_get	;wreg free
  3783  00296A  6EAD               	movwf	4013,c	;volatile
  3784                           
  3785                           ;UART.c: 135: PIE1bits.TX1IE = 1;
  3786  00296C  889D               	bsf	3997,4,c	;volatile
  3787  00296E  0012               	return	
  3788  002970                     __end_of_Send_put:
  3789                           	opt stack 0
  3790                           tosu	equ	0xFFF
  3791                           tosh	equ	0xFFE
  3792                           tosl	equ	0xFFD
  3793                           pclath	equ	0xFFA
  3794                           tblptru	equ	0xFF8
  3795                           tblptrh	equ	0xFF7
  3796                           tblptrl	equ	0xFF6
  3797                           tablat	equ	0xFF5
  3798                           prodh	equ	0xFF4
  3799                           prodl	equ	0xFF3
  3800                           intcon	equ	0xFF2
  3801                           postinc0	equ	0xFEE
  3802                           wreg	equ	0xFE8
  3803                           indf2	equ	0xFDF
  3804                           postinc2	equ	0xFDE
  3805                           postdec2	equ	0xFDD
  3806                           fsr2h	equ	0xFDA
  3807                           fsr2l	equ	0xFD9
  3808                           status	equ	0xFD8
  3809                           
  3810 ;; *************** function _UART_buff_put *****************
  3811 ;; Defined at:
  3812 ;;		line 68 in file "UART.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  3815 ;;		 -> output_buffer(206), input_buffer(206), 
  3816 ;;  c               1   34[COMRAM] const unsigned char 
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;		None
  3819 ;; Return value:  Size  Location     Type
  3820 ;;		None               void
  3821 ;; Registers used:
  3822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3828 ;;      Params:         3       0       0       0       0       0       0
  3829 ;;      Locals:         0       0       0       0       0       0       0
  3830 ;;      Temps:          2       0       0       0       0       0       0
  3831 ;;      Totals:         5       0       0       0       0       0       0
  3832 ;;Total ram usage:        5 bytes
  3833 ;; Hardware stack levels used:    1
  3834 ;; Hardware stack levels required when called:    5
  3835 ;; This function calls:
  3836 ;;		_UART_buff_modulo_inc
  3837 ;; This function is called by:
  3838 ;;		_Send_put
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842                           	psect	text14
  3843  001722                     __ptext14:
  3844                           	opt stack 0
  3845  001722                     _UART_buff_put:
  3846                           	opt stack 21
  3847                           
  3848                           ;UART.c: 69: if (_this->count < 200) {
  3849                           
  3850                           ;incstack = 0
  3851  001722  EE20 F0CC          	lfsr	2,204
  3852  001726  5021               	movf	UART_buff_put@_this,w,c
  3853  001728  26D9               	addwf	fsr2l,f,c
  3854  00172A  5022               	movf	UART_buff_put@_this+1,w,c
  3855  00172C  22DA               	addwfc	fsr2h,f,c
  3856  00172E  CFDE F024          	movff	postinc2,??_UART_buff_put
  3857  001732  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  3858  001736  5025               	movf	??_UART_buff_put+1,w,c
  3859  001738  0A80               	xorlw	128
  3860  00173A  6EF3               	movwf	prodl,c
  3861  00173C  0E80               	movlw	128
  3862  00173E  5CF3               	subwf	prodl,w,c
  3863  001740  0EC8               	movlw	200
  3864  001742  B4D8               	btfsc	status,2,c
  3865  001744  5C24               	subwf	??_UART_buff_put,w,c
  3866  001746  B0D8               	btfsc	status,0,c
  3867  001748  D036               	goto	l4458
  3868                           
  3869                           ;UART.c: 70: _this->buf[_this->head] = c;
  3870  00174A  EE20 F0C8          	lfsr	2,200
  3871  00174E  5021               	movf	UART_buff_put@_this,w,c
  3872  001750  26D9               	addwf	fsr2l,f,c
  3873  001752  5022               	movf	UART_buff_put@_this+1,w,c
  3874  001754  22DA               	addwfc	fsr2h,f,c
  3875  001756  CFDE F024          	movff	postinc2,??_UART_buff_put
  3876  00175A  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  3877  00175E  5024               	movf	??_UART_buff_put,w,c
  3878  001760  2421               	addwf	UART_buff_put@_this,w,c
  3879  001762  6ED9               	movwf	fsr2l,c
  3880  001764  5025               	movf	??_UART_buff_put+1,w,c
  3881  001766  2022               	addwfc	UART_buff_put@_this+1,w,c
  3882  001768  6EDA               	movwf	fsr2h,c
  3883  00176A  C023  FFDF         	movff	UART_buff_put@c,indf2
  3884                           
  3885                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
  3886  00176E  EE20 F0C8          	lfsr	2,200
  3887  001772  5021               	movf	UART_buff_put@_this,w,c
  3888  001774  26D9               	addwf	fsr2l,f,c
  3889  001776  5022               	movf	UART_buff_put@_this+1,w,c
  3890  001778  22DA               	addwfc	fsr2h,f,c
  3891  00177A  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  3892  00177E  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  3893  001782  0E00               	movlw	0
  3894  001784  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  3895  001786  0EC8               	movlw	200
  3896  001788  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  3897  00178A  EC13  F015         	call	_UART_buff_modulo_inc	;wreg free
  3898  00178E  EE20 F0C8          	lfsr	2,200
  3899  001792  5021               	movf	UART_buff_put@_this,w,c
  3900  001794  26D9               	addwf	fsr2l,f,c
  3901  001796  5022               	movf	UART_buff_put@_this+1,w,c
  3902  001798  22DA               	addwfc	fsr2h,f,c
  3903  00179A  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3904  00179E  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3905                           
  3906                           ;UART.c: 72: ++_this->count;
  3907  0017A2  EE20 F0CC          	lfsr	2,204
  3908  0017A6  5021               	movf	UART_buff_put@_this,w,c
  3909  0017A8  26D9               	addwf	fsr2l,f,c
  3910  0017AA  5022               	movf	UART_buff_put@_this+1,w,c
  3911  0017AC  22DA               	addwfc	fsr2h,f,c
  3912  0017AE  2ADE               	incf	postinc2,f,c
  3913  0017B0  0E00               	movlw	0
  3914  0017B2  22DD               	addwfc	postdec2,f,c
  3915                           
  3916                           ;UART.c: 73: } else {
  3917  0017B4  0012               	return	
  3918  0017B6                     l4458:
  3919                           
  3920                           ;UART.c: 74: _this->buf[_this->head] = c;
  3921  0017B6  EE20 F0C8          	lfsr	2,200
  3922  0017BA  5021               	movf	UART_buff_put@_this,w,c
  3923  0017BC  26D9               	addwf	fsr2l,f,c
  3924  0017BE  5022               	movf	UART_buff_put@_this+1,w,c
  3925  0017C0  22DA               	addwfc	fsr2h,f,c
  3926  0017C2  CFDE F024          	movff	postinc2,??_UART_buff_put
  3927  0017C6  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  3928  0017CA  5024               	movf	??_UART_buff_put,w,c
  3929  0017CC  2421               	addwf	UART_buff_put@_this,w,c
  3930  0017CE  6ED9               	movwf	fsr2l,c
  3931  0017D0  5025               	movf	??_UART_buff_put+1,w,c
  3932  0017D2  2022               	addwfc	UART_buff_put@_this+1,w,c
  3933  0017D4  6EDA               	movwf	fsr2h,c
  3934  0017D6  C023  FFDF         	movff	UART_buff_put@c,indf2
  3935                           
  3936                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
  3937  0017DA  EE20 F0C8          	lfsr	2,200
  3938  0017DE  5021               	movf	UART_buff_put@_this,w,c
  3939  0017E0  26D9               	addwf	fsr2l,f,c
  3940  0017E2  5022               	movf	UART_buff_put@_this+1,w,c
  3941  0017E4  22DA               	addwfc	fsr2h,f,c
  3942  0017E6  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  3943  0017EA  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  3944  0017EE  0E00               	movlw	0
  3945  0017F0  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  3946  0017F2  0EC8               	movlw	200
  3947  0017F4  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  3948  0017F6  EC13  F015         	call	_UART_buff_modulo_inc	;wreg free
  3949  0017FA  EE20 F0C8          	lfsr	2,200
  3950  0017FE  5021               	movf	UART_buff_put@_this,w,c
  3951  001800  26D9               	addwf	fsr2l,f,c
  3952  001802  5022               	movf	UART_buff_put@_this+1,w,c
  3953  001804  22DA               	addwfc	fsr2h,f,c
  3954  001806  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3955  00180A  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3956                           
  3957                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  3958  00180E  EE20 F0CA          	lfsr	2,202
  3959  001812  5021               	movf	UART_buff_put@_this,w,c
  3960  001814  26D9               	addwf	fsr2l,f,c
  3961  001816  5022               	movf	UART_buff_put@_this+1,w,c
  3962  001818  22DA               	addwfc	fsr2h,f,c
  3963  00181A  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  3964  00181E  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  3965  001822  0E00               	movlw	0
  3966  001824  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  3967  001826  0EC8               	movlw	200
  3968  001828  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  3969  00182A  EC13  F015         	call	_UART_buff_modulo_inc	;wreg free
  3970  00182E  EE20 F0CA          	lfsr	2,202
  3971  001832  5021               	movf	UART_buff_put@_this,w,c
  3972  001834  26D9               	addwf	fsr2l,f,c
  3973  001836  5022               	movf	UART_buff_put@_this+1,w,c
  3974  001838  22DA               	addwfc	fsr2h,f,c
  3975  00183A  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3976  00183E  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3977  001842  0012               	return	
  3978  001844                     __end_of_UART_buff_put:
  3979                           	opt stack 0
  3980                           tosu	equ	0xFFF
  3981                           tosh	equ	0xFFE
  3982                           tosl	equ	0xFFD
  3983                           pclath	equ	0xFFA
  3984                           tblptru	equ	0xFF8
  3985                           tblptrh	equ	0xFF7
  3986                           tblptrl	equ	0xFF6
  3987                           tablat	equ	0xFF5
  3988                           prodh	equ	0xFF4
  3989                           prodl	equ	0xFF3
  3990                           intcon	equ	0xFF2
  3991                           postinc0	equ	0xFEE
  3992                           wreg	equ	0xFE8
  3993                           indf2	equ	0xFDF
  3994                           postinc2	equ	0xFDE
  3995                           postdec2	equ	0xFDD
  3996                           fsr2h	equ	0xFDA
  3997                           fsr2l	equ	0xFD9
  3998                           status	equ	0xFD8
  3999                           
  4000 ;; *************** function _Receive_peek *****************
  4001 ;; Defined at:
  4002 ;;		line 118 in file "UART.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;		None
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;		None
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      unsigned char 
  4009 ;; Registers used:
  4010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4016 ;;      Params:         0       0       0       0       0       0       0
  4017 ;;      Locals:         0       0       0       0       0       0       0
  4018 ;;      Temps:          0       0       0       0       0       0       0
  4019 ;;      Totals:         0       0       0       0       0       0       0
  4020 ;;Total ram usage:        0 bytes
  4021 ;; Hardware stack levels used:    1
  4022 ;; Hardware stack levels required when called:    5
  4023 ;; This function calls:
  4024 ;;		_UART_buff_peek
  4025 ;; This function is called by:
  4026 ;;		_SYSTEM_Initialize
  4027 ;;		_receiveData
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           	psect	text15
  4032  002BB6                     __ptext15:
  4033                           	opt stack 0
  4034  002BB6                     _Receive_peek:
  4035                           	opt stack 23
  4036                           
  4037                           ;UART.c: 119: return UART_buff_peek(&input_buffer);
  4038                           
  4039                           ;incstack = 0
  4040  002BB6  0103               	movlb	3	; () banked
  4041  002BB8  0E03               	movlw	high _input_buffer
  4042  002BBA  6E1C               	movwf	UART_buff_peek@_this+1,c
  4043  002BBC  0103               	movlb	3	; () banked
  4044  002BBE  0E00               	movlw	low _input_buffer
  4045  002BC0  6E1B               	movwf	UART_buff_peek@_this,c
  4046  002BC2  EC3D  F015         	call	_UART_buff_peek	;wreg free
  4047  002BC6  0012               	return	
  4048  002BC8                     __end_of_Receive_peek:
  4049                           	opt stack 0
  4050                           tosu	equ	0xFFF
  4051                           tosh	equ	0xFFE
  4052                           tosl	equ	0xFFD
  4053                           pclath	equ	0xFFA
  4054                           tblptru	equ	0xFF8
  4055                           tblptrh	equ	0xFF7
  4056                           tblptrl	equ	0xFF6
  4057                           tablat	equ	0xFF5
  4058                           prodh	equ	0xFF4
  4059                           prodl	equ	0xFF3
  4060                           intcon	equ	0xFF2
  4061                           postinc0	equ	0xFEE
  4062                           wreg	equ	0xFE8
  4063                           indf2	equ	0xFDF
  4064                           postinc2	equ	0xFDE
  4065                           postdec2	equ	0xFDD
  4066                           fsr2h	equ	0xFDA
  4067                           fsr2l	equ	0xFD9
  4068                           status	equ	0xFD8
  4069                           
  4070 ;; *************** function _UART_buff_peek *****************
  4071 ;; Defined at:
  4072 ;;		line 114 in file "UART.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  4075 ;;		 -> input_buffer(206), 
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;		None
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  1    wreg      unsigned char 
  4080 ;; Registers used:
  4081 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4087 ;;      Params:         2       0       0       0       0       0       0
  4088 ;;      Locals:         0       0       0       0       0       0       0
  4089 ;;      Temps:          2       0       0       0       0       0       0
  4090 ;;      Totals:         4       0       0       0       0       0       0
  4091 ;;Total ram usage:        4 bytes
  4092 ;; Hardware stack levels used:    1
  4093 ;; Hardware stack levels required when called:    4
  4094 ;; This function calls:
  4095 ;;		Nothing
  4096 ;; This function is called by:
  4097 ;;		_Receive_peek
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           	psect	text16
  4102  002A7A                     __ptext16:
  4103                           	opt stack 0
  4104  002A7A                     _UART_buff_peek:
  4105                           	opt stack 23
  4106                           
  4107                           ;UART.c: 115: return _this->buf[_this->tail];
  4108                           
  4109                           ;incstack = 0
  4110  002A7A  EE20 F0CA          	lfsr	2,202
  4111  002A7E  501B               	movf	UART_buff_peek@_this,w,c
  4112  002A80  26D9               	addwf	fsr2l,f,c
  4113  002A82  501C               	movf	UART_buff_peek@_this+1,w,c
  4114  002A84  22DA               	addwfc	fsr2h,f,c
  4115  002A86  CFDE F01D          	movff	postinc2,??_UART_buff_peek
  4116  002A8A  CFDD F01E          	movff	postdec2,??_UART_buff_peek+1
  4117  002A8E  501D               	movf	??_UART_buff_peek,w,c
  4118  002A90  241B               	addwf	UART_buff_peek@_this,w,c
  4119  002A92  6ED9               	movwf	fsr2l,c
  4120  002A94  501E               	movf	??_UART_buff_peek+1,w,c
  4121  002A96  201C               	addwfc	UART_buff_peek@_this+1,w,c
  4122  002A98  6EDA               	movwf	fsr2h,c
  4123  002A9A  50DF               	movf	indf2,w,c
  4124  002A9C  0012               	return	
  4125  002A9E                     __end_of_UART_buff_peek:
  4126                           	opt stack 0
  4127                           tosu	equ	0xFFF
  4128                           tosh	equ	0xFFE
  4129                           tosl	equ	0xFFD
  4130                           pclath	equ	0xFFA
  4131                           tblptru	equ	0xFF8
  4132                           tblptrh	equ	0xFF7
  4133                           tblptrl	equ	0xFF6
  4134                           tablat	equ	0xFF5
  4135                           prodh	equ	0xFF4
  4136                           prodl	equ	0xFF3
  4137                           intcon	equ	0xFF2
  4138                           postinc0	equ	0xFEE
  4139                           wreg	equ	0xFE8
  4140                           indf2	equ	0xFDF
  4141                           postinc2	equ	0xFDE
  4142                           postdec2	equ	0xFDD
  4143                           fsr2h	equ	0xFDA
  4144                           fsr2l	equ	0xFD9
  4145                           status	equ	0xFD8
  4146                           
  4147 ;; *************** function _CRCcheck *****************
  4148 ;; Defined at:
  4149 ;;		line 373 in file "FastTransfer.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;		None
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;  rt              2    5[BANK0 ] int 
  4154 ;;  arrayHolder     3    2[BANK0 ] unsigned char [3]
  4155 ;;  calculatedCR    1    1[BANK0 ] unsigned char 
  4156 ;;  SentCRC         1    0[BANK0 ] unsigned char 
  4157 ;; Return value:  Size  Location     Type
  4158 ;;		None               void
  4159 ;; Registers used:
  4160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4166 ;;      Params:         0       0       0       0       0       0       0
  4167 ;;      Locals:         0       7       0       0       0       0       0
  4168 ;;      Temps:          0       0       0       0       0       0       0
  4169 ;;      Totals:         0       7       0       0       0       0       0
  4170 ;;Total ram usage:        7 bytes
  4171 ;; Hardware stack levels used:    1
  4172 ;; Hardware stack levels required when called:    7
  4173 ;; This function calls:
  4174 ;;		Absolute function
  4175 ;;		_CRC8
  4176 ;;		_Receive_available
  4177 ;;		_Receive_get
  4178 ;;		_crcBufS_get
  4179 ;;		_crcBufS_status_put
  4180 ;; This function is called by:
  4181 ;;		_receiveData
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text17
  4186  00108A                     __ptext17:
  4187                           	opt stack 0
  4188  00108A                     _CRCcheck:
  4189                           	opt stack 21
  4190  00108A                     l4642:
  4191  00108A  D801               	call	u4998
  4192  00108C  D00A               	goto	u4999
  4193  00108E                     u4998:
  4194  00108E  0005               	push	
  4195  001090  6EFA               	movwf	pclath,c
  4196  001092  502D               	movf	_serial_available,w,c
  4197  001094  6EFD               	movwf	tosl,c
  4198  001096  502E               	movf	_serial_available+1,w,c
  4199  001098  6EFE               	movwf	tosh,c
  4200  00109A  50F8               	movf	tblptru,w,c
  4201  00109C  6EFF               	movwf	tosu,c
  4202  00109E  50FA               	movf	pclath,w,c
  4203  0010A0  0012               	return		;indir
  4204  0010A2                     u4999:
  4205  0010A2  501E               	movf	?_Receive_available+1,w,c
  4206  0010A4  0A80               	xorlw	128
  4207  0010A6  0F80               	addlw	-128
  4208  0010A8  0E04               	movlw	4
  4209  0010AA  B4D8               	btfsc	status,2,c
  4210  0010AC  5C1D               	subwf	?_Receive_available,w,c
  4211  0010AE  A0D8               	btfss	status,0,c
  4212  0010B0  D7EC               	goto	l4642
  4213                           
  4214                           ;FastTransfer.c: 377: unsigned char arrayHolder[3];
  4215                           ;FastTransfer.c: 378: arrayHolder[0] = serial_read();
  4216  0010B2  D801               	call	u5018
  4217  0010B4  D00A               	goto	u5019
  4218  0010B6                     u5018:
  4219  0010B6  0005               	push	
  4220  0010B8  6EFA               	movwf	pclath,c
  4221  0010BA  502F               	movf	_serial_read,w,c
  4222  0010BC  6EFD               	movwf	tosl,c
  4223  0010BE  5030               	movf	_serial_read+1,w,c
  4224  0010C0  6EFE               	movwf	tosh,c
  4225  0010C2  50F8               	movf	tblptru,w,c
  4226  0010C4  6EFF               	movwf	tosu,c
  4227  0010C6  50FA               	movf	pclath,w,c
  4228  0010C8  0012               	return		;indir
  4229  0010CA                     u5019:
  4230  0010CA  0100               	movlb	0	; () banked
  4231  0010CC  6FD5               	movwf	CRCcheck@arrayHolder& (0+255),b
  4232                           
  4233                           ;FastTransfer.c: 379: arrayHolder[1] = serial_read();
  4234  0010CE  D801               	call	u5028
  4235  0010D0  D00A               	goto	u5029
  4236  0010D2                     u5028:
  4237  0010D2  0005               	push	
  4238  0010D4  6EFA               	movwf	pclath,c
  4239  0010D6  502F               	movf	_serial_read,w,c
  4240  0010D8  6EFD               	movwf	tosl,c
  4241  0010DA  5030               	movf	_serial_read+1,w,c
  4242  0010DC  6EFE               	movwf	tosh,c
  4243  0010DE  50F8               	movf	tblptru,w,c
  4244  0010E0  6EFF               	movwf	tosu,c
  4245  0010E2  50FA               	movf	pclath,w,c
  4246  0010E4  0012               	return		;indir
  4247  0010E6                     u5029:
  4248  0010E6  0100               	movlb	0	; () banked
  4249  0010E8  6FD6               	movwf	(CRCcheck@arrayHolder+1)& (0+255),b
  4250                           
  4251                           ;FastTransfer.c: 380: arrayHolder[2] = serial_read();
  4252  0010EA  D801               	call	u5038
  4253  0010EC  D00A               	goto	u5039
  4254  0010EE                     u5038:
  4255  0010EE  0005               	push	
  4256  0010F0  6EFA               	movwf	pclath,c
  4257  0010F2  502F               	movf	_serial_read,w,c
  4258  0010F4  6EFD               	movwf	tosl,c
  4259  0010F6  5030               	movf	_serial_read+1,w,c
  4260  0010F8  6EFE               	movwf	tosh,c
  4261  0010FA  50F8               	movf	tblptru,w,c
  4262  0010FC  6EFF               	movwf	tosu,c
  4263  0010FE  50FA               	movf	pclath,w,c
  4264  001100  0012               	return		;indir
  4265  001102                     u5039:
  4266  001102  0100               	movlb	0	; () banked
  4267  001104  6FD7               	movwf	(CRCcheck@arrayHolder+2)& (0+255),b
  4268                           
  4269                           ;FastTransfer.c: 381: unsigned char SentCRC = serial_read();
  4270  001106  D801               	call	u5048
  4271  001108  D00A               	goto	u5049
  4272  00110A                     u5048:
  4273  00110A  0005               	push	
  4274  00110C  6EFA               	movwf	pclath,c
  4275  00110E  502F               	movf	_serial_read,w,c
  4276  001110  6EFD               	movwf	tosl,c
  4277  001112  5030               	movf	_serial_read+1,w,c
  4278  001114  6EFE               	movwf	tosh,c
  4279  001116  50F8               	movf	tblptru,w,c
  4280  001118  6EFF               	movwf	tosu,c
  4281  00111A  50FA               	movf	pclath,w,c
  4282  00111C  0012               	return		;indir
  4283  00111E                     u5049:
  4284  00111E  0100               	movlb	0	; () banked
  4285  001120  6FD3               	movwf	CRCcheck@SentCRC& (0+255),b
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;FastTransfer.c: 382: unsigned char calculatedCRC = CRC8(arrayHolder, 3);
  4289  001122  0100               	movlb	0	; () banked
  4290  001124  0E00               	movlw	high CRCcheck@arrayHolder
  4291  001126  6E1C               	movwf	CRC8@data+1,c
  4292  001128  0100               	movlb	0	; () banked
  4293  00112A  0ED5               	movlw	low CRCcheck@arrayHolder
  4294  00112C  6E1B               	movwf	CRC8@data,c
  4295  00112E  0E03               	movlw	3
  4296  001130  6E1D               	movwf	CRC8@len,c
  4297  001132  ECD7  F013         	call	_CRC8	;wreg free
  4298  001136  0100               	movlb	0	; () banked
  4299  001138  6FD4               	movwf	CRCcheck@calculatedCRC& (0+255),b
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;FastTransfer.c: 385: if (SentCRC == calculatedCRC) {
  4303  00113A  0100               	movlb	0	; () banked
  4304  00113C  51D4               	movf	CRCcheck@calculatedCRC& (0+255),w,b
  4305  00113E  0100               	movlb	0	; () banked
  4306  001140  63D3               	cpfseq	CRCcheck@SentCRC& (0+255),b
  4307  001142  D055               	goto	l4674
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;FastTransfer.c: 387: int rt;
  4311                           ;FastTransfer.c: 388: for (rt = 0; rt < 5; rt++) {
  4312  001144  0E00               	movlw	0
  4313  001146  0100               	movlb	0	; () banked
  4314  001148  6FD9               	movwf	(CRCcheck@rt+1)& (0+255),b
  4315  00114A  0E00               	movlw	0
  4316  00114C  0100               	movlb	0	; () banked
  4317  00114E  6FD8               	movwf	CRCcheck@rt& (0+255),b
  4318  001150                     
  4319                           ; BSR set to: 0
  4320  001150  0100               	movlb	0	; () banked
  4321  001152  51D9               	movf	(CRCcheck@rt+1)& (0+255),w,b
  4322  001154  0A80               	xorlw	128
  4323  001156  0F80               	addlw	-128
  4324  001158  0E05               	movlw	5
  4325  00115A  B4D8               	btfsc	status,2,c
  4326  00115C  5DD8               	subwf	CRCcheck@rt& (0+255),w,b
  4327  00115E  B0D8               	btfsc	status,0,c
  4328  001160  0012               	return	
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;FastTransfer.c: 389: if (returnAddress == crcBufS_get(&crc_buffer, rt, 0)) {
  4332                           
  4333                           ; BSR set to: 0
  4334                           
  4335                           ; BSR set to: 0
  4336  001162  0100               	movlb	0	; () banked
  4337  001164  0E00               	movlw	high _crc_buffer
  4338  001166  6E1C               	movwf	crcBufS_get@_this+1,c
  4339  001168  0100               	movlb	0	; () banked
  4340  00116A  0EB3               	movlw	low _crc_buffer
  4341  00116C  6E1B               	movwf	crcBufS_get@_this,c
  4342  00116E  C0D8  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  4343  001172  0E00               	movlw	0
  4344  001174  6E1E               	movwf	crcBufS_get@space,c
  4345  001176  EC43  F00D         	call	_crcBufS_get	;wreg free
  4346  00117A  183B               	xorwf	_returnAddress,w,c
  4347  00117C  A4D8               	btfss	status,2,c
  4348  00117E  D033               	goto	l4670
  4349                           
  4350                           ;FastTransfer.c: 390: if (arrayHolder[2] == crcBufS_get(&crc_buffer, rt, 1)) {
  4351  001180  0100               	movlb	0	; () banked
  4352  001182  0E00               	movlw	high _crc_buffer
  4353  001184  6E1C               	movwf	crcBufS_get@_this+1,c
  4354  001186  0100               	movlb	0	; () banked
  4355  001188  0EB3               	movlw	low _crc_buffer
  4356  00118A  6E1B               	movwf	crcBufS_get@_this,c
  4357  00118C  C0D8  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  4358  001190  0E01               	movlw	1
  4359  001192  6E1E               	movwf	crcBufS_get@space,c
  4360  001194  EC43  F00D         	call	_crcBufS_get	;wreg free
  4361  001198  0100               	movlb	0	; () banked
  4362  00119A  19D7               	xorwf	(CRCcheck@arrayHolder+2)& (0+255),w,b
  4363  00119C  A4D8               	btfss	status,2,c
  4364  00119E  D023               	goto	l4670
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;FastTransfer.c: 391: if (arrayHolder[1] == 1) {
  4368  0011A0  0100               	movlb	0	; () banked
  4369  0011A2  05D6               	decf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  4370  0011A4  A4D8               	btfss	status,2,c
  4371  0011A6  D00D               	goto	l4666
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;FastTransfer.c: 392: crcBufS_status_put(&crc_buffer, rt, 1);
  4375  0011A8  0100               	movlb	0	; () banked
  4376  0011AA  0E00               	movlw	high _crc_buffer
  4377  0011AC  6E1C               	movwf	crcBufS_status_put@_this+1,c
  4378  0011AE  0100               	movlb	0	; () banked
  4379  0011B0  0EB3               	movlw	low _crc_buffer
  4380  0011B2  6E1B               	movwf	crcBufS_status_put@_this,c
  4381  0011B4  C0D8  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  4382  0011B8  0E01               	movlw	1
  4383  0011BA  6E1E               	movwf	crcBufS_status_put@status,c
  4384  0011BC  ECB8  F00D         	call	_crcBufS_status_put	;wreg free
  4385                           
  4386                           ;FastTransfer.c: 393: break;
  4387  0011C0  0012               	return	
  4388  0011C2                     l4666:
  4389  0011C2  0100               	movlb	0	; () banked
  4390  0011C4  51D6               	movf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  4391  0011C6  0A02               	xorlw	2
  4392  0011C8  A4D8               	btfss	status,2,c
  4393  0011CA  D00D               	goto	l4670
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;FastTransfer.c: 395: crcBufS_status_put(&crc_buffer, rt, 2);
  4397  0011CC  0100               	movlb	0	; () banked
  4398  0011CE  0E00               	movlw	high _crc_buffer
  4399  0011D0  6E1C               	movwf	crcBufS_status_put@_this+1,c
  4400  0011D2  0100               	movlb	0	; () banked
  4401  0011D4  0EB3               	movlw	low _crc_buffer
  4402  0011D6  6E1B               	movwf	crcBufS_status_put@_this,c
  4403  0011D8  C0D8  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  4404  0011DC  0E02               	movlw	2
  4405  0011DE  6E1E               	movwf	crcBufS_status_put@status,c
  4406  0011E0  ECB8  F00D         	call	_crcBufS_status_put	;wreg free
  4407                           
  4408                           ;FastTransfer.c: 396: break;
  4409  0011E4  0012               	return	
  4410  0011E6                     l4670:
  4411  0011E6  0100               	movlb	0	; () banked
  4412  0011E8  4BD8               	infsnz	CRCcheck@rt& (0+255),f,b
  4413  0011EA  2BD9               	incf	(CRCcheck@rt+1)& (0+255),f,b
  4414  0011EC  D7B1               	goto	L2
  4415  0011EE                     l4674:
  4416                           
  4417                           ; BSR set to: 0
  4418                           ;FastTransfer.c: 402: crcErrorCounter++;
  4419  0011EE  0100               	movlb	0	; () banked
  4420  0011F0  4BA1               	infsnz	_crcErrorCounter& (0+255),f,b
  4421  0011F2  2BA2               	incf	(_crcErrorCounter+1)& (0+255),f,b
  4422  0011F4  0012               	return	
  4423  0011F6                     __end_of_CRCcheck:
  4424                           	opt stack 0
  4425                           tosu	equ	0xFFF
  4426                           tosh	equ	0xFFE
  4427                           tosl	equ	0xFFD
  4428                           pclath	equ	0xFFA
  4429                           tblptru	equ	0xFF8
  4430                           tblptrh	equ	0xFF7
  4431                           tblptrl	equ	0xFF6
  4432                           tablat	equ	0xFF5
  4433                           prodh	equ	0xFF4
  4434                           prodl	equ	0xFF3
  4435                           intcon	equ	0xFF2
  4436                           postinc0	equ	0xFEE
  4437                           wreg	equ	0xFE8
  4438                           indf2	equ	0xFDF
  4439                           postinc2	equ	0xFDE
  4440                           postdec2	equ	0xFDD
  4441                           fsr2h	equ	0xFDA
  4442                           fsr2l	equ	0xFD9
  4443                           status	equ	0xFD8
  4444                           
  4445 ;; *************** function _crcBufS_status_put *****************
  4446 ;; Defined at:
  4447 ;;		line 336 in file "FastTransfer.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  4450 ;;		 -> crc_buffer(17), 
  4451 ;;  time            1   28[COMRAM] unsigned char 
  4452 ;;  status          1   29[COMRAM] unsigned char 
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;  wantedTime      2   34[COMRAM] int 
  4455 ;; Return value:  Size  Location     Type
  4456 ;;		None               void
  4457 ;; Registers used:
  4458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4464 ;;      Params:         4       0       0       0       0       0       0
  4465 ;;      Locals:         2       0       0       0       0       0       0
  4466 ;;      Temps:          4       0       0       0       0       0       0
  4467 ;;      Totals:        10       0       0       0       0       0       0
  4468 ;;Total ram usage:       10 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:    4
  4471 ;; This function calls:
  4472 ;;		Nothing
  4473 ;; This function is called by:
  4474 ;;		_CRCcheck
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           	psect	text18
  4479  001B70                     __ptext18:
  4480                           	opt stack 0
  4481  001B70                     _crcBufS_status_put:
  4482                           	opt stack 23
  4483                           
  4484                           ;FastTransfer.c: 337: if (time >= 5) {
  4485                           
  4486                           ;incstack = 0
  4487  001B70  0E04               	movlw	4
  4488  001B72  641D               	cpfsgt	crcBufS_status_put@time,c
  4489  001B74  D002               	goto	l4574
  4490                           
  4491                           ;FastTransfer.c: 338: time = 5 - 1;
  4492  001B76  0E04               	movlw	4
  4493  001B78  6E1D               	movwf	crcBufS_status_put@time,c
  4494  001B7A                     l4574:
  4495                           
  4496                           ;FastTransfer.c: 339: }
  4497                           ;FastTransfer.c: 340: time = time + 1;
  4498  001B7A  281D               	incf	crcBufS_status_put@time,w,c
  4499  001B7C  6E1D               	movwf	crcBufS_status_put@time,c
  4500                           
  4501                           ;FastTransfer.c: 341: int wantedTime = time * 3;
  4502  001B7E  501D               	movf	crcBufS_status_put@time,w,c
  4503  001B80  0D03               	mullw	3
  4504  001B82  CFF3 F023          	movff	prodl,crcBufS_status_put@wantedTime
  4505  001B86  CFF4 F024          	movff	prodh,crcBufS_status_put@wantedTime+1
  4506                           
  4507                           ;FastTransfer.c: 342: if (wantedTime > _this->head) {
  4508  001B8A  EE20 F00F          	lfsr	2,15
  4509  001B8E  501B               	movf	crcBufS_status_put@_this,w,c
  4510  001B90  26D9               	addwf	fsr2l,f,c
  4511  001B92  501C               	movf	crcBufS_status_put@_this+1,w,c
  4512  001B94  22DA               	addwfc	fsr2h,f,c
  4513  001B96  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  4514  001B9A  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  4515  001B9E  5020               	movf	??_crcBufS_status_put+1,w,c
  4516  001BA0  0A80               	xorlw	128
  4517  001BA2  6E21               	movwf	(??_crcBufS_status_put+2)& (0+255),c
  4518  001BA4  5023               	movf	crcBufS_status_put@wantedTime,w,c
  4519  001BA6  5C1F               	subwf	??_crcBufS_status_put,w,c
  4520  001BA8  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  4521  001BAA  0A80               	xorlw	128
  4522  001BAC  5821               	subwfb	(??_crcBufS_status_put+2)& (0+255),w,c
  4523  001BAE  B0D8               	btfsc	status,0,c
  4524  001BB0  D02B               	goto	l4582
  4525                           
  4526                           ;FastTransfer.c: 343: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  4527  001BB2  EE20 F00F          	lfsr	2,15
  4528  001BB6  501B               	movf	crcBufS_status_put@_this,w,c
  4529  001BB8  26D9               	addwf	fsr2l,f,c
  4530  001BBA  501C               	movf	crcBufS_status_put@_this+1,w,c
  4531  001BBC  22DA               	addwfc	fsr2h,f,c
  4532  001BBE  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  4533  001BC2  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  4534  001BC6  1E1F               	comf	??_crcBufS_status_put,f,c
  4535  001BC8  1E20               	comf	??_crcBufS_status_put+1,f,c
  4536  001BCA  4A1F               	infsnz	??_crcBufS_status_put,f,c
  4537  001BCC  2A20               	incf	??_crcBufS_status_put+1,f,c
  4538  001BCE  5023               	movf	crcBufS_status_put@wantedTime,w,c
  4539  001BD0  261F               	addwf	??_crcBufS_status_put,f,c
  4540  001BD2  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  4541  001BD4  2220               	addwfc	??_crcBufS_status_put+1,f,c
  4542  001BD6  1E1F               	comf	??_crcBufS_status_put,f,c
  4543  001BD8  1E20               	comf	??_crcBufS_status_put+1,f,c
  4544  001BDA  4A1F               	infsnz	??_crcBufS_status_put,f,c
  4545  001BDC  2A20               	incf	??_crcBufS_status_put+1,f,c
  4546  001BDE  0E0F               	movlw	15
  4547  001BE0  241F               	addwf	??_crcBufS_status_put,w,c
  4548  001BE2  6E23               	movwf	crcBufS_status_put@wantedTime,c
  4549  001BE4  0E00               	movlw	0
  4550  001BE6  2020               	addwfc	??_crcBufS_status_put+1,w,c
  4551  001BE8  6E24               	movwf	crcBufS_status_put@wantedTime+1,c
  4552                           
  4553                           ;FastTransfer.c: 344: _this->buf[(wantedTime + 2)] = status;
  4554  001BEA  0E02               	movlw	2
  4555  001BEC  2423               	addwf	crcBufS_status_put@wantedTime,w,c
  4556  001BEE  6E1F               	movwf	??_crcBufS_status_put& (0+255),c
  4557  001BF0  0E00               	movlw	0
  4558  001BF2  2024               	addwfc	crcBufS_status_put@wantedTime+1,w,c
  4559  001BF4  6E20               	movwf	(??_crcBufS_status_put+1)& (0+255),c
  4560  001BF6  501F               	movf	??_crcBufS_status_put,w,c
  4561  001BF8  241B               	addwf	crcBufS_status_put@_this,w,c
  4562  001BFA  6ED9               	movwf	fsr2l,c
  4563  001BFC  5020               	movf	??_crcBufS_status_put+1,w,c
  4564  001BFE  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  4565  001C00  6EDA               	movwf	fsr2h,c
  4566  001C02  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  4567                           
  4568                           ;FastTransfer.c: 345: } else {
  4569  001C06  0012               	return	
  4570  001C08                     l4582:
  4571                           
  4572                           ;FastTransfer.c: 346: _this->buf[(_this->head - wantedTime) + 2] = status;
  4573  001C08  EE20 F00F          	lfsr	2,15
  4574  001C0C  501B               	movf	crcBufS_status_put@_this,w,c
  4575  001C0E  26D9               	addwf	fsr2l,f,c
  4576  001C10  501C               	movf	crcBufS_status_put@_this+1,w,c
  4577  001C12  22DA               	addwfc	fsr2h,f,c
  4578  001C14  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  4579  001C18  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  4580  001C1C  C023  F021         	movff	crcBufS_status_put@wantedTime,??_crcBufS_status_put+2
  4581  001C20  C024  F022         	movff	crcBufS_status_put@wantedTime+1,??_crcBufS_status_put+3
  4582  001C24  1E21               	comf	??_crcBufS_status_put+2,f,c
  4583  001C26  1E22               	comf	??_crcBufS_status_put+3,f,c
  4584  001C28  4A21               	infsnz	??_crcBufS_status_put+2,f,c
  4585  001C2A  2A22               	incf	??_crcBufS_status_put+3,f,c
  4586  001C2C  501F               	movf	??_crcBufS_status_put,w,c
  4587  001C2E  2621               	addwf	??_crcBufS_status_put+2,f,c
  4588  001C30  5020               	movf	??_crcBufS_status_put+1,w,c
  4589  001C32  2222               	addwfc	??_crcBufS_status_put+3,f,c
  4590  001C34  0E02               	movlw	2
  4591  001C36  2621               	addwf	??_crcBufS_status_put+2,f,c
  4592  001C38  0E00               	movlw	0
  4593  001C3A  2222               	addwfc	??_crcBufS_status_put+3,f,c
  4594  001C3C  5021               	movf	??_crcBufS_status_put+2,w,c
  4595  001C3E  241B               	addwf	crcBufS_status_put@_this,w,c
  4596  001C40  6ED9               	movwf	fsr2l,c
  4597  001C42  5022               	movf	??_crcBufS_status_put+3,w,c
  4598  001C44  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  4599  001C46  6EDA               	movwf	fsr2h,c
  4600  001C48  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  4601  001C4C  0012               	return	
  4602  001C4E                     __end_of_crcBufS_status_put:
  4603                           	opt stack 0
  4604                           tosu	equ	0xFFF
  4605                           tosh	equ	0xFFE
  4606                           tosl	equ	0xFFD
  4607                           pclath	equ	0xFFA
  4608                           tblptru	equ	0xFF8
  4609                           tblptrh	equ	0xFF7
  4610                           tblptrl	equ	0xFF6
  4611                           tablat	equ	0xFF5
  4612                           prodh	equ	0xFF4
  4613                           prodl	equ	0xFF3
  4614                           intcon	equ	0xFF2
  4615                           postinc0	equ	0xFEE
  4616                           wreg	equ	0xFE8
  4617                           indf2	equ	0xFDF
  4618                           postinc2	equ	0xFDE
  4619                           postdec2	equ	0xFDD
  4620                           fsr2h	equ	0xFDA
  4621                           fsr2l	equ	0xFD9
  4622                           status	equ	0xFD8
  4623                           
  4624 ;; *************** function _crcBufS_get *****************
  4625 ;; Defined at:
  4626 ;;		line 353 in file "FastTransfer.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  4629 ;;		 -> crc_buffer(17), 
  4630 ;;  time            1   28[COMRAM] unsigned char 
  4631 ;;  space           1   29[COMRAM] unsigned char 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  wantedTime      2   36[COMRAM] int 
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  1    wreg      unsigned char 
  4636 ;; Registers used:
  4637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4643 ;;      Params:         4       0       0       0       0       0       0
  4644 ;;      Locals:         2       0       0       0       0       0       0
  4645 ;;      Temps:          6       0       0       0       0       0       0
  4646 ;;      Totals:        12       0       0       0       0       0       0
  4647 ;;Total ram usage:       12 bytes
  4648 ;; Hardware stack levels used:    1
  4649 ;; Hardware stack levels required when called:    4
  4650 ;; This function calls:
  4651 ;;		Nothing
  4652 ;; This function is called by:
  4653 ;;		_CRCcheck
  4654 ;;		_AKNAK
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           	psect	text19
  4659  001A86                     __ptext19:
  4660                           	opt stack 0
  4661  001A86                     _crcBufS_get:
  4662                           	opt stack 23
  4663                           
  4664                           ;FastTransfer.c: 354: if (time >= 5) {
  4665                           
  4666                           ;incstack = 0
  4667  001A86  0E04               	movlw	4
  4668  001A88  641D               	cpfsgt	crcBufS_get@time,c
  4669  001A8A  D002               	goto	l4550
  4670                           
  4671                           ;FastTransfer.c: 355: time = 5 - 1;
  4672  001A8C  0E04               	movlw	4
  4673  001A8E  6E1D               	movwf	crcBufS_get@time,c
  4674  001A90                     l4550:
  4675                           
  4676                           ;FastTransfer.c: 356: }
  4677                           ;FastTransfer.c: 357: if (space >= 3) {
  4678  001A90  0E02               	movlw	2
  4679  001A92  641E               	cpfsgt	crcBufS_get@space,c
  4680  001A94  D002               	goto	l4554
  4681                           
  4682                           ;FastTransfer.c: 358: space = 3 - 1;
  4683  001A96  0E02               	movlw	2
  4684  001A98  6E1E               	movwf	crcBufS_get@space,c
  4685  001A9A                     l4554:
  4686                           
  4687                           ;FastTransfer.c: 359: }
  4688                           ;FastTransfer.c: 360: time = time + 1;
  4689  001A9A  281D               	incf	crcBufS_get@time,w,c
  4690  001A9C  6E1D               	movwf	crcBufS_get@time,c
  4691                           
  4692                           ;FastTransfer.c: 361: int wantedTime = time * 3;
  4693  001A9E  501D               	movf	crcBufS_get@time,w,c
  4694  001AA0  0D03               	mullw	3
  4695  001AA2  CFF3 F025          	movff	prodl,crcBufS_get@wantedTime
  4696  001AA6  CFF4 F026          	movff	prodh,crcBufS_get@wantedTime+1
  4697                           
  4698                           ;FastTransfer.c: 362: if (wantedTime > _this->head) {
  4699  001AAA  EE20 F00F          	lfsr	2,15
  4700  001AAE  501B               	movf	crcBufS_get@_this,w,c
  4701  001AB0  26D9               	addwf	fsr2l,f,c
  4702  001AB2  501C               	movf	crcBufS_get@_this+1,w,c
  4703  001AB4  22DA               	addwfc	fsr2h,f,c
  4704  001AB6  CFDE F01F          	movff	postinc2,??_crcBufS_get
  4705  001ABA  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  4706  001ABE  5020               	movf	??_crcBufS_get+1,w,c
  4707  001AC0  0A80               	xorlw	128
  4708  001AC2  6E21               	movwf	(??_crcBufS_get+2)& (0+255),c
  4709  001AC4  5025               	movf	crcBufS_get@wantedTime,w,c
  4710  001AC6  5C1F               	subwf	??_crcBufS_get,w,c
  4711  001AC8  5026               	movf	crcBufS_get@wantedTime+1,w,c
  4712  001ACA  0A80               	xorlw	128
  4713  001ACC  5821               	subwfb	(??_crcBufS_get+2)& (0+255),w,c
  4714  001ACE  B0D8               	btfsc	status,0,c
  4715  001AD0  D02A               	goto	l4566
  4716                           
  4717                           ;FastTransfer.c: 363: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  4718  001AD2  EE20 F00F          	lfsr	2,15
  4719  001AD6  501B               	movf	crcBufS_get@_this,w,c
  4720  001AD8  26D9               	addwf	fsr2l,f,c
  4721  001ADA  501C               	movf	crcBufS_get@_this+1,w,c
  4722  001ADC  22DA               	addwfc	fsr2h,f,c
  4723  001ADE  CFDE F01F          	movff	postinc2,??_crcBufS_get
  4724  001AE2  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  4725  001AE6  1E1F               	comf	??_crcBufS_get,f,c
  4726  001AE8  1E20               	comf	??_crcBufS_get+1,f,c
  4727  001AEA  4A1F               	infsnz	??_crcBufS_get,f,c
  4728  001AEC  2A20               	incf	??_crcBufS_get+1,f,c
  4729  001AEE  5025               	movf	crcBufS_get@wantedTime,w,c
  4730  001AF0  261F               	addwf	??_crcBufS_get,f,c
  4731  001AF2  5026               	movf	crcBufS_get@wantedTime+1,w,c
  4732  001AF4  2220               	addwfc	??_crcBufS_get+1,f,c
  4733  001AF6  1E1F               	comf	??_crcBufS_get,f,c
  4734  001AF8  1E20               	comf	??_crcBufS_get+1,f,c
  4735  001AFA  4A1F               	infsnz	??_crcBufS_get,f,c
  4736  001AFC  2A20               	incf	??_crcBufS_get+1,f,c
  4737  001AFE  0E0F               	movlw	15
  4738  001B00  241F               	addwf	??_crcBufS_get,w,c
  4739  001B02  6E25               	movwf	crcBufS_get@wantedTime,c
  4740  001B04  0E00               	movlw	0
  4741  001B06  2020               	addwfc	??_crcBufS_get+1,w,c
  4742  001B08  6E26               	movwf	crcBufS_get@wantedTime+1,c
  4743                           
  4744                           ;FastTransfer.c: 364: return (_this->buf[(wantedTime + space)]);
  4745  001B0A  501E               	movf	crcBufS_get@space,w,c
  4746  001B0C  2425               	addwf	crcBufS_get@wantedTime,w,c
  4747  001B0E  6E1F               	movwf	??_crcBufS_get& (0+255),c
  4748  001B10  0E00               	movlw	0
  4749  001B12  2026               	addwfc	crcBufS_get@wantedTime+1,w,c
  4750  001B14  6E20               	movwf	(??_crcBufS_get+1)& (0+255),c
  4751  001B16  501F               	movf	??_crcBufS_get,w,c
  4752  001B18  241B               	addwf	crcBufS_get@_this,w,c
  4753  001B1A  6ED9               	movwf	fsr2l,c
  4754  001B1C  5020               	movf	??_crcBufS_get+1,w,c
  4755  001B1E  201C               	addwfc	crcBufS_get@_this+1,w,c
  4756  001B20  6EDA               	movwf	fsr2h,c
  4757  001B22  50DF               	movf	indf2,w,c
  4758  001B24  0012               	return	
  4759  001B26                     l4566:
  4760                           
  4761                           ;FastTransfer.c: 366: return (_this->buf[(_this->head - wantedTime) + space]);
  4762  001B26  EE20 F00F          	lfsr	2,15
  4763  001B2A  501B               	movf	crcBufS_get@_this,w,c
  4764  001B2C  26D9               	addwf	fsr2l,f,c
  4765  001B2E  501C               	movf	crcBufS_get@_this+1,w,c
  4766  001B30  22DA               	addwfc	fsr2h,f,c
  4767  001B32  CFDE F01F          	movff	postinc2,??_crcBufS_get
  4768  001B36  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  4769  001B3A  C025  F021         	movff	crcBufS_get@wantedTime,??_crcBufS_get+2
  4770  001B3E  C026  F022         	movff	crcBufS_get@wantedTime+1,??_crcBufS_get+3
  4771  001B42  1E21               	comf	??_crcBufS_get+2,f,c
  4772  001B44  1E22               	comf	??_crcBufS_get+3,f,c
  4773  001B46  4A21               	infsnz	??_crcBufS_get+2,f,c
  4774  001B48  2A22               	incf	??_crcBufS_get+3,f,c
  4775  001B4A  501E               	movf	crcBufS_get@space,w,c
  4776  001B4C  6E23               	movwf	(??_crcBufS_get+4)& (0+255),c
  4777  001B4E  6A24               	clrf	(??_crcBufS_get+5)& (0+255),c
  4778  001B50  5021               	movf	??_crcBufS_get+2,w,c
  4779  001B52  2623               	addwf	??_crcBufS_get+4,f,c
  4780  001B54  5022               	movf	??_crcBufS_get+3,w,c
  4781  001B56  2224               	addwfc	??_crcBufS_get+5,f,c
  4782  001B58  501F               	movf	??_crcBufS_get,w,c
  4783  001B5A  2623               	addwf	??_crcBufS_get+4,f,c
  4784  001B5C  5020               	movf	??_crcBufS_get+1,w,c
  4785  001B5E  2224               	addwfc	??_crcBufS_get+5,f,c
  4786  001B60  5023               	movf	??_crcBufS_get+4,w,c
  4787  001B62  241B               	addwf	crcBufS_get@_this,w,c
  4788  001B64  6ED9               	movwf	fsr2l,c
  4789  001B66  5024               	movf	??_crcBufS_get+5,w,c
  4790  001B68  201C               	addwfc	crcBufS_get@_this+1,w,c
  4791  001B6A  6EDA               	movwf	fsr2h,c
  4792  001B6C  50DF               	movf	indf2,w,c
  4793  001B6E  0012               	return	
  4794  001B70                     __end_of_crcBufS_get:
  4795                           	opt stack 0
  4796                           tosu	equ	0xFFF
  4797                           tosh	equ	0xFFE
  4798                           tosl	equ	0xFFD
  4799                           pclath	equ	0xFFA
  4800                           tblptru	equ	0xFF8
  4801                           tblptrh	equ	0xFF7
  4802                           tblptrl	equ	0xFF6
  4803                           tablat	equ	0xFF5
  4804                           prodh	equ	0xFF4
  4805                           prodl	equ	0xFF3
  4806                           intcon	equ	0xFF2
  4807                           postinc0	equ	0xFEE
  4808                           wreg	equ	0xFE8
  4809                           indf2	equ	0xFDF
  4810                           postinc2	equ	0xFDE
  4811                           postdec2	equ	0xFDD
  4812                           fsr2h	equ	0xFDA
  4813                           fsr2l	equ	0xFD9
  4814                           status	equ	0xFD8
  4815                           
  4816 ;; *************** function _Receive_get *****************
  4817 ;; Defined at:
  4818 ;;		line 126 in file "UART.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;		None
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;		None
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  1    wreg      unsigned char 
  4825 ;; Registers used:
  4826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4832 ;;      Params:         0       0       0       0       0       0       0
  4833 ;;      Locals:         0       0       0       0       0       0       0
  4834 ;;      Temps:          0       0       0       0       0       0       0
  4835 ;;      Totals:         0       0       0       0       0       0       0
  4836 ;;Total ram usage:        0 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:    6
  4839 ;; This function calls:
  4840 ;;		_UART_buff_get
  4841 ;; This function is called by:
  4842 ;;		_SYSTEM_Initialize
  4843 ;;		_getch
  4844 ;;		_CRCcheck
  4845 ;;		_receiveData
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           	psect	text20
  4850  002BC8                     __ptext20:
  4851                           	opt stack 0
  4852  002BC8                     _Receive_get:
  4853                           	opt stack 22
  4854                           
  4855                           ;UART.c: 127: return UART_buff_get(&input_buffer);
  4856                           
  4857                           ;incstack = 0
  4858  002BC8  0103               	movlb	3	; () banked
  4859  002BCA  0E03               	movlw	high _input_buffer
  4860  002BCC  6E22               	movwf	UART_buff_get@_this+1,c
  4861  002BCE  0103               	movlb	3	; () banked
  4862  002BD0  0E00               	movlw	low _input_buffer
  4863  002BD2  6E21               	movwf	UART_buff_get@_this,c
  4864  002BD4  ECE8  F010         	call	_UART_buff_get	;wreg free
  4865  002BD8  0012               	return	
  4866  002BDA                     __end_of_Receive_get:
  4867                           	opt stack 0
  4868                           tosu	equ	0xFFF
  4869                           tosh	equ	0xFFE
  4870                           tosl	equ	0xFFD
  4871                           pclath	equ	0xFFA
  4872                           tblptru	equ	0xFF8
  4873                           tblptrh	equ	0xFF7
  4874                           tblptrl	equ	0xFF6
  4875                           tablat	equ	0xFF5
  4876                           prodh	equ	0xFF4
  4877                           prodl	equ	0xFF3
  4878                           intcon	equ	0xFF2
  4879                           postinc0	equ	0xFEE
  4880                           wreg	equ	0xFE8
  4881                           indf2	equ	0xFDF
  4882                           postinc2	equ	0xFDE
  4883                           postdec2	equ	0xFDD
  4884                           fsr2h	equ	0xFDA
  4885                           fsr2l	equ	0xFD9
  4886                           status	equ	0xFD8
  4887                           
  4888 ;; *************** function _UART_buff_get *****************
  4889 ;; Defined at:
  4890 ;;		line 81 in file "UART.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  4893 ;;		 -> output_buffer(206), input_buffer(206), 
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;  c               1   36[COMRAM] unsigned char 
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  1    wreg      unsigned char 
  4898 ;; Registers used:
  4899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4905 ;;      Params:         2       0       0       0       0       0       0
  4906 ;;      Locals:         1       0       0       0       0       0       0
  4907 ;;      Temps:          2       0       0       0       0       0       0
  4908 ;;      Totals:         5       0       0       0       0       0       0
  4909 ;;Total ram usage:        5 bytes
  4910 ;; Hardware stack levels used:    1
  4911 ;; Hardware stack levels required when called:    5
  4912 ;; This function calls:
  4913 ;;		_UART_buff_modulo_inc
  4914 ;; This function is called by:
  4915 ;;		_Receive_get
  4916 ;;		_Send_put
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920                           	psect	text21
  4921  0021D0                     __ptext21:
  4922                           	opt stack 0
  4923  0021D0                     _UART_buff_get:
  4924                           	opt stack 21
  4925                           
  4926                           ;UART.c: 82: unsigned char c;
  4927                           ;UART.c: 83: if (_this->count > 0) {
  4928                           
  4929                           ;incstack = 0
  4930  0021D0  EE20 F0CC          	lfsr	2,204
  4931  0021D4  5021               	movf	UART_buff_get@_this,w,c
  4932  0021D6  26D9               	addwf	fsr2l,f,c
  4933  0021D8  5022               	movf	UART_buff_get@_this+1,w,c
  4934  0021DA  22DA               	addwfc	fsr2h,f,c
  4935  0021DC  52DE               	movf	postinc2,f,c
  4936  0021DE  50DD               	movf	postdec2,w,c
  4937  0021E0  0A80               	xorlw	128
  4938  0021E2  0F80               	addlw	128
  4939  0021E4  0E01               	movlw	1
  4940  0021E6  B4D8               	btfsc	status,2,c
  4941  0021E8  5CDF               	subwf	indf2,w,c
  4942  0021EA  A0D8               	btfss	status,0,c
  4943  0021EC  D036               	goto	l4472
  4944                           
  4945                           ;UART.c: 84: c = _this->buf[_this->tail];
  4946  0021EE  EE20 F0CA          	lfsr	2,202
  4947  0021F2  5021               	movf	UART_buff_get@_this,w,c
  4948  0021F4  26D9               	addwf	fsr2l,f,c
  4949  0021F6  5022               	movf	UART_buff_get@_this+1,w,c
  4950  0021F8  22DA               	addwfc	fsr2h,f,c
  4951  0021FA  CFDE F023          	movff	postinc2,??_UART_buff_get
  4952  0021FE  CFDD F024          	movff	postdec2,??_UART_buff_get+1
  4953  002202  5023               	movf	??_UART_buff_get,w,c
  4954  002204  2421               	addwf	UART_buff_get@_this,w,c
  4955  002206  6ED9               	movwf	fsr2l,c
  4956  002208  5024               	movf	??_UART_buff_get+1,w,c
  4957  00220A  2022               	addwfc	UART_buff_get@_this+1,w,c
  4958  00220C  6EDA               	movwf	fsr2h,c
  4959  00220E  50DF               	movf	indf2,w,c
  4960  002210  6E25               	movwf	UART_buff_get@c,c
  4961                           
  4962                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  4963  002212  EE20 F0CA          	lfsr	2,202
  4964  002216  5021               	movf	UART_buff_get@_this,w,c
  4965  002218  26D9               	addwf	fsr2l,f,c
  4966  00221A  5022               	movf	UART_buff_get@_this+1,w,c
  4967  00221C  22DA               	addwfc	fsr2h,f,c
  4968  00221E  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4969  002222  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4970  002226  0E00               	movlw	0
  4971  002228  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4972  00222A  0EC8               	movlw	200
  4973  00222C  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4974  00222E  EC13  F015         	call	_UART_buff_modulo_inc	;wreg free
  4975  002232  EE20 F0CA          	lfsr	2,202
  4976  002236  5021               	movf	UART_buff_get@_this,w,c
  4977  002238  26D9               	addwf	fsr2l,f,c
  4978  00223A  5022               	movf	UART_buff_get@_this+1,w,c
  4979  00223C  22DA               	addwfc	fsr2h,f,c
  4980  00223E  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4981  002242  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4982                           
  4983                           ;UART.c: 86: --_this->count;
  4984  002246  EE20 F0CC          	lfsr	2,204
  4985  00224A  5021               	movf	UART_buff_get@_this,w,c
  4986  00224C  26D9               	addwf	fsr2l,f,c
  4987  00224E  5022               	movf	UART_buff_get@_this+1,w,c
  4988  002250  22DA               	addwfc	fsr2h,f,c
  4989  002252  06DE               	decf	postinc2,f,c
  4990  002254  0E00               	movlw	0
  4991  002256  5ADD               	subwfb	postdec2,f,c
  4992                           
  4993                           ;UART.c: 87: } else {
  4994  002258  D002               	goto	l933
  4995  00225A                     l4472:
  4996                           
  4997                           ;UART.c: 88: c = 0;
  4998  00225A  0E00               	movlw	0
  4999  00225C  6E25               	movwf	UART_buff_get@c,c
  5000  00225E                     l933:
  5001                           
  5002                           ;UART.c: 89: }
  5003                           ;UART.c: 90: return (c);
  5004  00225E  5025               	movf	UART_buff_get@c,w,c
  5005  002260  0012               	return	
  5006  002262                     __end_of_UART_buff_get:
  5007                           	opt stack 0
  5008                           tosu	equ	0xFFF
  5009                           tosh	equ	0xFFE
  5010                           tosl	equ	0xFFD
  5011                           pclath	equ	0xFFA
  5012                           tblptru	equ	0xFF8
  5013                           tblptrh	equ	0xFF7
  5014                           tblptrl	equ	0xFF6
  5015                           tablat	equ	0xFF5
  5016                           prodh	equ	0xFF4
  5017                           prodl	equ	0xFF3
  5018                           intcon	equ	0xFF2
  5019                           postinc0	equ	0xFEE
  5020                           wreg	equ	0xFE8
  5021                           indf2	equ	0xFDF
  5022                           postinc2	equ	0xFDE
  5023                           postdec2	equ	0xFDD
  5024                           fsr2h	equ	0xFDA
  5025                           fsr2l	equ	0xFD9
  5026                           status	equ	0xFD8
  5027                           
  5028 ;; *************** function _UART_buff_modulo_inc *****************
  5029 ;; Defined at:
  5030 ;;		line 106 in file "UART.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  value           2   26[COMRAM] const unsigned int 
  5033 ;;  modulus         2   28[COMRAM] const unsigned int 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;  my_value        2   30[COMRAM] unsigned int 
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  2   26[COMRAM] unsigned int 
  5038 ;; Registers used:
  5039 ;;		wreg, status,2, status,0
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5045 ;;      Params:         4       0       0       0       0       0       0
  5046 ;;      Locals:         2       0       0       0       0       0       0
  5047 ;;      Temps:          0       0       0       0       0       0       0
  5048 ;;      Totals:         6       0       0       0       0       0       0
  5049 ;;Total ram usage:        6 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; Hardware stack levels required when called:    4
  5052 ;; This function calls:
  5053 ;;		Nothing
  5054 ;; This function is called by:
  5055 ;;		_UART_buff_put
  5056 ;;		_UART_buff_get
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           	psect	text22
  5061  002A26                     __ptext22:
  5062                           	opt stack 0
  5063  002A26                     _UART_buff_modulo_inc:
  5064                           	opt stack 21
  5065                           
  5066                           ;UART.c: 107: unsigned int my_value = value + 1;
  5067                           
  5068                           ;incstack = 0
  5069  002A26  0E01               	movlw	1
  5070  002A28  241B               	addwf	UART_buff_modulo_inc@value,w,c
  5071  002A2A  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  5072  002A2C  0E00               	movlw	0
  5073  002A2E  201C               	addwfc	UART_buff_modulo_inc@value+1,w,c
  5074  002A30  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  5075                           
  5076                           ;UART.c: 108: if (my_value >= modulus) {
  5077  002A32  501D               	movf	UART_buff_modulo_inc@modulus,w,c
  5078  002A34  5C1F               	subwf	UART_buff_modulo_inc@my_value,w,c
  5079  002A36  501E               	movf	UART_buff_modulo_inc@modulus+1,w,c
  5080  002A38  5820               	subwfb	UART_buff_modulo_inc@my_value+1,w,c
  5081  002A3A  A0D8               	btfss	status,0,c
  5082  002A3C  D004               	goto	l4438
  5083                           
  5084                           ;UART.c: 109: my_value = 0;
  5085  002A3E  0E00               	movlw	0
  5086  002A40  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  5087  002A42  0E00               	movlw	0
  5088  002A44  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  5089  002A46                     l4438:
  5090                           
  5091                           ;UART.c: 110: }
  5092                           ;UART.c: 111: return (my_value);
  5093  002A46  C01F  F01B         	movff	UART_buff_modulo_inc@my_value,?_UART_buff_modulo_inc
  5094  002A4A  C020  F01C         	movff	UART_buff_modulo_inc@my_value+1,?_UART_buff_modulo_inc+1
  5095  002A4E  0012               	return	
  5096  002A50                     __end_of_UART_buff_modulo_inc:
  5097                           	opt stack 0
  5098                           tosu	equ	0xFFF
  5099                           tosh	equ	0xFFE
  5100                           tosl	equ	0xFFD
  5101                           pclath	equ	0xFFA
  5102                           tblptru	equ	0xFF8
  5103                           tblptrh	equ	0xFF7
  5104                           tblptrl	equ	0xFF6
  5105                           tablat	equ	0xFF5
  5106                           prodh	equ	0xFF4
  5107                           prodl	equ	0xFF3
  5108                           intcon	equ	0xFF2
  5109                           postinc0	equ	0xFEE
  5110                           wreg	equ	0xFE8
  5111                           indf2	equ	0xFDF
  5112                           postinc2	equ	0xFDE
  5113                           postdec2	equ	0xFDD
  5114                           fsr2h	equ	0xFDA
  5115                           fsr2l	equ	0xFD9
  5116                           status	equ	0xFD8
  5117                           
  5118 ;; *************** function _Receive_available *****************
  5119 ;; Defined at:
  5120 ;;		line 122 in file "UART.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;		None
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;		None
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  2   28[COMRAM] int 
  5127 ;; Registers used:
  5128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5134 ;;      Params:         2       0       0       0       0       0       0
  5135 ;;      Locals:         0       0       0       0       0       0       0
  5136 ;;      Temps:          0       0       0       0       0       0       0
  5137 ;;      Totals:         2       0       0       0       0       0       0
  5138 ;;Total ram usage:        2 bytes
  5139 ;; Hardware stack levels used:    1
  5140 ;; Hardware stack levels required when called:    5
  5141 ;; This function calls:
  5142 ;;		_UART_buff_size
  5143 ;; This function is called by:
  5144 ;;		_SYSTEM_Initialize
  5145 ;;		_CRCcheck
  5146 ;;		_receiveData
  5147 ;; This function uses a non-reentrant model
  5148 ;;
  5149                           
  5150                           	psect	text23
  5151  002B40                     __ptext23:
  5152                           	opt stack 0
  5153  002B40                     _Receive_available:
  5154                           	opt stack 23
  5155                           
  5156                           ;UART.c: 123: return UART_buff_size(&input_buffer);
  5157                           
  5158                           ;incstack = 0
  5159  002B40  0103               	movlb	3	; () banked
  5160  002B42  0E03               	movlw	high _input_buffer
  5161  002B44  6E1C               	movwf	UART_buff_size@_this+1,c
  5162  002B46  0103               	movlb	3	; () banked
  5163  002B48  0E00               	movlw	low _input_buffer
  5164  002B4A  6E1B               	movwf	UART_buff_size@_this,c
  5165  002B4C  ECC5  F015         	call	_UART_buff_size	;wreg free
  5166  002B50  C01B  F01D         	movff	?_UART_buff_size,?_Receive_available
  5167  002B54  C01C  F01E         	movff	?_UART_buff_size+1,?_Receive_available+1
  5168  002B58  0012               	return	
  5169  002B5A                     __end_of_Receive_available:
  5170                           	opt stack 0
  5171                           tosu	equ	0xFFF
  5172                           tosh	equ	0xFFE
  5173                           tosl	equ	0xFFD
  5174                           pclath	equ	0xFFA
  5175                           tblptru	equ	0xFF8
  5176                           tblptrh	equ	0xFF7
  5177                           tblptrl	equ	0xFF6
  5178                           tablat	equ	0xFF5
  5179                           prodh	equ	0xFF4
  5180                           prodl	equ	0xFF3
  5181                           intcon	equ	0xFF2
  5182                           postinc0	equ	0xFEE
  5183                           wreg	equ	0xFE8
  5184                           indf2	equ	0xFDF
  5185                           postinc2	equ	0xFDE
  5186                           postdec2	equ	0xFDD
  5187                           fsr2h	equ	0xFDA
  5188                           fsr2l	equ	0xFD9
  5189                           status	equ	0xFD8
  5190                           
  5191 ;; *************** function _UART_buff_size *****************
  5192 ;; Defined at:
  5193 ;;		line 102 in file "UART.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  5196 ;;		 -> output_buffer(206), input_buffer(206), 
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;		None
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  2   26[COMRAM] int 
  5201 ;; Registers used:
  5202 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5208 ;;      Params:         2       0       0       0       0       0       0
  5209 ;;      Locals:         0       0       0       0       0       0       0
  5210 ;;      Temps:          0       0       0       0       0       0       0
  5211 ;;      Totals:         2       0       0       0       0       0       0
  5212 ;;Total ram usage:        2 bytes
  5213 ;; Hardware stack levels used:    1
  5214 ;; Hardware stack levels required when called:    4
  5215 ;; This function calls:
  5216 ;;		Nothing
  5217 ;; This function is called by:
  5218 ;;		_Receive_available
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222                           	psect	text24
  5223  002B8A                     __ptext24:
  5224                           	opt stack 0
  5225  002B8A                     _UART_buff_size:
  5226                           	opt stack 23
  5227                           
  5228                           ;UART.c: 103: return (_this->count);
  5229                           
  5230                           ;incstack = 0
  5231  002B8A  EE20 F0CC          	lfsr	2,204
  5232  002B8E  501B               	movf	UART_buff_size@_this,w,c
  5233  002B90  26D9               	addwf	fsr2l,f,c
  5234  002B92  501C               	movf	UART_buff_size@_this+1,w,c
  5235  002B94  22DA               	addwfc	fsr2h,f,c
  5236  002B96  CFDE F01B          	movff	postinc2,?_UART_buff_size
  5237  002B9A  CFDD F01C          	movff	postdec2,?_UART_buff_size+1
  5238  002B9E  0012               	return	
  5239  002BA0                     __end_of_UART_buff_size:
  5240                           	opt stack 0
  5241                           tosu	equ	0xFFF
  5242                           tosh	equ	0xFFE
  5243                           tosl	equ	0xFFD
  5244                           pclath	equ	0xFFA
  5245                           tblptru	equ	0xFF8
  5246                           tblptrh	equ	0xFF7
  5247                           tblptrl	equ	0xFF6
  5248                           tablat	equ	0xFF5
  5249                           prodh	equ	0xFF4
  5250                           prodl	equ	0xFF3
  5251                           intcon	equ	0xFF2
  5252                           postinc0	equ	0xFEE
  5253                           wreg	equ	0xFE8
  5254                           indf2	equ	0xFDF
  5255                           postinc2	equ	0xFDE
  5256                           postdec2	equ	0xFDD
  5257                           fsr2h	equ	0xFDA
  5258                           fsr2l	equ	0xFD9
  5259                           status	equ	0xFD8
  5260                           
  5261 ;; *************** function _CRC8 *****************
  5262 ;; Defined at:
  5263 ;;		line 34 in file "FastTransfer.c"
  5264 ;; Parameters:    Size  Location     Type
  5265 ;;  data            2   26[COMRAM] PTR const unsigned char 
  5266 ;;		 -> CRCcheck@arrayHolder(3), receiveData@holder_2257(3), receiveData@holder(3), rx_buffer(200), 
  5267 ;;		 -> ring_buffer(206), NULL(0), 
  5268 ;;  len             1   28[COMRAM] unsigned char 
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;  sum             1   29[COMRAM] unsigned char 
  5271 ;;  tempI           1   31[COMRAM] unsigned char 
  5272 ;;  extract         1   30[COMRAM] unsigned char 
  5273 ;;  crc             1   32[COMRAM] unsigned char 
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  1    wreg      unsigned char 
  5276 ;; Registers used:
  5277 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5283 ;;      Params:         3       0       0       0       0       0       0
  5284 ;;      Locals:         4       0       0       0       0       0       0
  5285 ;;      Temps:          0       0       0       0       0       0       0
  5286 ;;      Totals:         7       0       0       0       0       0       0
  5287 ;;Total ram usage:        7 bytes
  5288 ;; Hardware stack levels used:    1
  5289 ;; Hardware stack levels required when called:    4
  5290 ;; This function calls:
  5291 ;;		Nothing
  5292 ;; This function is called by:
  5293 ;;		_sendData
  5294 ;;		_receiveData
  5295 ;;		_CRCcheck
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299                           	psect	text25
  5300  0027AE                     __ptext25:
  5301                           	opt stack 0
  5302  0027AE                     _CRC8:
  5303                           	opt stack 23
  5304                           
  5305                           ;FastTransfer.c: 35: unsigned char crc = 0x00;
  5306                           
  5307                           ;incstack = 0
  5308  0027AE  0E00               	movlw	0
  5309  0027B0  6E21               	movwf	CRC8@crc,c
  5310                           
  5311                           ;FastTransfer.c: 36: while (len--) {
  5312  0027B2  D01B               	goto	l4530
  5313  0027B4                     l4514:
  5314                           
  5315                           ;FastTransfer.c: 37: unsigned char extract = *data++;
  5316  0027B4  C01B  FFD9         	movff	CRC8@data,fsr2l
  5317  0027B8  C01C  FFDA         	movff	CRC8@data+1,fsr2h
  5318  0027BC  50DF               	movf	indf2,w,c
  5319  0027BE  6E1F               	movwf	CRC8@extract,c
  5320  0027C0  4A1B               	infsnz	CRC8@data,f,c
  5321  0027C2  2A1C               	incf	CRC8@data+1,f,c
  5322                           
  5323                           ;FastTransfer.c: 38: unsigned char tempI;
  5324                           ;FastTransfer.c: 39: for (tempI = 8; tempI; tempI--) {
  5325  0027C4  0E08               	movlw	8
  5326  0027C6  6E20               	movwf	CRC8@tempI,c
  5327  0027C8  D00E               	goto	l4528
  5328  0027CA                     l4520:
  5329                           
  5330                           ;FastTransfer.c: 40: unsigned char sum = (crc ^ extract) & 0x01;
  5331  0027CA  5021               	movf	CRC8@crc,w,c
  5332  0027CC  181F               	xorwf	CRC8@extract,w,c
  5333  0027CE  0B01               	andlw	1
  5334  0027D0  6E1E               	movwf	CRC8@sum,c
  5335                           
  5336                           ;FastTransfer.c: 41: crc >>= 1;
  5337  0027D2  90D8               	bcf	status,0,c
  5338  0027D4  3221               	rrcf	CRC8@crc,f,c
  5339                           
  5340                           ;FastTransfer.c: 42: if (sum) {
  5341  0027D6  501E               	movf	CRC8@sum,w,c
  5342  0027D8  B4D8               	btfsc	status,2,c
  5343  0027DA  D002               	goto	l774
  5344                           
  5345                           ;FastTransfer.c: 43: crc ^= 0x8C;
  5346  0027DC  0E8C               	movlw	140
  5347  0027DE  1A21               	xorwf	CRC8@crc,f,c
  5348  0027E0                     l774:
  5349                           
  5350                           ;FastTransfer.c: 44: }
  5351                           ;FastTransfer.c: 45: extract >>= 1;
  5352  0027E0  90D8               	bcf	status,0,c
  5353  0027E2  321F               	rrcf	CRC8@extract,f,c
  5354  0027E4  0620               	decf	CRC8@tempI,f,c
  5355  0027E6                     l4528:
  5356  0027E6  6620               	tstfsz	CRC8@tempI,c
  5357  0027E8  D7F0               	goto	l4520
  5358  0027EA                     l4530:
  5359  0027EA  061D               	decf	CRC8@len,f,c
  5360  0027EC  281D               	incf	CRC8@len& (0+255),w,c
  5361  0027EE  A4D8               	btfss	status,2,c
  5362  0027F0  D7E1               	goto	l4514
  5363                           
  5364                           ;FastTransfer.c: 46: }
  5365                           ;FastTransfer.c: 47: }
  5366                           ;FastTransfer.c: 48: return crc;
  5367  0027F2  5021               	movf	CRC8@crc,w,c
  5368  0027F4  0012               	return	
  5369  0027F6                     __end_of_CRC8:
  5370                           	opt stack 0
  5371                           tosu	equ	0xFFF
  5372                           tosh	equ	0xFFE
  5373                           tosl	equ	0xFFD
  5374                           pclath	equ	0xFFA
  5375                           tblptru	equ	0xFF8
  5376                           tblptrh	equ	0xFF7
  5377                           tblptrl	equ	0xFF6
  5378                           tablat	equ	0xFF5
  5379                           prodh	equ	0xFF4
  5380                           prodl	equ	0xFF3
  5381                           intcon	equ	0xFF2
  5382                           postinc0	equ	0xFEE
  5383                           wreg	equ	0xFE8
  5384                           indf2	equ	0xFDF
  5385                           postinc2	equ	0xFDE
  5386                           postdec2	equ	0xFDD
  5387                           fsr2h	equ	0xFDA
  5388                           fsr2l	equ	0xFD9
  5389                           status	equ	0xFD8
  5390                           
  5391 ;; *************** function _handleIndicators *****************
  5392 ;; Defined at:
  5393 ;;		line 31 in file "Communications.c"
  5394 ;; Parameters:    Size  Location     Type
  5395 ;;  receivedIndi    2   31[COMRAM] int 
  5396 ;; Auto vars:     Size  Location     Type
  5397 ;;  i               2   36[COMRAM] int 
  5398 ;; Return value:  Size  Location     Type
  5399 ;;		None               void
  5400 ;; Registers used:
  5401 ;;		wreg, status,2, status,0, cstack
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5407 ;;      Params:         2       0       0       0       0       0       0
  5408 ;;      Locals:         2       0       0       0       0       0       0
  5409 ;;      Temps:          3       0       0       0       0       0       0
  5410 ;;      Totals:         7       0       0       0       0       0       0
  5411 ;;Total ram usage:        7 bytes
  5412 ;; Hardware stack levels used:    1
  5413 ;; Hardware stack levels required when called:    5
  5414 ;; This function calls:
  5415 ;;		_SetLEDOut
  5416 ;; This function is called by:
  5417 ;;		_updateComms
  5418 ;; This function uses a non-reentrant model
  5419 ;;
  5420                           
  5421                           	psect	text26
  5422  002470                     __ptext26:
  5423                           	opt stack 0
  5424  002470                     _handleIndicators:
  5425                           	opt stack 24
  5426                           
  5427                           ;Communications.c: 32: static int oldIndicators = 0;
  5428                           ;Communications.c: 33: if (receivedIndicators != oldIndicators) {
  5429                           
  5430                           ;incstack = 0
  5431  002470  0100               	movlb	0	; () banked
  5432  002472  51B2               	movf	(handleIndicators@oldIndicators+1)& (0+255),w,b
  5433  002474  1821               	xorwf	handleIndicators@receivedIndicators+1,w,c
  5434  002476  E103               	bnz	u3815
  5435  002478  0100               	movlb	0	; () banked
  5436  00247A  51B1               	movf	handleIndicators@oldIndicators& (0+255),w,b
  5437  00247C  1820               	xorwf	handleIndicators@receivedIndicators,w,c
  5438  00247E                     u3815:
  5439  00247E  B4D8               	btfsc	status,2,c
  5440  002480  0012               	return	
  5441                           
  5442                           ; BSR set to: 0
  5443                           ;Communications.c: 34: int i = 0;
  5444  002482  0E00               	movlw	0
  5445  002484  6E26               	movwf	handleIndicators@i+1,c
  5446  002486  0E00               	movlw	0
  5447  002488  6E25               	movwf	handleIndicators@i,c
  5448                           
  5449                           ;Communications.c: 35: for (i = 0; i < 6; i++) {
  5450  00248A  0E00               	movlw	0
  5451  00248C  6E26               	movwf	handleIndicators@i+1,c
  5452  00248E  0E00               	movlw	0
  5453  002490  6E25               	movwf	handleIndicators@i,c
  5454  002492                     
  5455                           ; BSR set to: 0
  5456  002492  5026               	movf	handleIndicators@i+1,w,c
  5457  002494  0A80               	xorlw	128
  5458  002496  0F80               	addlw	-128
  5459  002498  0E06               	movlw	6
  5460  00249A  B4D8               	btfsc	status,2,c
  5461  00249C  5C25               	subwf	handleIndicators@i,w,c
  5462  00249E  B0D8               	btfsc	status,0,c
  5463  0024A0  D019               	goto	l695
  5464                           
  5465                           ;Communications.c: 36: SetLEDOut(i, ((receivedIndicators >> i)&0x01));
  5466                           
  5467                           ; BSR set to: 0
  5468                           
  5469                           ; BSR set to: 0
  5470  0024A2  C025  F01B         	movff	handleIndicators@i,SetLEDOut@lednum
  5471  0024A6  C026  F01C         	movff	handleIndicators@i+1,SetLEDOut@lednum+1
  5472  0024AA  C025  F022         	movff	handleIndicators@i,??_handleIndicators
  5473  0024AE  C020  F023         	movff	handleIndicators@receivedIndicators,??_handleIndicators+1
  5474  0024B2  C021  F024         	movff	handleIndicators@receivedIndicators+1,??_handleIndicators+2
  5475  0024B6  2A22               	incf	??_handleIndicators,f,c
  5476  0024B8  D003               	goto	u3834
  5477  0024BA                     u3835:
  5478  0024BA  3424               	rlcf	??_handleIndicators+2,w,c
  5479  0024BC  3224               	rrcf	??_handleIndicators+2,f,c
  5480  0024BE  3223               	rrcf	??_handleIndicators+1,f,c
  5481  0024C0                     u3834:
  5482  0024C0  2E22               	decfsz	??_handleIndicators,f,c
  5483  0024C2  D7FB               	goto	u3835
  5484  0024C4  5023               	movf	??_handleIndicators+1,w,c
  5485  0024C6  0B01               	andlw	1
  5486  0024C8  6E1D               	movwf	SetLEDOut@state,c
  5487  0024CA  EC7A  F011         	call	_SetLEDOut	;wreg free
  5488  0024CE  4A25               	infsnz	handleIndicators@i,f,c
  5489  0024D0  2A26               	incf	handleIndicators@i+1,f,c
  5490  0024D2  D7DF               	goto	L3
  5491  0024D4                     l695:
  5492                           
  5493                           ;Communications.c: 37: }
  5494                           ;Communications.c: 38: oldIndicators = receivedIndicators;
  5495  0024D4  C020  F0B1         	movff	handleIndicators@receivedIndicators,handleIndicators@oldIndicators
  5496  0024D8  C021  F0B2         	movff	handleIndicators@receivedIndicators+1,handleIndicators@oldIndicators+1
  5497  0024DC  0012               	return	
  5498  0024DE                     __end_of_handleIndicators:
  5499                           	opt stack 0
  5500                           tosu	equ	0xFFF
  5501                           tosh	equ	0xFFE
  5502                           tosl	equ	0xFFD
  5503                           pclath	equ	0xFFA
  5504                           tblptru	equ	0xFF8
  5505                           tblptrh	equ	0xFF7
  5506                           tblptrl	equ	0xFF6
  5507                           tablat	equ	0xFF5
  5508                           prodh	equ	0xFF4
  5509                           prodl	equ	0xFF3
  5510                           intcon	equ	0xFF2
  5511                           postinc0	equ	0xFEE
  5512                           wreg	equ	0xFE8
  5513                           indf2	equ	0xFDF
  5514                           postinc2	equ	0xFDE
  5515                           postdec2	equ	0xFDD
  5516                           fsr2h	equ	0xFDA
  5517                           fsr2l	equ	0xFD9
  5518                           status	equ	0xFD8
  5519                           
  5520 ;; *************** function _SetLEDOut *****************
  5521 ;; Defined at:
  5522 ;;		line 13 in file "IO.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;  lednum          2   26[COMRAM] int 
  5525 ;;  state           1   28[COMRAM] unsigned char 
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;		None
  5528 ;; Return value:  Size  Location     Type
  5529 ;;		None               void
  5530 ;; Registers used:
  5531 ;;		wreg, status,2, status,0
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5537 ;;      Params:         3       0       0       0       0       0       0
  5538 ;;      Locals:         0       0       0       0       0       0       0
  5539 ;;      Temps:          2       0       0       0       0       0       0
  5540 ;;      Totals:         5       0       0       0       0       0       0
  5541 ;;Total ram usage:        5 bytes
  5542 ;; Hardware stack levels used:    1
  5543 ;; Hardware stack levels required when called:    4
  5544 ;; This function calls:
  5545 ;;		Nothing
  5546 ;; This function is called by:
  5547 ;;		_handleIndicators
  5548 ;; This function uses a non-reentrant model
  5549 ;;
  5550                           
  5551                           	psect	text27
  5552  0022F4                     __ptext27:
  5553                           	opt stack 0
  5554  0022F4                     _SetLEDOut:
  5555                           	opt stack 24
  5556                           
  5557                           ;IO.c: 14: switch (lednum) {
  5558                           
  5559                           ;incstack = 0
  5560  0022F4  D02A               	goto	l3264
  5561  0022F6                     l3250:
  5562                           
  5563                           ;IO.c: 16: if (state)do { LATB3 = 1; } while(0);
  5564  0022F6  501D               	movf	SetLEDOut@state,w,c
  5565  0022F8  B4D8               	btfsc	status,2,c
  5566  0022FA  D002               	goto	l555
  5567  0022FC  868A               	bsf	3978,3,c	;volatile
  5568  0022FE  0012               	return	
  5569  002300                     l555:
  5570  002300  968A               	bcf	3978,3,c	;volatile
  5571  002302  0012               	return	
  5572  002304                     l3252:
  5573                           
  5574                           ;IO.c: 20: if (state)do { LATB5 = 1; } while(0);
  5575  002304  501D               	movf	SetLEDOut@state,w,c
  5576  002306  B4D8               	btfsc	status,2,c
  5577  002308  D002               	goto	l563
  5578  00230A  8A8A               	bsf	3978,5,c	;volatile
  5579  00230C  0012               	return	
  5580  00230E                     l563:
  5581  00230E  9A8A               	bcf	3978,5,c	;volatile
  5582  002310  0012               	return	
  5583  002312                     l3254:
  5584                           
  5585                           ;IO.c: 24: if (state)do { LATD1 = 1; } while(0);
  5586  002312  501D               	movf	SetLEDOut@state,w,c
  5587  002314  B4D8               	btfsc	status,2,c
  5588  002316  D002               	goto	l570
  5589  002318  828C               	bsf	3980,1,c	;volatile
  5590  00231A  0012               	return	
  5591  00231C                     l570:
  5592  00231C  928C               	bcf	3980,1,c	;volatile
  5593  00231E  0012               	return	
  5594  002320                     l3256:
  5595                           
  5596                           ;IO.c: 28: if (state)do { LATE2 = 1; } while(0);
  5597  002320  501D               	movf	SetLEDOut@state,w,c
  5598  002322  B4D8               	btfsc	status,2,c
  5599  002324  D002               	goto	l577
  5600  002326  848D               	bsf	3981,2,c	;volatile
  5601  002328  0012               	return	
  5602  00232A                     l577:
  5603  00232A  948D               	bcf	3981,2,c	;volatile
  5604  00232C  0012               	return	
  5605  00232E                     l3258:
  5606                           
  5607                           ;IO.c: 32: if (state)do { LATE1 = 1; } while(0);
  5608  00232E  501D               	movf	SetLEDOut@state,w,c
  5609  002330  B4D8               	btfsc	status,2,c
  5610  002332  D002               	goto	l584
  5611  002334  828D               	bsf	3981,1,c	;volatile
  5612  002336  0012               	return	
  5613  002338                     l584:
  5614  002338  928D               	bcf	3981,1,c	;volatile
  5615  00233A  0012               	return	
  5616  00233C                     l3260:
  5617                           
  5618                           ;IO.c: 36: if (state)do { LATE1 = 1; } while(0);
  5619  00233C  501D               	movf	SetLEDOut@state,w,c
  5620  00233E  B4D8               	btfsc	status,2,c
  5621  002340  D002               	goto	l591
  5622  002342  828D               	bsf	3981,1,c	;volatile
  5623  002344  0012               	return	
  5624  002346                     l591:
  5625  002346  928D               	bcf	3981,1,c	;volatile
  5626  002348  0012               	return	
  5627  00234A                     l3264:
  5628  00234A  C01B  F01E         	movff	SetLEDOut@lednum,??_SetLEDOut
  5629  00234E  C01C  F01F         	movff	SetLEDOut@lednum+1,??_SetLEDOut+1
  5630                           
  5631                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5632                           ; Switch size 1, requested type "space"
  5633                           ; Number of cases is 1, Range of values is 0 to 0
  5634                           ; switch strategies available:
  5635                           ; Name         Instructions Cycles
  5636                           ; simple_byte            4     3 (average)
  5637                           ;	Chosen strategy is simple_byte
  5638  002352  501F               	movf	??_SetLEDOut+1,w,c
  5639  002354  0A00               	xorlw	0	; case 0
  5640  002356  A4D8               	btfss	status,2,c
  5641  002358  0012               	return	
  5642                           
  5643                           ; Switch size 1, requested type "space"
  5644                           ; Number of cases is 6, Range of values is 0 to 5
  5645                           ; switch strategies available:
  5646                           ; Name         Instructions Cycles
  5647                           ; simple_byte           19    10 (average)
  5648                           ;	Chosen strategy is simple_byte
  5649  00235A  501E               	movf	??_SetLEDOut,w,c
  5650  00235C  0A00               	xorlw	0	; case 0
  5651  00235E  B4D8               	btfsc	status,2,c
  5652  002360  D7CA               	goto	l3250
  5653  002362  0A01               	xorlw	1	; case 1
  5654  002364  B4D8               	btfsc	status,2,c
  5655  002366  D7CE               	goto	l3252
  5656  002368  0A03               	xorlw	3	; case 2
  5657  00236A  B4D8               	btfsc	status,2,c
  5658  00236C  D7D2               	goto	l3254
  5659  00236E  0A01               	xorlw	1	; case 3
  5660  002370  B4D8               	btfsc	status,2,c
  5661  002372  D7D6               	goto	l3256
  5662  002374  0A07               	xorlw	7	; case 4
  5663  002376  B4D8               	btfsc	status,2,c
  5664  002378  D7DA               	goto	l3258
  5665  00237A  0A01               	xorlw	1	; case 5
  5666  00237C  A4D8               	btfss	status,2,c
  5667  00237E  0012               	return	
  5668  002380  D7DD               	goto	l3260
  5669  002382                     __end_of_SetLEDOut:
  5670                           	opt stack 0
  5671                           tosu	equ	0xFFF
  5672                           tosh	equ	0xFFE
  5673                           tosl	equ	0xFFD
  5674                           pclath	equ	0xFFA
  5675                           tblptru	equ	0xFF8
  5676                           tblptrh	equ	0xFF7
  5677                           tblptrl	equ	0xFF6
  5678                           tablat	equ	0xFF5
  5679                           prodh	equ	0xFF4
  5680                           prodl	equ	0xFF3
  5681                           intcon	equ	0xFF2
  5682                           postinc0	equ	0xFEE
  5683                           wreg	equ	0xFE8
  5684                           indf2	equ	0xFDF
  5685                           postinc2	equ	0xFDE
  5686                           postdec2	equ	0xFDD
  5687                           fsr2h	equ	0xFDA
  5688                           fsr2l	equ	0xFD9
  5689                           status	equ	0xFD8
  5690                           
  5691 ;; *************** function _TBbarGraphs *****************
  5692 ;; Defined at:
  5693 ;;		line 43 in file "Communications.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;  t               2   26[COMRAM] int 
  5696 ;;  b               2   28[COMRAM] int 
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;		None
  5699 ;; Return value:  Size  Location     Type
  5700 ;;		None               void
  5701 ;; Registers used:
  5702 ;;		None
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5708 ;;      Params:         4       0       0       0       0       0       0
  5709 ;;      Locals:         0       0       0       0       0       0       0
  5710 ;;      Temps:          0       0       0       0       0       0       0
  5711 ;;      Totals:         4       0       0       0       0       0       0
  5712 ;;Total ram usage:        4 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; Hardware stack levels required when called:    4
  5715 ;; This function calls:
  5716 ;;		Nothing
  5717 ;; This function is called by:
  5718 ;;		_updateComms
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           	psect	text28
  5723  002BDA                     __ptext28:
  5724                           	opt stack 0
  5725  002BDA                     _TBbarGraphs:
  5726                           	opt stack 25
  5727                           
  5728                           ;Communications.c: 44: throttle = t;
  5729                           
  5730                           ;incstack = 0
  5731  002BDA  C01B  F0AD         	movff	TBbarGraphs@t,_throttle
  5732  002BDE  C01C  F0AE         	movff	TBbarGraphs@t+1,_throttle+1
  5733                           
  5734                           ;Communications.c: 45: brake = b;
  5735  002BE2  C01D  F09F         	movff	TBbarGraphs@b,_brake
  5736  002BE6  C01E  F0A0         	movff	TBbarGraphs@b+1,_brake+1
  5737  002BEA  0012               	return	
  5738  002BEC                     __end_of_TBbarGraphs:
  5739                           	opt stack 0
  5740                           tosu	equ	0xFFF
  5741                           tosh	equ	0xFFE
  5742                           tosl	equ	0xFFD
  5743                           pclath	equ	0xFFA
  5744                           tblptru	equ	0xFF8
  5745                           tblptrh	equ	0xFF7
  5746                           tblptrl	equ	0xFF6
  5747                           tablat	equ	0xFF5
  5748                           prodh	equ	0xFF4
  5749                           prodl	equ	0xFF3
  5750                           intcon	equ	0xFF2
  5751                           postinc0	equ	0xFEE
  5752                           wreg	equ	0xFE8
  5753                           indf2	equ	0xFDF
  5754                           postinc2	equ	0xFDE
  5755                           postdec2	equ	0xFDD
  5756                           fsr2h	equ	0xFDA
  5757                           fsr2l	equ	0xFD9
  5758                           status	equ	0xFD8
  5759                           
  5760 ;; *************** function ___lwtoft *****************
  5761 ;; Defined at:
  5762 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;  c               2   34[COMRAM] unsigned int 
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;		None
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  3   34[COMRAM] float 
  5769 ;; Registers used:
  5770 ;;		wreg, status,2, status,0, cstack
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5776 ;;      Params:         3       0       0       0       0       0       0
  5777 ;;      Locals:         0       0       0       0       0       0       0
  5778 ;;      Temps:          0       0       0       0       0       0       0
  5779 ;;      Totals:         3       0       0       0       0       0       0
  5780 ;;Total ram usage:        3 bytes
  5781 ;; Hardware stack levels used:    1
  5782 ;; Hardware stack levels required when called:    5
  5783 ;; This function calls:
  5784 ;;		___ftpack
  5785 ;; This function is called by:
  5786 ;;		_main
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           	psect	text29
  5791  002A9E                     __ptext29:
  5792                           	opt stack 0
  5793  002A9E                     ___lwtoft:
  5794                           	opt stack 25
  5795                           
  5796                           ;incstack = 0
  5797  002A9E  C023  F01B         	movff	___lwtoft@c,___ftpack@arg
  5798  002AA2  C024  F01C         	movff	___lwtoft@c+1,___ftpack@arg+1
  5799  002AA6  6A1D               	clrf	___ftpack@arg+2,c
  5800  002AA8  0E8E               	movlw	142
  5801  002AAA  6E1E               	movwf	___ftpack@exp,c
  5802  002AAC  0E00               	movlw	0
  5803  002AAE  6E1F               	movwf	___ftpack@sign,c
  5804  002AB0  EC54  F00F         	call	___ftpack	;wreg free
  5805  002AB4  C01B  F023         	movff	?___ftpack,?___lwtoft
  5806  002AB8  C01C  F024         	movff	?___ftpack+1,?___lwtoft+1
  5807  002ABC  C01D  F025         	movff	?___ftpack+2,?___lwtoft+2
  5808  002AC0  0012               	return	
  5809  002AC2                     __end_of___lwtoft:
  5810                           	opt stack 0
  5811                           tosu	equ	0xFFF
  5812                           tosh	equ	0xFFE
  5813                           tosl	equ	0xFFD
  5814                           pclath	equ	0xFFA
  5815                           tblptru	equ	0xFF8
  5816                           tblptrh	equ	0xFF7
  5817                           tblptrl	equ	0xFF6
  5818                           tablat	equ	0xFF5
  5819                           prodh	equ	0xFF4
  5820                           prodl	equ	0xFF3
  5821                           intcon	equ	0xFF2
  5822                           postinc0	equ	0xFEE
  5823                           wreg	equ	0xFE8
  5824                           indf2	equ	0xFDF
  5825                           postinc2	equ	0xFDE
  5826                           postdec2	equ	0xFDD
  5827                           fsr2h	equ	0xFDA
  5828                           fsr2l	equ	0xFD9
  5829                           status	equ	0xFD8
  5830                           
  5831 ;; *************** function ___fttol *****************
  5832 ;; Defined at:
  5833 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  5834 ;; Parameters:    Size  Location     Type
  5835 ;;  f1              3   12[BANK0 ] float 
  5836 ;; Auto vars:     Size  Location     Type
  5837 ;;  lval            4   22[BANK0 ] unsigned long 
  5838 ;;  exp1            1   26[BANK0 ] unsigned char 
  5839 ;;  sign1           1   21[BANK0 ] unsigned char 
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  4   12[BANK0 ] long 
  5842 ;; Registers used:
  5843 ;;		wreg, status,2, status,0
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5849 ;;      Params:         0       4       0       0       0       0       0
  5850 ;;      Locals:         0       6       0       0       0       0       0
  5851 ;;      Temps:          0       5       0       0       0       0       0
  5852 ;;      Totals:         0      15       0       0       0       0       0
  5853 ;;Total ram usage:       15 bytes
  5854 ;; Hardware stack levels used:    1
  5855 ;; Hardware stack levels required when called:    4
  5856 ;; This function calls:
  5857 ;;		Nothing
  5858 ;; This function is called by:
  5859 ;;		_main
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           	psect	text30
  5864  000D9E                     __ptext30:
  5865                           	opt stack 0
  5866  000D9E                     ___fttol:
  5867                           	opt stack 26
  5868                           
  5869                           ;incstack = 0
  5870  000D9E  0100               	movlb	0	; () banked
  5871  000DA0  C0E1  F0E3         	movff	___fttol@f1+2,??___fttol
  5872  000DA4  0100               	movlb	0	; () banked
  5873  000DA6  6BE4               	clrf	(??___fttol+1)& (0+255),b
  5874  000DA8  6BE5               	clrf	(??___fttol+2)& (0+255),b
  5875  000DAA  0100               	movlb	0	; () banked
  5876  000DAC  35E0               	rlcf	(___fttol@f1+1)& (0+255),w,b
  5877  000DAE  0100               	movlb	0	; () banked
  5878  000DB0  37E3               	rlcf	??___fttol& (0+255),f,b
  5879  000DB2  E301               	bnc	u6371
  5880  000DB4  81E4               	bsf	(??___fttol+1)& (0+255),0,b
  5881  000DB6                     u6371:
  5882  000DB6  0100               	movlb	0	; () banked
  5883  000DB8  51E3               	movf	??___fttol& (0+255),w,b
  5884  000DBA  0100               	movlb	0	; () banked
  5885  000DBC  6FED               	movwf	___fttol@exp1& (0+255),b
  5886  000DBE  0100               	movlb	0	; () banked
  5887  000DC0  67ED               	tstfsz	___fttol@exp1& (0+255),b
  5888  000DC2  D00D               	goto	l5358
  5889                           
  5890                           ; BSR set to: 0
  5891  000DC4  0E00               	movlw	0
  5892  000DC6  0100               	movlb	0	; () banked
  5893  000DC8  6FDF               	movwf	?___fttol& (0+255),b
  5894  000DCA  0E00               	movlw	0
  5895  000DCC  0100               	movlb	0	; () banked
  5896  000DCE  6FE0               	movwf	(?___fttol+1)& (0+255),b
  5897  000DD0  0E00               	movlw	0
  5898  000DD2  0100               	movlb	0	; () banked
  5899  000DD4  6FE1               	movwf	(?___fttol+2)& (0+255),b
  5900  000DD6  0E00               	movlw	0
  5901  000DD8  0100               	movlb	0	; () banked
  5902  000DDA  6FE2               	movwf	(?___fttol+3)& (0+255),b
  5903  000DDC  0012               	return	
  5904  000DDE                     l5358:
  5905                           
  5906                           ; BSR set to: 0
  5907  000DDE  0E17               	movlw	23
  5908  000DE0  0100               	movlb	0	; () banked
  5909  000DE2  6FE3               	movwf	??___fttol& (0+255),b
  5910  000DE4  0100               	movlb	0	; () banked
  5911  000DE6  C0DF  F0E4         	movff	___fttol@f1,??___fttol+1
  5912  000DEA  0100               	movlb	0	; () banked
  5913  000DEC  C0E0  F0E5         	movff	___fttol@f1+1,??___fttol+2
  5914  000DF0  0100               	movlb	0	; () banked
  5915  000DF2  C0E1  F0E6         	movff	___fttol@f1+2,??___fttol+3
  5916  000DF6  0100               	movlb	0	; () banked
  5917  000DF8  29E3               	incf	??___fttol& (0+255),w,b
  5918  000DFA  0100               	movlb	0	; () banked
  5919  000DFC  6FE7               	movwf	(??___fttol+4)& (0+255),b
  5920  000DFE  D005               	goto	u6390
  5921  000E00                     u6395:
  5922  000E00  0100               	movlb	0	; () banked
  5923  000E02  90D8               	bcf	status,0,c
  5924  000E04  33E6               	rrcf	(??___fttol+3)& (0+255),f,b
  5925  000E06  33E5               	rrcf	(??___fttol+2)& (0+255),f,b
  5926  000E08  33E4               	rrcf	(??___fttol+1)& (0+255),f,b
  5927  000E0A                     u6390:
  5928  000E0A  0100               	movlb	0	; () banked
  5929  000E0C  2FE7               	decfsz	(??___fttol+4)& (0+255),f,b
  5930  000E0E  D7F8               	goto	u6395
  5931  000E10  0100               	movlb	0	; () banked
  5932  000E12  51E4               	movf	(??___fttol+1)& (0+255),w,b
  5933  000E14  0100               	movlb	0	; () banked
  5934  000E16  6FE8               	movwf	___fttol@sign1& (0+255),b
  5935                           
  5936                           ; BSR set to: 0
  5937  000E18  0100               	movlb	0	; () banked
  5938  000E1A  8FE0               	bsf	(___fttol@f1+1)& (0+255),7,b
  5939                           
  5940                           ; BSR set to: 0
  5941  000E1C  0EFF               	movlw	255
  5942  000E1E  0100               	movlb	0	; () banked
  5943  000E20  17DF               	andwf	___fttol@f1& (0+255),f,b
  5944  000E22  0EFF               	movlw	255
  5945  000E24  0100               	movlb	0	; () banked
  5946  000E26  17E0               	andwf	(___fttol@f1+1)& (0+255),f,b
  5947  000E28  0E00               	movlw	0
  5948  000E2A  0100               	movlb	0	; () banked
  5949  000E2C  17E1               	andwf	(___fttol@f1+2)& (0+255),f,b
  5950                           
  5951                           ; BSR set to: 0
  5952  000E2E  0100               	movlb	0	; () banked
  5953  000E30  51DF               	movf	___fttol@f1& (0+255),w,b
  5954  000E32  0100               	movlb	0	; () banked
  5955  000E34  6FE9               	movwf	___fttol@lval& (0+255),b
  5956  000E36  0100               	movlb	0	; () banked
  5957  000E38  51E0               	movf	(___fttol@f1+1)& (0+255),w,b
  5958  000E3A  0100               	movlb	0	; () banked
  5959  000E3C  6FEA               	movwf	(___fttol@lval+1)& (0+255),b
  5960  000E3E  0100               	movlb	0	; () banked
  5961  000E40  51E1               	movf	(___fttol@f1+2)& (0+255),w,b
  5962  000E42  0100               	movlb	0	; () banked
  5963  000E44  6FEB               	movwf	(___fttol@lval+2)& (0+255),b
  5964  000E46  0100               	movlb	0	; () banked
  5965  000E48  6BEC               	clrf	(___fttol@lval+3)& (0+255),b
  5966                           
  5967                           ; BSR set to: 0
  5968  000E4A  0E8E               	movlw	142
  5969  000E4C  0100               	movlb	0	; () banked
  5970  000E4E  5FED               	subwf	___fttol@exp1& (0+255),f,b
  5971                           
  5972                           ; BSR set to: 0
  5973  000E50  0100               	movlb	0	; () banked
  5974  000E52  AFED               	btfss	___fttol@exp1& (0+255),7,b
  5975  000E54  D026               	goto	l5380
  5976                           
  5977                           ; BSR set to: 0
  5978  000E56  0100               	movlb	0	; () banked
  5979  000E58  51ED               	movf	___fttol@exp1& (0+255),w,b
  5980  000E5A  0A80               	xorlw	128
  5981  000E5C  0100               	movlb	0	; () banked
  5982  000E5E  6FE3               	movwf	??___fttol& (0+255),b
  5983  000E60  0EF1               	movlw	241
  5984  000E62  0A80               	xorlw	128
  5985  000E64  0100               	movlb	0	; () banked
  5986  000E66  5DE3               	subwf	??___fttol& (0+255),w,b
  5987  000E68  B0D8               	btfsc	status,0,c
  5988  000E6A  D00D               	goto	l5376
  5989                           
  5990                           ; BSR set to: 0
  5991  000E6C  0E00               	movlw	0
  5992  000E6E  0100               	movlb	0	; () banked
  5993  000E70  6FDF               	movwf	?___fttol& (0+255),b
  5994  000E72  0E00               	movlw	0
  5995  000E74  0100               	movlb	0	; () banked
  5996  000E76  6FE0               	movwf	(?___fttol+1)& (0+255),b
  5997  000E78  0E00               	movlw	0
  5998  000E7A  0100               	movlb	0	; () banked
  5999  000E7C  6FE1               	movwf	(?___fttol+2)& (0+255),b
  6000  000E7E  0E00               	movlw	0
  6001  000E80  0100               	movlb	0	; () banked
  6002  000E82  6FE2               	movwf	(?___fttol+3)& (0+255),b
  6003  000E84  0012               	return	
  6004  000E86                     l5376:
  6005                           
  6006                           ; BSR set to: 0
  6007  000E86  0100               	movlb	0	; () banked
  6008  000E88  90D8               	bcf	status,0,c
  6009  000E8A  0100               	movlb	0	; () banked
  6010  000E8C  33EC               	rrcf	(___fttol@lval+3)& (0+255),f,b
  6011  000E8E  0100               	movlb	0	; () banked
  6012  000E90  33EB               	rrcf	(___fttol@lval+2)& (0+255),f,b
  6013  000E92  0100               	movlb	0	; () banked
  6014  000E94  33EA               	rrcf	(___fttol@lval+1)& (0+255),f,b
  6015  000E96  0100               	movlb	0	; () banked
  6016  000E98  33E9               	rrcf	___fttol@lval& (0+255),f,b
  6017                           
  6018                           ; BSR set to: 0
  6019  000E9A  0100               	movlb	0	; () banked
  6020  000E9C  3FED               	incfsz	___fttol@exp1& (0+255),f,b
  6021  000E9E  D7F3               	goto	l5376
  6022  000EA0  D020               	goto	l5390
  6023  000EA2                     l5380:
  6024                           
  6025                           ; BSR set to: 0
  6026  000EA2  0E17               	movlw	23
  6027  000EA4  0100               	movlb	0	; () banked
  6028  000EA6  65ED               	cpfsgt	___fttol@exp1& (0+255),b
  6029  000EA8  D019               	goto	l5388
  6030                           
  6031                           ; BSR set to: 0
  6032  000EAA  0E00               	movlw	0
  6033  000EAC  0100               	movlb	0	; () banked
  6034  000EAE  6FDF               	movwf	?___fttol& (0+255),b
  6035  000EB0  0E00               	movlw	0
  6036  000EB2  0100               	movlb	0	; () banked
  6037  000EB4  6FE0               	movwf	(?___fttol+1)& (0+255),b
  6038  000EB6  0E00               	movlw	0
  6039  000EB8  0100               	movlb	0	; () banked
  6040  000EBA  6FE1               	movwf	(?___fttol+2)& (0+255),b
  6041  000EBC  0E00               	movlw	0
  6042  000EBE  0100               	movlb	0	; () banked
  6043  000EC0  6FE2               	movwf	(?___fttol+3)& (0+255),b
  6044  000EC2  0012               	return	
  6045  000EC4                     l5386:
  6046                           
  6047                           ; BSR set to: 0
  6048  000EC4  0100               	movlb	0	; () banked
  6049  000EC6  90D8               	bcf	status,0,c
  6050  000EC8  0100               	movlb	0	; () banked
  6051  000ECA  37E9               	rlcf	___fttol@lval& (0+255),f,b
  6052  000ECC  0100               	movlb	0	; () banked
  6053  000ECE  37EA               	rlcf	(___fttol@lval+1)& (0+255),f,b
  6054  000ED0  0100               	movlb	0	; () banked
  6055  000ED2  37EB               	rlcf	(___fttol@lval+2)& (0+255),f,b
  6056  000ED4  0100               	movlb	0	; () banked
  6057  000ED6  37EC               	rlcf	(___fttol@lval+3)& (0+255),f,b
  6058  000ED8  0100               	movlb	0	; () banked
  6059  000EDA  07ED               	decf	___fttol@exp1& (0+255),f,b
  6060  000EDC                     l5388:
  6061                           
  6062                           ; BSR set to: 0
  6063  000EDC  0100               	movlb	0	; () banked
  6064  000EDE  67ED               	tstfsz	___fttol@exp1& (0+255),b
  6065  000EE0  D7F1               	goto	l5386
  6066  000EE2                     l5390:
  6067                           
  6068                           ; BSR set to: 0
  6069  000EE2  0100               	movlb	0	; () banked
  6070  000EE4  51E8               	movf	___fttol@sign1& (0+255),w,b
  6071  000EE6  B4D8               	btfsc	status,2,c
  6072  000EE8  D00F               	goto	l5394
  6073                           
  6074                           ; BSR set to: 0
  6075  000EEA  0100               	movlb	0	; () banked
  6076  000EEC  1FEC               	comf	(___fttol@lval+3)& (0+255),f,b
  6077  000EEE  0100               	movlb	0	; () banked
  6078  000EF0  1FEB               	comf	(___fttol@lval+2)& (0+255),f,b
  6079  000EF2  0100               	movlb	0	; () banked
  6080  000EF4  1FEA               	comf	(___fttol@lval+1)& (0+255),f,b
  6081  000EF6  0100               	movlb	0	; () banked
  6082  000EF8  6DE9               	negf	___fttol@lval& (0+255),b
  6083  000EFA  0E00               	movlw	0
  6084  000EFC  0100               	movlb	0	; () banked
  6085  000EFE  23EA               	addwfc	(___fttol@lval+1)& (0+255),f,b
  6086  000F00  0100               	movlb	0	; () banked
  6087  000F02  23EB               	addwfc	(___fttol@lval+2)& (0+255),f,b
  6088  000F04  0100               	movlb	0	; () banked
  6089  000F06  23EC               	addwfc	(___fttol@lval+3)& (0+255),f,b
  6090  000F08                     l5394:
  6091                           
  6092                           ; BSR set to: 0
  6093  000F08  C0E9  F0DF         	movff	___fttol@lval,?___fttol
  6094  000F0C  C0EA  F0E0         	movff	___fttol@lval+1,?___fttol+1
  6095  000F10  C0EB  F0E1         	movff	___fttol@lval+2,?___fttol+2
  6096  000F14  C0EC  F0E2         	movff	___fttol@lval+3,?___fttol+3
  6097  000F18  0012               	return	
  6098  000F1A                     __end_of___fttol:
  6099                           	opt stack 0
  6100                           tosu	equ	0xFFF
  6101                           tosh	equ	0xFFE
  6102                           tosl	equ	0xFFD
  6103                           pclath	equ	0xFFA
  6104                           tblptru	equ	0xFF8
  6105                           tblptrh	equ	0xFF7
  6106                           tblptrl	equ	0xFF6
  6107                           tablat	equ	0xFF5
  6108                           prodh	equ	0xFF4
  6109                           prodl	equ	0xFF3
  6110                           intcon	equ	0xFF2
  6111                           postinc0	equ	0xFEE
  6112                           wreg	equ	0xFE8
  6113                           indf2	equ	0xFDF
  6114                           postinc2	equ	0xFDE
  6115                           postdec2	equ	0xFDD
  6116                           fsr2h	equ	0xFDA
  6117                           fsr2l	equ	0xFD9
  6118                           status	equ	0xFD8
  6119                           
  6120 ;; *************** function ___ftmul *****************
  6121 ;; Defined at:
  6122 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;  f1              3    0[BANK0 ] float 
  6125 ;;  f2              3    3[BANK0 ] float 
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;  f3_as_produc    3    7[BANK0 ] unsigned um
  6128 ;;  sign            1   11[BANK0 ] unsigned char 
  6129 ;;  cntr            1   10[BANK0 ] unsigned char 
  6130 ;;  exp             1    6[BANK0 ] unsigned char 
  6131 ;; Return value:  Size  Location     Type
  6132 ;;                  3    0[BANK0 ] float 
  6133 ;; Registers used:
  6134 ;;		wreg, status,2, status,0, cstack
  6135 ;; Tracked objects:
  6136 ;;		On entry : 0/0
  6137 ;;		On exit  : 0/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6140 ;;      Params:         0       6       0       0       0       0       0
  6141 ;;      Locals:         0       6       0       0       0       0       0
  6142 ;;      Temps:          3       0       0       0       0       0       0
  6143 ;;      Totals:         3      12       0       0       0       0       0
  6144 ;;Total ram usage:       15 bytes
  6145 ;; Hardware stack levels used:    1
  6146 ;; Hardware stack levels required when called:    5
  6147 ;; This function calls:
  6148 ;;		___ftpack
  6149 ;; This function is called by:
  6150 ;;		_main
  6151 ;; This function uses a non-reentrant model
  6152 ;;
  6153                           
  6154                           	psect	text31
  6155  0011F6                     __ptext31:
  6156                           	opt stack 0
  6157  0011F6                     ___ftmul:
  6158                           	opt stack 25
  6159                           
  6160                           ; BSR set to: 0
  6161                           ;incstack = 0
  6162  0011F6  0100               	movlb	0	; () banked
  6163  0011F8  C0D5  F026         	movff	___ftmul@f1+2,??___ftmul
  6164  0011FC  6A27               	clrf	(??___ftmul+1)& (0+255),c
  6165  0011FE  6A28               	clrf	(??___ftmul+2)& (0+255),c
  6166  001200  0100               	movlb	0	; () banked
  6167  001202  35D4               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  6168  001204  3626               	rlcf	??___ftmul& (0+255),f,c
  6169  001206  E301               	bnc	u6311
  6170  001208  8027               	bsf	(??___ftmul+1)& (0+255),0,c
  6171  00120A                     u6311:
  6172  00120A  5026               	movf	??___ftmul,w,c
  6173  00120C  0100               	movlb	0	; () banked
  6174  00120E  6FD9               	movwf	___ftmul@exp& (0+255),b
  6175  001210  0100               	movlb	0	; () banked
  6176  001212  67D9               	tstfsz	___ftmul@exp& (0+255),b
  6177  001214  D00A               	goto	l5310
  6178                           
  6179                           ; BSR set to: 0
  6180  001216  0E00               	movlw	0
  6181  001218  0100               	movlb	0	; () banked
  6182  00121A  6FD3               	movwf	?___ftmul& (0+255),b
  6183  00121C  0E00               	movlw	0
  6184  00121E  0100               	movlb	0	; () banked
  6185  001220  6FD4               	movwf	(?___ftmul+1)& (0+255),b
  6186  001222  0E00               	movlw	0
  6187  001224  0100               	movlb	0	; () banked
  6188  001226  6FD5               	movwf	(?___ftmul+2)& (0+255),b
  6189  001228  0012               	return	
  6190  00122A                     l5310:
  6191                           
  6192                           ; BSR set to: 0
  6193  00122A  0100               	movlb	0	; () banked
  6194  00122C  C0D8  F026         	movff	___ftmul@f2+2,??___ftmul
  6195  001230  6A27               	clrf	(??___ftmul+1)& (0+255),c
  6196  001232  6A28               	clrf	(??___ftmul+2)& (0+255),c
  6197  001234  0100               	movlb	0	; () banked
  6198  001236  35D7               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  6199  001238  3626               	rlcf	??___ftmul& (0+255),f,c
  6200  00123A  E301               	bnc	u6331
  6201  00123C  8027               	bsf	(??___ftmul+1)& (0+255),0,c
  6202  00123E                     u6331:
  6203  00123E  5026               	movf	??___ftmul,w,c
  6204  001240  0100               	movlb	0	; () banked
  6205  001242  6FDE               	movwf	___ftmul@sign& (0+255),b
  6206  001244  0100               	movlb	0	; () banked
  6207  001246  67DE               	tstfsz	___ftmul@sign& (0+255),b
  6208  001248  D00A               	goto	l5316
  6209                           
  6210                           ; BSR set to: 0
  6211  00124A  0E00               	movlw	0
  6212  00124C  0100               	movlb	0	; () banked
  6213  00124E  6FD3               	movwf	?___ftmul& (0+255),b
  6214  001250  0E00               	movlw	0
  6215  001252  0100               	movlb	0	; () banked
  6216  001254  6FD4               	movwf	(?___ftmul+1)& (0+255),b
  6217  001256  0E00               	movlw	0
  6218  001258  0100               	movlb	0	; () banked
  6219  00125A  6FD5               	movwf	(?___ftmul+2)& (0+255),b
  6220  00125C  0012               	return	
  6221  00125E                     l5316:
  6222                           
  6223                           ; BSR set to: 0
  6224  00125E  0100               	movlb	0	; () banked
  6225  001260  51DE               	movf	___ftmul@sign& (0+255),w,b
  6226  001262  0F7B               	addlw	123
  6227  001264  0100               	movlb	0	; () banked
  6228  001266  27D9               	addwf	___ftmul@exp& (0+255),f,b
  6229                           
  6230                           ; BSR set to: 0
  6231  001268  C0D5  F0DE         	movff	___ftmul@f1+2,___ftmul@sign
  6232  00126C  0100               	movlb	0	; () banked
  6233  00126E  51D8               	movf	(___ftmul@f2+2)& (0+255),w,b
  6234  001270  0100               	movlb	0	; () banked
  6235  001272  1BDE               	xorwf	___ftmul@sign& (0+255),f,b
  6236  001274  0E80               	movlw	128
  6237  001276  0100               	movlb	0	; () banked
  6238  001278  17DE               	andwf	___ftmul@sign& (0+255),f,b
  6239                           
  6240                           ; BSR set to: 0
  6241  00127A  0100               	movlb	0	; () banked
  6242  00127C  8FD4               	bsf	(___ftmul@f1+1)& (0+255),7,b
  6243                           
  6244                           ; BSR set to: 0
  6245  00127E  0100               	movlb	0	; () banked
  6246  001280  8FD7               	bsf	(___ftmul@f2+1)& (0+255),7,b
  6247                           
  6248                           ; BSR set to: 0
  6249  001282  0EFF               	movlw	255
  6250  001284  0100               	movlb	0	; () banked
  6251  001286  17D6               	andwf	___ftmul@f2& (0+255),f,b
  6252  001288  0EFF               	movlw	255
  6253  00128A  0100               	movlb	0	; () banked
  6254  00128C  17D7               	andwf	(___ftmul@f2+1)& (0+255),f,b
  6255  00128E  0E00               	movlw	0
  6256  001290  0100               	movlb	0	; () banked
  6257  001292  17D8               	andwf	(___ftmul@f2+2)& (0+255),f,b
  6258                           
  6259                           ; BSR set to: 0
  6260  001294  0E00               	movlw	0
  6261  001296  0100               	movlb	0	; () banked
  6262  001298  6FDA               	movwf	___ftmul@f3_as_product& (0+255),b
  6263  00129A  0E00               	movlw	0
  6264  00129C  0100               	movlb	0	; () banked
  6265  00129E  6FDB               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  6266  0012A0  0E00               	movlw	0
  6267  0012A2  0100               	movlb	0	; () banked
  6268  0012A4  6FDC               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  6269                           
  6270                           ; BSR set to: 0
  6271  0012A6  0E07               	movlw	7
  6272  0012A8  0100               	movlb	0	; () banked
  6273  0012AA  6FDD               	movwf	___ftmul@cntr& (0+255),b
  6274  0012AC                     l5330:
  6275                           
  6276                           ; BSR set to: 0
  6277  0012AC  0100               	movlb	0	; () banked
  6278  0012AE  A1D3               	btfss	___ftmul@f1& (0+255),0,b
  6279  0012B0  D00C               	goto	l5334
  6280                           
  6281                           ; BSR set to: 0
  6282  0012B2  0100               	movlb	0	; () banked
  6283  0012B4  51D6               	movf	___ftmul@f2& (0+255),w,b
  6284  0012B6  0100               	movlb	0	; () banked
  6285  0012B8  27DA               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6286  0012BA  0100               	movlb	0	; () banked
  6287  0012BC  51D7               	movf	(___ftmul@f2+1)& (0+255),w,b
  6288  0012BE  0100               	movlb	0	; () banked
  6289  0012C0  23DB               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6290  0012C2  0100               	movlb	0	; () banked
  6291  0012C4  51D8               	movf	(___ftmul@f2+2)& (0+255),w,b
  6292  0012C6  0100               	movlb	0	; () banked
  6293  0012C8  23DC               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6294  0012CA                     l5334:
  6295                           
  6296                           ; BSR set to: 0
  6297  0012CA  0100               	movlb	0	; () banked
  6298  0012CC  90D8               	bcf	status,0,c
  6299  0012CE  0100               	movlb	0	; () banked
  6300  0012D0  33D5               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6301  0012D2  0100               	movlb	0	; () banked
  6302  0012D4  33D4               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6303  0012D6  0100               	movlb	0	; () banked
  6304  0012D8  33D3               	rrcf	___ftmul@f1& (0+255),f,b
  6305  0012DA  0100               	movlb	0	; () banked
  6306  0012DC  90D8               	bcf	status,0,c
  6307  0012DE  0100               	movlb	0	; () banked
  6308  0012E0  37D6               	rlcf	___ftmul@f2& (0+255),f,b
  6309  0012E2  0100               	movlb	0	; () banked
  6310  0012E4  37D7               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  6311  0012E6  0100               	movlb	0	; () banked
  6312  0012E8  37D8               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  6313                           
  6314                           ; BSR set to: 0
  6315  0012EA  0100               	movlb	0	; () banked
  6316  0012EC  2FDD               	decfsz	___ftmul@cntr& (0+255),f,b
  6317  0012EE  D7DE               	goto	l5330
  6318                           
  6319                           ; BSR set to: 0
  6320                           
  6321                           ; BSR set to: 0
  6322  0012F0  0E09               	movlw	9
  6323  0012F2  0100               	movlb	0	; () banked
  6324  0012F4  6FDD               	movwf	___ftmul@cntr& (0+255),b
  6325  0012F6                     l5340:
  6326                           
  6327                           ; BSR set to: 0
  6328  0012F6  0100               	movlb	0	; () banked
  6329  0012F8  A1D3               	btfss	___ftmul@f1& (0+255),0,b
  6330  0012FA  D00C               	goto	l5344
  6331                           
  6332                           ; BSR set to: 0
  6333  0012FC  0100               	movlb	0	; () banked
  6334  0012FE  51D6               	movf	___ftmul@f2& (0+255),w,b
  6335  001300  0100               	movlb	0	; () banked
  6336  001302  27DA               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6337  001304  0100               	movlb	0	; () banked
  6338  001306  51D7               	movf	(___ftmul@f2+1)& (0+255),w,b
  6339  001308  0100               	movlb	0	; () banked
  6340  00130A  23DB               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6341  00130C  0100               	movlb	0	; () banked
  6342  00130E  51D8               	movf	(___ftmul@f2+2)& (0+255),w,b
  6343  001310  0100               	movlb	0	; () banked
  6344  001312  23DC               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6345  001314                     l5344:
  6346                           
  6347                           ; BSR set to: 0
  6348  001314  0100               	movlb	0	; () banked
  6349  001316  90D8               	bcf	status,0,c
  6350  001318  0100               	movlb	0	; () banked
  6351  00131A  33D5               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6352  00131C  0100               	movlb	0	; () banked
  6353  00131E  33D4               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6354  001320  0100               	movlb	0	; () banked
  6355  001322  33D3               	rrcf	___ftmul@f1& (0+255),f,b
  6356  001324  0100               	movlb	0	; () banked
  6357  001326  90D8               	bcf	status,0,c
  6358  001328  0100               	movlb	0	; () banked
  6359  00132A  33DC               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  6360  00132C  0100               	movlb	0	; () banked
  6361  00132E  33DB               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  6362  001330  0100               	movlb	0	; () banked
  6363  001332  33DA               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  6364                           
  6365                           ; BSR set to: 0
  6366  001334  0100               	movlb	0	; () banked
  6367  001336  2FDD               	decfsz	___ftmul@cntr& (0+255),f,b
  6368  001338  D7DE               	goto	l5340
  6369                           
  6370                           ; BSR set to: 0
  6371                           
  6372                           ; BSR set to: 0
  6373  00133A  C0DA  F01B         	movff	___ftmul@f3_as_product,___ftpack@arg
  6374  00133E  C0DB  F01C         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6375  001342  C0DC  F01D         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6376  001346  C0D9  F01E         	movff	___ftmul@exp,___ftpack@exp
  6377  00134A  C0DE  F01F         	movff	___ftmul@sign,___ftpack@sign
  6378  00134E  EC54  F00F         	call	___ftpack	;wreg free
  6379  001352  C01B  F0D3         	movff	?___ftpack,?___ftmul
  6380  001356  C01C  F0D4         	movff	?___ftpack+1,?___ftmul+1
  6381  00135A  C01D  F0D5         	movff	?___ftpack+2,?___ftmul+2
  6382  00135E  0012               	return	
  6383  001360                     __end_of___ftmul:
  6384                           	opt stack 0
  6385                           tosu	equ	0xFFF
  6386                           tosh	equ	0xFFE
  6387                           tosl	equ	0xFFD
  6388                           pclath	equ	0xFFA
  6389                           tblptru	equ	0xFF8
  6390                           tblptrh	equ	0xFF7
  6391                           tblptrl	equ	0xFF6
  6392                           tablat	equ	0xFF5
  6393                           prodh	equ	0xFF4
  6394                           prodl	equ	0xFF3
  6395                           intcon	equ	0xFF2
  6396                           postinc0	equ	0xFEE
  6397                           wreg	equ	0xFE8
  6398                           indf2	equ	0xFDF
  6399                           postinc2	equ	0xFDE
  6400                           postdec2	equ	0xFDD
  6401                           fsr2h	equ	0xFDA
  6402                           fsr2l	equ	0xFD9
  6403                           status	equ	0xFD8
  6404                           
  6405 ;; *************** function ___ftpack *****************
  6406 ;; Defined at:
  6407 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;  arg             3   26[COMRAM] unsigned um
  6410 ;;  exp             1   29[COMRAM] unsigned char 
  6411 ;;  sign            1   30[COMRAM] unsigned char 
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;		None
  6414 ;; Return value:  Size  Location     Type
  6415 ;;                  3   26[COMRAM] float 
  6416 ;; Registers used:
  6417 ;;		wreg, status,2, status,0
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6423 ;;      Params:         5       0       0       0       0       0       0
  6424 ;;      Locals:         0       0       0       0       0       0       0
  6425 ;;      Temps:          3       0       0       0       0       0       0
  6426 ;;      Totals:         8       0       0       0       0       0       0
  6427 ;;Total ram usage:        8 bytes
  6428 ;; Hardware stack levels used:    1
  6429 ;; Hardware stack levels required when called:    4
  6430 ;; This function calls:
  6431 ;;		Nothing
  6432 ;; This function is called by:
  6433 ;;		___ftmul
  6434 ;;		___lwtoft
  6435 ;; This function uses a non-reentrant model
  6436 ;;
  6437                           
  6438                           	psect	text32
  6439  001EA8                     __ptext32:
  6440                           	opt stack 0
  6441  001EA8                     ___ftpack:
  6442                           	opt stack 25
  6443                           
  6444                           ;incstack = 0
  6445  001EA8  501E               	movf	___ftpack@exp,w,c
  6446  001EAA  B4D8               	btfsc	status,2,c
  6447  001EAC  D005               	goto	l4988
  6448  001EAE  501B               	movf	___ftpack@arg,w,c
  6449  001EB0  101C               	iorwf	___ftpack@arg+1,w,c
  6450  001EB2  101D               	iorwf	___ftpack@arg+2,w,c
  6451  001EB4  A4D8               	btfss	status,2,c
  6452  001EB6  D00C               	goto	l4994
  6453  001EB8                     l4988:
  6454  001EB8  0E00               	movlw	0
  6455  001EBA  6E1B               	movwf	?___ftpack,c
  6456  001EBC  0E00               	movlw	0
  6457  001EBE  6E1C               	movwf	?___ftpack+1,c
  6458  001EC0  0E00               	movlw	0
  6459  001EC2  6E1D               	movwf	?___ftpack+2,c
  6460  001EC4  0012               	return	
  6461  001EC6                     l4992:
  6462  001EC6  2A1E               	incf	___ftpack@exp,f,c
  6463  001EC8  90D8               	bcf	status,0,c
  6464  001ECA  321D               	rrcf	___ftpack@arg+2,f,c
  6465  001ECC  321C               	rrcf	___ftpack@arg+1,f,c
  6466  001ECE  321B               	rrcf	___ftpack@arg,f,c
  6467  001ED0                     l4994:
  6468  001ED0  0E00               	movlw	0
  6469  001ED2  141B               	andwf	___ftpack@arg,w,c
  6470  001ED4  6E20               	movwf	??___ftpack& (0+255),c
  6471  001ED6  0E00               	movlw	0
  6472  001ED8  141C               	andwf	___ftpack@arg+1,w,c
  6473  001EDA  6E21               	movwf	(??___ftpack+1)& (0+255),c
  6474  001EDC  0EFE               	movlw	254
  6475  001EDE  141D               	andwf	___ftpack@arg+2,w,c
  6476  001EE0  6E22               	movwf	(??___ftpack+2)& (0+255),c
  6477  001EE2  5020               	movf	??___ftpack,w,c
  6478  001EE4  1021               	iorwf	??___ftpack+1,w,c
  6479  001EE6  1022               	iorwf	??___ftpack+2,w,c
  6480  001EE8  B4D8               	btfsc	status,2,c
  6481  001EEA  D00C               	goto	l5000
  6482  001EEC  D7EC               	goto	l4992
  6483  001EEE                     l4996:
  6484  001EEE  2A1E               	incf	___ftpack@exp,f,c
  6485  001EF0  0E01               	movlw	1
  6486  001EF2  261B               	addwf	___ftpack@arg,f,c
  6487  001EF4  0E00               	movlw	0
  6488  001EF6  221C               	addwfc	___ftpack@arg+1,f,c
  6489  001EF8  0E00               	movlw	0
  6490  001EFA  221D               	addwfc	___ftpack@arg+2,f,c
  6491  001EFC  90D8               	bcf	status,0,c
  6492  001EFE  321D               	rrcf	___ftpack@arg+2,f,c
  6493  001F00  321C               	rrcf	___ftpack@arg+1,f,c
  6494  001F02  321B               	rrcf	___ftpack@arg,f,c
  6495  001F04                     l5000:
  6496  001F04  0E00               	movlw	0
  6497  001F06  141B               	andwf	___ftpack@arg,w,c
  6498  001F08  6E20               	movwf	??___ftpack& (0+255),c
  6499  001F0A  0E00               	movlw	0
  6500  001F0C  141C               	andwf	___ftpack@arg+1,w,c
  6501  001F0E  6E21               	movwf	(??___ftpack+1)& (0+255),c
  6502  001F10  0EFF               	movlw	255
  6503  001F12  141D               	andwf	___ftpack@arg+2,w,c
  6504  001F14  6E22               	movwf	(??___ftpack+2)& (0+255),c
  6505  001F16  5020               	movf	??___ftpack,w,c
  6506  001F18  1021               	iorwf	??___ftpack+1,w,c
  6507  001F1A  1022               	iorwf	??___ftpack+2,w,c
  6508  001F1C  B4D8               	btfsc	status,2,c
  6509  001F1E  D006               	goto	l5004
  6510  001F20  D7E6               	goto	l4996
  6511  001F22                     l5002:
  6512  001F22  061E               	decf	___ftpack@exp,f,c
  6513  001F24  90D8               	bcf	status,0,c
  6514  001F26  361B               	rlcf	___ftpack@arg,f,c
  6515  001F28  361C               	rlcf	___ftpack@arg+1,f,c
  6516  001F2A  361D               	rlcf	___ftpack@arg+2,f,c
  6517  001F2C                     l5004:
  6518  001F2C  AE1C               	btfss	___ftpack@arg+1,7,c
  6519  001F2E  D7F9               	goto	l5002
  6520  001F30  A01E               	btfss	___ftpack@exp,0,c
  6521  001F32  9E1C               	bcf	___ftpack@arg+1,7,c
  6522  001F34  90D8               	bcf	status,0,c
  6523  001F36  321E               	rrcf	___ftpack@exp,f,c
  6524  001F38  501E               	movf	___ftpack@exp,w,c
  6525  001F3A  121D               	iorwf	___ftpack@arg+2,f,c
  6526  001F3C  501F               	movf	___ftpack@sign,w,c
  6527  001F3E  A4D8               	btfss	status,2,c
  6528  001F40  8E1D               	bsf	___ftpack@arg+2,7,c
  6529  001F42  C01B  F01B         	movff	___ftpack@arg,?___ftpack
  6530  001F46  C01C  F01C         	movff	___ftpack@arg+1,?___ftpack+1
  6531  001F4A  C01D  F01D         	movff	___ftpack@arg+2,?___ftpack+2
  6532  001F4E  0012               	return	
  6533  001F50                     __end_of___ftpack:
  6534                           	opt stack 0
  6535                           tosu	equ	0xFFF
  6536                           tosh	equ	0xFFE
  6537                           tosl	equ	0xFFD
  6538                           pclath	equ	0xFFA
  6539                           tblptru	equ	0xFF8
  6540                           tblptrh	equ	0xFF7
  6541                           tblptrl	equ	0xFF6
  6542                           tablat	equ	0xFF5
  6543                           prodh	equ	0xFF4
  6544                           prodl	equ	0xFF3
  6545                           intcon	equ	0xFF2
  6546                           postinc0	equ	0xFEE
  6547                           wreg	equ	0xFE8
  6548                           indf2	equ	0xFDF
  6549                           postinc2	equ	0xFDE
  6550                           postdec2	equ	0xFDD
  6551                           fsr2h	equ	0xFDA
  6552                           fsr2l	equ	0xFD9
  6553                           status	equ	0xFD8
  6554                           
  6555 ;; *************** function _SYSTEM_Initialize *****************
  6556 ;; Defined at:
  6557 ;;		line 112 in file "mcc_generated_files/mcc.c"
  6558 ;; Parameters:    Size  Location     Type
  6559 ;;		None
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;		None
  6562 ;; Return value:  Size  Location     Type
  6563 ;;		None               void
  6564 ;; Registers used:
  6565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  6566 ;; Tracked objects:
  6567 ;;		On entry : 0/0
  6568 ;;		On exit  : 0/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6571 ;;      Params:         0       0       0       0       0       0       0
  6572 ;;      Locals:         0       0       0       0       0       0       0
  6573 ;;      Temps:          0       0       0       0       0       0       0
  6574 ;;      Totals:         0       0       0       0       0       0       0
  6575 ;;Total ram usage:        0 bytes
  6576 ;; Hardware stack levels used:    1
  6577 ;; Hardware stack levels required when called:    7
  6578 ;; This function calls:
  6579 ;;		_ADC_Initialize
  6580 ;;		_EUSART1_Initialize
  6581 ;;		_I2C1_Initialize
  6582 ;;		_INTERRUPT_Initialize
  6583 ;;		_OSCILLATOR_Initialize
  6584 ;;		_PIN_MANAGER_Initialize
  6585 ;;		_TMR0_Initialize
  6586 ;;		_begin
  6587 ;; This function is called by:
  6588 ;;		_main
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           
  6592                           	psect	text33
  6593  0023FC                     __ptext33:
  6594                           	opt stack 0
  6595  0023FC                     _SYSTEM_Initialize:
  6596                           	opt stack 23
  6597                           
  6598                           ;mcc.c: 114: OSCILLATOR_Initialize();
  6599                           
  6600                           ;incstack = 0
  6601  0023FC  ECFE  F015         	call	_OSCILLATOR_Initialize	;wreg free
  6602                           
  6603                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  6604  002400  EC66  F013         	call	_PIN_MANAGER_Initialize	;wreg free
  6605                           
  6606                           ;mcc.c: 116: INTERRUPT_Initialize();
  6607  002404  ECF6  F015         	call	_INTERRUPT_Initialize	;wreg free
  6608                           
  6609                           ;mcc.c: 117: ADC_Initialize();
  6610  002408  ECAD  F015         	call	_ADC_Initialize	;wreg free
  6611                           
  6612                           ;mcc.c: 118: TMR0_Initialize();
  6613  00240C  EC82  F015         	call	_TMR0_Initialize	;wreg free
  6614                           
  6615                           ;mcc.c: 119: EUSART1_Initialize();
  6616  002410  EC1D  F014         	call	_EUSART1_Initialize	;wreg free
  6617                           
  6618                           ;mcc.c: 120: begin(receiveArray, sizeof (receiveArray), 3, 0, Send_put, Receive_get, Rec
      +                          eive_available, Receive_peek);
  6619  002414  0101               	movlb	1	; () banked
  6620  002416  0E01               	movlw	high _receiveArray	;volatile
  6621  002418  0100               	movlb	0	; () banked
  6622  00241A  6FD4               	movwf	(begin@ptr+1)& (0+255),b
  6623  00241C  0101               	movlb	1	; () banked
  6624  00241E  0ECE               	movlw	low _receiveArray	;volatile
  6625  002420  0100               	movlb	0	; () banked
  6626  002422  6FD3               	movwf	begin@ptr& (0+255),b
  6627  002424  0E28               	movlw	40
  6628  002426  0100               	movlb	0	; () banked
  6629  002428  6FD5               	movwf	begin@maxSize& (0+255),b
  6630  00242A  0E03               	movlw	3
  6631  00242C  0100               	movlb	0	; () banked
  6632  00242E  6FD6               	movwf	begin@givenAddress& (0+255),b
  6633  002430  0E00               	movlw	0
  6634  002432  0100               	movlb	0	; () banked
  6635  002434  6FD7               	movwf	begin@error& (0+255),b
  6636  002436  0E29               	movlw	high _Send_put
  6637  002438  0100               	movlb	0	; () banked
  6638  00243A  6FD9               	movwf	(begin@stufftosend+1)& (0+255),b
  6639  00243C  0E3A               	movlw	low _Send_put
  6640  00243E  0100               	movlb	0	; () banked
  6641  002440  6FD8               	movwf	begin@stufftosend& (0+255),b
  6642  002442  0E2B               	movlw	high _Receive_get
  6643  002444  0100               	movlb	0	; () banked
  6644  002446  6FDB               	movwf	(begin@stufftoreceive+1)& (0+255),b
  6645  002448  0EC8               	movlw	low _Receive_get
  6646  00244A  0100               	movlb	0	; () banked
  6647  00244C  6FDA               	movwf	begin@stufftoreceive& (0+255),b
  6648  00244E  0E2B               	movlw	high _Receive_available
  6649  002450  0100               	movlb	0	; () banked
  6650  002452  6FDD               	movwf	(begin@stuffavailable+1)& (0+255),b
  6651  002454  0E40               	movlw	low _Receive_available
  6652  002456  0100               	movlb	0	; () banked
  6653  002458  6FDC               	movwf	begin@stuffavailable& (0+255),b
  6654  00245A  0E2B               	movlw	high _Receive_peek
  6655  00245C  0100               	movlb	0	; () banked
  6656  00245E  6FDF               	movwf	(begin@stuffpeek+1)& (0+255),b
  6657  002460  0EB6               	movlw	low _Receive_peek
  6658  002462  0100               	movlb	0	; () banked
  6659  002464  6FDE               	movwf	begin@stuffpeek& (0+255),b
  6660  002466  ECC1  F011         	call	_begin	;wreg free
  6661                           
  6662                           ;mcc.c: 121: I2C1_Initialize();
  6663  00246A  ECFB  F013         	call	_I2C1_Initialize	;wreg free
  6664  00246E  0012               	return	
  6665  002470                     __end_of_SYSTEM_Initialize:
  6666                           	opt stack 0
  6667                           tosu	equ	0xFFF
  6668                           tosh	equ	0xFFE
  6669                           tosl	equ	0xFFD
  6670                           pclath	equ	0xFFA
  6671                           tblptru	equ	0xFF8
  6672                           tblptrh	equ	0xFF7
  6673                           tblptrl	equ	0xFF6
  6674                           tablat	equ	0xFF5
  6675                           prodh	equ	0xFF4
  6676                           prodl	equ	0xFF3
  6677                           intcon	equ	0xFF2
  6678                           postinc0	equ	0xFEE
  6679                           wreg	equ	0xFE8
  6680                           indf2	equ	0xFDF
  6681                           postinc2	equ	0xFDE
  6682                           postdec2	equ	0xFDD
  6683                           fsr2h	equ	0xFDA
  6684                           fsr2l	equ	0xFD9
  6685                           status	equ	0xFD8
  6686                           
  6687 ;; *************** function _begin *****************
  6688 ;; Defined at:
  6689 ;;		line 18 in file "FastTransfer.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;  ptr             2    0[BANK0 ] PTR volatile int 
  6692 ;;		 -> receiveArray(40), 
  6693 ;;  maxSize         1    2[BANK0 ] unsigned char 
  6694 ;;  givenAddress    1    3[BANK0 ] unsigned char 
  6695 ;;  error           1    4[BANK0 ] unsigned char 
  6696 ;;  stufftosend     2    5[BANK0 ] PTR FTN(unsigned char ,)
  6697 ;;		 -> Send_put(0), 
  6698 ;;  stufftorecei    2    7[BANK0 ] PTR FTN()unsigned char 
  6699 ;;		 -> Receive_get(1), 
  6700 ;;  stuffavailab    2    9[BANK0 ] PTR FTN()int 
  6701 ;;		 -> Receive_available(2), 
  6702 ;;  stuffpeek       2   11[BANK0 ] PTR FTN()unsigned char 
  6703 ;;		 -> Receive_peek(1), 
  6704 ;; Auto vars:     Size  Location     Type
  6705 ;;		None
  6706 ;; Return value:  Size  Location     Type
  6707 ;;		None               void
  6708 ;; Registers used:
  6709 ;;		wreg, status,2, status,0, prodl, cstack
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6715 ;;      Params:         0      13       0       0       0       0       0
  6716 ;;      Locals:         0       0       0       0       0       0       0
  6717 ;;      Temps:          0       0       0       0       0       0       0
  6718 ;;      Totals:         0      13       0       0       0       0       0
  6719 ;;Total ram usage:       13 bytes
  6720 ;; Hardware stack levels used:    1
  6721 ;; Hardware stack levels required when called:    5
  6722 ;; This function calls:
  6723 ;;		___awdiv
  6724 ;; This function is called by:
  6725 ;;		_SYSTEM_Initialize
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729                           	psect	text34
  6730  002382                     __ptext34:
  6731                           	opt stack 0
  6732  002382                     _begin:
  6733                           	opt stack 24
  6734                           
  6735                           ;FastTransfer.c: 19: receiveArrayAddress = ptr;
  6736                           
  6737                           ;incstack = 0
  6738  002382  0100               	movlb	0	; () banked
  6739  002384  C0D4  F0A8         	movff	begin@ptr+1,_receiveArrayAddress+1
  6740  002388  0100               	movlb	0	; () banked
  6741  00238A  C0D3  F0A7         	movff	begin@ptr,_receiveArrayAddress
  6742                           
  6743                           ; BSR set to: 0
  6744                           ;FastTransfer.c: 20: moduleAddress = givenAddress;
  6745  00238E  C0D6  F03A         	movff	begin@givenAddress,_moduleAddress
  6746                           
  6747                           ;FastTransfer.c: 21: serial_write = stufftosend;
  6748  002392  0100               	movlb	0	; () banked
  6749  002394  C0D9  F032         	movff	begin@stufftosend+1,_serial_write+1
  6750  002398  0100               	movlb	0	; () banked
  6751  00239A  C0D8  F031         	movff	begin@stufftosend,_serial_write
  6752                           
  6753                           ;FastTransfer.c: 22: serial_available = stuffavailable;
  6754  00239E  0100               	movlb	0	; () banked
  6755  0023A0  C0DD  F02E         	movff	begin@stuffavailable+1,_serial_available+1
  6756  0023A4  0100               	movlb	0	; () banked
  6757  0023A6  C0DC  F02D         	movff	begin@stuffavailable,_serial_available
  6758                           
  6759                           ;FastTransfer.c: 23: serial_peek = stuffpeek;
  6760  0023AA  0100               	movlb	0	; () banked
  6761  0023AC  C0DF  F0AC         	movff	begin@stuffpeek+1,_serial_peek+1
  6762  0023B0  0100               	movlb	0	; () banked
  6763  0023B2  C0DE  F0AB         	movff	begin@stuffpeek,_serial_peek
  6764                           
  6765                           ;FastTransfer.c: 24: serial_read = stufftoreceive;
  6766  0023B6  0100               	movlb	0	; () banked
  6767  0023B8  C0DB  F030         	movff	begin@stufftoreceive+1,_serial_read+1
  6768  0023BC  0100               	movlb	0	; () banked
  6769  0023BE  C0DA  F02F         	movff	begin@stufftoreceive,_serial_read
  6770                           
  6771                           ; BSR set to: 0
  6772                           ;FastTransfer.c: 25: maxDataAddress = maxSize / 2;
  6773  0023C2  0100               	movlb	0	; () banked
  6774  0023C4  C0D5  F01B         	movff	begin@maxSize,___awdiv@dividend
  6775  0023C8  6A1C               	clrf	___awdiv@dividend+1,c
  6776  0023CA  0E00               	movlw	0
  6777  0023CC  6E1E               	movwf	___awdiv@divisor+1,c
  6778  0023CE  0E02               	movlw	2
  6779  0023D0  6E1D               	movwf	___awdiv@divisor,c
  6780  0023D2  ECA8  F00F         	call	___awdiv	;wreg free
  6781  0023D6  501B               	movf	?___awdiv,w,c
  6782  0023D8  6E39               	movwf	_maxDataAddress,c
  6783                           
  6784                           ;FastTransfer.c: 26: sendStructAddress = (unsigned char*) & ring_buffer;
  6785  0023DA  0101               	movlb	1	; () banked
  6786  0023DC  0E01               	movlw	high _ring_buffer
  6787  0023DE  0100               	movlb	0	; () banked
  6788  0023E0  6FAA               	movwf	(_sendStructAddress+1)& (0+255),b
  6789  0023E2  0101               	movlb	1	; () banked
  6790  0023E4  0E00               	movlw	low _ring_buffer
  6791  0023E6  0100               	movlb	0	; () banked
  6792  0023E8  6FA9               	movwf	_sendStructAddress& (0+255),b
  6793                           
  6794                           ; BSR set to: 0
  6795                           ;FastTransfer.c: 27: AKNAKsend = error;
  6796  0023EA  C0D7  F035         	movff	begin@error,_AKNAKsend
  6797                           
  6798                           ; BSR set to: 0
  6799                           ;FastTransfer.c: 28: alignErrorCounter = 0;
  6800  0023EE  0E00               	movlw	0
  6801  0023F0  0100               	movlb	0	; () banked
  6802  0023F2  6F9E               	movwf	(_alignErrorCounter+1)& (0+255),b
  6803  0023F4  0E00               	movlw	0
  6804  0023F6  0100               	movlb	0	; () banked
  6805  0023F8  6F9D               	movwf	_alignErrorCounter& (0+255),b
  6806                           
  6807                           ; BSR set to: 0
  6808  0023FA  0012               	return	
  6809  0023FC                     __end_of_begin:
  6810                           	opt stack 0
  6811                           tosu	equ	0xFFF
  6812                           tosh	equ	0xFFE
  6813                           tosl	equ	0xFFD
  6814                           pclath	equ	0xFFA
  6815                           tblptru	equ	0xFF8
  6816                           tblptrh	equ	0xFF7
  6817                           tblptrl	equ	0xFF6
  6818                           tablat	equ	0xFF5
  6819                           prodh	equ	0xFF4
  6820                           prodl	equ	0xFF3
  6821                           intcon	equ	0xFF2
  6822                           postinc0	equ	0xFEE
  6823                           wreg	equ	0xFE8
  6824                           indf2	equ	0xFDF
  6825                           postinc2	equ	0xFDE
  6826                           postdec2	equ	0xFDD
  6827                           fsr2h	equ	0xFDA
  6828                           fsr2l	equ	0xFD9
  6829                           status	equ	0xFD8
  6830                           
  6831 ;; *************** function _TMR0_Initialize *****************
  6832 ;; Defined at:
  6833 ;;		line 22 in file "mcc_generated_files/tmr0.c"
  6834 ;; Parameters:    Size  Location     Type
  6835 ;;		None
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;		None
  6838 ;; Return value:  Size  Location     Type
  6839 ;;		None               void
  6840 ;; Registers used:
  6841 ;;		wreg, status,2, cstack
  6842 ;; Tracked objects:
  6843 ;;		On entry : 0/0
  6844 ;;		On exit  : 0/0
  6845 ;;		Unchanged: 0/0
  6846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6847 ;;      Params:         0       0       0       0       0       0       0
  6848 ;;      Locals:         0       0       0       0       0       0       0
  6849 ;;      Temps:          0       0       0       0       0       0       0
  6850 ;;      Totals:         0       0       0       0       0       0       0
  6851 ;;Total ram usage:        0 bytes
  6852 ;; Hardware stack levels used:    1
  6853 ;; Hardware stack levels required when called:    5
  6854 ;; This function calls:
  6855 ;;		_TMR0_StartTimer
  6856 ;; This function is called by:
  6857 ;;		_SYSTEM_Initialize
  6858 ;; This function uses a non-reentrant model
  6859 ;;
  6860                           
  6861                           	psect	text35
  6862  002B04                     __ptext35:
  6863                           	opt stack 0
  6864  002B04                     _TMR0_Initialize:
  6865                           	opt stack 24
  6866                           
  6867                           ;tmr0.c: 26: T0CON = 0x94;
  6868                           
  6869                           ; BSR set to: 0
  6870                           ;incstack = 0
  6871  002B04  0E94               	movlw	148
  6872  002B06  6ED5               	movwf	4053,c	;volatile
  6873                           
  6874                           ;tmr0.c: 29: TMR0H = 0xCF;
  6875  002B08  0ECF               	movlw	207
  6876  002B0A  6ED7               	movwf	4055,c	;volatile
  6877                           
  6878                           ;tmr0.c: 32: TMR0L = 0x2C;
  6879  002B0C  0E2C               	movlw	44
  6880  002B0E  6ED6               	movwf	4054,c	;volatile
  6881                           
  6882                           ;tmr0.c: 35: timer0ReloadVal16bit = 53036;
  6883  002B10  0ECF               	movlw	207
  6884  002B12  6E44               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  6885  002B14  0E2C               	movlw	44
  6886  002B16  6E43               	movwf	_timer0ReloadVal16bit,c	;volatile
  6887                           
  6888                           ;tmr0.c: 38: INTCONbits.TMR0IF = 0;
  6889  002B18  94F2               	bcf	intcon,2,c	;volatile
  6890                           
  6891                           ;tmr0.c: 41: INTCONbits.TMR0IE = 1;
  6892  002B1A  8AF2               	bsf	intcon,5,c	;volatile
  6893                           
  6894                           ;tmr0.c: 44: TMR0_StartTimer();
  6895  002B1C  EC05  F016         	call	_TMR0_StartTimer	;wreg free
  6896  002B20  0012               	return	
  6897  002B22                     __end_of_TMR0_Initialize:
  6898                           	opt stack 0
  6899                           tosu	equ	0xFFF
  6900                           tosh	equ	0xFFE
  6901                           tosl	equ	0xFFD
  6902                           pclath	equ	0xFFA
  6903                           tblptru	equ	0xFF8
  6904                           tblptrh	equ	0xFF7
  6905                           tblptrl	equ	0xFF6
  6906                           tablat	equ	0xFF5
  6907                           prodh	equ	0xFF4
  6908                           prodl	equ	0xFF3
  6909                           intcon	equ	0xFF2
  6910                           postinc0	equ	0xFEE
  6911                           wreg	equ	0xFE8
  6912                           indf2	equ	0xFDF
  6913                           postinc2	equ	0xFDE
  6914                           postdec2	equ	0xFDD
  6915                           fsr2h	equ	0xFDA
  6916                           fsr2l	equ	0xFD9
  6917                           status	equ	0xFD8
  6918                           
  6919 ;; *************** function _TMR0_StartTimer *****************
  6920 ;; Defined at:
  6921 ;;		line 47 in file "mcc_generated_files/tmr0.c"
  6922 ;; Parameters:    Size  Location     Type
  6923 ;;		None
  6924 ;; Auto vars:     Size  Location     Type
  6925 ;;		None
  6926 ;; Return value:  Size  Location     Type
  6927 ;;		None               void
  6928 ;; Registers used:
  6929 ;;		None
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6935 ;;      Params:         0       0       0       0       0       0       0
  6936 ;;      Locals:         0       0       0       0       0       0       0
  6937 ;;      Temps:          0       0       0       0       0       0       0
  6938 ;;      Totals:         0       0       0       0       0       0       0
  6939 ;;Total ram usage:        0 bytes
  6940 ;; Hardware stack levels used:    1
  6941 ;; Hardware stack levels required when called:    4
  6942 ;; This function calls:
  6943 ;;		Nothing
  6944 ;; This function is called by:
  6945 ;;		_TMR0_Initialize
  6946 ;; This function uses a non-reentrant model
  6947 ;;
  6948                           
  6949                           	psect	text36
  6950  002C0A                     __ptext36:
  6951                           	opt stack 0
  6952  002C0A                     _TMR0_StartTimer:
  6953                           	opt stack 24
  6954                           
  6955                           ;tmr0.c: 49: T0CONbits.TMR0ON = 1;
  6956                           
  6957                           ;incstack = 0
  6958  002C0A  8ED5               	bsf	4053,7,c	;volatile
  6959  002C0C  0012               	return	
  6960  002C0E                     __end_of_TMR0_StartTimer:
  6961                           	opt stack 0
  6962                           tosu	equ	0xFFF
  6963                           tosh	equ	0xFFE
  6964                           tosl	equ	0xFFD
  6965                           pclath	equ	0xFFA
  6966                           tblptru	equ	0xFF8
  6967                           tblptrh	equ	0xFF7
  6968                           tblptrl	equ	0xFF6
  6969                           tablat	equ	0xFF5
  6970                           prodh	equ	0xFF4
  6971                           prodl	equ	0xFF3
  6972                           intcon	equ	0xFF2
  6973                           postinc0	equ	0xFEE
  6974                           wreg	equ	0xFE8
  6975                           indf2	equ	0xFDF
  6976                           postinc2	equ	0xFDE
  6977                           postdec2	equ	0xFDD
  6978                           fsr2h	equ	0xFDA
  6979                           fsr2l	equ	0xFD9
  6980                           status	equ	0xFD8
  6981                           
  6982 ;; *************** function _PIN_MANAGER_Initialize *****************
  6983 ;; Defined at:
  6984 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;		None
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;		None
  6989 ;; Return value:  Size  Location     Type
  6990 ;;		None               void
  6991 ;; Registers used:
  6992 ;;		wreg, status,2
  6993 ;; Tracked objects:
  6994 ;;		On entry : 0/0
  6995 ;;		On exit  : 0/0
  6996 ;;		Unchanged: 0/0
  6997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6998 ;;      Params:         0       0       0       0       0       0       0
  6999 ;;      Locals:         0       0       0       0       0       0       0
  7000 ;;      Temps:          0       0       0       0       0       0       0
  7001 ;;      Totals:         0       0       0       0       0       0       0
  7002 ;;Total ram usage:        0 bytes
  7003 ;; Hardware stack levels used:    1
  7004 ;; Hardware stack levels required when called:    4
  7005 ;; This function calls:
  7006 ;;		Nothing
  7007 ;; This function is called by:
  7008 ;;		_SYSTEM_Initialize
  7009 ;; This function uses a non-reentrant model
  7010 ;;
  7011                           
  7012                           	psect	text37
  7013  0026CC                     __ptext37:
  7014                           	opt stack 0
  7015  0026CC                     _PIN_MANAGER_Initialize:
  7016                           	opt stack 25
  7017                           
  7018                           ;pin_manager.c: 52: LATA = 0x00;
  7019                           
  7020                           ;incstack = 0
  7021  0026CC  0E00               	movlw	0
  7022  0026CE  6E89               	movwf	3977,c	;volatile
  7023                           
  7024                           ;pin_manager.c: 53: TRISA = 0xF7;
  7025  0026D0  0EF7               	movlw	247
  7026  0026D2  6E92               	movwf	3986,c	;volatile
  7027                           
  7028                           ;pin_manager.c: 54: ANSELA = 0x20;
  7029  0026D4  0E20               	movlw	32
  7030  0026D6  010F               	movlb	15	; () banked
  7031  0026D8  6F38               	movwf	56,b	;volatile
  7032                           
  7033                           ;pin_manager.c: 56: LATB = 0x00;
  7034  0026DA  0E00               	movlw	0
  7035  0026DC  6E8A               	movwf	3978,c	;volatile
  7036                           
  7037                           ;pin_manager.c: 57: TRISB = 0xD7;
  7038  0026DE  0ED7               	movlw	215
  7039  0026E0  6E93               	movwf	3987,c	;volatile
  7040                           
  7041                           ;pin_manager.c: 58: ANSELB = 0x00;
  7042  0026E2  0E00               	movlw	0
  7043  0026E4  010F               	movlb	15	; () banked
  7044  0026E6  6F39               	movwf	57,b	;volatile
  7045                           
  7046                           ;pin_manager.c: 59: WPUB = 0x00;
  7047  0026E8  0E00               	movlw	0
  7048  0026EA  6E61               	movwf	3937,c	;volatile
  7049                           
  7050                           ;pin_manager.c: 61: LATC = 0x18;
  7051  0026EC  0E18               	movlw	24
  7052  0026EE  6E8B               	movwf	3979,c	;volatile
  7053                           
  7054                           ;pin_manager.c: 62: TRISC = 0xDF;
  7055  0026F0  0EDF               	movlw	223
  7056  0026F2  6E94               	movwf	3988,c	;volatile
  7057                           
  7058                           ;pin_manager.c: 63: ANSELC = 0x04;
  7059  0026F4  0E04               	movlw	4
  7060  0026F6  010F               	movlb	15	; () banked
  7061  0026F8  6F3A               	movwf	58,b	;volatile
  7062                           
  7063                           ;pin_manager.c: 65: LATD = 0x00;
  7064  0026FA  0E00               	movlw	0
  7065  0026FC  6E8C               	movwf	3980,c	;volatile
  7066                           
  7067                           ;pin_manager.c: 66: TRISD = 0xFD;
  7068  0026FE  0EFD               	movlw	253
  7069  002700  6E95               	movwf	3989,c	;volatile
  7070                           
  7071                           ;pin_manager.c: 67: ANSELD = 0xDD;
  7072  002702  0EDD               	movlw	221
  7073  002704  010F               	movlb	15	; () banked
  7074  002706  6F3B               	movwf	59,b	;volatile
  7075                           
  7076                           ;pin_manager.c: 69: LATE = 0x00;
  7077  002708  0E00               	movlw	0
  7078  00270A  6E8D               	movwf	3981,c	;volatile
  7079                           
  7080                           ;pin_manager.c: 70: TRISE = 0x00;
  7081  00270C  0E00               	movlw	0
  7082  00270E  6E96               	movwf	3990,c	;volatile
  7083                           
  7084                           ;pin_manager.c: 71: ANSELE = 0x00;
  7085  002710  0E00               	movlw	0
  7086  002712  010F               	movlb	15	; () banked
  7087  002714  6F3C               	movwf	60,b	;volatile
  7088                           
  7089                           ; BSR set to: 15
  7090                           ;pin_manager.c: 72: TRISCbits.TRISC5=0;
  7091  002716  9A94               	bcf	3988,5,c	;volatile
  7092                           
  7093                           ; BSR set to: 15
  7094                           ;pin_manager.c: 73: INTCON2bits.nRBPU = 0x01;
  7095  002718  8EF1               	bsf	intcon2,7,c	;volatile
  7096                           
  7097                           ; BSR set to: 15
  7098  00271A  0012               	return	
  7099  00271C                     __end_of_PIN_MANAGER_Initialize:
  7100                           	opt stack 0
  7101                           tosu	equ	0xFFF
  7102                           tosh	equ	0xFFE
  7103                           tosl	equ	0xFFD
  7104                           pclath	equ	0xFFA
  7105                           tblptru	equ	0xFF8
  7106                           tblptrh	equ	0xFF7
  7107                           tblptrl	equ	0xFF6
  7108                           tablat	equ	0xFF5
  7109                           prodh	equ	0xFF4
  7110                           prodl	equ	0xFF3
  7111                           intcon	equ	0xFF2
  7112                           intcon2	equ	0xFF1
  7113                           postinc0	equ	0xFEE
  7114                           wreg	equ	0xFE8
  7115                           indf2	equ	0xFDF
  7116                           postinc2	equ	0xFDE
  7117                           postdec2	equ	0xFDD
  7118                           fsr2h	equ	0xFDA
  7119                           fsr2l	equ	0xFD9
  7120                           status	equ	0xFD8
  7121                           
  7122 ;; *************** function _OSCILLATOR_Initialize *****************
  7123 ;; Defined at:
  7124 ;;		line 124 in file "mcc_generated_files/mcc.c"
  7125 ;; Parameters:    Size  Location     Type
  7126 ;;		None
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;		None
  7129 ;; Return value:  Size  Location     Type
  7130 ;;		None               void
  7131 ;; Registers used:
  7132 ;;		wreg, status,2
  7133 ;; Tracked objects:
  7134 ;;		On entry : 0/0
  7135 ;;		On exit  : 0/0
  7136 ;;		Unchanged: 0/0
  7137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7138 ;;      Params:         0       0       0       0       0       0       0
  7139 ;;      Locals:         0       0       0       0       0       0       0
  7140 ;;      Temps:          0       0       0       0       0       0       0
  7141 ;;      Totals:         0       0       0       0       0       0       0
  7142 ;;Total ram usage:        0 bytes
  7143 ;; Hardware stack levels used:    1
  7144 ;; Hardware stack levels required when called:    4
  7145 ;; This function calls:
  7146 ;;		Nothing
  7147 ;; This function is called by:
  7148 ;;		_SYSTEM_Initialize
  7149 ;; This function uses a non-reentrant model
  7150 ;;
  7151                           
  7152                           	psect	text38
  7153  002BFC                     __ptext38:
  7154                           	opt stack 0
  7155  002BFC                     _OSCILLATOR_Initialize:
  7156                           	opt stack 25
  7157                           
  7158                           ;mcc.c: 127: OSCCON = 0x72;
  7159                           
  7160                           ; BSR set to: 15
  7161                           ;incstack = 0
  7162  002BFC  0E72               	movlw	114
  7163  002BFE  6ED3               	movwf	4051,c	;volatile
  7164                           
  7165                           ;mcc.c: 129: OSCCON2 = 0x04;
  7166  002C00  0E04               	movlw	4
  7167  002C02  6ED2               	movwf	4050,c	;volatile
  7168                           
  7169                           ;mcc.c: 131: OSCTUNE = 0x00;
  7170  002C04  0E00               	movlw	0
  7171  002C06  6E9B               	movwf	3995,c	;volatile
  7172  002C08  0012               	return	
  7173  002C0A                     __end_of_OSCILLATOR_Initialize:
  7174                           	opt stack 0
  7175                           tosu	equ	0xFFF
  7176                           tosh	equ	0xFFE
  7177                           tosl	equ	0xFFD
  7178                           pclath	equ	0xFFA
  7179                           tblptru	equ	0xFF8
  7180                           tblptrh	equ	0xFF7
  7181                           tblptrl	equ	0xFF6
  7182                           tablat	equ	0xFF5
  7183                           prodh	equ	0xFF4
  7184                           prodl	equ	0xFF3
  7185                           intcon	equ	0xFF2
  7186                           intcon2	equ	0xFF1
  7187                           postinc0	equ	0xFEE
  7188                           wreg	equ	0xFE8
  7189                           indf2	equ	0xFDF
  7190                           postinc2	equ	0xFDE
  7191                           postdec2	equ	0xFDD
  7192                           fsr2h	equ	0xFDA
  7193                           fsr2l	equ	0xFD9
  7194                           status	equ	0xFD8
  7195                           
  7196 ;; *************** function _INTERRUPT_Initialize *****************
  7197 ;; Defined at:
  7198 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;		None
  7201 ;; Auto vars:     Size  Location     Type
  7202 ;;		None
  7203 ;; Return value:  Size  Location     Type
  7204 ;;		None               void
  7205 ;; Registers used:
  7206 ;;		None
  7207 ;; Tracked objects:
  7208 ;;		On entry : 0/0
  7209 ;;		On exit  : 0/0
  7210 ;;		Unchanged: 0/0
  7211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7212 ;;      Params:         0       0       0       0       0       0       0
  7213 ;;      Locals:         0       0       0       0       0       0       0
  7214 ;;      Temps:          0       0       0       0       0       0       0
  7215 ;;      Totals:         0       0       0       0       0       0       0
  7216 ;;Total ram usage:        0 bytes
  7217 ;; Hardware stack levels used:    1
  7218 ;; Hardware stack levels required when called:    4
  7219 ;; This function calls:
  7220 ;;		Nothing
  7221 ;; This function is called by:
  7222 ;;		_SYSTEM_Initialize
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           	psect	text39
  7227  002BEC                     __ptext39:
  7228                           	opt stack 0
  7229  002BEC                     _INTERRUPT_Initialize:
  7230                           	opt stack 25
  7231                           
  7232                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  7233                           
  7234                           ;incstack = 0
  7235  002BEC  9ED0               	bcf	4048,7,c	;volatile
  7236                           
  7237                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
  7238  002BEE  9A9F               	bcf	3999,5,c	;volatile
  7239                           
  7240                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  7241  002BF0  989F               	bcf	3999,4,c	;volatile
  7242                           
  7243                           ;interrupt_manager.c: 64: INTCON2bits.TMR0IP = 0;
  7244  002BF2  94F1               	bcf	intcon2,2,c	;volatile
  7245                           
  7246                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 0;
  7247  002BF4  9C9F               	bcf	3999,6,c	;volatile
  7248                           
  7249                           ;interrupt_manager.c: 68: IPR1bits.SSP1IP = 0;
  7250  002BF6  969F               	bcf	3999,3,c	;volatile
  7251                           
  7252                           ;interrupt_manager.c: 70: IPR2bits.BCL1IP = 0;
  7253  002BF8  96A2               	bcf	4002,3,c	;volatile
  7254  002BFA  0012               	return	
  7255  002BFC                     __end_of_INTERRUPT_Initialize:
  7256                           	opt stack 0
  7257                           tosu	equ	0xFFF
  7258                           tosh	equ	0xFFE
  7259                           tosl	equ	0xFFD
  7260                           pclath	equ	0xFFA
  7261                           tblptru	equ	0xFF8
  7262                           tblptrh	equ	0xFF7
  7263                           tblptrl	equ	0xFF6
  7264                           tablat	equ	0xFF5
  7265                           prodh	equ	0xFF4
  7266                           prodl	equ	0xFF3
  7267                           intcon	equ	0xFF2
  7268                           intcon2	equ	0xFF1
  7269                           postinc0	equ	0xFEE
  7270                           wreg	equ	0xFE8
  7271                           indf2	equ	0xFDF
  7272                           postinc2	equ	0xFDE
  7273                           postdec2	equ	0xFDD
  7274                           fsr2h	equ	0xFDA
  7275                           fsr2l	equ	0xFD9
  7276                           status	equ	0xFD8
  7277                           
  7278 ;; *************** function _I2C1_Initialize *****************
  7279 ;; Defined at:
  7280 ;;		line 151 in file "mcc_generated_files/i2c1.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;		None
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;		None
  7285 ;; Return value:  Size  Location     Type
  7286 ;;		None               void
  7287 ;; Registers used:
  7288 ;;		wreg, status,2, status,0
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/0
  7291 ;;		On exit  : 0/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7294 ;;      Params:         0       0       0       0       0       0       0
  7295 ;;      Locals:         0       0       0       0       0       0       0
  7296 ;;      Temps:          0       0       0       0       0       0       0
  7297 ;;      Totals:         0       0       0       0       0       0       0
  7298 ;;Total ram usage:        0 bytes
  7299 ;; Hardware stack levels used:    1
  7300 ;; Hardware stack levels required when called:    4
  7301 ;; This function calls:
  7302 ;;		Nothing
  7303 ;; This function is called by:
  7304 ;;		_SYSTEM_Initialize
  7305 ;; This function uses a non-reentrant model
  7306 ;;
  7307                           
  7308                           	psect	text40
  7309  0027F6                     __ptext40:
  7310                           	opt stack 0
  7311  0027F6                     _I2C1_Initialize:
  7312                           	opt stack 25
  7313                           
  7314                           ;i2c1.c: 153: i2c1_object.pTrHead = i2c1_tr_queue;
  7315                           
  7316                           ;incstack = 0
  7317  0027F6  0100               	movlb	0	; () banked
  7318  0027F8  0E00               	movlw	high _i2c1_tr_queue
  7319  0027FA  0100               	movlb	0	; () banked
  7320  0027FC  6F93               	movwf	(_i2c1_object+3)& (0+255),b
  7321  0027FE  0100               	movlb	0	; () banked
  7322  002800  0ECE               	movlw	low _i2c1_tr_queue
  7323  002802  0100               	movlb	0	; () banked
  7324  002804  6F92               	movwf	(_i2c1_object+2)& (0+255),b
  7325                           
  7326                           ;i2c1.c: 154: i2c1_object.pTrTail = i2c1_tr_queue;
  7327  002806  0100               	movlb	0	; () banked
  7328  002808  0E00               	movlw	high _i2c1_tr_queue
  7329  00280A  0100               	movlb	0	; () banked
  7330  00280C  6F91               	movwf	(_i2c1_object+1)& (0+255),b
  7331  00280E  0100               	movlb	0	; () banked
  7332  002810  0ECE               	movlw	low _i2c1_tr_queue
  7333  002812  0100               	movlb	0	; () banked
  7334  002814  6F90               	movwf	_i2c1_object& (0+255),b
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;i2c1.c: 155: i2c1_object.trStatus.s.empty = 1;
  7338  002816  0100               	movlb	0	; () banked
  7339  002818  8394               	bsf	(_i2c1_object+4)& (0+255),1,b
  7340                           
  7341                           ; BSR set to: 0
  7342                           ;i2c1.c: 156: i2c1_object.trStatus.s.full = 0;
  7343  00281A  0100               	movlb	0	; () banked
  7344  00281C  9194               	bcf	(_i2c1_object+4)& (0+255),0,b
  7345                           
  7346                           ; BSR set to: 0
  7347                           ;i2c1.c: 158: i2c1_object.i2cErrors = 0;
  7348  00281E  0E00               	movlw	0
  7349  002820  0100               	movlb	0	; () banked
  7350  002822  6F96               	movwf	(_i2c1_object+6)& (0+255),b
  7351                           
  7352                           ; BSR set to: 0
  7353                           ;i2c1.c: 161: SSP1STAT = 0x80;
  7354  002824  0E80               	movlw	128
  7355  002826  6EC7               	movwf	4039,c	;volatile
  7356                           
  7357                           ; BSR set to: 0
  7358                           ;i2c1.c: 163: SSP1CON1 = 0x28;
  7359  002828  0E28               	movlw	40
  7360  00282A  6EC6               	movwf	4038,c	;volatile
  7361                           
  7362                           ; BSR set to: 0
  7363                           ;i2c1.c: 165: SSP1CON3 = 0x00;
  7364  00282C  0E00               	movlw	0
  7365  00282E  6ECB               	movwf	4043,c	;volatile
  7366                           
  7367                           ; BSR set to: 0
  7368                           ;i2c1.c: 167: SSP1ADD = 0x09;
  7369  002830  0E09               	movlw	9
  7370  002832  6EC8               	movwf	4040,c	;volatile
  7371                           
  7372                           ; BSR set to: 0
  7373                           ;i2c1.c: 171: PIR1bits.SSP1IF = 0;
  7374  002834  969E               	bcf	3998,3,c	;volatile
  7375                           
  7376                           ; BSR set to: 0
  7377                           ;i2c1.c: 173: PIE1bits.SSP1IE = 1;
  7378  002836  869D               	bsf	3997,3,c	;volatile
  7379                           
  7380                           ; BSR set to: 0
  7381  002838  0012               	return	
  7382  00283A                     __end_of_I2C1_Initialize:
  7383                           	opt stack 0
  7384                           tosu	equ	0xFFF
  7385                           tosh	equ	0xFFE
  7386                           tosl	equ	0xFFD
  7387                           pclath	equ	0xFFA
  7388                           tblptru	equ	0xFF8
  7389                           tblptrh	equ	0xFF7
  7390                           tblptrl	equ	0xFF6
  7391                           tablat	equ	0xFF5
  7392                           prodh	equ	0xFF4
  7393                           prodl	equ	0xFF3
  7394                           intcon	equ	0xFF2
  7395                           intcon2	equ	0xFF1
  7396                           postinc0	equ	0xFEE
  7397                           wreg	equ	0xFE8
  7398                           indf2	equ	0xFDF
  7399                           postinc2	equ	0xFDE
  7400                           postdec2	equ	0xFDD
  7401                           fsr2h	equ	0xFDA
  7402                           fsr2l	equ	0xFD9
  7403                           status	equ	0xFD8
  7404                           
  7405 ;; *************** function _EUSART1_Initialize *****************
  7406 ;; Defined at:
  7407 ;;		line 21 in file "UART.c"
  7408 ;; Parameters:    Size  Location     Type
  7409 ;;		None
  7410 ;; Auto vars:     Size  Location     Type
  7411 ;;		None
  7412 ;; Return value:  Size  Location     Type
  7413 ;;		None               void
  7414 ;; Registers used:
  7415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7416 ;; Tracked objects:
  7417 ;;		On entry : 0/0
  7418 ;;		On exit  : 0/0
  7419 ;;		Unchanged: 0/0
  7420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7421 ;;      Params:         0       0       0       0       0       0       0
  7422 ;;      Locals:         0       0       0       0       0       0       0
  7423 ;;      Temps:          0       0       0       0       0       0       0
  7424 ;;      Totals:         0       0       0       0       0       0       0
  7425 ;;Total ram usage:        0 bytes
  7426 ;; Hardware stack levels used:    1
  7427 ;; Hardware stack levels required when called:    6
  7428 ;; This function calls:
  7429 ;;		_UART_buff_init
  7430 ;; This function is called by:
  7431 ;;		_SYSTEM_Initialize
  7432 ;; This function uses a non-reentrant model
  7433 ;;
  7434                           
  7435                           	psect	text41
  7436  00283A                     __ptext41:
  7437                           	opt stack 0
  7438  00283A                     _EUSART1_Initialize:
  7439                           	opt stack 23
  7440                           
  7441                           ;UART.c: 23: PIE1bits.RC1IE = 0;
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;incstack = 0
  7445  00283A  9A9D               	bcf	3997,5,c	;volatile
  7446                           
  7447                           ;UART.c: 24: PIE1bits.TX1IE = 0;
  7448  00283C  989D               	bcf	3997,4,c	;volatile
  7449                           
  7450                           ;UART.c: 29: BAUD1CON = 0x48;
  7451  00283E  0E48               	movlw	72
  7452  002840  6EB8               	movwf	4024,c	;volatile
  7453                           
  7454                           ;UART.c: 32: RC1STA = 0x98;
  7455  002842  0E98               	movlw	152
  7456  002844  6EAB               	movwf	4011,c	;volatile
  7457                           
  7458                           ;UART.c: 35: TX1STA = 0x26;
  7459  002846  0E26               	movlw	38
  7460  002848  6EAC               	movwf	4012,c	;volatile
  7461                           
  7462                           ;UART.c: 38: SPBRG1 = (((16000000/38400)/4)-1);
  7463  00284A  0E67               	movlw	103
  7464  00284C  6EAF               	movwf	4015,c	;volatile
  7465                           
  7466                           ;UART.c: 41: SPBRGH1 = 0x00;
  7467  00284E  0E00               	movlw	0
  7468  002850  6EB0               	movwf	4016,c	;volatile
  7469                           
  7470                           ;UART.c: 44: TXREG1 = 0x00;
  7471  002852  0E00               	movlw	0
  7472  002854  6EAD               	movwf	4013,c	;volatile
  7473                           
  7474                           ;UART.c: 47: RCREG1 = 0x00;
  7475  002856  0E00               	movlw	0
  7476  002858  6EAE               	movwf	4014,c	;volatile
  7477                           
  7478                           ;UART.c: 49: UART_buff_init(&input_buffer);
  7479  00285A  0103               	movlb	3	; () banked
  7480  00285C  0E03               	movlw	high _input_buffer
  7481  00285E  6E24               	movwf	UART_buff_init@_this+1,c
  7482  002860  0103               	movlb	3	; () banked
  7483  002862  0E00               	movlw	low _input_buffer
  7484  002864  6E23               	movwf	UART_buff_init@_this,c
  7485  002866  EC91  F015         	call	_UART_buff_init	;wreg free
  7486                           
  7487                           ;UART.c: 50: UART_buff_init(&output_buffer);
  7488  00286A  0104               	movlb	4	; () banked
  7489  00286C  0E04               	movlw	high _output_buffer
  7490  00286E  6E24               	movwf	UART_buff_init@_this+1,c
  7491  002870  0104               	movlb	4	; () banked
  7492  002872  0E00               	movlw	low _output_buffer
  7493  002874  6E23               	movwf	UART_buff_init@_this,c
  7494  002876  EC91  F015         	call	_UART_buff_init	;wreg free
  7495                           
  7496                           ;UART.c: 52: PIE1bits.RC1IE = 1;
  7497  00287A  8A9D               	bsf	3997,5,c	;volatile
  7498  00287C  0012               	return	
  7499  00287E                     __end_of_EUSART1_Initialize:
  7500                           	opt stack 0
  7501                           tosu	equ	0xFFF
  7502                           tosh	equ	0xFFE
  7503                           tosl	equ	0xFFD
  7504                           pclath	equ	0xFFA
  7505                           tblptru	equ	0xFF8
  7506                           tblptrh	equ	0xFF7
  7507                           tblptrl	equ	0xFF6
  7508                           tablat	equ	0xFF5
  7509                           prodh	equ	0xFF4
  7510                           prodl	equ	0xFF3
  7511                           intcon	equ	0xFF2
  7512                           intcon2	equ	0xFF1
  7513                           postinc0	equ	0xFEE
  7514                           wreg	equ	0xFE8
  7515                           indf2	equ	0xFDF
  7516                           postinc2	equ	0xFDE
  7517                           postdec2	equ	0xFDD
  7518                           fsr2h	equ	0xFDA
  7519                           fsr2l	equ	0xFD9
  7520                           status	equ	0xFD8
  7521                           
  7522 ;; *************** function _UART_buff_init *****************
  7523 ;; Defined at:
  7524 ;;		line 56 in file "UART.c"
  7525 ;; Parameters:    Size  Location     Type
  7526 ;;  _this           2   34[COMRAM] PTR struct UART_ring_buf
  7527 ;;		 -> output_buffer(206), input_buffer(206), 
  7528 ;; Auto vars:     Size  Location     Type
  7529 ;;		None
  7530 ;; Return value:  Size  Location     Type
  7531 ;;		None               void
  7532 ;; Registers used:
  7533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7534 ;; Tracked objects:
  7535 ;;		On entry : 0/0
  7536 ;;		On exit  : 0/0
  7537 ;;		Unchanged: 0/0
  7538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7539 ;;      Params:         2       0       0       0       0       0       0
  7540 ;;      Locals:         0       0       0       0       0       0       0
  7541 ;;      Temps:          0       0       0       0       0       0       0
  7542 ;;      Totals:         2       0       0       0       0       0       0
  7543 ;;Total ram usage:        2 bytes
  7544 ;; Hardware stack levels used:    1
  7545 ;; Hardware stack levels required when called:    5
  7546 ;; This function calls:
  7547 ;;		_memset
  7548 ;; This function is called by:
  7549 ;;		_EUSART1_Initialize
  7550 ;; This function uses a non-reentrant model
  7551 ;;
  7552                           
  7553                           	psect	text42
  7554  002B22                     __ptext42:
  7555                           	opt stack 0
  7556  002B22                     _UART_buff_init:
  7557                           	opt stack 23
  7558                           
  7559                           ;UART.c: 65: memset(_this, 0, sizeof (*_this));
  7560                           
  7561                           ;incstack = 0
  7562  002B22  C024  F01C         	movff	UART_buff_init@_this+1,memset@p1+1
  7563  002B26  C023  F01B         	movff	UART_buff_init@_this,memset@p1
  7564  002B2A  0E00               	movlw	0
  7565  002B2C  6E1E               	movwf	memset@c+1,c
  7566  002B2E  0E00               	movlw	0
  7567  002B30  6E1D               	movwf	memset@c,c
  7568  002B32  0E00               	movlw	0
  7569  002B34  6E20               	movwf	memset@n+1,c
  7570  002B36  0ECE               	movlw	206
  7571  002B38  6E1F               	movwf	memset@n,c
  7572  002B3A  ECE8  F014         	call	_memset	;wreg free
  7573  002B3E  0012               	return	
  7574  002B40                     __end_of_UART_buff_init:
  7575                           	opt stack 0
  7576                           tosu	equ	0xFFF
  7577                           tosh	equ	0xFFE
  7578                           tosl	equ	0xFFD
  7579                           pclath	equ	0xFFA
  7580                           tblptru	equ	0xFF8
  7581                           tblptrh	equ	0xFF7
  7582                           tblptrl	equ	0xFF6
  7583                           tablat	equ	0xFF5
  7584                           prodh	equ	0xFF4
  7585                           prodl	equ	0xFF3
  7586                           intcon	equ	0xFF2
  7587                           intcon2	equ	0xFF1
  7588                           postinc0	equ	0xFEE
  7589                           wreg	equ	0xFE8
  7590                           indf2	equ	0xFDF
  7591                           postinc2	equ	0xFDE
  7592                           postdec2	equ	0xFDD
  7593                           fsr2h	equ	0xFDA
  7594                           fsr2l	equ	0xFD9
  7595                           status	equ	0xFD8
  7596                           
  7597 ;; *************** function _memset *****************
  7598 ;; Defined at:
  7599 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memset.c"
  7600 ;; Parameters:    Size  Location     Type
  7601 ;;  p1              2   26[COMRAM] PTR void 
  7602 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  7603 ;;  c               2   28[COMRAM] int 
  7604 ;;  n               2   30[COMRAM] unsigned int 
  7605 ;; Auto vars:     Size  Location     Type
  7606 ;;  p               2   32[COMRAM] PTR unsigned char 
  7607 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  7608 ;; Return value:  Size  Location     Type
  7609 ;;                  2   26[COMRAM] PTR void 
  7610 ;; Registers used:
  7611 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7612 ;; Tracked objects:
  7613 ;;		On entry : 0/0
  7614 ;;		On exit  : 0/0
  7615 ;;		Unchanged: 0/0
  7616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7617 ;;      Params:         6       0       0       0       0       0       0
  7618 ;;      Locals:         2       0       0       0       0       0       0
  7619 ;;      Temps:          0       0       0       0       0       0       0
  7620 ;;      Totals:         8       0       0       0       0       0       0
  7621 ;;Total ram usage:        8 bytes
  7622 ;; Hardware stack levels used:    1
  7623 ;; Hardware stack levels required when called:    4
  7624 ;; This function calls:
  7625 ;;		Nothing
  7626 ;; This function is called by:
  7627 ;;		_FastTransfer_buffer_flush
  7628 ;;		_UART_buff_init
  7629 ;;		_UART_buff_flush
  7630 ;; This function uses a non-reentrant model
  7631 ;;
  7632                           
  7633                           	psect	text43
  7634  0029D0                     __ptext43:
  7635                           	opt stack 0
  7636  0029D0                     _memset:
  7637                           	opt stack 22
  7638                           
  7639                           ;incstack = 0
  7640  0029D0  C01C  F022         	movff	memset@p1+1,memset@p+1
  7641  0029D4  C01B  F021         	movff	memset@p1,memset@p
  7642  0029D8  D008               	goto	l4448
  7643  0029DA                     l4444:
  7644  0029DA  C021  FFD9         	movff	memset@p,fsr2l
  7645  0029DE  C022  FFDA         	movff	memset@p+1,fsr2h
  7646  0029E2  C01D  FFDF         	movff	memset@c,indf2
  7647  0029E6  4A21               	infsnz	memset@p,f,c
  7648  0029E8  2A22               	incf	memset@p+1,f,c
  7649  0029EA                     l4448:
  7650  0029EA  061F               	decf	memset@n,f,c
  7651  0029EC  A0D8               	btfss	status,0,c
  7652  0029EE  0620               	decf	memset@n+1,f,c
  7653  0029F0  281F               	incf	memset@n& (0+255),w,c
  7654  0029F2  B4D8               	btfsc	status,2,c
  7655  0029F4  2820               	incf	(memset@n+1)& (0+255),w,c
  7656  0029F6  B4D8               	btfsc	status,2,c
  7657                           
  7658                           ;	Return value of _memset is never used
  7659  0029F8  0012               	return	
  7660  0029FA  D7EF               	goto	l4444
  7661  0029FC                     __end_of_memset:
  7662                           	opt stack 0
  7663                           tosu	equ	0xFFF
  7664                           tosh	equ	0xFFE
  7665                           tosl	equ	0xFFD
  7666                           pclath	equ	0xFFA
  7667                           tblptru	equ	0xFF8
  7668                           tblptrh	equ	0xFF7
  7669                           tblptrl	equ	0xFF6
  7670                           tablat	equ	0xFF5
  7671                           prodh	equ	0xFF4
  7672                           prodl	equ	0xFF3
  7673                           intcon	equ	0xFF2
  7674                           intcon2	equ	0xFF1
  7675                           postinc0	equ	0xFEE
  7676                           wreg	equ	0xFE8
  7677                           indf2	equ	0xFDF
  7678                           postinc2	equ	0xFDE
  7679                           postdec2	equ	0xFDD
  7680                           fsr2h	equ	0xFDA
  7681                           fsr2l	equ	0xFD9
  7682                           status	equ	0xFD8
  7683                           
  7684 ;; *************** function _ADC_Initialize *****************
  7685 ;; Defined at:
  7686 ;;		line 59 in file "mcc_generated_files/adc.c"
  7687 ;; Parameters:    Size  Location     Type
  7688 ;;		None
  7689 ;; Auto vars:     Size  Location     Type
  7690 ;;		None
  7691 ;; Return value:  Size  Location     Type
  7692 ;;		None               void
  7693 ;; Registers used:
  7694 ;;		wreg, status,2
  7695 ;; Tracked objects:
  7696 ;;		On entry : 0/0
  7697 ;;		On exit  : 0/0
  7698 ;;		Unchanged: 0/0
  7699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7700 ;;      Params:         0       0       0       0       0       0       0
  7701 ;;      Locals:         0       0       0       0       0       0       0
  7702 ;;      Temps:          0       0       0       0       0       0       0
  7703 ;;      Totals:         0       0       0       0       0       0       0
  7704 ;;Total ram usage:        0 bytes
  7705 ;; Hardware stack levels used:    1
  7706 ;; Hardware stack levels required when called:    4
  7707 ;; This function calls:
  7708 ;;		Nothing
  7709 ;; This function is called by:
  7710 ;;		_SYSTEM_Initialize
  7711 ;; This function uses a non-reentrant model
  7712 ;;
  7713                           
  7714                           	psect	text44
  7715  002B5A                     __ptext44:
  7716                           	opt stack 0
  7717  002B5A                     _ADC_Initialize:
  7718                           	opt stack 25
  7719                           
  7720                           ;adc.c: 64: ADCON0 = 0x01;
  7721                           
  7722                           ;incstack = 0
  7723  002B5A  0E01               	movlw	1
  7724  002B5C  6EC2               	movwf	4034,c	;volatile
  7725                           
  7726                           ;adc.c: 67: ADCON1 = 0x80;
  7727  002B5E  0E80               	movlw	128
  7728  002B60  6EC1               	movwf	4033,c	;volatile
  7729                           
  7730                           ;adc.c: 70: ADCON2 = 0x05;
  7731  002B62  0E05               	movlw	5
  7732  002B64  6EC0               	movwf	4032,c	;volatile
  7733                           
  7734                           ;adc.c: 73: ADRESL = 0x00;
  7735  002B66  0E00               	movlw	0
  7736  002B68  6EC3               	movwf	4035,c	;volatile
  7737                           
  7738                           ;adc.c: 76: ADRESH = 0x00;
  7739  002B6A  0E00               	movlw	0
  7740  002B6C  6EC4               	movwf	4036,c	;volatile
  7741                           
  7742                           ;adc.c: 79: PIE1bits.ADIE = 1;
  7743  002B6E  8C9D               	bsf	3997,6,c	;volatile
  7744  002B70  0012               	return	
  7745  002B72                     __end_of_ADC_Initialize:
  7746                           	opt stack 0
  7747                           tosu	equ	0xFFF
  7748                           tosh	equ	0xFFE
  7749                           tosl	equ	0xFFD
  7750                           pclath	equ	0xFFA
  7751                           tblptru	equ	0xFF8
  7752                           tblptrh	equ	0xFF7
  7753                           tblptrl	equ	0xFF6
  7754                           tablat	equ	0xFF5
  7755                           prodh	equ	0xFF4
  7756                           prodl	equ	0xFF3
  7757                           intcon	equ	0xFF2
  7758                           intcon2	equ	0xFF1
  7759                           postinc0	equ	0xFEE
  7760                           wreg	equ	0xFE8
  7761                           indf2	equ	0xFDF
  7762                           postinc2	equ	0xFDE
  7763                           postdec2	equ	0xFDD
  7764                           fsr2h	equ	0xFDA
  7765                           fsr2l	equ	0xFD9
  7766                           status	equ	0xFD8
  7767                           
  7768 ;; *************** function _LEDwriteDisplay *****************
  7769 ;; Defined at:
  7770 ;;		line 114 in file "LED_BarGraph.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;  i2c_addr        1    wreg     unsigned char 
  7773 ;; Auto vars:     Size  Location     Type
  7774 ;;  i2c_addr        1   20[BANK0 ] unsigned char 
  7775 ;;  writeBuffer    20    0[BANK0 ] unsigned char [20]
  7776 ;;  timeOut         2   21[BANK0 ] unsigned int 
  7777 ;;  status          1   23[BANK0 ] enum E8855
  7778 ;; Return value:  Size  Location     Type
  7779 ;;		None               void
  7780 ;; Registers used:
  7781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7782 ;; Tracked objects:
  7783 ;;		On entry : 0/0
  7784 ;;		On exit  : 0/0
  7785 ;;		Unchanged: 0/0
  7786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7787 ;;      Params:         0       0       0       0       0       0       0
  7788 ;;      Locals:         0      24       0       0       0       0       0
  7789 ;;      Temps:          0       0       0       0       0       0       0
  7790 ;;      Totals:         0      24       0       0       0       0       0
  7791 ;;Total ram usage:       24 bytes
  7792 ;; Hardware stack levels used:    1
  7793 ;; Hardware stack levels required when called:    6
  7794 ;; This function calls:
  7795 ;;		_I2C1_MasterWrite
  7796 ;; This function is called by:
  7797 ;;		_main
  7798 ;; This function uses a non-reentrant model
  7799 ;;
  7800                           
  7801                           	psect	text45
  7802  0014B2                     __ptext45:
  7803                           	opt stack 0
  7804  0014B2                     _LEDwriteDisplay:
  7805                           	opt stack 24
  7806                           
  7807                           ;incstack = 0
  7808                           ;LEDwriteDisplay@i2c_addr stored from wreg
  7809  0014B2  0100               	movlb	0	; () banked
  7810  0014B4  6FE7               	movwf	LEDwriteDisplay@i2c_addr& (0+255),b
  7811                           
  7812                           ; BSR set to: 0
  7813                           ;LED_BarGraph.c: 115: uint8_t writeBuffer[20];
  7814                           ;LED_BarGraph.c: 116: uint16_t timeOut;
  7815                           ;LED_BarGraph.c: 117: writeBuffer[0] = 0x00;
  7816  0014B6  0E00               	movlw	0
  7817  0014B8  0100               	movlb	0	; () banked
  7818  0014BA  6FD3               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
  7819                           
  7820                           ;LED_BarGraph.c: 118: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  7821  0014BC  0E02               	movlw	2
  7822  0014BE  0100               	movlb	0	; () banked
  7823  0014C0  6FEA               	movwf	LEDwriteDisplay@status& (0+255),b
  7824                           
  7825                           ;LED_BarGraph.c: 120: timeOut = 0;
  7826  0014C2  0E00               	movlw	0
  7827  0014C4  0100               	movlb	0	; () banked
  7828  0014C6  6FE9               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
  7829  0014C8  0E00               	movlw	0
  7830  0014CA  0100               	movlb	0	; () banked
  7831  0014CC  6FE8               	movwf	LEDwriteDisplay@timeOut& (0+255),b
  7832                           
  7833                           ;LED_BarGraph.c: 121: while (status != I2C1_MESSAGE_FAIL) {
  7834  0014CE  D02A               	goto	l5244
  7835  0014D0                     l5226:
  7836                           
  7837                           ; BSR set to: 0
  7838                           ;LED_BarGraph.c: 123: I2C1_MasterWrite(&writeBuffer,
  7839                           ;LED_BarGraph.c: 124: 1,
  7840                           ;LED_BarGraph.c: 125: i2c_addr,
  7841                           ;LED_BarGraph.c: 126: &status);
  7842  0014D0  0100               	movlb	0	; () banked
  7843  0014D2  0E00               	movlw	high LEDwriteDisplay@writeBuffer
  7844  0014D4  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
  7845  0014D6  0100               	movlb	0	; () banked
  7846  0014D8  0ED3               	movlw	low LEDwriteDisplay@writeBuffer
  7847  0014DA  6E24               	movwf	I2C1_MasterWrite@pdata,c
  7848  0014DC  0E01               	movlw	1
  7849  0014DE  6E26               	movwf	I2C1_MasterWrite@length,c
  7850  0014E0  0100               	movlb	0	; () banked
  7851  0014E2  C0E7  F027         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
  7852  0014E6  6A28               	clrf	I2C1_MasterWrite@address+1,c
  7853  0014E8  0100               	movlb	0	; () banked
  7854  0014EA  0E00               	movlw	high LEDwriteDisplay@status
  7855  0014EC  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
  7856  0014EE  0100               	movlb	0	; () banked
  7857  0014F0  0EEA               	movlw	low LEDwriteDisplay@status
  7858  0014F2  6E29               	movwf	I2C1_MasterWrite@pflag,c
  7859  0014F4  EC3C  F013         	call	_I2C1_MasterWrite	;wreg free
  7860  0014F8                     l5228:
  7861  0014F8  0100               	movlb	0	; () banked
  7862  0014FA  51EA               	movf	LEDwriteDisplay@status& (0+255),w,b
  7863  0014FC  0A02               	xorlw	2
  7864  0014FE  B4D8               	btfsc	status,2,c
  7865  001500  D7FB               	goto	l5228
  7866                           
  7867                           ; BSR set to: 0
  7868                           ;LED_BarGraph.c: 131: if (status == I2C1_MESSAGE_COMPLETE)
  7869  001502  0100               	movlb	0	; () banked
  7870  001504  67EA               	tstfsz	LEDwriteDisplay@status& (0+255),b
  7871  001506  D001               	goto	l5232
  7872  001508  D011               	goto	l5246
  7873  00150A                     l5232:
  7874                           
  7875                           ; BSR set to: 0
  7876                           ;LED_BarGraph.c: 133: if (timeOut == 100)
  7877  00150A  0100               	movlb	0	; () banked
  7878  00150C  51E8               	movf	LEDwriteDisplay@timeOut& (0+255),w,b
  7879  00150E  0A64               	xorlw	100
  7880  001510  11E9               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
  7881  001512  B4D8               	btfsc	status,2,c
  7882  001514  D00B               	goto	l5246
  7883                           
  7884                           ; BSR set to: 0
  7885                           ;LED_BarGraph.c: 135: if (status == I2C1_MESSAGE_FAIL)
  7886                           
  7887                           ; BSR set to: 0
  7888                           
  7889                           ; BSR set to: 0
  7890                           ;LED_BarGraph.c: 134: break;
  7891  001516  0100               	movlb	0	; () banked
  7892  001518  05EA               	decf	LEDwriteDisplay@status& (0+255),w,b
  7893  00151A  B4D8               	btfsc	status,2,c
  7894  00151C  D007               	goto	l5246
  7895                           
  7896                           ; BSR set to: 0
  7897                           ;LED_BarGraph.c: 137: else
  7898                           ;LED_BarGraph.c: 138: timeOut++;
  7899                           
  7900                           ; BSR set to: 0
  7901                           
  7902                           ; BSR set to: 0
  7903                           
  7904                           ; BSR set to: 0
  7905                           ;LED_BarGraph.c: 136: break;
  7906  00151E  0100               	movlb	0	; () banked
  7907  001520  4BE8               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
  7908  001522  2BE9               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
  7909  001524                     l5244:
  7910                           
  7911                           ; BSR set to: 0
  7912  001524  0100               	movlb	0	; () banked
  7913  001526  05EA               	decf	LEDwriteDisplay@status& (0+255),w,b
  7914  001528  A4D8               	btfss	status,2,c
  7915  00152A  D7D2               	goto	l5226
  7916  00152C                     l5246:
  7917                           
  7918                           ; BSR set to: 0
  7919                           ;LED_BarGraph.c: 139: }
  7920                           ;LED_BarGraph.c: 140: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  7921  00152C  0E02               	movlw	2
  7922  00152E  0100               	movlb	0	; () banked
  7923  001530  6FEA               	movwf	LEDwriteDisplay@status& (0+255),b
  7924                           
  7925                           ;LED_BarGraph.c: 145: writeBuffer[0] = 0;
  7926  001532  0E00               	movlw	0
  7927  001534  0100               	movlb	0	; () banked
  7928  001536  6FD3               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
  7929                           
  7930                           ; BSR set to: 0
  7931                           ;LED_BarGraph.c: 146: writeBuffer[1] = displaybuffer[0] & 0xFF;
  7932  001538  C060  F0D4         	movff	_displaybuffer,LEDwriteDisplay@writeBuffer+1
  7933                           
  7934                           ; BSR set to: 0
  7935                           ;LED_BarGraph.c: 147: writeBuffer[2] = displaybuffer[0] >> 8;
  7936  00153C  C061  F0D5         	movff	_displaybuffer+1,LEDwriteDisplay@writeBuffer+2
  7937                           
  7938                           ; BSR set to: 0
  7939                           ;LED_BarGraph.c: 148: writeBuffer[3] = displaybuffer[1] & 0xFF;
  7940  001540  C064  F0D6         	movff	_displaybuffer+4,LEDwriteDisplay@writeBuffer+3
  7941                           
  7942                           ; BSR set to: 0
  7943                           ;LED_BarGraph.c: 149: writeBuffer[4] = displaybuffer[1] >> 8;
  7944  001544  C065  F0D7         	movff	_displaybuffer+5,LEDwriteDisplay@writeBuffer+4
  7945                           
  7946                           ; BSR set to: 0
  7947                           ;LED_BarGraph.c: 150: writeBuffer[5] = displaybuffer[2] & 0xFF;
  7948  001548  C068  F0D8         	movff	_displaybuffer+8,LEDwriteDisplay@writeBuffer+5
  7949                           
  7950                           ; BSR set to: 0
  7951                           ;LED_BarGraph.c: 151: writeBuffer[6] = displaybuffer[2] >> 8;
  7952  00154C  C069  F0D9         	movff	_displaybuffer+9,LEDwriteDisplay@writeBuffer+6
  7953                           
  7954                           ; BSR set to: 0
  7955                           ;LED_BarGraph.c: 152: writeBuffer[7] = displaybuffer[3] & 0xFF;
  7956  001550  C06C  F0DA         	movff	_displaybuffer+12,LEDwriteDisplay@writeBuffer+7
  7957                           
  7958                           ; BSR set to: 0
  7959                           ;LED_BarGraph.c: 153: writeBuffer[8] = displaybuffer[3] >> 8;
  7960  001554  C06D  F0DB         	movff	_displaybuffer+13,LEDwriteDisplay@writeBuffer+8
  7961                           
  7962                           ; BSR set to: 0
  7963                           ;LED_BarGraph.c: 154: writeBuffer[9] = displaybuffer[4] & 0xFF;
  7964  001558  C070  F0DC         	movff	_displaybuffer+16,LEDwriteDisplay@writeBuffer+9
  7965                           
  7966                           ; BSR set to: 0
  7967                           ;LED_BarGraph.c: 155: writeBuffer[10] = displaybuffer[4] >> 8;
  7968  00155C  C071  F0DD         	movff	_displaybuffer+17,LEDwriteDisplay@writeBuffer+10
  7969                           
  7970                           ; BSR set to: 0
  7971                           ;LED_BarGraph.c: 156: writeBuffer[11] = displaybuffer[5] & 0xFF;
  7972  001560  C074  F0DE         	movff	_displaybuffer+20,LEDwriteDisplay@writeBuffer+11
  7973                           
  7974                           ; BSR set to: 0
  7975                           ;LED_BarGraph.c: 157: writeBuffer[12] = displaybuffer[5] >> 8;
  7976  001564  C075  F0DF         	movff	_displaybuffer+21,LEDwriteDisplay@writeBuffer+12
  7977                           
  7978                           ; BSR set to: 0
  7979                           ;LED_BarGraph.c: 158: writeBuffer[13] = displaybuffer[6] & 0xFF;
  7980  001568  C078  F0E0         	movff	_displaybuffer+24,LEDwriteDisplay@writeBuffer+13
  7981                           
  7982                           ; BSR set to: 0
  7983                           ;LED_BarGraph.c: 159: writeBuffer[14] = displaybuffer[6] >> 8;
  7984  00156C  C079  F0E1         	movff	_displaybuffer+25,LEDwriteDisplay@writeBuffer+14
  7985                           
  7986                           ; BSR set to: 0
  7987                           ;LED_BarGraph.c: 160: writeBuffer[15] = displaybuffer[7] & 0xFF;
  7988  001570  C07C  F0E2         	movff	_displaybuffer+28,LEDwriteDisplay@writeBuffer+15
  7989                           
  7990                           ; BSR set to: 0
  7991                           ;LED_BarGraph.c: 161: writeBuffer[16] = displaybuffer[7] >> 8;
  7992  001574  C07D  F0E3         	movff	_displaybuffer+29,LEDwriteDisplay@writeBuffer+16
  7993                           
  7994                           ; BSR set to: 0
  7995                           ;LED_BarGraph.c: 162: writeBuffer[17] = displaybuffer[8] & 0xFF;
  7996  001578  C080  F0E4         	movff	_displaybuffer+32,LEDwriteDisplay@writeBuffer+17
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;LED_BarGraph.c: 163: writeBuffer[18] = displaybuffer[8] >> 8;
  8000  00157C  C081  F0E5         	movff	_displaybuffer+33,LEDwriteDisplay@writeBuffer+18
  8001                           
  8002                           ;LED_BarGraph.c: 165: timeOut = 0;
  8003  001580  0E00               	movlw	0
  8004  001582  0100               	movlb	0	; () banked
  8005  001584  6FE9               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
  8006  001586  0E00               	movlw	0
  8007  001588  0100               	movlb	0	; () banked
  8008  00158A  6FE8               	movwf	LEDwriteDisplay@timeOut& (0+255),b
  8009                           
  8010                           ;LED_BarGraph.c: 166: while (status != I2C1_MESSAGE_FAIL) {
  8011  00158C  D02A               	goto	l5302
  8012  00158E                     l5284:
  8013                           
  8014                           ; BSR set to: 0
  8015                           ;LED_BarGraph.c: 168: I2C1_MasterWrite(&writeBuffer,
  8016                           ;LED_BarGraph.c: 169: 17,
  8017                           ;LED_BarGraph.c: 170: i2c_addr,
  8018                           ;LED_BarGraph.c: 171: &status);
  8019  00158E  0100               	movlb	0	; () banked
  8020  001590  0E00               	movlw	high LEDwriteDisplay@writeBuffer
  8021  001592  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
  8022  001594  0100               	movlb	0	; () banked
  8023  001596  0ED3               	movlw	low LEDwriteDisplay@writeBuffer
  8024  001598  6E24               	movwf	I2C1_MasterWrite@pdata,c
  8025  00159A  0E11               	movlw	17
  8026  00159C  6E26               	movwf	I2C1_MasterWrite@length,c
  8027  00159E  0100               	movlb	0	; () banked
  8028  0015A0  C0E7  F027         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
  8029  0015A4  6A28               	clrf	I2C1_MasterWrite@address+1,c
  8030  0015A6  0100               	movlb	0	; () banked
  8031  0015A8  0E00               	movlw	high LEDwriteDisplay@status
  8032  0015AA  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
  8033  0015AC  0100               	movlb	0	; () banked
  8034  0015AE  0EEA               	movlw	low LEDwriteDisplay@status
  8035  0015B0  6E29               	movwf	I2C1_MasterWrite@pflag,c
  8036  0015B2  EC3C  F013         	call	_I2C1_MasterWrite	;wreg free
  8037  0015B6                     l5286:
  8038  0015B6  0100               	movlb	0	; () banked
  8039  0015B8  51EA               	movf	LEDwriteDisplay@status& (0+255),w,b
  8040  0015BA  0A02               	xorlw	2
  8041  0015BC  B4D8               	btfsc	status,2,c
  8042  0015BE  D7FB               	goto	l5286
  8043                           
  8044                           ; BSR set to: 0
  8045                           ;LED_BarGraph.c: 176: if (status == I2C1_MESSAGE_COMPLETE)
  8046  0015C0  0100               	movlb	0	; () banked
  8047  0015C2  67EA               	tstfsz	LEDwriteDisplay@status& (0+255),b
  8048  0015C4  D001               	goto	l5290
  8049  0015C6  0012               	return	
  8050  0015C8                     l5290:
  8051                           
  8052                           ; BSR set to: 0
  8053                           ;LED_BarGraph.c: 178: if (timeOut == 100)
  8054  0015C8  0100               	movlb	0	; () banked
  8055  0015CA  51E8               	movf	LEDwriteDisplay@timeOut& (0+255),w,b
  8056  0015CC  0A64               	xorlw	100
  8057  0015CE  11E9               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
  8058  0015D0  B4D8               	btfsc	status,2,c
  8059  0015D2  0012               	return	
  8060                           
  8061                           ; BSR set to: 0
  8062                           ;LED_BarGraph.c: 180: if (status == I2C1_MESSAGE_FAIL)
  8063                           
  8064                           ; BSR set to: 0
  8065                           
  8066                           ; BSR set to: 0
  8067                           ;LED_BarGraph.c: 179: break;
  8068  0015D4  0100               	movlb	0	; () banked
  8069  0015D6  05EA               	decf	LEDwriteDisplay@status& (0+255),w,b
  8070  0015D8  B4D8               	btfsc	status,2,c
  8071  0015DA  0012               	return	
  8072                           
  8073                           ; BSR set to: 0
  8074                           ;LED_BarGraph.c: 182: else
  8075                           ;LED_BarGraph.c: 183: timeOut++;
  8076                           
  8077                           ; BSR set to: 0
  8078                           
  8079                           ; BSR set to: 0
  8080                           
  8081                           ; BSR set to: 0
  8082                           ;LED_BarGraph.c: 181: break;
  8083  0015DC  0100               	movlb	0	; () banked
  8084  0015DE  4BE8               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
  8085  0015E0  2BE9               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
  8086  0015E2                     l5302:
  8087                           
  8088                           ; BSR set to: 0
  8089  0015E2  0100               	movlb	0	; () banked
  8090  0015E4  05EA               	decf	LEDwriteDisplay@status& (0+255),w,b
  8091  0015E6  B4D8               	btfsc	status,2,c
  8092                           
  8093                           ; BSR set to: 0
  8094                           
  8095                           ; BSR set to: 0
  8096  0015E8  0012               	return	
  8097  0015EA  D7D1               	goto	l5284
  8098  0015EC                     __end_of_LEDwriteDisplay:
  8099                           	opt stack 0
  8100                           tosu	equ	0xFFF
  8101                           tosh	equ	0xFFE
  8102                           tosl	equ	0xFFD
  8103                           pclath	equ	0xFFA
  8104                           tblptru	equ	0xFF8
  8105                           tblptrh	equ	0xFF7
  8106                           tblptrl	equ	0xFF6
  8107                           tablat	equ	0xFF5
  8108                           prodh	equ	0xFF4
  8109                           prodl	equ	0xFF3
  8110                           intcon	equ	0xFF2
  8111                           intcon2	equ	0xFF1
  8112                           postinc0	equ	0xFEE
  8113                           wreg	equ	0xFE8
  8114                           indf2	equ	0xFDF
  8115                           postinc2	equ	0xFDE
  8116                           postdec2	equ	0xFDD
  8117                           fsr2h	equ	0xFDA
  8118                           fsr2l	equ	0xFD9
  8119                           status	equ	0xFD8
  8120                           
  8121 ;; *************** function _LEDsetValue *****************
  8122 ;; Defined at:
  8123 ;;		line 11 in file "LED_BarGraph.c"
  8124 ;; Parameters:    Size  Location     Type
  8125 ;;  value           2   27[BANK0 ] int 
  8126 ;;  color           2   29[BANK0 ] int 
  8127 ;; Auto vars:     Size  Location     Type
  8128 ;;  k               2   32[BANK0 ] int 
  8129 ;; Return value:  Size  Location     Type
  8130 ;;		None               void
  8131 ;; Registers used:
  8132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  8133 ;; Tracked objects:
  8134 ;;		On entry : 0/0
  8135 ;;		On exit  : 0/0
  8136 ;;		Unchanged: 0/0
  8137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8138 ;;      Params:         0       4       0       0       0       0       0
  8139 ;;      Locals:         0       2       0       0       0       0       0
  8140 ;;      Temps:          0       1       0       0       0       0       0
  8141 ;;      Totals:         0       7       0       0       0       0       0
  8142 ;;Total ram usage:        7 bytes
  8143 ;; Hardware stack levels used:    1
  8144 ;; Hardware stack levels required when called:    6
  8145 ;; This function calls:
  8146 ;;		_LEDsetBar
  8147 ;; This function is called by:
  8148 ;;		_main
  8149 ;; This function uses a non-reentrant model
  8150 ;;
  8151                           
  8152                           	psect	text46
  8153  001DF8                     __ptext46:
  8154                           	opt stack 0
  8155  001DF8                     _LEDsetValue:
  8156                           	opt stack 24
  8157                           
  8158                           ;LED_BarGraph.c: 12: if (value > 24) value = 24;
  8159                           
  8160                           ; BSR set to: 0
  8161                           ;incstack = 0
  8162  001DF8  0100               	movlb	0	; () banked
  8163  001DFA  51EF               	movf	(LEDsetValue@value+1)& (0+255),w,b
  8164  001DFC  0A80               	xorlw	128
  8165  001DFE  0F80               	addlw	-128
  8166  001E00  0E19               	movlw	25
  8167  001E02  B4D8               	btfsc	status,2,c
  8168  001E04  5DEE               	subwf	LEDsetValue@value& (0+255),w,b
  8169  001E06  A0D8               	btfss	status,0,c
  8170  001E08  D006               	goto	l5206
  8171                           
  8172                           ; BSR set to: 0
  8173  001E0A  0E00               	movlw	0
  8174  001E0C  0100               	movlb	0	; () banked
  8175  001E0E  6FEF               	movwf	(LEDsetValue@value+1)& (0+255),b
  8176  001E10  0E18               	movlw	24
  8177  001E12  0100               	movlb	0	; () banked
  8178  001E14  6FEE               	movwf	LEDsetValue@value& (0+255),b
  8179  001E16                     l5206:
  8180                           
  8181                           ; BSR set to: 0
  8182                           ;LED_BarGraph.c: 13: if (value < 0) value = 0;
  8183  001E16  0100               	movlb	0	; () banked
  8184  001E18  51EF               	movf	(LEDsetValue@value+1)& (0+255),w,b
  8185  001E1A  0A80               	xorlw	128
  8186  001E1C  6EF3               	movwf	prodl,c
  8187  001E1E  0E80               	movlw	128
  8188  001E20  5CF3               	subwf	prodl,w,c
  8189  001E22  0E00               	movlw	0
  8190  001E24  B4D8               	btfsc	status,2,c
  8191  001E26  5DEE               	subwf	LEDsetValue@value& (0+255),w,b
  8192  001E28  B0D8               	btfsc	status,0,c
  8193  001E2A  D006               	goto	l433
  8194                           
  8195                           ; BSR set to: 0
  8196  001E2C  0E00               	movlw	0
  8197  001E2E  0100               	movlb	0	; () banked
  8198  001E30  6FEF               	movwf	(LEDsetValue@value+1)& (0+255),b
  8199  001E32  0E00               	movlw	0
  8200  001E34  0100               	movlb	0	; () banked
  8201  001E36  6FEE               	movwf	LEDsetValue@value& (0+255),b
  8202  001E38                     l433:
  8203                           
  8204                           ; BSR set to: 0
  8205                           ;LED_BarGraph.c: 14: int k;
  8206                           ;LED_BarGraph.c: 15: for (k = 0; k < 24; k++) {
  8207  001E38  0E00               	movlw	0
  8208  001E3A  0100               	movlb	0	; () banked
  8209  001E3C  6FF4               	movwf	(LEDsetValue@k+1)& (0+255),b
  8210  001E3E  0E00               	movlw	0
  8211  001E40  0100               	movlb	0	; () banked
  8212  001E42  6FF3               	movwf	LEDsetValue@k& (0+255),b
  8213  001E44                     
  8214                           ; BSR set to: 0
  8215  001E44  0100               	movlb	0	; () banked
  8216  001E46  51F4               	movf	(LEDsetValue@k+1)& (0+255),w,b
  8217  001E48  0A80               	xorlw	128
  8218  001E4A  0F80               	addlw	-128
  8219  001E4C  0E18               	movlw	24
  8220  001E4E  B4D8               	btfsc	status,2,c
  8221  001E50  5DF3               	subwf	LEDsetValue@k& (0+255),w,b
  8222  001E52  B0D8               	btfsc	status,0,c
  8223  001E54  0012               	return	
  8224                           
  8225                           ; BSR set to: 0
  8226                           ;LED_BarGraph.c: 16: if (k < value) LEDsetBar(k, color);
  8227                           
  8228                           ; BSR set to: 0
  8229                           
  8230                           ; BSR set to: 0
  8231  001E56  0100               	movlb	0	; () banked
  8232  001E58  51F4               	movf	(LEDsetValue@k+1)& (0+255),w,b
  8233  001E5A  0A80               	xorlw	128
  8234  001E5C  0100               	movlb	0	; () banked
  8235  001E5E  6FF2               	movwf	??_LEDsetValue& (0+255),b
  8236  001E60  0100               	movlb	0	; () banked
  8237  001E62  51EE               	movf	LEDsetValue@value& (0+255),w,b
  8238  001E64  0100               	movlb	0	; () banked
  8239  001E66  5DF3               	subwf	LEDsetValue@k& (0+255),w,b
  8240  001E68  0100               	movlb	0	; () banked
  8241  001E6A  51EF               	movf	(LEDsetValue@value+1)& (0+255),w,b
  8242  001E6C  0A80               	xorlw	128
  8243  001E6E  0100               	movlb	0	; () banked
  8244  001E70  59F2               	subwfb	??_LEDsetValue& (0+255),w,b
  8245  001E72  B0D8               	btfsc	status,0,c
  8246  001E74  D00B               	goto	l5218
  8247                           
  8248                           ; BSR set to: 0
  8249  001E76  C0F3  F023         	movff	LEDsetValue@k,LEDsetBar@bar
  8250  001E7A  C0F4  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
  8251  001E7E  C0F0  F025         	movff	LEDsetValue@color,LEDsetBar@color
  8252  001E82  C0F1  F026         	movff	LEDsetValue@color+1,LEDsetBar@color+1
  8253  001E86  EC89  F003         	call	_LEDsetBar	;wreg free
  8254  001E8A  D00A               	goto	l5220
  8255  001E8C                     l5218:
  8256                           
  8257                           ;LED_BarGraph.c: 17: else LEDsetBar(k, 0);
  8258  001E8C  C0F3  F023         	movff	LEDsetValue@k,LEDsetBar@bar
  8259  001E90  C0F4  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
  8260  001E94  0E00               	movlw	0
  8261  001E96  6E26               	movwf	LEDsetBar@color+1,c
  8262  001E98  0E00               	movlw	0
  8263  001E9A  6E25               	movwf	LEDsetBar@color,c
  8264  001E9C  EC89  F003         	call	_LEDsetBar	;wreg free
  8265  001EA0                     l5220:
  8266  001EA0  0100               	movlb	0	; () banked
  8267  001EA2  4BF3               	infsnz	LEDsetValue@k& (0+255),f,b
  8268  001EA4  2BF4               	incf	(LEDsetValue@k+1)& (0+255),f,b
  8269  001EA6  D7CE               	goto	L4
  8270  001EA8                     __end_of_LEDsetValue:
  8271                           	opt stack 0
  8272                           tosu	equ	0xFFF
  8273                           tosh	equ	0xFFE
  8274                           tosl	equ	0xFFD
  8275                           pclath	equ	0xFFA
  8276                           tblptru	equ	0xFF8
  8277                           tblptrh	equ	0xFF7
  8278                           tblptrl	equ	0xFF6
  8279                           tablat	equ	0xFF5
  8280                           prodh	equ	0xFF4
  8281                           prodl	equ	0xFF3
  8282                           intcon	equ	0xFF2
  8283                           intcon2	equ	0xFF1
  8284                           postinc0	equ	0xFEE
  8285                           wreg	equ	0xFE8
  8286                           indf2	equ	0xFDF
  8287                           postinc2	equ	0xFDE
  8288                           postdec2	equ	0xFDD
  8289                           fsr2h	equ	0xFDA
  8290                           fsr2l	equ	0xFD9
  8291                           status	equ	0xFD8
  8292                           
  8293 ;; *************** function _LEDsetBar *****************
  8294 ;; Defined at:
  8295 ;;		line 193 in file "LED_BarGraph.c"
  8296 ;; Parameters:    Size  Location     Type
  8297 ;;  bar             2   34[COMRAM] int 
  8298 ;;  color           2   36[COMRAM] int 
  8299 ;; Auto vars:     Size  Location     Type
  8300 ;;  a               2   40[COMRAM] unsigned int 
  8301 ;;  c               2   38[COMRAM] unsigned int 
  8302 ;; Return value:  Size  Location     Type
  8303 ;;		None               void
  8304 ;; Registers used:
  8305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  8306 ;; Tracked objects:
  8307 ;;		On entry : 0/0
  8308 ;;		On exit  : 0/0
  8309 ;;		Unchanged: 0/0
  8310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8311 ;;      Params:         4       0       0       0       0       0       0
  8312 ;;      Locals:         4       0       0       0       0       0       0
  8313 ;;      Temps:          0      16       0       0       0       0       0
  8314 ;;      Totals:         8      16       0       0       0       0       0
  8315 ;;Total ram usage:       24 bytes
  8316 ;; Hardware stack levels used:    1
  8317 ;; Hardware stack levels required when called:    5
  8318 ;; This function calls:
  8319 ;;		___awdiv
  8320 ;; This function is called by:
  8321 ;;		_LEDsetValue
  8322 ;; This function uses a non-reentrant model
  8323 ;;
  8324                           
  8325                           	psect	text47
  8326  000712                     __ptext47:
  8327                           	opt stack 0
  8328  000712                     _LEDsetBar:
  8329                           	opt stack 24
  8330                           
  8331                           ;LED_BarGraph.c: 194: uint16_t a, c;
  8332                           ;LED_BarGraph.c: 196: if (bar < 12)
  8333                           
  8334                           ; BSR set to: 0
  8335                           ;incstack = 0
  8336  000712  5024               	movf	LEDsetBar@bar+1,w,c
  8337  000714  0A80               	xorlw	128
  8338  000716  6EF3               	movwf	prodl,c
  8339  000718  0E80               	movlw	128
  8340  00071A  5CF3               	subwf	prodl,w,c
  8341  00071C  0E0C               	movlw	12
  8342  00071E  B4D8               	btfsc	status,2,c
  8343  000720  5C23               	subwf	LEDsetBar@bar,w,c
  8344  000722  B0D8               	btfsc	status,0,c
  8345  000724  D00B               	goto	l4724
  8346                           
  8347                           ;LED_BarGraph.c: 197: c = bar / 4;
  8348  000726  C023  F01B         	movff	LEDsetBar@bar,___awdiv@dividend
  8349  00072A  C024  F01C         	movff	LEDsetBar@bar+1,___awdiv@dividend+1
  8350  00072E  0E00               	movlw	0
  8351  000730  6E1E               	movwf	___awdiv@divisor+1,c
  8352  000732  0E04               	movlw	4
  8353  000734  6E1D               	movwf	___awdiv@divisor,c
  8354  000736  ECA8  F00F         	call	___awdiv	;wreg free
  8355  00073A  D00C               	goto	L5
  8356  00073C                     l4724:
  8357                           
  8358                           ;LED_BarGraph.c: 198: else
  8359                           ;LED_BarGraph.c: 199: c = (bar - 12) / 4;
  8360  00073C  0EF4               	movlw	244
  8361  00073E  2423               	addwf	LEDsetBar@bar,w,c
  8362  000740  6E1B               	movwf	___awdiv@dividend,c
  8363  000742  0EFF               	movlw	255
  8364  000744  2024               	addwfc	LEDsetBar@bar+1,w,c
  8365  000746  6E1C               	movwf	___awdiv@dividend+1,c
  8366  000748  0E00               	movlw	0
  8367  00074A  6E1E               	movwf	___awdiv@divisor+1,c
  8368  00074C  0E04               	movlw	4
  8369  00074E  6E1D               	movwf	___awdiv@divisor,c
  8370  000750  ECA8  F00F         	call	___awdiv	;wreg free
  8371  000754                     L5:
  8372  000754  C01B  F027         	movff	?___awdiv,LEDsetBar@c
  8373  000758  C01C  F028         	movff	?___awdiv+1,LEDsetBar@c+1
  8374                           
  8375                           ;LED_BarGraph.c: 201: a = bar % 4;
  8376  00075C  0E03               	movlw	3
  8377  00075E  1423               	andwf	LEDsetBar@bar,w,c
  8378  000760  6E29               	movwf	LEDsetBar@a,c
  8379  000762  6A2A               	clrf	LEDsetBar@a+1,c
  8380                           
  8381                           ;LED_BarGraph.c: 202: if (bar >= 12)
  8382  000764  5024               	movf	LEDsetBar@bar+1,w,c
  8383  000766  0A80               	xorlw	128
  8384  000768  0F80               	addlw	-128
  8385  00076A  0E0C               	movlw	12
  8386  00076C  B4D8               	btfsc	status,2,c
  8387  00076E  5C23               	subwf	LEDsetBar@bar,w,c
  8388  000770  A0D8               	btfss	status,0,c
  8389  000772  D004               	goto	l512
  8390                           
  8391                           ;LED_BarGraph.c: 203: a += 4;
  8392  000774  0E04               	movlw	4
  8393  000776  2629               	addwf	LEDsetBar@a,f,c
  8394  000778  0E00               	movlw	0
  8395  00077A  222A               	addwfc	LEDsetBar@a+1,f,c
  8396  00077C                     l512:
  8397                           
  8398                           ;LED_BarGraph.c: 206: if (color == 1) {
  8399  00077C  0425               	decf	LEDsetBar@color,w,c
  8400  00077E  1026               	iorwf	LEDsetBar@color+1,w,c
  8401  000780  A4D8               	btfss	status,2,c
  8402  000782  D07B               	goto	l4734
  8403                           
  8404                           ;LED_BarGraph.c: 208: displaybuffer[c] |= (1<<(a));
  8405  000784  C029  F0D3         	movff	LEDsetBar@a,??_LEDsetBar
  8406  000788  0E01               	movlw	1
  8407  00078A  0100               	movlb	0	; () banked
  8408  00078C  6FD4               	movwf	(??_LEDsetBar+1)& (0+255),b
  8409  00078E  6BD5               	clrf	(??_LEDsetBar+2)& (0+255),b
  8410  000790  0100               	movlb	0	; () banked
  8411  000792  2BD3               	incf	??_LEDsetBar& (0+255),f,b
  8412  000794  D004               	goto	u5164
  8413  000796                     u5165:
  8414  000796  90D8               	bcf	status,0,c
  8415  000798  0100               	movlb	0	; () banked
  8416  00079A  37D4               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  8417  00079C  37D5               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  8418  00079E                     u5164:
  8419  00079E  0100               	movlb	0	; () banked
  8420  0007A0  2FD3               	decfsz	??_LEDsetBar& (0+255),f,b
  8421  0007A2  D7F9               	goto	u5165
  8422  0007A4  C0D4  F0D6         	movff	??_LEDsetBar+1,??_LEDsetBar+3
  8423  0007A8  C0D5  F0D7         	movff	??_LEDsetBar+2,??_LEDsetBar+4
  8424  0007AC  0E00               	movlw	0
  8425  0007AE  0100               	movlb	0	; () banked
  8426  0007B0  BFD7               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
  8427  0007B2  0EFF               	movlw	255
  8428  0007B4  6FD8               	movwf	(??_LEDsetBar+5)& (0+255),b
  8429  0007B6  6FD9               	movwf	(??_LEDsetBar+6)& (0+255),b
  8430  0007B8  0E60               	movlw	low _displaybuffer
  8431  0007BA  0100               	movlb	0	; () banked
  8432  0007BC  6FDA               	movwf	(??_LEDsetBar+7)& (0+255),b
  8433  0007BE  0E00               	movlw	high _displaybuffer
  8434  0007C0  6FDB               	movwf	(??_LEDsetBar+8)& (0+255),b
  8435  0007C2  90D8               	bcf	status,0,c
  8436  0007C4  3427               	rlcf	LEDsetBar@c,w,c
  8437  0007C6  6ED9               	movwf	fsr2l,c
  8438  0007C8  3428               	rlcf	LEDsetBar@c+1,w,c
  8439  0007CA  6EDA               	movwf	fsr2h,c
  8440  0007CC  90D8               	bcf	status,0,c
  8441  0007CE  36D9               	rlcf	fsr2l,f,c
  8442  0007D0  36DA               	rlcf	fsr2h,f,c
  8443  0007D2  0100               	movlb	0	; () banked
  8444  0007D4  51DA               	movf	(??_LEDsetBar+7)& (0+255),w,b
  8445  0007D6  26D9               	addwf	fsr2l,f,c
  8446  0007D8  0100               	movlb	0	; () banked
  8447  0007DA  51DB               	movf	(??_LEDsetBar+8)& (0+255),w,b
  8448  0007DC  22DA               	addwfc	fsr2h,f,c
  8449  0007DE  0100               	movlb	0	; () banked
  8450  0007E0  51D6               	movf	(??_LEDsetBar+3)& (0+255),w,b
  8451  0007E2  12DE               	iorwf	postinc2,f,c
  8452  0007E4  51D7               	movf	(??_LEDsetBar+4)& (0+255),w,b
  8453  0007E6  12DE               	iorwf	postinc2,f,c
  8454  0007E8  51D8               	movf	(??_LEDsetBar+5)& (0+255),w,b
  8455  0007EA  12DE               	iorwf	postinc2,f,c
  8456  0007EC  51D9               	movf	(??_LEDsetBar+6)& (0+255),w,b
  8457  0007EE  12DD               	iorwf	postdec2,f,c
  8458  0007F0  52DD               	movf	postdec2,f,c
  8459  0007F2  52DD               	movf	postdec2,f,c
  8460                           
  8461                           ;LED_BarGraph.c: 210: displaybuffer[c] &= ~(1<<(a + 8));
  8462  0007F4  C029  F0D3         	movff	LEDsetBar@a,??_LEDsetBar
  8463  0007F8  0E08               	movlw	8
  8464  0007FA  0100               	movlb	0	; () banked
  8465  0007FC  27D3               	addwf	??_LEDsetBar& (0+255),f,b
  8466  0007FE  0E01               	movlw	1
  8467  000800  0100               	movlb	0	; () banked
  8468  000802  6FD4               	movwf	(??_LEDsetBar+1)& (0+255),b
  8469  000804  6BD5               	clrf	(??_LEDsetBar+2)& (0+255),b
  8470  000806  0100               	movlb	0	; () banked
  8471  000808  2BD3               	incf	??_LEDsetBar& (0+255),f,b
  8472  00080A  D004               	goto	u5174
  8473  00080C                     u5175:
  8474  00080C  90D8               	bcf	status,0,c
  8475  00080E  0100               	movlb	0	; () banked
  8476  000810  37D4               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  8477  000812  37D5               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  8478  000814                     u5174:
  8479  000814  0100               	movlb	0	; () banked
  8480  000816  2FD3               	decfsz	??_LEDsetBar& (0+255),f,b
  8481  000818  D7F9               	goto	u5175
  8482  00081A  0100               	movlb	0	; () banked
  8483  00081C  1DD4               	comf	(??_LEDsetBar+1)& (0+255),w,b
  8484  00081E  0100               	movlb	0	; () banked
  8485  000820  6FD6               	movwf	(??_LEDsetBar+3)& (0+255),b
  8486  000822  0100               	movlb	0	; () banked
  8487  000824  1DD5               	comf	(??_LEDsetBar+2)& (0+255),w,b
  8488  000826  0100               	movlb	0	; () banked
  8489  000828  6FD7               	movwf	(??_LEDsetBar+4)& (0+255),b
  8490  00082A  0100               	movlb	0	; () banked
  8491  00082C  6BD8               	clrf	(??_LEDsetBar+5)& (0+255),b
  8492  00082E  0100               	movlb	0	; () banked
  8493  000830  BFD7               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
  8494  000832  07D8               	decf	(??_LEDsetBar+5)& (0+255),f,b
  8495  000834  0100               	movlb	0	; () banked
  8496  000836  51D8               	movf	(??_LEDsetBar+5)& (0+255),w,b
  8497  000838  0100               	movlb	0	; () banked
  8498  00083A  6FD9               	movwf	(??_LEDsetBar+6)& (0+255),b
  8499  00083C  0E60               	movlw	low _displaybuffer
  8500  00083E  0100               	movlb	0	; () banked
  8501  000840  6FDA               	movwf	(??_LEDsetBar+7)& (0+255),b
  8502  000842  0E00               	movlw	high _displaybuffer
  8503  000844  6FDB               	movwf	(??_LEDsetBar+8)& (0+255),b
  8504  000846  90D8               	bcf	status,0,c
  8505  000848  3427               	rlcf	LEDsetBar@c,w,c
  8506  00084A  6ED9               	movwf	fsr2l,c
  8507  00084C  3428               	rlcf	LEDsetBar@c+1,w,c
  8508  00084E  6EDA               	movwf	fsr2h,c
  8509  000850  90D8               	bcf	status,0,c
  8510  000852  36D9               	rlcf	fsr2l,f,c
  8511  000854  36DA               	rlcf	fsr2h,f,c
  8512  000856  0100               	movlb	0	; () banked
  8513  000858  51DA               	movf	(??_LEDsetBar+7)& (0+255),w,b
  8514  00085A  26D9               	addwf	fsr2l,f,c
  8515  00085C  0100               	movlb	0	; () banked
  8516  00085E  51DB               	movf	(??_LEDsetBar+8)& (0+255),w,b
  8517  000860  22DA               	addwfc	fsr2h,f,c
  8518  000862  0100               	movlb	0	; () banked
  8519  000864  51D6               	movf	(??_LEDsetBar+3)& (0+255),w,b
  8520  000866  16DE               	andwf	postinc2,f,c
  8521  000868  51D7               	movf	(??_LEDsetBar+4)& (0+255),w,b
  8522  00086A  16DE               	andwf	postinc2,f,c
  8523  00086C  51D8               	movf	(??_LEDsetBar+5)& (0+255),w,b
  8524  00086E  16DE               	andwf	postinc2,f,c
  8525  000870  51D9               	movf	(??_LEDsetBar+6)& (0+255),w,b
  8526  000872  16DD               	andwf	postdec2,f,c
  8527  000874  52DD               	movf	postdec2,f,c
  8528  000876  52DD               	movf	postdec2,f,c
  8529                           
  8530                           ;LED_BarGraph.c: 211: } else if (color == 2) {
  8531  000878  0012               	return	
  8532  00087A                     l4734:
  8533  00087A  5025               	movf	LEDsetBar@color,w,c
  8534  00087C  0A02               	xorlw	2
  8535  00087E  1026               	iorwf	LEDsetBar@color+1,w,c
  8536  000880  A4D8               	btfss	status,2,c
  8537  000882  D057               	goto	l4738
  8538                           
  8539                           ;LED_BarGraph.c: 213: displaybuffer[c] |= (1<<(a)) | (1<<(a + 8));
  8540  000884  C029  F0D3         	movff	LEDsetBar@a,??_LEDsetBar
  8541  000888  0E08               	movlw	8
  8542  00088A  0100               	movlb	0	; () banked
  8543  00088C  27D3               	addwf	??_LEDsetBar& (0+255),f,b
  8544  00088E  0E01               	movlw	1
  8545  000890  0100               	movlb	0	; () banked
  8546  000892  6FD4               	movwf	(??_LEDsetBar+1)& (0+255),b
  8547  000894  6BD5               	clrf	(??_LEDsetBar+2)& (0+255),b
  8548  000896  0100               	movlb	0	; () banked
  8549  000898  2BD3               	incf	??_LEDsetBar& (0+255),f,b
  8550  00089A  D004               	goto	u5194
  8551  00089C                     u5195:
  8552  00089C  90D8               	bcf	status,0,c
  8553  00089E  0100               	movlb	0	; () banked
  8554  0008A0  37D4               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  8555  0008A2  37D5               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  8556  0008A4                     u5194:
  8557  0008A4  0100               	movlb	0	; () banked
  8558  0008A6  2FD3               	decfsz	??_LEDsetBar& (0+255),f,b
  8559  0008A8  D7F9               	goto	u5195
  8560  0008AA  C029  F0D6         	movff	LEDsetBar@a,??_LEDsetBar+3
  8561  0008AE  0E01               	movlw	1
  8562  0008B0  0100               	movlb	0	; () banked
  8563  0008B2  6FD7               	movwf	(??_LEDsetBar+4)& (0+255),b
  8564  0008B4  6BD8               	clrf	(??_LEDsetBar+5)& (0+255),b
  8565  0008B6  0100               	movlb	0	; () banked
  8566  0008B8  2BD6               	incf	(??_LEDsetBar+3)& (0+255),f,b
  8567  0008BA  D004               	goto	u5204
  8568  0008BC                     u5205:
  8569  0008BC  90D8               	bcf	status,0,c
  8570  0008BE  0100               	movlb	0	; () banked
  8571  0008C0  37D7               	rlcf	(??_LEDsetBar+4)& (0+255),f,b
  8572  0008C2  37D8               	rlcf	(??_LEDsetBar+5)& (0+255),f,b
  8573  0008C4                     u5204:
  8574  0008C4  0100               	movlb	0	; () banked
  8575  0008C6  2FD6               	decfsz	(??_LEDsetBar+3)& (0+255),f,b
  8576  0008C8  D7F9               	goto	u5205
  8577  0008CA  0100               	movlb	0	; () banked
  8578  0008CC  51D4               	movf	(??_LEDsetBar+1)& (0+255),w,b
  8579  0008CE  0100               	movlb	0	; () banked
  8580  0008D0  11D7               	iorwf	(??_LEDsetBar+4)& (0+255),w,b
  8581  0008D2  0100               	movlb	0	; () banked
  8582  0008D4  6FD9               	movwf	(??_LEDsetBar+6)& (0+255),b
  8583  0008D6  0100               	movlb	0	; () banked
  8584  0008D8  51D5               	movf	(??_LEDsetBar+2)& (0+255),w,b
  8585  0008DA  0100               	movlb	0	; () banked
  8586  0008DC  11D8               	iorwf	(??_LEDsetBar+5)& (0+255),w,b
  8587  0008DE  0100               	movlb	0	; () banked
  8588  0008E0  6FDA               	movwf	(??_LEDsetBar+7)& (0+255),b
  8589  0008E2  0100               	movlb	0	; () banked
  8590  0008E4  6BDB               	clrf	(??_LEDsetBar+8)& (0+255),b
  8591  0008E6  0100               	movlb	0	; () banked
  8592  0008E8  BFDA               	btfsc	(??_LEDsetBar+7)& (0+255),7,b
  8593  0008EA  07DB               	decf	(??_LEDsetBar+8)& (0+255),f,b
  8594  0008EC  0100               	movlb	0	; () banked
  8595  0008EE  51DB               	movf	(??_LEDsetBar+8)& (0+255),w,b
  8596  0008F0  0100               	movlb	0	; () banked
  8597  0008F2  6FDC               	movwf	(??_LEDsetBar+9)& (0+255),b
  8598  0008F4  0E60               	movlw	low _displaybuffer
  8599  0008F6  0100               	movlb	0	; () banked
  8600  0008F8  6FDD               	movwf	(??_LEDsetBar+10)& (0+255),b
  8601  0008FA  0E00               	movlw	high _displaybuffer
  8602  0008FC  6FDE               	movwf	(??_LEDsetBar+11)& (0+255),b
  8603  0008FE  90D8               	bcf	status,0,c
  8604  000900  3427               	rlcf	LEDsetBar@c,w,c
  8605  000902  6ED9               	movwf	fsr2l,c
  8606  000904  3428               	rlcf	LEDsetBar@c+1,w,c
  8607  000906  6EDA               	movwf	fsr2h,c
  8608  000908  90D8               	bcf	status,0,c
  8609  00090A  36D9               	rlcf	fsr2l,f,c
  8610  00090C  36DA               	rlcf	fsr2h,f,c
  8611  00090E  0100               	movlb	0	; () banked
  8612  000910  51DD               	movf	(??_LEDsetBar+10)& (0+255),w,b
  8613  000912  26D9               	addwf	fsr2l,f,c
  8614  000914  0100               	movlb	0	; () banked
  8615  000916  51DE               	movf	(??_LEDsetBar+11)& (0+255),w,b
  8616  000918  22DA               	addwfc	fsr2h,f,c
  8617  00091A  0100               	movlb	0	; () banked
  8618  00091C  51D9               	movf	(??_LEDsetBar+6)& (0+255),w,b
  8619  00091E  12DE               	iorwf	postinc2,f,c
  8620  000920  51DA               	movf	(??_LEDsetBar+7)& (0+255),w,b
  8621  000922  12DE               	iorwf	postinc2,f,c
  8622  000924  51DB               	movf	(??_LEDsetBar+8)& (0+255),w,b
  8623  000926  12DE               	iorwf	postinc2,f,c
  8624  000928  51DC               	movf	(??_LEDsetBar+9)& (0+255),w,b
  8625  00092A  12DD               	iorwf	postdec2,f,c
  8626  00092C  52DD               	movf	postdec2,f,c
  8627  00092E  52DD               	movf	postdec2,f,c
  8628                           
  8629                           ;LED_BarGraph.c: 214: } else if (color == 0) {
  8630  000930  0012               	return	
  8631  000932                     l4738:
  8632  000932  5026               	movf	LEDsetBar@color+1,w,c
  8633  000934  1025               	iorwf	LEDsetBar@color,w,c
  8634  000936  A4D8               	btfss	status,2,c
  8635  000938  D067               	goto	l4742
  8636                           
  8637                           ;LED_BarGraph.c: 216: displaybuffer[c] &= ~(1<<(a)) & ~(1<<(a + 8));
  8638  00093A  C029  F0D3         	movff	LEDsetBar@a,??_LEDsetBar
  8639  00093E  0E08               	movlw	8
  8640  000940  0100               	movlb	0	; () banked
  8641  000942  27D3               	addwf	??_LEDsetBar& (0+255),f,b
  8642  000944  0E01               	movlw	1
  8643  000946  0100               	movlb	0	; () banked
  8644  000948  6FD4               	movwf	(??_LEDsetBar+1)& (0+255),b
  8645  00094A  6BD5               	clrf	(??_LEDsetBar+2)& (0+255),b
  8646  00094C  0100               	movlb	0	; () banked
  8647  00094E  2BD3               	incf	??_LEDsetBar& (0+255),f,b
  8648  000950  D004               	goto	u5224
  8649  000952                     u5225:
  8650  000952  90D8               	bcf	status,0,c
  8651  000954  0100               	movlb	0	; () banked
  8652  000956  37D4               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  8653  000958  37D5               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  8654  00095A                     u5224:
  8655  00095A  0100               	movlb	0	; () banked
  8656  00095C  2FD3               	decfsz	??_LEDsetBar& (0+255),f,b
  8657  00095E  D7F9               	goto	u5225
  8658  000960  0100               	movlb	0	; () banked
  8659  000962  1DD4               	comf	(??_LEDsetBar+1)& (0+255),w,b
  8660  000964  0100               	movlb	0	; () banked
  8661  000966  6FD6               	movwf	(??_LEDsetBar+3)& (0+255),b
  8662  000968  0100               	movlb	0	; () banked
  8663  00096A  1DD5               	comf	(??_LEDsetBar+2)& (0+255),w,b
  8664  00096C  0100               	movlb	0	; () banked
  8665  00096E  6FD7               	movwf	(??_LEDsetBar+4)& (0+255),b
  8666  000970  C029  F0D8         	movff	LEDsetBar@a,??_LEDsetBar+5
  8667  000974  0E01               	movlw	1
  8668  000976  0100               	movlb	0	; () banked
  8669  000978  6FD9               	movwf	(??_LEDsetBar+6)& (0+255),b
  8670  00097A  6BDA               	clrf	(??_LEDsetBar+7)& (0+255),b
  8671  00097C  0100               	movlb	0	; () banked
  8672  00097E  2BD8               	incf	(??_LEDsetBar+5)& (0+255),f,b
  8673  000980  D004               	goto	u5234
  8674  000982                     u5235:
  8675  000982  90D8               	bcf	status,0,c
  8676  000984  0100               	movlb	0	; () banked
  8677  000986  37D9               	rlcf	(??_LEDsetBar+6)& (0+255),f,b
  8678  000988  37DA               	rlcf	(??_LEDsetBar+7)& (0+255),f,b
  8679  00098A                     u5234:
  8680  00098A  0100               	movlb	0	; () banked
  8681  00098C  2FD8               	decfsz	(??_LEDsetBar+5)& (0+255),f,b
  8682  00098E  D7F9               	goto	u5235
  8683  000990  0100               	movlb	0	; () banked
  8684  000992  1DD9               	comf	(??_LEDsetBar+6)& (0+255),w,b
  8685  000994  0100               	movlb	0	; () banked
  8686  000996  6FDB               	movwf	(??_LEDsetBar+8)& (0+255),b
  8687  000998  0100               	movlb	0	; () banked
  8688  00099A  1DDA               	comf	(??_LEDsetBar+7)& (0+255),w,b
  8689  00099C  0100               	movlb	0	; () banked
  8690  00099E  6FDC               	movwf	(??_LEDsetBar+9)& (0+255),b
  8691  0009A0  0100               	movlb	0	; () banked
  8692  0009A2  51D6               	movf	(??_LEDsetBar+3)& (0+255),w,b
  8693  0009A4  0100               	movlb	0	; () banked
  8694  0009A6  15DB               	andwf	(??_LEDsetBar+8)& (0+255),w,b
  8695  0009A8  0100               	movlb	0	; () banked
  8696  0009AA  6FDD               	movwf	(??_LEDsetBar+10)& (0+255),b
  8697  0009AC  0100               	movlb	0	; () banked
  8698  0009AE  51D7               	movf	(??_LEDsetBar+4)& (0+255),w,b
  8699  0009B0  0100               	movlb	0	; () banked
  8700  0009B2  15DC               	andwf	(??_LEDsetBar+9)& (0+255),w,b
  8701  0009B4  0100               	movlb	0	; () banked
  8702  0009B6  6FDE               	movwf	(??_LEDsetBar+11)& (0+255),b
  8703  0009B8  0100               	movlb	0	; () banked
  8704  0009BA  6BDF               	clrf	(??_LEDsetBar+12)& (0+255),b
  8705  0009BC  0100               	movlb	0	; () banked
  8706  0009BE  BFDE               	btfsc	(??_LEDsetBar+11)& (0+255),7,b
  8707  0009C0  07DF               	decf	(??_LEDsetBar+12)& (0+255),f,b
  8708  0009C2  0100               	movlb	0	; () banked
  8709  0009C4  51DF               	movf	(??_LEDsetBar+12)& (0+255),w,b
  8710  0009C6  0100               	movlb	0	; () banked
  8711  0009C8  6FE0               	movwf	(??_LEDsetBar+13)& (0+255),b
  8712  0009CA  0E60               	movlw	low _displaybuffer
  8713  0009CC  0100               	movlb	0	; () banked
  8714  0009CE  6FE1               	movwf	(??_LEDsetBar+14)& (0+255),b
  8715  0009D0  0E00               	movlw	high _displaybuffer
  8716  0009D2  6FE2               	movwf	(??_LEDsetBar+15)& (0+255),b
  8717  0009D4  90D8               	bcf	status,0,c
  8718  0009D6  3427               	rlcf	LEDsetBar@c,w,c
  8719  0009D8  6ED9               	movwf	fsr2l,c
  8720  0009DA  3428               	rlcf	LEDsetBar@c+1,w,c
  8721  0009DC  6EDA               	movwf	fsr2h,c
  8722  0009DE  90D8               	bcf	status,0,c
  8723  0009E0  36D9               	rlcf	fsr2l,f,c
  8724  0009E2  36DA               	rlcf	fsr2h,f,c
  8725  0009E4  0100               	movlb	0	; () banked
  8726  0009E6  51E1               	movf	(??_LEDsetBar+14)& (0+255),w,b
  8727  0009E8  26D9               	addwf	fsr2l,f,c
  8728  0009EA  0100               	movlb	0	; () banked
  8729  0009EC  51E2               	movf	(??_LEDsetBar+15)& (0+255),w,b
  8730  0009EE  22DA               	addwfc	fsr2h,f,c
  8731  0009F0  0100               	movlb	0	; () banked
  8732  0009F2  51DD               	movf	(??_LEDsetBar+10)& (0+255),w,b
  8733  0009F4  16DE               	andwf	postinc2,f,c
  8734  0009F6  51DE               	movf	(??_LEDsetBar+11)& (0+255),w,b
  8735  0009F8  16DE               	andwf	postinc2,f,c
  8736  0009FA  51DF               	movf	(??_LEDsetBar+12)& (0+255),w,b
  8737  0009FC  16DE               	andwf	postinc2,f,c
  8738  0009FE  51E0               	movf	(??_LEDsetBar+13)& (0+255),w,b
  8739  000A00  16DD               	andwf	postdec2,f,c
  8740  000A02  52DD               	movf	postdec2,f,c
  8741  000A04  52DD               	movf	postdec2,f,c
  8742                           
  8743                           ;LED_BarGraph.c: 217: } else if (color == 3) {
  8744  000A06  0012               	return	
  8745  000A08                     l4742:
  8746  000A08  5025               	movf	LEDsetBar@color,w,c
  8747  000A0A  0A03               	xorlw	3
  8748  000A0C  1026               	iorwf	LEDsetBar@color+1,w,c
  8749  000A0E  A4D8               	btfss	status,2,c
  8750  000A10  0012               	return	
  8751                           
  8752                           ;LED_BarGraph.c: 219: displaybuffer[c] |= (1<<(a + 8));
  8753  000A12  C029  F0D3         	movff	LEDsetBar@a,??_LEDsetBar
  8754  000A16  0E08               	movlw	8
  8755  000A18  0100               	movlb	0	; () banked
  8756  000A1A  27D3               	addwf	??_LEDsetBar& (0+255),f,b
  8757  000A1C  0E01               	movlw	1
  8758  000A1E  0100               	movlb	0	; () banked
  8759  000A20  6FD4               	movwf	(??_LEDsetBar+1)& (0+255),b
  8760  000A22  6BD5               	clrf	(??_LEDsetBar+2)& (0+255),b
  8761  000A24  0100               	movlb	0	; () banked
  8762  000A26  2BD3               	incf	??_LEDsetBar& (0+255),f,b
  8763  000A28  D004               	goto	u5254
  8764  000A2A                     u5255:
  8765  000A2A  90D8               	bcf	status,0,c
  8766  000A2C  0100               	movlb	0	; () banked
  8767  000A2E  37D4               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  8768  000A30  37D5               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  8769  000A32                     u5254:
  8770  000A32  0100               	movlb	0	; () banked
  8771  000A34  2FD3               	decfsz	??_LEDsetBar& (0+255),f,b
  8772  000A36  D7F9               	goto	u5255
  8773  000A38  C0D4  F0D6         	movff	??_LEDsetBar+1,??_LEDsetBar+3
  8774  000A3C  C0D5  F0D7         	movff	??_LEDsetBar+2,??_LEDsetBar+4
  8775  000A40  0E00               	movlw	0
  8776  000A42  0100               	movlb	0	; () banked
  8777  000A44  BFD7               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
  8778  000A46  0EFF               	movlw	255
  8779  000A48  6FD8               	movwf	(??_LEDsetBar+5)& (0+255),b
  8780  000A4A  6FD9               	movwf	(??_LEDsetBar+6)& (0+255),b
  8781  000A4C  0E60               	movlw	low _displaybuffer
  8782  000A4E  0100               	movlb	0	; () banked
  8783  000A50  6FDA               	movwf	(??_LEDsetBar+7)& (0+255),b
  8784  000A52  0E00               	movlw	high _displaybuffer
  8785  000A54  6FDB               	movwf	(??_LEDsetBar+8)& (0+255),b
  8786  000A56  90D8               	bcf	status,0,c
  8787  000A58  3427               	rlcf	LEDsetBar@c,w,c
  8788  000A5A  6ED9               	movwf	fsr2l,c
  8789  000A5C  3428               	rlcf	LEDsetBar@c+1,w,c
  8790  000A5E  6EDA               	movwf	fsr2h,c
  8791  000A60  90D8               	bcf	status,0,c
  8792  000A62  36D9               	rlcf	fsr2l,f,c
  8793  000A64  36DA               	rlcf	fsr2h,f,c
  8794  000A66  0100               	movlb	0	; () banked
  8795  000A68  51DA               	movf	(??_LEDsetBar+7)& (0+255),w,b
  8796  000A6A  26D9               	addwf	fsr2l,f,c
  8797  000A6C  0100               	movlb	0	; () banked
  8798  000A6E  51DB               	movf	(??_LEDsetBar+8)& (0+255),w,b
  8799  000A70  22DA               	addwfc	fsr2h,f,c
  8800  000A72  0100               	movlb	0	; () banked
  8801  000A74  51D6               	movf	(??_LEDsetBar+3)& (0+255),w,b
  8802  000A76  12DE               	iorwf	postinc2,f,c
  8803  000A78  51D7               	movf	(??_LEDsetBar+4)& (0+255),w,b
  8804  000A7A  12DE               	iorwf	postinc2,f,c
  8805  000A7C  51D8               	movf	(??_LEDsetBar+5)& (0+255),w,b
  8806  000A7E  12DE               	iorwf	postinc2,f,c
  8807  000A80  51D9               	movf	(??_LEDsetBar+6)& (0+255),w,b
  8808  000A82  12DD               	iorwf	postdec2,f,c
  8809  000A84  52DD               	movf	postdec2,f,c
  8810  000A86  52DD               	movf	postdec2,f,c
  8811                           
  8812                           ;LED_BarGraph.c: 221: displaybuffer[c] &= ~(1<<(a));
  8813  000A88  C029  F0D3         	movff	LEDsetBar@a,??_LEDsetBar
  8814  000A8C  0E01               	movlw	1
  8815  000A8E  0100               	movlb	0	; () banked
  8816  000A90  6FD4               	movwf	(??_LEDsetBar+1)& (0+255),b
  8817  000A92  6BD5               	clrf	(??_LEDsetBar+2)& (0+255),b
  8818  000A94  0100               	movlb	0	; () banked
  8819  000A96  2BD3               	incf	??_LEDsetBar& (0+255),f,b
  8820  000A98  D004               	goto	u5264
  8821  000A9A                     u5265:
  8822  000A9A  90D8               	bcf	status,0,c
  8823  000A9C  0100               	movlb	0	; () banked
  8824  000A9E  37D4               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  8825  000AA0  37D5               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  8826  000AA2                     u5264:
  8827  000AA2  0100               	movlb	0	; () banked
  8828  000AA4  2FD3               	decfsz	??_LEDsetBar& (0+255),f,b
  8829  000AA6  D7F9               	goto	u5265
  8830  000AA8  0100               	movlb	0	; () banked
  8831  000AAA  1DD4               	comf	(??_LEDsetBar+1)& (0+255),w,b
  8832  000AAC  0100               	movlb	0	; () banked
  8833  000AAE  6FD6               	movwf	(??_LEDsetBar+3)& (0+255),b
  8834  000AB0  0100               	movlb	0	; () banked
  8835  000AB2  1DD5               	comf	(??_LEDsetBar+2)& (0+255),w,b
  8836  000AB4  0100               	movlb	0	; () banked
  8837  000AB6  6FD7               	movwf	(??_LEDsetBar+4)& (0+255),b
  8838  000AB8  0100               	movlb	0	; () banked
  8839  000ABA  6BD8               	clrf	(??_LEDsetBar+5)& (0+255),b
  8840  000ABC  0100               	movlb	0	; () banked
  8841  000ABE  BFD7               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
  8842  000AC0  07D8               	decf	(??_LEDsetBar+5)& (0+255),f,b
  8843  000AC2  0100               	movlb	0	; () banked
  8844  000AC4  51D8               	movf	(??_LEDsetBar+5)& (0+255),w,b
  8845  000AC6  0100               	movlb	0	; () banked
  8846  000AC8  6FD9               	movwf	(??_LEDsetBar+6)& (0+255),b
  8847  000ACA  0E60               	movlw	low _displaybuffer
  8848  000ACC  0100               	movlb	0	; () banked
  8849  000ACE  6FDA               	movwf	(??_LEDsetBar+7)& (0+255),b
  8850  000AD0  0E00               	movlw	high _displaybuffer
  8851  000AD2  6FDB               	movwf	(??_LEDsetBar+8)& (0+255),b
  8852  000AD4  90D8               	bcf	status,0,c
  8853  000AD6  3427               	rlcf	LEDsetBar@c,w,c
  8854  000AD8  6ED9               	movwf	fsr2l,c
  8855  000ADA  3428               	rlcf	LEDsetBar@c+1,w,c
  8856  000ADC  6EDA               	movwf	fsr2h,c
  8857  000ADE  90D8               	bcf	status,0,c
  8858  000AE0  36D9               	rlcf	fsr2l,f,c
  8859  000AE2  36DA               	rlcf	fsr2h,f,c
  8860  000AE4  0100               	movlb	0	; () banked
  8861  000AE6  51DA               	movf	(??_LEDsetBar+7)& (0+255),w,b
  8862  000AE8  26D9               	addwf	fsr2l,f,c
  8863  000AEA  0100               	movlb	0	; () banked
  8864  000AEC  51DB               	movf	(??_LEDsetBar+8)& (0+255),w,b
  8865  000AEE  22DA               	addwfc	fsr2h,f,c
  8866  000AF0  0100               	movlb	0	; () banked
  8867  000AF2  51D6               	movf	(??_LEDsetBar+3)& (0+255),w,b
  8868  000AF4  16DE               	andwf	postinc2,f,c
  8869  000AF6  51D7               	movf	(??_LEDsetBar+4)& (0+255),w,b
  8870  000AF8  16DE               	andwf	postinc2,f,c
  8871  000AFA  51D8               	movf	(??_LEDsetBar+5)& (0+255),w,b
  8872  000AFC  16DE               	andwf	postinc2,f,c
  8873  000AFE  51D9               	movf	(??_LEDsetBar+6)& (0+255),w,b
  8874  000B00  16DD               	andwf	postdec2,f,c
  8875  000B02  52DD               	movf	postdec2,f,c
  8876  000B04  52DD               	movf	postdec2,f,c
  8877  000B06  0012               	return	
  8878  000B08                     __end_of_LEDsetBar:
  8879                           	opt stack 0
  8880                           tosu	equ	0xFFF
  8881                           tosh	equ	0xFFE
  8882                           tosl	equ	0xFFD
  8883                           pclath	equ	0xFFA
  8884                           tblptru	equ	0xFF8
  8885                           tblptrh	equ	0xFF7
  8886                           tblptrl	equ	0xFF6
  8887                           tablat	equ	0xFF5
  8888                           prodh	equ	0xFF4
  8889                           prodl	equ	0xFF3
  8890                           intcon	equ	0xFF2
  8891                           intcon2	equ	0xFF1
  8892                           postinc0	equ	0xFEE
  8893                           wreg	equ	0xFE8
  8894                           indf2	equ	0xFDF
  8895                           postinc2	equ	0xFDE
  8896                           postdec2	equ	0xFDD
  8897                           fsr2h	equ	0xFDA
  8898                           fsr2l	equ	0xFD9
  8899                           status	equ	0xFD8
  8900                           
  8901 ;; *************** function ___awdiv *****************
  8902 ;; Defined at:
  8903 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  8904 ;; Parameters:    Size  Location     Type
  8905 ;;  dividend        2   26[COMRAM] int 
  8906 ;;  divisor         2   28[COMRAM] int 
  8907 ;; Auto vars:     Size  Location     Type
  8908 ;;  quotient        2   32[COMRAM] int 
  8909 ;;  sign            1   31[COMRAM] unsigned char 
  8910 ;;  counter         1   30[COMRAM] unsigned char 
  8911 ;; Return value:  Size  Location     Type
  8912 ;;                  2   26[COMRAM] int 
  8913 ;; Registers used:
  8914 ;;		wreg, status,2, status,0, prodl
  8915 ;; Tracked objects:
  8916 ;;		On entry : 0/0
  8917 ;;		On exit  : 0/0
  8918 ;;		Unchanged: 0/0
  8919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8920 ;;      Params:         4       0       0       0       0       0       0
  8921 ;;      Locals:         4       0       0       0       0       0       0
  8922 ;;      Temps:          0       0       0       0       0       0       0
  8923 ;;      Totals:         8       0       0       0       0       0       0
  8924 ;;Total ram usage:        8 bytes
  8925 ;; Hardware stack levels used:    1
  8926 ;; Hardware stack levels required when called:    4
  8927 ;; This function calls:
  8928 ;;		Nothing
  8929 ;; This function is called by:
  8930 ;;		_LEDsetBar
  8931 ;;		_begin
  8932 ;; This function uses a non-reentrant model
  8933 ;;
  8934                           
  8935                           	psect	text48
  8936  001F50                     __ptext48:
  8937                           	opt stack 0
  8938  001F50                     ___awdiv:
  8939                           	opt stack 24
  8940                           
  8941                           ;incstack = 0
  8942  001F50  0E00               	movlw	0
  8943  001F52  6E20               	movwf	___awdiv@sign,c
  8944  001F54  501E               	movf	___awdiv@divisor+1,w,c
  8945  001F56  0A80               	xorlw	128
  8946  001F58  6EF3               	movwf	prodl,c
  8947  001F5A  0E80               	movlw	128
  8948  001F5C  5CF3               	subwf	prodl,w,c
  8949  001F5E  0E00               	movlw	0
  8950  001F60  B4D8               	btfsc	status,2,c
  8951  001F62  5C1D               	subwf	___awdiv@divisor,w,c
  8952  001F64  B0D8               	btfsc	status,0,c
  8953  001F66  D006               	goto	l3360
  8954  001F68  6C1D               	negf	___awdiv@divisor,c
  8955  001F6A  1E1E               	comf	___awdiv@divisor+1,f,c
  8956  001F6C  B0D8               	btfsc	status,0,c
  8957  001F6E  2A1E               	incf	___awdiv@divisor+1,f,c
  8958  001F70  0E01               	movlw	1
  8959  001F72  6E20               	movwf	___awdiv@sign,c
  8960  001F74                     l3360:
  8961  001F74  501C               	movf	___awdiv@dividend+1,w,c
  8962  001F76  0A80               	xorlw	128
  8963  001F78  6EF3               	movwf	prodl,c
  8964  001F7A  0E80               	movlw	128
  8965  001F7C  5CF3               	subwf	prodl,w,c
  8966  001F7E  0E00               	movlw	0
  8967  001F80  B4D8               	btfsc	status,2,c
  8968  001F82  5C1B               	subwf	___awdiv@dividend,w,c
  8969  001F84  B0D8               	btfsc	status,0,c
  8970  001F86  D006               	goto	l3366
  8971  001F88  6C1B               	negf	___awdiv@dividend,c
  8972  001F8A  1E1C               	comf	___awdiv@dividend+1,f,c
  8973  001F8C  B0D8               	btfsc	status,0,c
  8974  001F8E  2A1C               	incf	___awdiv@dividend+1,f,c
  8975  001F90  0E01               	movlw	1
  8976  001F92  1A20               	xorwf	___awdiv@sign,f,c
  8977  001F94                     l3366:
  8978  001F94  0E00               	movlw	0
  8979  001F96  6E22               	movwf	___awdiv@quotient+1,c
  8980  001F98  0E00               	movlw	0
  8981  001F9A  6E21               	movwf	___awdiv@quotient,c
  8982  001F9C  501E               	movf	___awdiv@divisor+1,w,c
  8983  001F9E  101D               	iorwf	___awdiv@divisor,w,c
  8984  001FA0  B4D8               	btfsc	status,2,c
  8985  001FA2  D01C               	goto	l3388
  8986  001FA4  0E01               	movlw	1
  8987  001FA6  6E1F               	movwf	___awdiv@counter,c
  8988  001FA8  D004               	goto	l3374
  8989  001FAA                     l3372:
  8990  001FAA  90D8               	bcf	status,0,c
  8991  001FAC  361D               	rlcf	___awdiv@divisor,f,c
  8992  001FAE  361E               	rlcf	___awdiv@divisor+1,f,c
  8993  001FB0  2A1F               	incf	___awdiv@counter,f,c
  8994  001FB2                     l3374:
  8995  001FB2  AE1E               	btfss	___awdiv@divisor+1,7,c
  8996  001FB4  D7FA               	goto	l3372
  8997  001FB6                     l3376:
  8998  001FB6  90D8               	bcf	status,0,c
  8999  001FB8  3621               	rlcf	___awdiv@quotient,f,c
  9000  001FBA  3622               	rlcf	___awdiv@quotient+1,f,c
  9001  001FBC  501D               	movf	___awdiv@divisor,w,c
  9002  001FBE  5C1B               	subwf	___awdiv@dividend,w,c
  9003  001FC0  501E               	movf	___awdiv@divisor+1,w,c
  9004  001FC2  581C               	subwfb	___awdiv@dividend+1,w,c
  9005  001FC4  A0D8               	btfss	status,0,c
  9006  001FC6  D005               	goto	l3384
  9007  001FC8  501D               	movf	___awdiv@divisor,w,c
  9008  001FCA  5E1B               	subwf	___awdiv@dividend,f,c
  9009  001FCC  501E               	movf	___awdiv@divisor+1,w,c
  9010  001FCE  5A1C               	subwfb	___awdiv@dividend+1,f,c
  9011  001FD0  8021               	bsf	___awdiv@quotient,0,c
  9012  001FD2                     l3384:
  9013  001FD2  90D8               	bcf	status,0,c
  9014  001FD4  321E               	rrcf	___awdiv@divisor+1,f,c
  9015  001FD6  321D               	rrcf	___awdiv@divisor,f,c
  9016  001FD8  2E1F               	decfsz	___awdiv@counter,f,c
  9017  001FDA  D7ED               	goto	l3376
  9018  001FDC                     l3388:
  9019  001FDC  5020               	movf	___awdiv@sign,w,c
  9020  001FDE  B4D8               	btfsc	status,2,c
  9021  001FE0  D004               	goto	l3392
  9022  001FE2  6C21               	negf	___awdiv@quotient,c
  9023  001FE4  1E22               	comf	___awdiv@quotient+1,f,c
  9024  001FE6  B0D8               	btfsc	status,0,c
  9025  001FE8  2A22               	incf	___awdiv@quotient+1,f,c
  9026  001FEA                     l3392:
  9027  001FEA  C021  F01B         	movff	___awdiv@quotient,?___awdiv
  9028  001FEE  C022  F01C         	movff	___awdiv@quotient+1,?___awdiv+1
  9029  001FF2  0012               	return	
  9030  001FF4                     __end_of___awdiv:
  9031                           	opt stack 0
  9032                           tosu	equ	0xFFF
  9033                           tosh	equ	0xFFE
  9034                           tosl	equ	0xFFD
  9035                           pclath	equ	0xFFA
  9036                           tblptru	equ	0xFF8
  9037                           tblptrh	equ	0xFF7
  9038                           tblptrl	equ	0xFF6
  9039                           tablat	equ	0xFF5
  9040                           prodh	equ	0xFF4
  9041                           prodl	equ	0xFF3
  9042                           intcon	equ	0xFF2
  9043                           intcon2	equ	0xFF1
  9044                           postinc0	equ	0xFEE
  9045                           wreg	equ	0xFE8
  9046                           indf2	equ	0xFDF
  9047                           postinc2	equ	0xFDE
  9048                           postdec2	equ	0xFDD
  9049                           fsr2h	equ	0xFDA
  9050                           fsr2l	equ	0xFD9
  9051                           status	equ	0xFD8
  9052                           
  9053 ;; *************** function _LEDbegin *****************
  9054 ;; Defined at:
  9055 ;;		line 83 in file "LED_BarGraph.c"
  9056 ;; Parameters:    Size  Location     Type
  9057 ;;  i2c_addr        1    wreg     unsigned char 
  9058 ;; Auto vars:     Size  Location     Type
  9059 ;;  i2c_addr        1   13[BANK0 ] unsigned char 
  9060 ;;  writeBuffer     3    8[BANK0 ] unsigned char [3]
  9061 ;;  timeOut         2   11[BANK0 ] unsigned int 
  9062 ;;  status          1   14[BANK0 ] enum E8855
  9063 ;; Return value:  Size  Location     Type
  9064 ;;		None               void
  9065 ;; Registers used:
  9066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9067 ;; Tracked objects:
  9068 ;;		On entry : 0/0
  9069 ;;		On exit  : 0/0
  9070 ;;		Unchanged: 0/0
  9071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9072 ;;      Params:         0       0       0       0       0       0       0
  9073 ;;      Locals:         0       7       0       0       0       0       0
  9074 ;;      Temps:          0       0       0       0       0       0       0
  9075 ;;      Totals:         0       7       0       0       0       0       0
  9076 ;;Total ram usage:        7 bytes
  9077 ;; Hardware stack levels used:    1
  9078 ;; Hardware stack levels required when called:    7
  9079 ;; This function calls:
  9080 ;;		_I2C1_MasterWrite
  9081 ;;		_LEDBsetBrightness
  9082 ;;		_LEDblinkRate
  9083 ;; This function is called by:
  9084 ;;		_main
  9085 ;; This function uses a non-reentrant model
  9086 ;;
  9087                           
  9088                           	psect	text49
  9089  001FF4                     __ptext49:
  9090                           	opt stack 0
  9091  001FF4                     _LEDbegin:
  9092                           	opt stack 23
  9093                           
  9094                           ;incstack = 0
  9095                           ;LEDbegin@i2c_addr stored from wreg
  9096  001FF4  0100               	movlb	0	; () banked
  9097  001FF6  6FE0               	movwf	LEDbegin@i2c_addr& (0+255),b
  9098                           
  9099                           ; BSR set to: 0
  9100                           ;LED_BarGraph.c: 84: uint8_t writeBuffer[3];
  9101                           ;LED_BarGraph.c: 85: uint16_t timeOut;
  9102                           ;LED_BarGraph.c: 86: writeBuffer[0] = 0x21;
  9103  001FF8  0E21               	movlw	33
  9104  001FFA  0100               	movlb	0	; () banked
  9105  001FFC  6FDB               	movwf	LEDbegin@writeBuffer& (0+255),b
  9106                           
  9107                           ;LED_BarGraph.c: 87: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  9108  001FFE  0E02               	movlw	2
  9109  002000  0100               	movlb	0	; () banked
  9110  002002  6FE1               	movwf	LEDbegin@status& (0+255),b
  9111                           
  9112                           ;LED_BarGraph.c: 89: timeOut = 0;
  9113  002004  0E00               	movlw	0
  9114  002006  0100               	movlb	0	; () banked
  9115  002008  6FDF               	movwf	(LEDbegin@timeOut+1)& (0+255),b
  9116  00200A  0E00               	movlw	0
  9117  00200C  0100               	movlb	0	; () banked
  9118  00200E  6FDE               	movwf	LEDbegin@timeOut& (0+255),b
  9119                           
  9120                           ;LED_BarGraph.c: 90: while (status != I2C1_MESSAGE_FAIL) {
  9121  002010  D02A               	goto	l5188
  9122  002012                     l5170:
  9123                           
  9124                           ; BSR set to: 0
  9125                           ;LED_BarGraph.c: 92: I2C1_MasterWrite(&writeBuffer,
  9126                           ;LED_BarGraph.c: 93: 1,
  9127                           ;LED_BarGraph.c: 94: i2c_addr,
  9128                           ;LED_BarGraph.c: 95: &status);
  9129  002012  0100               	movlb	0	; () banked
  9130  002014  0E00               	movlw	high LEDbegin@writeBuffer
  9131  002016  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
  9132  002018  0100               	movlb	0	; () banked
  9133  00201A  0EDB               	movlw	low LEDbegin@writeBuffer
  9134  00201C  6E24               	movwf	I2C1_MasterWrite@pdata,c
  9135  00201E  0E01               	movlw	1
  9136  002020  6E26               	movwf	I2C1_MasterWrite@length,c
  9137  002022  0100               	movlb	0	; () banked
  9138  002024  C0E0  F027         	movff	LEDbegin@i2c_addr,I2C1_MasterWrite@address
  9139  002028  6A28               	clrf	I2C1_MasterWrite@address+1,c
  9140  00202A  0100               	movlb	0	; () banked
  9141  00202C  0E00               	movlw	high LEDbegin@status
  9142  00202E  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
  9143  002030  0100               	movlb	0	; () banked
  9144  002032  0EE1               	movlw	low LEDbegin@status
  9145  002034  6E29               	movwf	I2C1_MasterWrite@pflag,c
  9146  002036  EC3C  F013         	call	_I2C1_MasterWrite	;wreg free
  9147  00203A                     l5172:
  9148  00203A  0100               	movlb	0	; () banked
  9149  00203C  51E1               	movf	LEDbegin@status& (0+255),w,b
  9150  00203E  0A02               	xorlw	2
  9151  002040  B4D8               	btfsc	status,2,c
  9152  002042  D7FB               	goto	l5172
  9153                           
  9154                           ; BSR set to: 0
  9155                           ;LED_BarGraph.c: 100: if (status == I2C1_MESSAGE_COMPLETE)
  9156  002044  0100               	movlb	0	; () banked
  9157  002046  67E1               	tstfsz	LEDbegin@status& (0+255),b
  9158  002048  D001               	goto	l5176
  9159  00204A  D011               	goto	l5190
  9160  00204C                     l5176:
  9161                           
  9162                           ; BSR set to: 0
  9163                           ;LED_BarGraph.c: 102: if (timeOut == 100)
  9164  00204C  0100               	movlb	0	; () banked
  9165  00204E  51DE               	movf	LEDbegin@timeOut& (0+255),w,b
  9166  002050  0A64               	xorlw	100
  9167  002052  11DF               	iorwf	(LEDbegin@timeOut+1)& (0+255),w,b
  9168  002054  B4D8               	btfsc	status,2,c
  9169  002056  D00B               	goto	l5190
  9170                           
  9171                           ; BSR set to: 0
  9172                           ;LED_BarGraph.c: 104: if (status == I2C1_MESSAGE_FAIL)
  9173                           
  9174                           ; BSR set to: 0
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;LED_BarGraph.c: 103: break;
  9178  002058  0100               	movlb	0	; () banked
  9179  00205A  05E1               	decf	LEDbegin@status& (0+255),w,b
  9180  00205C  B4D8               	btfsc	status,2,c
  9181  00205E  D007               	goto	l5190
  9182                           
  9183                           ; BSR set to: 0
  9184                           ;LED_BarGraph.c: 106: else
  9185                           ;LED_BarGraph.c: 107: timeOut++;
  9186                           
  9187                           ; BSR set to: 0
  9188                           
  9189                           ; BSR set to: 0
  9190                           
  9191                           ; BSR set to: 0
  9192                           ;LED_BarGraph.c: 105: break;
  9193  002060  0100               	movlb	0	; () banked
  9194  002062  4BDE               	infsnz	LEDbegin@timeOut& (0+255),f,b
  9195  002064  2BDF               	incf	(LEDbegin@timeOut+1)& (0+255),f,b
  9196  002066                     l5188:
  9197                           
  9198                           ; BSR set to: 0
  9199  002066  0100               	movlb	0	; () banked
  9200  002068  05E1               	decf	LEDbegin@status& (0+255),w,b
  9201  00206A  A4D8               	btfss	status,2,c
  9202  00206C  D7D2               	goto	l5170
  9203  00206E                     l5190:
  9204                           
  9205                           ; BSR set to: 0
  9206                           ;LED_BarGraph.c: 108: }
  9207                           ;LED_BarGraph.c: 110: LEDblinkRate(0, i2c_addr);
  9208  00206E  0E00               	movlw	0
  9209  002070  0100               	movlb	0	; () banked
  9210  002072  6FD4               	movwf	(LEDblinkRate@b+1)& (0+255),b
  9211  002074  0E00               	movlw	0
  9212  002076  0100               	movlb	0	; () banked
  9213  002078  6FD3               	movwf	LEDblinkRate@b& (0+255),b
  9214  00207A  C0E0  F0D5         	movff	LEDbegin@i2c_addr,LEDblinkRate@i2c_addr
  9215  00207E  EC4C  F010         	call	_LEDblinkRate	;wreg free
  9216                           
  9217                           ;LED_BarGraph.c: 111: LEDBsetBrightness(15, i2c_addr);
  9218  002082  0E00               	movlw	0
  9219  002084  0100               	movlb	0	; () banked
  9220  002086  6FD4               	movwf	(LEDBsetBrightness@b+1)& (0+255),b
  9221  002088  0E0F               	movlw	15
  9222  00208A  0100               	movlb	0	; () banked
  9223  00208C  6FD3               	movwf	LEDBsetBrightness@b& (0+255),b
  9224  00208E  C0E0  F0D5         	movff	LEDbegin@i2c_addr,LEDBsetBrightness@i2c_addr
  9225  002092  EC9B  F010         	call	_LEDBsetBrightness	;wreg free
  9226  002096  0012               	return	
  9227  002098                     __end_of_LEDbegin:
  9228                           	opt stack 0
  9229                           tosu	equ	0xFFF
  9230                           tosh	equ	0xFFE
  9231                           tosl	equ	0xFFD
  9232                           pclath	equ	0xFFA
  9233                           tblptru	equ	0xFF8
  9234                           tblptrh	equ	0xFF7
  9235                           tblptrl	equ	0xFF6
  9236                           tablat	equ	0xFF5
  9237                           prodh	equ	0xFF4
  9238                           prodl	equ	0xFF3
  9239                           intcon	equ	0xFF2
  9240                           intcon2	equ	0xFF1
  9241                           postinc0	equ	0xFEE
  9242                           wreg	equ	0xFE8
  9243                           indf2	equ	0xFDF
  9244                           postinc2	equ	0xFDE
  9245                           postdec2	equ	0xFDD
  9246                           fsr2h	equ	0xFDA
  9247                           fsr2l	equ	0xFD9
  9248                           status	equ	0xFD8
  9249                           
  9250 ;; *************** function _LEDblinkRate *****************
  9251 ;; Defined at:
  9252 ;;		line 53 in file "LED_BarGraph.c"
  9253 ;; Parameters:    Size  Location     Type
  9254 ;;  b               2    0[BANK0 ] int 
  9255 ;;  i2c_addr        1    2[BANK0 ] unsigned char 
  9256 ;; Auto vars:     Size  Location     Type
  9257 ;;  writeBuffer     2    3[BANK0 ] unsigned char [2]
  9258 ;;  timeOut         2    5[BANK0 ] unsigned int 
  9259 ;;  status          1    7[BANK0 ] enum E8855
  9260 ;; Return value:  Size  Location     Type
  9261 ;;		None               void
  9262 ;; Registers used:
  9263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9264 ;; Tracked objects:
  9265 ;;		On entry : 0/0
  9266 ;;		On exit  : 0/0
  9267 ;;		Unchanged: 0/0
  9268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9269 ;;      Params:         0       3       0       0       0       0       0
  9270 ;;      Locals:         0       5       0       0       0       0       0
  9271 ;;      Temps:          0       0       0       0       0       0       0
  9272 ;;      Totals:         0       8       0       0       0       0       0
  9273 ;;Total ram usage:        8 bytes
  9274 ;; Hardware stack levels used:    1
  9275 ;; Hardware stack levels required when called:    6
  9276 ;; This function calls:
  9277 ;;		_I2C1_MasterWrite
  9278 ;; This function is called by:
  9279 ;;		_LEDbegin
  9280 ;; This function uses a non-reentrant model
  9281 ;;
  9282                           
  9283                           	psect	text50
  9284  002098                     __ptext50:
  9285                           	opt stack 0
  9286  002098                     _LEDblinkRate:
  9287                           	opt stack 23
  9288                           
  9289                           ;LED_BarGraph.c: 54: if (b > 3) b = 0;
  9290                           
  9291                           ;incstack = 0
  9292  002098  0100               	movlb	0	; () banked
  9293  00209A  51D4               	movf	(LEDblinkRate@b+1)& (0+255),w,b
  9294  00209C  0A80               	xorlw	128
  9295  00209E  0F80               	addlw	-128
  9296  0020A0  0E04               	movlw	4
  9297  0020A2  B4D8               	btfsc	status,2,c
  9298  0020A4  5DD3               	subwf	LEDblinkRate@b& (0+255),w,b
  9299  0020A6  A0D8               	btfss	status,0,c
  9300  0020A8  D006               	goto	l4780
  9301                           
  9302                           ; BSR set to: 0
  9303  0020AA  0E00               	movlw	0
  9304  0020AC  0100               	movlb	0	; () banked
  9305  0020AE  6FD4               	movwf	(LEDblinkRate@b+1)& (0+255),b
  9306  0020B0  0E00               	movlw	0
  9307  0020B2  0100               	movlb	0	; () banked
  9308  0020B4  6FD3               	movwf	LEDblinkRate@b& (0+255),b
  9309  0020B6                     l4780:
  9310                           
  9311                           ; BSR set to: 0
  9312                           ;LED_BarGraph.c: 55: uint8_t writeBuffer[2];
  9313                           ;LED_BarGraph.c: 56: uint16_t timeOut;
  9314                           ;LED_BarGraph.c: 57: writeBuffer[0] = (0x80 | 0x01 | (b << 1));
  9315  0020B6  0100               	movlb	0	; () banked
  9316  0020B8  51D3               	movf	LEDblinkRate@b& (0+255),w,b
  9317  0020BA  0100               	movlb	0	; () banked
  9318  0020BC  25D3               	addwf	LEDblinkRate@b& (0+255),w,b
  9319  0020BE  0981               	iorlw	129
  9320  0020C0  0100               	movlb	0	; () banked
  9321  0020C2  6FD6               	movwf	LEDblinkRate@writeBuffer& (0+255),b
  9322                           
  9323                           ; BSR set to: 0
  9324                           ;LED_BarGraph.c: 58: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  9325  0020C4  0E02               	movlw	2
  9326  0020C6  0100               	movlb	0	; () banked
  9327  0020C8  6FDA               	movwf	LEDblinkRate@status& (0+255),b
  9328                           
  9329                           ; BSR set to: 0
  9330                           ;LED_BarGraph.c: 60: timeOut = 0;
  9331  0020CA  0E00               	movlw	0
  9332  0020CC  0100               	movlb	0	; () banked
  9333  0020CE  6FD9               	movwf	(LEDblinkRate@timeOut+1)& (0+255),b
  9334  0020D0  0E00               	movlw	0
  9335  0020D2  0100               	movlb	0	; () banked
  9336  0020D4  6FD8               	movwf	LEDblinkRate@timeOut& (0+255),b
  9337                           
  9338                           ;LED_BarGraph.c: 61: while (status != I2C1_MESSAGE_FAIL) {
  9339  0020D6  D02A               	goto	l4804
  9340  0020D8                     l4786:
  9341                           
  9342                           ; BSR set to: 0
  9343                           ;LED_BarGraph.c: 63: I2C1_MasterWrite(&writeBuffer,
  9344                           ;LED_BarGraph.c: 64: 1,
  9345                           ;LED_BarGraph.c: 65: i2c_addr,
  9346                           ;LED_BarGraph.c: 66: &status);
  9347  0020D8  0100               	movlb	0	; () banked
  9348  0020DA  0E00               	movlw	high LEDblinkRate@writeBuffer
  9349  0020DC  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
  9350  0020DE  0100               	movlb	0	; () banked
  9351  0020E0  0ED6               	movlw	low LEDblinkRate@writeBuffer
  9352  0020E2  6E24               	movwf	I2C1_MasterWrite@pdata,c
  9353  0020E4  0E01               	movlw	1
  9354  0020E6  6E26               	movwf	I2C1_MasterWrite@length,c
  9355  0020E8  0100               	movlb	0	; () banked
  9356  0020EA  C0D5  F027         	movff	LEDblinkRate@i2c_addr,I2C1_MasterWrite@address
  9357  0020EE  6A28               	clrf	I2C1_MasterWrite@address+1,c
  9358  0020F0  0100               	movlb	0	; () banked
  9359  0020F2  0E00               	movlw	high LEDblinkRate@status
  9360  0020F4  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
  9361  0020F6  0100               	movlb	0	; () banked
  9362  0020F8  0EDA               	movlw	low LEDblinkRate@status
  9363  0020FA  6E29               	movwf	I2C1_MasterWrite@pflag,c
  9364  0020FC  EC3C  F013         	call	_I2C1_MasterWrite	;wreg free
  9365  002100                     l4788:
  9366  002100  0100               	movlb	0	; () banked
  9367  002102  51DA               	movf	LEDblinkRate@status& (0+255),w,b
  9368  002104  0A02               	xorlw	2
  9369  002106  B4D8               	btfsc	status,2,c
  9370  002108  D7FB               	goto	l4788
  9371                           
  9372                           ; BSR set to: 0
  9373                           ;LED_BarGraph.c: 71: if (status == I2C1_MESSAGE_COMPLETE)
  9374  00210A  0100               	movlb	0	; () banked
  9375  00210C  67DA               	tstfsz	LEDblinkRate@status& (0+255),b
  9376  00210E  D001               	goto	l4792
  9377  002110  0012               	return	
  9378  002112                     l4792:
  9379                           
  9380                           ; BSR set to: 0
  9381                           ;LED_BarGraph.c: 73: if (timeOut == 100)
  9382  002112  0100               	movlb	0	; () banked
  9383  002114  51D8               	movf	LEDblinkRate@timeOut& (0+255),w,b
  9384  002116  0A64               	xorlw	100
  9385  002118  11D9               	iorwf	(LEDblinkRate@timeOut+1)& (0+255),w,b
  9386  00211A  B4D8               	btfsc	status,2,c
  9387  00211C  0012               	return	
  9388                           
  9389                           ; BSR set to: 0
  9390                           ;LED_BarGraph.c: 75: if (status == I2C1_MESSAGE_FAIL)
  9391                           
  9392                           ; BSR set to: 0
  9393                           
  9394                           ; BSR set to: 0
  9395                           ;LED_BarGraph.c: 74: break;
  9396  00211E  0100               	movlb	0	; () banked
  9397  002120  05DA               	decf	LEDblinkRate@status& (0+255),w,b
  9398  002122  B4D8               	btfsc	status,2,c
  9399  002124  0012               	return	
  9400                           
  9401                           ; BSR set to: 0
  9402                           ;LED_BarGraph.c: 77: else
  9403                           ;LED_BarGraph.c: 78: timeOut++;
  9404                           
  9405                           ; BSR set to: 0
  9406                           
  9407                           ; BSR set to: 0
  9408                           
  9409                           ; BSR set to: 0
  9410                           ;LED_BarGraph.c: 76: break;
  9411  002126  0100               	movlb	0	; () banked
  9412  002128  4BD8               	infsnz	LEDblinkRate@timeOut& (0+255),f,b
  9413  00212A  2BD9               	incf	(LEDblinkRate@timeOut+1)& (0+255),f,b
  9414  00212C                     l4804:
  9415                           
  9416                           ; BSR set to: 0
  9417  00212C  0100               	movlb	0	; () banked
  9418  00212E  05DA               	decf	LEDblinkRate@status& (0+255),w,b
  9419  002130  B4D8               	btfsc	status,2,c
  9420                           
  9421                           ; BSR set to: 0
  9422                           
  9423                           ; BSR set to: 0
  9424  002132  0012               	return	
  9425  002134  D7D1               	goto	l4786
  9426  002136                     __end_of_LEDblinkRate:
  9427                           	opt stack 0
  9428                           tosu	equ	0xFFF
  9429                           tosh	equ	0xFFE
  9430                           tosl	equ	0xFFD
  9431                           pclath	equ	0xFFA
  9432                           tblptru	equ	0xFF8
  9433                           tblptrh	equ	0xFF7
  9434                           tblptrl	equ	0xFF6
  9435                           tablat	equ	0xFF5
  9436                           prodh	equ	0xFF4
  9437                           prodl	equ	0xFF3
  9438                           intcon	equ	0xFF2
  9439                           intcon2	equ	0xFF1
  9440                           postinc0	equ	0xFEE
  9441                           wreg	equ	0xFE8
  9442                           indf2	equ	0xFDF
  9443                           postinc2	equ	0xFDE
  9444                           postdec2	equ	0xFDD
  9445                           fsr2h	equ	0xFDA
  9446                           fsr2l	equ	0xFD9
  9447                           status	equ	0xFD8
  9448                           
  9449 ;; *************** function _LEDBsetBrightness *****************
  9450 ;; Defined at:
  9451 ;;		line 23 in file "LED_BarGraph.c"
  9452 ;; Parameters:    Size  Location     Type
  9453 ;;  b               2    0[BANK0 ] int 
  9454 ;;  i2c_addr        1    2[BANK0 ] unsigned char 
  9455 ;; Auto vars:     Size  Location     Type
  9456 ;;  writeBuffer     2    3[BANK0 ] unsigned char [2]
  9457 ;;  timeOut         2    5[BANK0 ] unsigned int 
  9458 ;;  status          1    7[BANK0 ] enum E8855
  9459 ;; Return value:  Size  Location     Type
  9460 ;;		None               void
  9461 ;; Registers used:
  9462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9463 ;; Tracked objects:
  9464 ;;		On entry : 0/0
  9465 ;;		On exit  : 0/0
  9466 ;;		Unchanged: 0/0
  9467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9468 ;;      Params:         0       3       0       0       0       0       0
  9469 ;;      Locals:         0       5       0       0       0       0       0
  9470 ;;      Temps:          0       0       0       0       0       0       0
  9471 ;;      Totals:         0       8       0       0       0       0       0
  9472 ;;Total ram usage:        8 bytes
  9473 ;; Hardware stack levels used:    1
  9474 ;; Hardware stack levels required when called:    6
  9475 ;; This function calls:
  9476 ;;		_I2C1_MasterWrite
  9477 ;; This function is called by:
  9478 ;;		_LEDbegin
  9479 ;; This function uses a non-reentrant model
  9480 ;;
  9481                           
  9482                           	psect	text51
  9483  002136                     __ptext51:
  9484                           	opt stack 0
  9485  002136                     _LEDBsetBrightness:
  9486                           	opt stack 23
  9487                           
  9488                           ;LED_BarGraph.c: 24: if (b > 15) b = 15;
  9489                           
  9490                           ; BSR set to: 0
  9491                           ;incstack = 0
  9492  002136  0100               	movlb	0	; () banked
  9493  002138  51D4               	movf	(LEDBsetBrightness@b+1)& (0+255),w,b
  9494  00213A  0A80               	xorlw	128
  9495  00213C  0F80               	addlw	-128
  9496  00213E  0E10               	movlw	16
  9497  002140  B4D8               	btfsc	status,2,c
  9498  002142  5DD3               	subwf	LEDBsetBrightness@b& (0+255),w,b
  9499  002144  A0D8               	btfss	status,0,c
  9500  002146  D006               	goto	l4750
  9501                           
  9502                           ; BSR set to: 0
  9503  002148  0E00               	movlw	0
  9504  00214A  0100               	movlb	0	; () banked
  9505  00214C  6FD4               	movwf	(LEDBsetBrightness@b+1)& (0+255),b
  9506  00214E  0E0F               	movlw	15
  9507  002150  0100               	movlb	0	; () banked
  9508  002152  6FD3               	movwf	LEDBsetBrightness@b& (0+255),b
  9509  002154                     l4750:
  9510                           
  9511                           ; BSR set to: 0
  9512                           ;LED_BarGraph.c: 25: uint8_t writeBuffer[2];
  9513                           ;LED_BarGraph.c: 26: uint16_t timeOut;
  9514                           ;LED_BarGraph.c: 27: writeBuffer[0] = (0xE0 | b);
  9515  002154  0100               	movlb	0	; () banked
  9516  002156  51D3               	movf	LEDBsetBrightness@b& (0+255),w,b
  9517  002158  09E0               	iorlw	224
  9518  00215A  0100               	movlb	0	; () banked
  9519  00215C  6FD6               	movwf	LEDBsetBrightness@writeBuffer& (0+255),b
  9520                           
  9521                           ; BSR set to: 0
  9522                           ;LED_BarGraph.c: 28: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  9523  00215E  0E02               	movlw	2
  9524  002160  0100               	movlb	0	; () banked
  9525  002162  6FDA               	movwf	LEDBsetBrightness@status& (0+255),b
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;LED_BarGraph.c: 30: timeOut = 0;
  9529  002164  0E00               	movlw	0
  9530  002166  0100               	movlb	0	; () banked
  9531  002168  6FD9               	movwf	(LEDBsetBrightness@timeOut+1)& (0+255),b
  9532  00216A  0E00               	movlw	0
  9533  00216C  0100               	movlb	0	; () banked
  9534  00216E  6FD8               	movwf	LEDBsetBrightness@timeOut& (0+255),b
  9535                           
  9536                           ;LED_BarGraph.c: 31: while (status != I2C1_MESSAGE_FAIL) {
  9537  002170  D02A               	goto	l4774
  9538  002172                     l4756:
  9539                           
  9540                           ; BSR set to: 0
  9541                           ;LED_BarGraph.c: 33: I2C1_MasterWrite(&writeBuffer,
  9542                           ;LED_BarGraph.c: 34: 1,
  9543                           ;LED_BarGraph.c: 35: i2c_addr,
  9544                           ;LED_BarGraph.c: 36: &status);
  9545  002172  0100               	movlb	0	; () banked
  9546  002174  0E00               	movlw	high LEDBsetBrightness@writeBuffer
  9547  002176  6E25               	movwf	I2C1_MasterWrite@pdata+1,c
  9548  002178  0100               	movlb	0	; () banked
  9549  00217A  0ED6               	movlw	low LEDBsetBrightness@writeBuffer
  9550  00217C  6E24               	movwf	I2C1_MasterWrite@pdata,c
  9551  00217E  0E01               	movlw	1
  9552  002180  6E26               	movwf	I2C1_MasterWrite@length,c
  9553  002182  0100               	movlb	0	; () banked
  9554  002184  C0D5  F027         	movff	LEDBsetBrightness@i2c_addr,I2C1_MasterWrite@address
  9555  002188  6A28               	clrf	I2C1_MasterWrite@address+1,c
  9556  00218A  0100               	movlb	0	; () banked
  9557  00218C  0E00               	movlw	high LEDBsetBrightness@status
  9558  00218E  6E2A               	movwf	I2C1_MasterWrite@pflag+1,c
  9559  002190  0100               	movlb	0	; () banked
  9560  002192  0EDA               	movlw	low LEDBsetBrightness@status
  9561  002194  6E29               	movwf	I2C1_MasterWrite@pflag,c
  9562  002196  EC3C  F013         	call	_I2C1_MasterWrite	;wreg free
  9563  00219A                     l4758:
  9564  00219A  0100               	movlb	0	; () banked
  9565  00219C  51DA               	movf	LEDBsetBrightness@status& (0+255),w,b
  9566  00219E  0A02               	xorlw	2
  9567  0021A0  B4D8               	btfsc	status,2,c
  9568  0021A2  D7FB               	goto	l4758
  9569                           
  9570                           ; BSR set to: 0
  9571                           ;LED_BarGraph.c: 41: if (status == I2C1_MESSAGE_COMPLETE)
  9572  0021A4  0100               	movlb	0	; () banked
  9573  0021A6  67DA               	tstfsz	LEDBsetBrightness@status& (0+255),b
  9574  0021A8  D001               	goto	l4762
  9575  0021AA  0012               	return	
  9576  0021AC                     l4762:
  9577                           
  9578                           ; BSR set to: 0
  9579                           ;LED_BarGraph.c: 43: if (timeOut == 100)
  9580  0021AC  0100               	movlb	0	; () banked
  9581  0021AE  51D8               	movf	LEDBsetBrightness@timeOut& (0+255),w,b
  9582  0021B0  0A64               	xorlw	100
  9583  0021B2  11D9               	iorwf	(LEDBsetBrightness@timeOut+1)& (0+255),w,b
  9584  0021B4  B4D8               	btfsc	status,2,c
  9585  0021B6  0012               	return	
  9586                           
  9587                           ; BSR set to: 0
  9588                           ;LED_BarGraph.c: 45: if (status == I2C1_MESSAGE_FAIL)
  9589                           
  9590                           ; BSR set to: 0
  9591                           
  9592                           ; BSR set to: 0
  9593                           ;LED_BarGraph.c: 44: break;
  9594  0021B8  0100               	movlb	0	; () banked
  9595  0021BA  05DA               	decf	LEDBsetBrightness@status& (0+255),w,b
  9596  0021BC  B4D8               	btfsc	status,2,c
  9597  0021BE  0012               	return	
  9598                           
  9599                           ; BSR set to: 0
  9600                           ;LED_BarGraph.c: 47: else
  9601                           ;LED_BarGraph.c: 48: timeOut++;
  9602                           
  9603                           ; BSR set to: 0
  9604                           
  9605                           ; BSR set to: 0
  9606                           
  9607                           ; BSR set to: 0
  9608                           ;LED_BarGraph.c: 46: break;
  9609  0021C0  0100               	movlb	0	; () banked
  9610  0021C2  4BD8               	infsnz	LEDBsetBrightness@timeOut& (0+255),f,b
  9611  0021C4  2BD9               	incf	(LEDBsetBrightness@timeOut+1)& (0+255),f,b
  9612  0021C6                     l4774:
  9613                           
  9614                           ; BSR set to: 0
  9615  0021C6  0100               	movlb	0	; () banked
  9616  0021C8  05DA               	decf	LEDBsetBrightness@status& (0+255),w,b
  9617  0021CA  B4D8               	btfsc	status,2,c
  9618                           
  9619                           ; BSR set to: 0
  9620                           
  9621                           ; BSR set to: 0
  9622  0021CC  0012               	return	
  9623  0021CE  D7D1               	goto	l4756
  9624  0021D0                     __end_of_LEDBsetBrightness:
  9625                           	opt stack 0
  9626                           tosu	equ	0xFFF
  9627                           tosh	equ	0xFFE
  9628                           tosl	equ	0xFFD
  9629                           pclath	equ	0xFFA
  9630                           tblptru	equ	0xFF8
  9631                           tblptrh	equ	0xFF7
  9632                           tblptrl	equ	0xFF6
  9633                           tablat	equ	0xFF5
  9634                           prodh	equ	0xFF4
  9635                           prodl	equ	0xFF3
  9636                           intcon	equ	0xFF2
  9637                           intcon2	equ	0xFF1
  9638                           postinc0	equ	0xFEE
  9639                           wreg	equ	0xFE8
  9640                           indf2	equ	0xFDF
  9641                           postinc2	equ	0xFDE
  9642                           postdec2	equ	0xFDD
  9643                           fsr2h	equ	0xFDA
  9644                           fsr2l	equ	0xFD9
  9645                           status	equ	0xFD8
  9646                           
  9647 ;; *************** function _I2C1_MasterWrite *****************
  9648 ;; Defined at:
  9649 ;;		line 551 in file "mcc_generated_files/i2c1.c"
  9650 ;; Parameters:    Size  Location     Type
  9651 ;;  pdata           2   35[COMRAM] PTR unsigned char 
  9652 ;;		 -> LEDwriteDisplay@writeBuffer(20), LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBu
      +ffer(2), 
  9653 ;;  length          1   37[COMRAM] unsigned char 
  9654 ;;  address         2   38[COMRAM] unsigned int 
  9655 ;;  pflag           2   40[COMRAM] PTR enum E8836
  9656 ;;		 -> LEDwriteDisplay@status(1), LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
  9657 ;; Auto vars:     Size  Location     Type
  9658 ;;		None
  9659 ;; Return value:  Size  Location     Type
  9660 ;;		None               void
  9661 ;; Registers used:
  9662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9663 ;; Tracked objects:
  9664 ;;		On entry : 0/0
  9665 ;;		On exit  : 0/0
  9666 ;;		Unchanged: 0/0
  9667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9668 ;;      Params:         7       0       0       0       0       0       0
  9669 ;;      Locals:         0       0       0       0       0       0       0
  9670 ;;      Temps:          0       0       0       0       0       0       0
  9671 ;;      Totals:         7       0       0       0       0       0       0
  9672 ;;Total ram usage:        7 bytes
  9673 ;; Hardware stack levels used:    1
  9674 ;; Hardware stack levels required when called:    5
  9675 ;; This function calls:
  9676 ;;		_I2C1_MasterTRBInsert
  9677 ;;		_I2C1_MasterWriteTRBBuild
  9678 ;; This function is called by:
  9679 ;;		_LEDBsetBrightness
  9680 ;;		_LEDblinkRate
  9681 ;;		_LEDbegin
  9682 ;;		_LEDwriteDisplay
  9683 ;; This function uses a non-reentrant model
  9684 ;;
  9685                           
  9686                           	psect	text52
  9687  002678                     __ptext52:
  9688                           	opt stack 0
  9689  002678                     _I2C1_MasterWrite:
  9690                           	opt stack 24
  9691                           
  9692                           ;i2c1.c: 557: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
  9693                           ;i2c1.c: 560: if (i2c1_object.trStatus.s.full != 1)
  9694                           
  9695                           ; BSR set to: 0
  9696                           ;incstack = 0
  9697  002678  0100               	movlb	0	; () banked
  9698  00267A  B194               	btfsc	(_i2c1_object+4)& (0+255),0,b
  9699  00267C  D020               	goto	l4610
  9700                           
  9701                           ; BSR set to: 0
  9702                           ;i2c1.c: 561: {
  9703                           ;i2c1.c: 562: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
  9704  00267E  0100               	movlb	0	; () banked
  9705  002680  0E00               	movlw	high I2C1_MasterWrite@trBlock
  9706  002682  6E1C               	movwf	I2C1_MasterWriteTRBBuild@ptrb+1,c
  9707  002684  0100               	movlb	0	; () banked
  9708  002686  0EC9               	movlw	low I2C1_MasterWrite@trBlock
  9709  002688  6E1B               	movwf	I2C1_MasterWriteTRBBuild@ptrb,c
  9710  00268A  C025  F01E         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
  9711  00268E  C024  F01D         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
  9712  002692  C026  F01F         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
  9713  002696  C027  F020         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
  9714  00269A  C028  F021         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
  9715  00269E  EC3F  F014         	call	_I2C1_MasterWriteTRBBuild	;wreg free
  9716                           
  9717                           ;i2c1.c: 563: I2C1_MasterTRBInsert(1, &trBlock, pflag);
  9718  0026A2  0100               	movlb	0	; () banked
  9719  0026A4  0E00               	movlw	high I2C1_MasterWrite@trBlock
  9720  0026A6  6E1C               	movwf	I2C1_MasterTRBInsert@ptrb_list+1,c
  9721  0026A8  0100               	movlb	0	; () banked
  9722  0026AA  0EC9               	movlw	low I2C1_MasterWrite@trBlock
  9723  0026AC  6E1B               	movwf	I2C1_MasterTRBInsert@ptrb_list,c
  9724  0026AE  C02A  F01E         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
  9725  0026B2  C029  F01D         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
  9726  0026B6  0E01               	movlw	1
  9727  0026B8  EC92  F00E         	call	_I2C1_MasterTRBInsert
  9728                           
  9729                           ;i2c1.c: 564: }
  9730  0026BC  0012               	return	
  9731  0026BE                     l4610:
  9732                           
  9733                           ;i2c1.c: 565: else
  9734                           ;i2c1.c: 566: {
  9735                           ;i2c1.c: 567: *pflag = I2C1_MESSAGE_FAIL;
  9736  0026BE  C029  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
  9737  0026C2  C02A  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
  9738  0026C6  0E01               	movlw	1
  9739  0026C8  6EDF               	movwf	indf2,c
  9740  0026CA  0012               	return	
  9741  0026CC                     __end_of_I2C1_MasterWrite:
  9742                           	opt stack 0
  9743                           tosu	equ	0xFFF
  9744                           tosh	equ	0xFFE
  9745                           tosl	equ	0xFFD
  9746                           pclath	equ	0xFFA
  9747                           tblptru	equ	0xFF8
  9748                           tblptrh	equ	0xFF7
  9749                           tblptrl	equ	0xFF6
  9750                           tablat	equ	0xFF5
  9751                           prodh	equ	0xFF4
  9752                           prodl	equ	0xFF3
  9753                           intcon	equ	0xFF2
  9754                           intcon2	equ	0xFF1
  9755                           postinc0	equ	0xFEE
  9756                           wreg	equ	0xFE8
  9757                           indf2	equ	0xFDF
  9758                           postinc2	equ	0xFDE
  9759                           postdec2	equ	0xFDD
  9760                           fsr2h	equ	0xFDA
  9761                           fsr2l	equ	0xFD9
  9762                           status	equ	0xFD8
  9763                           
  9764 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
  9765 ;; Defined at:
  9766 ;;		line 660 in file "mcc_generated_files/i2c1.c"
  9767 ;; Parameters:    Size  Location     Type
  9768 ;;  ptrb            2   26[COMRAM] PTR struct .
  9769 ;;		 -> I2C1_MasterWrite@trBlock(5), 
  9770 ;;  pdata           2   28[COMRAM] PTR unsigned char 
  9771 ;;		 -> LEDwriteDisplay@writeBuffer(20), LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBu
      +ffer(2), 
  9772 ;;  length          1   30[COMRAM] unsigned char 
  9773 ;;  address         2   31[COMRAM] unsigned int 
  9774 ;; Auto vars:     Size  Location     Type
  9775 ;;		None
  9776 ;; Return value:  Size  Location     Type
  9777 ;;		None               void
  9778 ;; Registers used:
  9779 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9780 ;; Tracked objects:
  9781 ;;		On entry : 0/0
  9782 ;;		On exit  : 0/0
  9783 ;;		Unchanged: 0/0
  9784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9785 ;;      Params:         7       0       0       0       0       0       0
  9786 ;;      Locals:         0       0       0       0       0       0       0
  9787 ;;      Temps:          2       0       0       0       0       0       0
  9788 ;;      Totals:         9       0       0       0       0       0       0
  9789 ;;Total ram usage:        9 bytes
  9790 ;; Hardware stack levels used:    1
  9791 ;; Hardware stack levels required when called:    4
  9792 ;; This function calls:
  9793 ;;		Nothing
  9794 ;; This function is called by:
  9795 ;;		_I2C1_MasterWrite
  9796 ;; This function uses a non-reentrant model
  9797 ;;
  9798                           
  9799                           	psect	text53
  9800  00287E                     __ptext53:
  9801                           	opt stack 0
  9802  00287E                     _I2C1_MasterWriteTRBBuild:
  9803                           	opt stack 24
  9804                           
  9805                           ;i2c1.c: 666: ptrb->address = address << 1;
  9806                           
  9807                           ;incstack = 0
  9808  00287E  C020  F022         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
  9809  002882  C021  F023         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
  9810  002886  90D8               	bcf	status,0,c
  9811  002888  3622               	rlcf	??_I2C1_MasterWriteTRBBuild,f,c
  9812  00288A  3623               	rlcf	??_I2C1_MasterWriteTRBBuild+1,f,c
  9813  00288C  C01B  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
  9814  002890  C01C  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
  9815  002894  C022  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
  9816  002898  C023  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
  9817                           
  9818                           ;i2c1.c: 667: ptrb->length = length;
  9819  00289C  EE20 F002          	lfsr	2,2
  9820  0028A0  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
  9821  0028A2  26D9               	addwf	fsr2l,f,c
  9822  0028A4  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
  9823  0028A6  22DA               	addwfc	fsr2h,f,c
  9824  0028A8  C01F  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
  9825                           
  9826                           ;i2c1.c: 668: ptrb->pbuffer = pdata;
  9827  0028AC  EE20 F003          	lfsr	2,3
  9828  0028B0  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
  9829  0028B2  26D9               	addwf	fsr2l,f,c
  9830  0028B4  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
  9831  0028B6  22DA               	addwfc	fsr2h,f,c
  9832  0028B8  C01D  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
  9833  0028BC  C01E  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
  9834  0028C0  0012               	return	
  9835  0028C2                     __end_of_I2C1_MasterWriteTRBBuild:
  9836                           	opt stack 0
  9837                           tosu	equ	0xFFF
  9838                           tosh	equ	0xFFE
  9839                           tosl	equ	0xFFD
  9840                           pclath	equ	0xFFA
  9841                           tblptru	equ	0xFF8
  9842                           tblptrh	equ	0xFF7
  9843                           tblptrl	equ	0xFF6
  9844                           tablat	equ	0xFF5
  9845                           prodh	equ	0xFF4
  9846                           prodl	equ	0xFF3
  9847                           intcon	equ	0xFF2
  9848                           intcon2	equ	0xFF1
  9849                           postinc0	equ	0xFEE
  9850                           wreg	equ	0xFE8
  9851                           indf2	equ	0xFDF
  9852                           postinc2	equ	0xFDE
  9853                           postdec2	equ	0xFDD
  9854                           fsr2h	equ	0xFDA
  9855                           fsr2l	equ	0xFD9
  9856                           status	equ	0xFD8
  9857                           
  9858 ;; *************** function _I2C1_MasterTRBInsert *****************
  9859 ;; Defined at:
  9860 ;;		line 594 in file "mcc_generated_files/i2c1.c"
  9861 ;; Parameters:    Size  Location     Type
  9862 ;;  count           1    wreg     unsigned char 
  9863 ;;  ptrb_list       2   26[COMRAM] PTR struct .
  9864 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
  9865 ;;  pflag           2   28[COMRAM] PTR enum E8836
  9866 ;;		 -> LEDwriteDisplay@status(1), LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
  9867 ;; Auto vars:     Size  Location     Type
  9868 ;;  count           1   32[COMRAM] unsigned char 
  9869 ;; Return value:  Size  Location     Type
  9870 ;;		None               void
  9871 ;; Registers used:
  9872 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9873 ;; Tracked objects:
  9874 ;;		On entry : 0/0
  9875 ;;		On exit  : 0/0
  9876 ;;		Unchanged: 0/0
  9877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9878 ;;      Params:         4       0       0       0       0       0       0
  9879 ;;      Locals:         1       0       0       0       0       0       0
  9880 ;;      Temps:          2       0       0       0       0       0       0
  9881 ;;      Totals:         7       0       0       0       0       0       0
  9882 ;;Total ram usage:        7 bytes
  9883 ;; Hardware stack levels used:    1
  9884 ;; Hardware stack levels required when called:    4
  9885 ;; This function calls:
  9886 ;;		Nothing
  9887 ;; This function is called by:
  9888 ;;		_I2C1_MasterWrite
  9889 ;;		_I2C1_MasterRead
  9890 ;; This function uses a non-reentrant model
  9891 ;;
  9892                           
  9893                           	psect	text54
  9894  001D24                     __ptext54:
  9895                           	opt stack 0
  9896  001D24                     _I2C1_MasterTRBInsert:
  9897                           	opt stack 24
  9898                           
  9899                           ;incstack = 0
  9900                           ;I2C1_MasterTRBInsert@count stored from wreg
  9901  001D24  6E21               	movwf	I2C1_MasterTRBInsert@count,c
  9902                           
  9903                           ;i2c1.c: 601: if (i2c1_object.trStatus.s.full != 1)
  9904  001D26  0100               	movlb	0	; () banked
  9905  001D28  B194               	btfsc	(_i2c1_object+4)& (0+255),0,b
  9906  001D2A  D055               	goto	l4508
  9907                           
  9908                           ; BSR set to: 0
  9909                           ;i2c1.c: 602: {
  9910                           ;i2c1.c: 603: *pflag = I2C1_MESSAGE_PENDING;
  9911  001D2C  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
  9912  001D30  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
  9913  001D34  0E02               	movlw	2
  9914  001D36  6EDF               	movwf	indf2,c
  9915                           
  9916                           ; BSR set to: 0
  9917                           ;i2c1.c: 605: i2c1_object.pTrTail->ptrb_list = ptrb_list;
  9918  001D38  0100               	movlb	0	; () banked
  9919  001D3A  EE20 F001          	lfsr	2,1
  9920  001D3E  0100               	movlb	0	; () banked
  9921  001D40  5190               	movf	_i2c1_object& (0+255),w,b
  9922  001D42  26D9               	addwf	fsr2l,f,c
  9923  001D44  0100               	movlb	0	; () banked
  9924  001D46  5191               	movf	(_i2c1_object+1)& (0+255),w,b
  9925  001D48  22DA               	addwfc	fsr2h,f,c
  9926  001D4A  C01B  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
  9927  001D4E  C01C  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
  9928                           
  9929                           ; BSR set to: 0
  9930                           ;i2c1.c: 606: i2c1_object.pTrTail->count = count;
  9931  001D52  C090  FFD9         	movff	_i2c1_object,fsr2l
  9932  001D56  C091  FFDA         	movff	_i2c1_object+1,fsr2h
  9933  001D5A  C021  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
  9934                           
  9935                           ; BSR set to: 0
  9936                           ;i2c1.c: 607: i2c1_object.pTrTail->pTrFlag = pflag;
  9937  001D5E  0100               	movlb	0	; () banked
  9938  001D60  EE20 F003          	lfsr	2,3
  9939  001D64  0100               	movlb	0	; () banked
  9940  001D66  5190               	movf	_i2c1_object& (0+255),w,b
  9941  001D68  26D9               	addwf	fsr2l,f,c
  9942  001D6A  0100               	movlb	0	; () banked
  9943  001D6C  5191               	movf	(_i2c1_object+1)& (0+255),w,b
  9944  001D6E  22DA               	addwfc	fsr2h,f,c
  9945  001D70  C01D  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
  9946  001D74  C01E  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
  9947                           
  9948                           ; BSR set to: 0
  9949                           ;i2c1.c: 608: i2c1_object.pTrTail++;
  9950  001D78  0E05               	movlw	5
  9951  001D7A  0100               	movlb	0	; () banked
  9952  001D7C  2790               	addwf	_i2c1_object& (0+255),f,b
  9953  001D7E  0E00               	movlw	0
  9954  001D80  0100               	movlb	0	; () banked
  9955  001D82  2391               	addwfc	(_i2c1_object+1)& (0+255),f,b
  9956                           
  9957                           ; BSR set to: 0
  9958                           ;i2c1.c: 611: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
  9959  001D84  0ED3               	movlw	low (_i2c1_tr_queue+5)
  9960  001D86  6E1F               	movwf	??_I2C1_MasterTRBInsert& (0+255),c
  9961  001D88  0E00               	movlw	high (_i2c1_tr_queue+5)
  9962  001D8A  6E20               	movwf	(??_I2C1_MasterTRBInsert+1)& (0+255),c
  9963  001D8C  5020               	movf	??_I2C1_MasterTRBInsert+1,w,c
  9964  001D8E  0100               	movlb	0	; () banked
  9965  001D90  1991               	xorwf	(_i2c1_object+1)& (0+255),w,b
  9966  001D92  E103               	bnz	u4755
  9967  001D94  501F               	movf	??_I2C1_MasterTRBInsert,w,c
  9968  001D96  0100               	movlb	0	; () banked
  9969  001D98  1990               	xorwf	_i2c1_object& (0+255),w,b
  9970  001D9A                     u4755:
  9971  001D9A  A4D8               	btfss	status,2,c
  9972  001D9C  D008               	goto	l4502
  9973                           
  9974                           ; BSR set to: 0
  9975                           ;i2c1.c: 612: {
  9976                           ;i2c1.c: 614: i2c1_object.pTrTail = i2c1_tr_queue;
  9977  001D9E  0100               	movlb	0	; () banked
  9978  001DA0  0E00               	movlw	high _i2c1_tr_queue
  9979  001DA2  0100               	movlb	0	; () banked
  9980  001DA4  6F91               	movwf	(_i2c1_object+1)& (0+255),b
  9981  001DA6  0100               	movlb	0	; () banked
  9982  001DA8  0ECE               	movlw	low _i2c1_tr_queue
  9983  001DAA  0100               	movlb	0	; () banked
  9984  001DAC  6F90               	movwf	_i2c1_object& (0+255),b
  9985  001DAE                     l4502:
  9986                           
  9987                           ; BSR set to: 0
  9988                           ;i2c1.c: 615: }
  9989                           ;i2c1.c: 619: i2c1_object.trStatus.s.empty = 0;
  9990  001DAE  0100               	movlb	0	; () banked
  9991  001DB0  9394               	bcf	(_i2c1_object+4)& (0+255),1,b
  9992                           
  9993                           ; BSR set to: 0
  9994                           ;i2c1.c: 622: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
  9995  001DB2  0100               	movlb	0	; () banked
  9996  001DB4  EE20  F092         	lfsr	2,_i2c1_object+2
  9997  001DB8  0100               	movlb	0	; () banked
  9998  001DBA  52DE               	movf	postinc2,f,c
  9999  001DBC  0100               	movlb	0	; () banked
 10000  001DBE  5191               	movf	(_i2c1_object+1)& (0+255),w,b
 10001  001DC0  18DD               	xorwf	postdec2,w,c
 10002  001DC2  0100               	movlb	0	; () banked
 10003  001DC4  C090  FFE8         	movff	_i2c1_object,wreg
 10004  001DC8  B4D8               	btfsc	status,2,c
 10005  001DCA  18DF               	xorwf	indf2,w,c
 10006  001DCC  A4D8               	btfss	status,2,c
 10007  001DCE  D009               	goto	l127
 10008                           
 10009                           ; BSR set to: 0
 10010                           ;i2c1.c: 623: {
 10011                           ;i2c1.c: 625: i2c1_object.trStatus.s.full = 1;
 10012  001DD0  0100               	movlb	0	; () banked
 10013  001DD2  8194               	bsf	(_i2c1_object+4)& (0+255),0,b
 10014  001DD4  D006               	goto	l127
 10015  001DD6                     l4508:
 10016                           
 10017                           ; BSR set to: 0
 10018                           ;i2c1.c: 629: else
 10019                           ;i2c1.c: 630: {
 10020                           ;i2c1.c: 631: *pflag = I2C1_MESSAGE_FAIL;
 10021  001DD6  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 10022  001DDA  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 10023  001DDE  0E01               	movlw	1
 10024  001DE0  6EDF               	movwf	indf2,c
 10025  001DE2                     l127:
 10026                           
 10027                           ; BSR set to: 0
 10028                           ;i2c1.c: 632: }
 10029                           ;i2c1.c: 635: if (*pflag == I2C1_MESSAGE_PENDING)
 10030  001DE2  0E02               	movlw	2
 10031  001DE4  C01D  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 10032  001DE8  C01E  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 10033  001DEC  62DF               	cpfseq	indf2,c
 10034  001DEE  0012               	return	
 10035  001DF0                     l129:
 10036  001DF0  6637               	tstfsz	_i2c1_state,c
 10037  001DF2  D7FE               	goto	l129
 10038                           
 10039                           ;i2c1.c: 638: {
 10040                           ;i2c1.c: 641: PIR1bits.SSP1IF = 1;
 10041  001DF4  869E               	bsf	3998,3,c	;volatile
 10042  001DF6  0012               	return	
 10043  001DF8                     __end_of_I2C1_MasterTRBInsert:
 10044                           	opt stack 0
 10045                           tosu	equ	0xFFF
 10046                           tosh	equ	0xFFE
 10047                           tosl	equ	0xFFD
 10048                           pclath	equ	0xFFA
 10049                           tblptru	equ	0xFF8
 10050                           tblptrh	equ	0xFF7
 10051                           tblptrl	equ	0xFF6
 10052                           tablat	equ	0xFF5
 10053                           prodh	equ	0xFF4
 10054                           prodl	equ	0xFF3
 10055                           intcon	equ	0xFF2
 10056                           intcon2	equ	0xFF1
 10057                           postinc0	equ	0xFEE
 10058                           wreg	equ	0xFE8
 10059                           indf2	equ	0xFDF
 10060                           postinc2	equ	0xFDE
 10061                           postdec2	equ	0xFDD
 10062                           fsr2h	equ	0xFDA
 10063                           fsr2l	equ	0xFD9
 10064                           status	equ	0xFD8
 10065                           
 10066 ;; *************** function _INTERRUPT_InterruptManager *****************
 10067 ;; Defined at:
 10068 ;;		line 73 in file "mcc_generated_files/interrupt_manager.c"
 10069 ;; Parameters:    Size  Location     Type
 10070 ;;		None
 10071 ;; Auto vars:     Size  Location     Type
 10072 ;;		None
 10073 ;; Return value:  Size  Location     Type
 10074 ;;		None               void
 10075 ;; Registers used:
 10076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
 10077 ;; Tracked objects:
 10078 ;;		On entry : 0/0
 10079 ;;		On exit  : 0/0
 10080 ;;		Unchanged: 0/0
 10081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10082 ;;      Params:         0       0       0       0       0       0       0
 10083 ;;      Locals:         0       0       0       0       0       0       0
 10084 ;;      Temps:         14       0       0       0       0       0       0
 10085 ;;      Totals:        14       0       0       0       0       0       0
 10086 ;;Total ram usage:       14 bytes
 10087 ;; Hardware stack levels used:    1
 10088 ;; Hardware stack levels required when called:    3
 10089 ;; This function calls:
 10090 ;;		_ADC_ISR
 10091 ;;		_EUSART1_Receive_ISR
 10092 ;;		_EUSART1_Transmit_ISR
 10093 ;;		_I2C1_BusCollisionISR
 10094 ;;		_I2C1_ISR
 10095 ;;		_TMR0_ISR
 10096 ;; This function is called by:
 10097 ;;		Interrupt level 2
 10098 ;; This function uses a non-reentrant model
 10099 ;;
 10100                           
 10101                           	psect	intcode
 10102  000008                     __pintcode:
 10103                           	opt stack 0
 10104  000008                     _INTERRUPT_InterruptManager:
 10105                           	opt stack 21
 10106                           
 10107                           ;incstack = 0
 10108  000008  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
 10109  00000C  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 10110  000010  CFE9 F00F          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 10111  000014  CFEA F010          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 10112  000018  CFE1 F011          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 10113  00001C  CFE2 F012          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 10114  000020  CFD9 F013          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 10115  000024  CFDA F014          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 10116  000028  CFF3 F015          	movff	prodl,??_INTERRUPT_InterruptManager+8
 10117  00002C  CFF4 F016          	movff	prodh,??_INTERRUPT_InterruptManager+9
 10118  000030  CFF6 F017          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 10119  000034  CFF7 F018          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 10120  000038  CFF8 F019          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 10121  00003C  CFF5 F01A          	movff	tablat,??_INTERRUPT_InterruptManager+13
 10122                           
 10123                           ;interrupt_manager.c: 76: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
 10124  000040  BA9D               	btfsc	3997,5,c	;volatile
 10125  000042  AA9E               	btfss	3998,5,c	;volatile
 10126  000044  D003               	goto	i2l316
 10127                           
 10128                           ;interrupt_manager.c: 77: {
 10129                           ;interrupt_manager.c: 78: EUSART1_Receive_ISR();
 10130  000046  EC61  F015         	call	_EUSART1_Receive_ISR	;wreg free
 10131                           
 10132                           ;interrupt_manager.c: 79: }
 10133  00004A  D01D               	goto	i2l328
 10134  00004C                     i2l316:
 10135                           
 10136                           ;interrupt_manager.c: 80: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 10137  00004C  B89D               	btfsc	3997,4,c	;volatile
 10138  00004E  A89E               	btfss	3998,4,c	;volatile
 10139  000050  D003               	goto	i2l318
 10140                           
 10141                           ;interrupt_manager.c: 81: {
 10142                           ;interrupt_manager.c: 82: EUSART1_Transmit_ISR();
 10143  000052  EC7F  F014         	call	_EUSART1_Transmit_ISR	;wreg free
 10144                           
 10145                           ;interrupt_manager.c: 83: }
 10146  000056  D017               	goto	i2l328
 10147  000058                     i2l318:
 10148                           
 10149                           ;interrupt_manager.c: 84: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 10150  000058  BAF2               	btfsc	intcon,5,c	;volatile
 10151  00005A  A4F2               	btfss	intcon,2,c	;volatile
 10152  00005C  D003               	goto	i2l320
 10153                           
 10154                           ;interrupt_manager.c: 85: {
 10155                           ;interrupt_manager.c: 86: TMR0_ISR();
 10156  00005E  EC6F  F012         	call	_TMR0_ISR	;wreg free
 10157                           
 10158                           ;interrupt_manager.c: 87: }
 10159  000062  D011               	goto	i2l328
 10160  000064                     i2l320:
 10161                           
 10162                           ;interrupt_manager.c: 88: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 10163  000064  BC9D               	btfsc	3997,6,c	;volatile
 10164  000066  AC9E               	btfss	3998,6,c	;volatile
 10165  000068  D003               	goto	i2l322
 10166                           
 10167                           ;interrupt_manager.c: 89: {
 10168                           ;interrupt_manager.c: 90: ADC_ISR();
 10169  00006A  EC07  F016         	call	_ADC_ISR	;wreg free
 10170                           
 10171                           ;interrupt_manager.c: 91: }
 10172  00006E  D00B               	goto	i2l328
 10173  000070                     i2l322:
 10174                           
 10175                           ;interrupt_manager.c: 92: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 10176  000070  B69D               	btfsc	3997,3,c	;volatile
 10177  000072  A69E               	btfss	3998,3,c	;volatile
 10178  000074  D003               	goto	i2l324
 10179                           
 10180                           ;interrupt_manager.c: 93: {
 10181                           ;interrupt_manager.c: 94: I2C1_ISR();
 10182  000076  EC84  F005         	call	_I2C1_ISR	;wreg free
 10183                           
 10184                           ;interrupt_manager.c: 95: }
 10185  00007A  D005               	goto	i2l328
 10186  00007C                     i2l324:
 10187                           
 10188                           ;interrupt_manager.c: 96: else if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
 10189  00007C  B6A0               	btfsc	4000,3,c	;volatile
 10190  00007E  A6A1               	btfss	4001,3,c	;volatile
 10191  000080  D002               	goto	i2l328
 10192                           
 10193                           ;interrupt_manager.c: 97: {
 10194                           ;interrupt_manager.c: 98: I2C1_BusCollisionISR();
 10195  000082  EC0A  F016         	call	_I2C1_BusCollisionISR	;wreg free
 10196  000086                     i2l328:
 10197  000086  C01A  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 10198  00008A  C019  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 10199  00008E  C018  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 10200  000092  C017  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 10201  000096  C016  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 10202  00009A  C015  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 10203  00009E  C014  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 10204  0000A2  C013  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 10205  0000A6  C012  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 10206  0000AA  C011  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 10207  0000AE  C010  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 10208  0000B2  C00F  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 10209  0000B6  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 10210  0000BA  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 10211  0000BE  0011               	retfie		f
 10212  0000C0                     __end_of_INTERRUPT_InterruptManager:
 10213                           	opt stack 0
 10214                           tosu	equ	0xFFF
 10215                           tosh	equ	0xFFE
 10216                           tosl	equ	0xFFD
 10217                           pclatu	equ	0xFFB
 10218                           pclath	equ	0xFFA
 10219                           tblptru	equ	0xFF8
 10220                           tblptrh	equ	0xFF7
 10221                           tblptrl	equ	0xFF6
 10222                           tablat	equ	0xFF5
 10223                           prodh	equ	0xFF4
 10224                           prodl	equ	0xFF3
 10225                           intcon	equ	0xFF2
 10226                           intcon2	equ	0xFF1
 10227                           postinc0	equ	0xFEE
 10228                           fsr0h	equ	0xFEA
 10229                           fsr0l	equ	0xFE9
 10230                           wreg	equ	0xFE8
 10231                           fsr1h	equ	0xFE2
 10232                           fsr1l	equ	0xFE1
 10233                           indf2	equ	0xFDF
 10234                           postinc2	equ	0xFDE
 10235                           postdec2	equ	0xFDD
 10236                           fsr2h	equ	0xFDA
 10237                           fsr2l	equ	0xFD9
 10238                           status	equ	0xFD8
 10239                           
 10240 ;; *************** function _TMR0_ISR *****************
 10241 ;; Defined at:
 10242 ;;		line 81 in file "mcc_generated_files/tmr0.c"
 10243 ;; Parameters:    Size  Location     Type
 10244 ;;		None
 10245 ;; Auto vars:     Size  Location     Type
 10246 ;;  x               2    7[COMRAM] int 
 10247 ;; Return value:  Size  Location     Type
 10248 ;;		None               void
 10249 ;; Registers used:
 10250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10251 ;; Tracked objects:
 10252 ;;		On entry : 0/0
 10253 ;;		On exit  : 0/0
 10254 ;;		Unchanged: 0/0
 10255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10256 ;;      Params:         0       0       0       0       0       0       0
 10257 ;;      Locals:         2       0       0       0       0       0       0
 10258 ;;      Temps:          3       0       0       0       0       0       0
 10259 ;;      Totals:         5       0       0       0       0       0       0
 10260 ;;Total ram usage:        5 bytes
 10261 ;; Hardware stack levels used:    1
 10262 ;; Hardware stack levels required when called:    1
 10263 ;; This function calls:
 10264 ;;		_ReadButtonState
 10265 ;;		_TMR0_CallBack
 10266 ;; This function is called by:
 10267 ;;		_INTERRUPT_InterruptManager
 10268 ;; This function uses a non-reentrant model
 10269 ;;
 10270                           
 10271                           	psect	text56
 10272  0024DE                     __ptext56:
 10273                           	opt stack 0
 10274  0024DE                     _TMR0_ISR:
 10275                           	opt stack 22
 10276                           
 10277                           ;tmr0.c: 82: static volatile uint16_t CountCallBack = 0;
 10278                           ;tmr0.c: 85: TMR0H = timer0ReloadVal16bit >> 8;
 10279                           
 10280                           ;incstack = 0
 10281  0024DE  C044  F005         	movff	_timer0ReloadVal16bit+1,??_TMR0_ISR	;volatile
 10282  0024E2  C005  F006         	movff	??_TMR0_ISR,??_TMR0_ISR+1
 10283  0024E6  6A07               	clrf	(??_TMR0_ISR+2)& (0+255),c
 10284  0024E8  5006               	movf	??_TMR0_ISR+1,w,c
 10285  0024EA  6ED7               	movwf	4055,c	;volatile
 10286                           
 10287                           ;tmr0.c: 86: TMR0L = (uint8_t) timer0ReloadVal16bit;
 10288  0024EC  C043  FFD6         	movff	_timer0ReloadVal16bit,4054	;volatile
 10289                           
 10290                           ;tmr0.c: 88: for (int x = 0; x < 8; x++) {
 10291  0024F0  0E00               	movlw	0
 10292  0024F2  6E09               	movwf	TMR0_ISR@x+1,c
 10293  0024F4  0E00               	movlw	0
 10294  0024F6  6E08               	movwf	TMR0_ISR@x,c
 10295  0024F8  5009               	movf	TMR0_ISR@x+1,w,c
 10296  0024FA  0A80               	xorlw	128
 10297  0024FC  0F80               	addlw	-128
 10298  0024FE  0E08               	movlw	8
 10299  002500  B4D8               	btfsc	status,2,c
 10300  002502  5C08               	subwf	TMR0_ISR@x,w,c
 10301  002504  B0D8               	btfsc	status,0,c
 10302  002506  D009               	goto	i2l4004
 10303                           
 10304                           ;tmr0.c: 89: ReadButtonState(x);
 10305  002508  C008  F001         	movff	TMR0_ISR@x,ReadButtonState@btnnum
 10306  00250C  C009  F002         	movff	TMR0_ISR@x+1,ReadButtonState@btnnum+1
 10307  002510  ECF6  F00A         	call	_ReadButtonState	;wreg free
 10308  002514  4A08               	infsnz	TMR0_ISR@x,f,c
 10309  002516  2A09               	incf	TMR0_ISR@x+1,f,c
 10310  002518  D7EF               	goto	L6
 10311  00251A                     i2l4004:
 10312                           
 10313                           ;tmr0.c: 90: }
 10314                           ;tmr0.c: 91: time++;
 10315  00251A  0100               	movlb	0	; () banked
 10316  00251C  4BAF               	infsnz	_time& (0+255),f,b	;volatile
 10317  00251E  2BB0               	incf	(_time+1)& (0+255),f,b	;volatile
 10318                           
 10319                           ; BSR set to: 0
 10320                           ;tmr0.c: 93: if (++CountCallBack >= 5) {
 10321  002520  0100               	movlb	0	; () banked
 10322  002522  4B99               	infsnz	TMR0_ISR@CountCallBack& (0+255),f,b	;volatile
 10323  002524  2B9A               	incf	(TMR0_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 10324  002526  0E05               	movlw	5
 10325  002528  0100               	movlb	0	; () banked
 10326  00252A  5D99               	subwf	TMR0_ISR@CountCallBack& (0+255),w,b	;volatile
 10327  00252C  0E00               	movlw	0
 10328  00252E  0100               	movlb	0	; () banked
 10329  002530  599A               	subwfb	(TMR0_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 10330  002532  A0D8               	btfss	status,0,c
 10331  002534  D008               	goto	i2l4012
 10332                           
 10333                           ; BSR set to: 0
 10334                           ;tmr0.c: 95: TMR0_CallBack();
 10335  002536  EC09  F016         	call	_TMR0_CallBack	;wreg free
 10336                           
 10337                           ;tmr0.c: 98: CountCallBack = 0;
 10338  00253A  0E00               	movlw	0
 10339  00253C  0100               	movlb	0	; () banked
 10340  00253E  6F9A               	movwf	(TMR0_ISR@CountCallBack+1)& (0+255),b	;volatile
 10341  002540  0E00               	movlw	0
 10342  002542  0100               	movlb	0	; () banked
 10343  002544  6F99               	movwf	TMR0_ISR@CountCallBack& (0+255),b	;volatile
 10344  002546                     i2l4012:
 10345                           
 10346                           ; BSR set to: 0
 10347                           ;tmr0.c: 99: }
 10348                           ;tmr0.c: 101: INTCONbits.TMR0IF = 0;
 10349  002546  94F2               	bcf	intcon,2,c	;volatile
 10350                           
 10351                           ; BSR set to: 0
 10352  002548  0012               	return	
 10353  00254A                     __end_of_TMR0_ISR:
 10354                           	opt stack 0
 10355                           tosu	equ	0xFFF
 10356                           tosh	equ	0xFFE
 10357                           tosl	equ	0xFFD
 10358                           pclatu	equ	0xFFB
 10359                           pclath	equ	0xFFA
 10360                           tblptru	equ	0xFF8
 10361                           tblptrh	equ	0xFF7
 10362                           tblptrl	equ	0xFF6
 10363                           tablat	equ	0xFF5
 10364                           prodh	equ	0xFF4
 10365                           prodl	equ	0xFF3
 10366                           intcon	equ	0xFF2
 10367                           intcon2	equ	0xFF1
 10368                           postinc0	equ	0xFEE
 10369                           fsr0h	equ	0xFEA
 10370                           fsr0l	equ	0xFE9
 10371                           wreg	equ	0xFE8
 10372                           fsr1h	equ	0xFE2
 10373                           fsr1l	equ	0xFE1
 10374                           indf2	equ	0xFDF
 10375                           postinc2	equ	0xFDE
 10376                           postdec2	equ	0xFDD
 10377                           fsr2h	equ	0xFDA
 10378                           fsr2l	equ	0xFD9
 10379                           status	equ	0xFD8
 10380                           
 10381 ;; *************** function _TMR0_CallBack *****************
 10382 ;; Defined at:
 10383 ;;		line 104 in file "mcc_generated_files/tmr0.c"
 10384 ;; Parameters:    Size  Location     Type
 10385 ;;		None
 10386 ;; Auto vars:     Size  Location     Type
 10387 ;;		None
 10388 ;; Return value:  Size  Location     Type
 10389 ;;		None               void
 10390 ;; Registers used:
 10391 ;;		None
 10392 ;; Tracked objects:
 10393 ;;		On entry : 0/0
 10394 ;;		On exit  : 0/0
 10395 ;;		Unchanged: 0/0
 10396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10397 ;;      Params:         0       0       0       0       0       0       0
 10398 ;;      Locals:         0       0       0       0       0       0       0
 10399 ;;      Temps:          0       0       0       0       0       0       0
 10400 ;;      Totals:         0       0       0       0       0       0       0
 10401 ;;Total ram usage:        0 bytes
 10402 ;; Hardware stack levels used:    1
 10403 ;; This function calls:
 10404 ;;		Nothing
 10405 ;; This function is called by:
 10406 ;;		_TMR0_ISR
 10407 ;; This function uses a non-reentrant model
 10408 ;;
 10409                           
 10410                           	psect	text57
 10411  002C12                     __ptext57:
 10412                           	opt stack 0
 10413  002C12                     _TMR0_CallBack:
 10414                           	opt stack 22
 10415                           
 10416                           ; BSR set to: 0
 10417                           ;incstack = 0
 10418  002C12  0012               	return	
 10419  002C14                     __end_of_TMR0_CallBack:
 10420                           	opt stack 0
 10421                           tosu	equ	0xFFF
 10422                           tosh	equ	0xFFE
 10423                           tosl	equ	0xFFD
 10424                           pclatu	equ	0xFFB
 10425                           pclath	equ	0xFFA
 10426                           tblptru	equ	0xFF8
 10427                           tblptrh	equ	0xFF7
 10428                           tblptrl	equ	0xFF6
 10429                           tablat	equ	0xFF5
 10430                           prodh	equ	0xFF4
 10431                           prodl	equ	0xFF3
 10432                           intcon	equ	0xFF2
 10433                           intcon2	equ	0xFF1
 10434                           postinc0	equ	0xFEE
 10435                           fsr0h	equ	0xFEA
 10436                           fsr0l	equ	0xFE9
 10437                           wreg	equ	0xFE8
 10438                           fsr1h	equ	0xFE2
 10439                           fsr1l	equ	0xFE1
 10440                           indf2	equ	0xFDF
 10441                           postinc2	equ	0xFDE
 10442                           postdec2	equ	0xFDD
 10443                           fsr2h	equ	0xFDA
 10444                           fsr2l	equ	0xFD9
 10445                           status	equ	0xFD8
 10446                           
 10447 ;; *************** function _ReadButtonState *****************
 10448 ;; Defined at:
 10449 ;;		line 42 in file "IO.c"
 10450 ;; Parameters:    Size  Location     Type
 10451 ;;  btnnum          2    0[COMRAM] int 
 10452 ;; Auto vars:     Size  Location     Type
 10453 ;;		None
 10454 ;; Return value:  Size  Location     Type
 10455 ;;		None               void
 10456 ;; Registers used:
 10457 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10458 ;; Tracked objects:
 10459 ;;		On entry : 0/0
 10460 ;;		On exit  : 0/0
 10461 ;;		Unchanged: 0/0
 10462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10463 ;;      Params:         2       0       0       0       0       0       0
 10464 ;;      Locals:         0       0       0       0       0       0       0
 10465 ;;      Temps:          2       0       0       0       0       0       0
 10466 ;;      Totals:         4       0       0       0       0       0       0
 10467 ;;Total ram usage:        4 bytes
 10468 ;; Hardware stack levels used:    1
 10469 ;; This function calls:
 10470 ;;		Nothing
 10471 ;; This function is called by:
 10472 ;;		_TMR0_ISR
 10473 ;; This function uses a non-reentrant model
 10474 ;;
 10475                           
 10476                           	psect	text58
 10477  0015EC                     __ptext58:
 10478                           	opt stack 0
 10479  0015EC                     _ReadButtonState:
 10480                           	opt stack 22
 10481                           
 10482                           ;IO.c: 43: switch (btnnum) {
 10483                           
 10484                           ;incstack = 0
 10485  0015EC  D078               	goto	i2l3468
 10486  0015EE                     i2l3450:
 10487                           
 10488                           ;IO.c: 45: butnarray[btnnum] = PORTDbits.RD5;
 10489  0015EE  0100               	movlb	0	; () banked
 10490  0015F0  0E88               	movlw	low _butnarray
 10491  0015F2  2401               	addwf	ReadButtonState@btnnum,w,c
 10492  0015F4  6ED9               	movwf	fsr2l,c
 10493  0015F6  0100               	movlb	0	; () banked
 10494  0015F8  0E00               	movlw	high _butnarray
 10495  0015FA  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 10496  0015FC  6EDA               	movwf	fsr2h,c
 10497  0015FE  AA83               	btfss	3971,5,c	;volatile
 10498  001600  D002               	goto	i2u298_40
 10499  001602  0E01               	movlw	1
 10500  001604  D001               	goto	i2u298_46
 10501  001606                     i2u298_40:
 10502  001606  0E00               	movlw	0
 10503  001608                     i2u298_46:
 10504  001608  6EDF               	movwf	indf2,c
 10505                           
 10506                           ;IO.c: 46: break;
 10507  00160A  0012               	return	
 10508  00160C                     i2l3452:
 10509                           
 10510                           ;IO.c: 48: butnarray[btnnum] = PORTBbits.RB0;
 10511  00160C  0100               	movlb	0	; () banked
 10512  00160E  0E88               	movlw	low _butnarray
 10513  001610  2401               	addwf	ReadButtonState@btnnum,w,c
 10514  001612  6ED9               	movwf	fsr2l,c
 10515  001614  0100               	movlb	0	; () banked
 10516  001616  0E00               	movlw	high _butnarray
 10517  001618  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 10518  00161A  6EDA               	movwf	fsr2h,c
 10519  00161C  A081               	btfss	3969,0,c	;volatile
 10520  00161E  D002               	goto	i2u299_40
 10521  001620  0E01               	movlw	1
 10522  001622  D001               	goto	i2u299_46
 10523  001624                     i2u299_40:
 10524  001624  0E00               	movlw	0
 10525  001626                     i2u299_46:
 10526  001626  6EDF               	movwf	indf2,c
 10527                           
 10528                           ;IO.c: 49: break;
 10529  001628  0012               	return	
 10530  00162A                     i2l3454:
 10531                           
 10532                           ;IO.c: 51: butnarray[btnnum] = PORTBbits.RB1;
 10533  00162A  0100               	movlb	0	; () banked
 10534  00162C  0E88               	movlw	low _butnarray
 10535  00162E  2401               	addwf	ReadButtonState@btnnum,w,c
 10536  001630  6ED9               	movwf	fsr2l,c
 10537  001632  0100               	movlb	0	; () banked
 10538  001634  0E00               	movlw	high _butnarray
 10539  001636  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 10540  001638  6EDA               	movwf	fsr2h,c
 10541  00163A  A281               	btfss	3969,1,c	;volatile
 10542  00163C  D002               	goto	i2u300_40
 10543  00163E  0E01               	movlw	1
 10544  001640  D001               	goto	i2u300_46
 10545  001642                     i2u300_40:
 10546  001642  0E00               	movlw	0
 10547  001644                     i2u300_46:
 10548  001644  6EDF               	movwf	indf2,c
 10549                           
 10550                           ;IO.c: 52: break;
 10551  001646  0012               	return	
 10552  001648                     i2l3456:
 10553                           
 10554                           ;IO.c: 54: butnarray[btnnum] = PORTBbits.RB2;
 10555  001648  0100               	movlb	0	; () banked
 10556  00164A  0E88               	movlw	low _butnarray
 10557  00164C  2401               	addwf	ReadButtonState@btnnum,w,c
 10558  00164E  6ED9               	movwf	fsr2l,c
 10559  001650  0100               	movlb	0	; () banked
 10560  001652  0E00               	movlw	high _butnarray
 10561  001654  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 10562  001656  6EDA               	movwf	fsr2h,c
 10563  001658  A481               	btfss	3969,2,c	;volatile
 10564  00165A  D002               	goto	i2u301_40
 10565  00165C  0E01               	movlw	1
 10566  00165E  D001               	goto	i2u301_46
 10567  001660                     i2u301_40:
 10568  001660  0E00               	movlw	0
 10569  001662                     i2u301_46:
 10570  001662  6EDF               	movwf	indf2,c
 10571                           
 10572                           ;IO.c: 55: break;
 10573  001664  0012               	return	
 10574  001666                     i2l3458:
 10575                           
 10576                           ;IO.c: 57: butnarray[btnnum] = PORTBbits.RB4;
 10577  001666  0100               	movlb	0	; () banked
 10578  001668  0E88               	movlw	low _butnarray
 10579  00166A  2401               	addwf	ReadButtonState@btnnum,w,c
 10580  00166C  6ED9               	movwf	fsr2l,c
 10581  00166E  0100               	movlb	0	; () banked
 10582  001670  0E00               	movlw	high _butnarray
 10583  001672  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 10584  001674  6EDA               	movwf	fsr2h,c
 10585  001676  A881               	btfss	3969,4,c	;volatile
 10586  001678  D002               	goto	i2u302_40
 10587  00167A  0E01               	movlw	1
 10588  00167C  D001               	goto	i2u302_46
 10589  00167E                     i2u302_40:
 10590  00167E  0E00               	movlw	0
 10591  001680                     i2u302_46:
 10592  001680  6EDF               	movwf	indf2,c
 10593                           
 10594                           ;IO.c: 58: break;
 10595  001682  0012               	return	
 10596  001684                     i2l3460:
 10597                           
 10598                           ;IO.c: 60: butnarray[btnnum] = PORTAbits.RA0;
 10599  001684  0100               	movlb	0	; () banked
 10600  001686  0E88               	movlw	low _butnarray
 10601  001688  2401               	addwf	ReadButtonState@btnnum,w,c
 10602  00168A  6ED9               	movwf	fsr2l,c
 10603  00168C  0100               	movlb	0	; () banked
 10604  00168E  0E00               	movlw	high _butnarray
 10605  001690  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 10606  001692  6EDA               	movwf	fsr2h,c
 10607  001694  A080               	btfss	3968,0,c	;volatile
 10608  001696  D002               	goto	i2u303_40
 10609  001698  0E01               	movlw	1
 10610  00169A  D001               	goto	i2u303_46
 10611  00169C                     i2u303_40:
 10612  00169C  0E00               	movlw	0
 10613  00169E                     i2u303_46:
 10614  00169E  6EDF               	movwf	indf2,c
 10615                           
 10616                           ;IO.c: 61: break;
 10617  0016A0  0012               	return	
 10618  0016A2                     i2l3462:
 10619                           
 10620                           ;IO.c: 63: butnarray[btnnum] = PORTAbits.RA1;
 10621  0016A2  0100               	movlb	0	; () banked
 10622  0016A4  0E88               	movlw	low _butnarray
 10623  0016A6  2401               	addwf	ReadButtonState@btnnum,w,c
 10624  0016A8  6ED9               	movwf	fsr2l,c
 10625  0016AA  0100               	movlb	0	; () banked
 10626  0016AC  0E00               	movlw	high _butnarray
 10627  0016AE  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 10628  0016B0  6EDA               	movwf	fsr2h,c
 10629  0016B2  A280               	btfss	3968,1,c	;volatile
 10630  0016B4  D002               	goto	i2u304_40
 10631  0016B6  0E01               	movlw	1
 10632  0016B8  D001               	goto	i2u304_46
 10633  0016BA                     i2u304_40:
 10634  0016BA  0E00               	movlw	0
 10635  0016BC                     i2u304_46:
 10636  0016BC  6EDF               	movwf	indf2,c
 10637                           
 10638                           ;IO.c: 64: break;
 10639  0016BE  0012               	return	
 10640  0016C0                     i2l3464:
 10641                           
 10642                           ;IO.c: 66: butnarray[btnnum] = PORTAbits.RA2;
 10643  0016C0  0100               	movlb	0	; () banked
 10644  0016C2  0E88               	movlw	low _butnarray
 10645  0016C4  2401               	addwf	ReadButtonState@btnnum,w,c
 10646  0016C6  6ED9               	movwf	fsr2l,c
 10647  0016C8  0100               	movlb	0	; () banked
 10648  0016CA  0E00               	movlw	high _butnarray
 10649  0016CC  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 10650  0016CE  6EDA               	movwf	fsr2h,c
 10651  0016D0  A480               	btfss	3968,2,c	;volatile
 10652  0016D2  D002               	goto	i2u305_40
 10653  0016D4  0E01               	movlw	1
 10654  0016D6  D001               	goto	i2u305_46
 10655  0016D8                     i2u305_40:
 10656  0016D8  0E00               	movlw	0
 10657  0016DA                     i2u305_46:
 10658  0016DA  6EDF               	movwf	indf2,c
 10659                           
 10660                           ;IO.c: 67: break;
 10661  0016DC  0012               	return	
 10662  0016DE                     i2l3468:
 10663  0016DE  C001  F003         	movff	ReadButtonState@btnnum,??_ReadButtonState
 10664  0016E2  C002  F004         	movff	ReadButtonState@btnnum+1,??_ReadButtonState+1
 10665                           
 10666                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10667                           ; Switch size 1, requested type "space"
 10668                           ; Number of cases is 1, Range of values is 0 to 0
 10669                           ; switch strategies available:
 10670                           ; Name         Instructions Cycles
 10671                           ; simple_byte            4     3 (average)
 10672                           ;	Chosen strategy is simple_byte
 10673  0016E6  5004               	movf	??_ReadButtonState+1,w,c
 10674  0016E8  0A00               	xorlw	0	; case 0
 10675  0016EA  A4D8               	btfss	status,2,c
 10676  0016EC  0012               	return	
 10677                           
 10678                           ; Switch size 1, requested type "space"
 10679                           ; Number of cases is 8, Range of values is 0 to 7
 10680                           ; switch strategies available:
 10681                           ; Name         Instructions Cycles
 10682                           ; simple_byte           25    13 (average)
 10683                           ;	Chosen strategy is simple_byte
 10684  0016EE  5003               	movf	??_ReadButtonState,w,c
 10685  0016F0  0A00               	xorlw	0	; case 0
 10686  0016F2  B4D8               	btfsc	status,2,c
 10687  0016F4  D77C               	goto	i2l3450
 10688  0016F6  0A01               	xorlw	1	; case 1
 10689  0016F8  B4D8               	btfsc	status,2,c
 10690  0016FA  D788               	goto	i2l3452
 10691  0016FC  0A03               	xorlw	3	; case 2
 10692  0016FE  B4D8               	btfsc	status,2,c
 10693  001700  D794               	goto	i2l3454
 10694  001702  0A01               	xorlw	1	; case 3
 10695  001704  B4D8               	btfsc	status,2,c
 10696  001706  D7A0               	goto	i2l3456
 10697  001708  0A07               	xorlw	7	; case 4
 10698  00170A  B4D8               	btfsc	status,2,c
 10699  00170C  D7AC               	goto	i2l3458
 10700  00170E  0A01               	xorlw	1	; case 5
 10701  001710  B4D8               	btfsc	status,2,c
 10702  001712  D7B8               	goto	i2l3460
 10703  001714  0A03               	xorlw	3	; case 6
 10704  001716  B4D8               	btfsc	status,2,c
 10705  001718  D7C4               	goto	i2l3462
 10706  00171A  0A01               	xorlw	1	; case 7
 10707  00171C  A4D8               	btfss	status,2,c
 10708  00171E  0012               	return	
 10709  001720  D7CF               	goto	i2l3464
 10710  001722                     __end_of_ReadButtonState:
 10711                           	opt stack 0
 10712                           tosu	equ	0xFFF
 10713                           tosh	equ	0xFFE
 10714                           tosl	equ	0xFFD
 10715                           pclatu	equ	0xFFB
 10716                           pclath	equ	0xFFA
 10717                           tblptru	equ	0xFF8
 10718                           tblptrh	equ	0xFF7
 10719                           tblptrl	equ	0xFF6
 10720                           tablat	equ	0xFF5
 10721                           prodh	equ	0xFF4
 10722                           prodl	equ	0xFF3
 10723                           intcon	equ	0xFF2
 10724                           intcon2	equ	0xFF1
 10725                           postinc0	equ	0xFEE
 10726                           fsr0h	equ	0xFEA
 10727                           fsr0l	equ	0xFE9
 10728                           wreg	equ	0xFE8
 10729                           fsr1h	equ	0xFE2
 10730                           fsr1l	equ	0xFE1
 10731                           indf2	equ	0xFDF
 10732                           postinc2	equ	0xFDE
 10733                           postdec2	equ	0xFDD
 10734                           fsr2h	equ	0xFDA
 10735                           fsr2l	equ	0xFD9
 10736                           status	equ	0xFD8
 10737                           
 10738 ;; *************** function _I2C1_ISR *****************
 10739 ;; Defined at:
 10740 ;;		line 186 in file "mcc_generated_files/i2c1.c"
 10741 ;; Parameters:    Size  Location     Type
 10742 ;;		None
 10743 ;; Auto vars:     Size  Location     Type
 10744 ;;		None
 10745 ;; Return value:  Size  Location     Type
 10746 ;;		None               void
 10747 ;; Registers used:
 10748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10749 ;; Tracked objects:
 10750 ;;		On entry : 0/0
 10751 ;;		On exit  : 0/0
 10752 ;;		Unchanged: 0/0
 10753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10754 ;;      Params:         0       0       0       0       0       0       0
 10755 ;;      Locals:         0       0       0       0       0       0       0
 10756 ;;      Temps:          3       0       0       0       0       0       0
 10757 ;;      Totals:         3       0       0       0       0       0       0
 10758 ;;Total ram usage:        3 bytes
 10759 ;; Hardware stack levels used:    1
 10760 ;; Hardware stack levels required when called:    1
 10761 ;; This function calls:
 10762 ;;		_I2C1_FunctionComplete
 10763 ;;		_I2C1_Stop
 10764 ;; This function is called by:
 10765 ;;		_INTERRUPT_InterruptManager
 10766 ;; This function uses a non-reentrant model
 10767 ;;
 10768                           
 10769                           	psect	text59
 10770  000B08                     __ptext59:
 10771                           	opt stack 0
 10772  000B08                     _I2C1_ISR:
 10773                           	opt stack 22
 10774                           
 10775                           ;i2c1.c: 189: static uint8_t *pi2c_buf_ptr;
 10776                           ;i2c1.c: 190: static uint16_t i2c_address = 0;
 10777                           ;i2c1.c: 191: static uint8_t i2c_bytes_left = 0;
 10778                           ;i2c1.c: 192: static uint8_t i2c_10bit_address_restart = 0;
 10779                           ;i2c1.c: 194: PIR1bits.SSP1IF = 0;
 10780                           
 10781                           ;incstack = 0
 10782  000B08  969E               	bcf	3998,3,c	;volatile
 10783                           
 10784                           ;i2c1.c: 198: if(SSP1CON1bits.WCOL)
 10785  000B0A  AEC6               	btfss	4038,7,c	;volatile
 10786  000B0C  D125               	goto	i2l5152
 10787                           
 10788                           ;i2c1.c: 199: {
 10789                           ;i2c1.c: 201: SSP1CON1bits.WCOL = 0;
 10790  000B0E  9EC6               	bcf	4038,7,c	;volatile
 10791                           
 10792                           ;i2c1.c: 202: i2c1_state = S_MASTER_IDLE;
 10793  000B10  0E00               	movlw	0
 10794  000B12  6E37               	movwf	_i2c1_state,c
 10795                           
 10796                           ;i2c1.c: 203: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 10797  000B14  0100               	movlb	0	; () banked
 10798  000B16  EE20 F003          	lfsr	2,3
 10799  000B1A  0100               	movlb	0	; () banked
 10800  000B1C  51A5               	movf	_p_i2c1_current& (0+255),w,b
 10801  000B1E  26D9               	addwf	fsr2l,f,c
 10802  000B20  0100               	movlb	0	; () banked
 10803  000B22  51A6               	movf	(_p_i2c1_current+1)& (0+255),w,b
 10804  000B24  22DA               	addwfc	fsr2h,f,c
 10805  000B26  CFDE F004          	movff	postinc2,??_I2C1_ISR
 10806  000B2A  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
 10807  000B2E  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
 10808  000B32  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
 10809  000B36  0E01               	movlw	1
 10810  000B38  6EDF               	movwf	indf2,c
 10811                           
 10812                           ; BSR set to: 0
 10813                           ;i2c1.c: 206: p_i2c1_current = (0);
 10814  000B3A  0E00               	movlw	0
 10815  000B3C  0100               	movlb	0	; () banked
 10816  000B3E  6FA6               	movwf	(_p_i2c1_current+1)& (0+255),b
 10817  000B40  0E00               	movlw	0
 10818  000B42  0100               	movlb	0	; () banked
 10819  000B44  6FA5               	movwf	_p_i2c1_current& (0+255),b
 10820  000B46  0012               	return	
 10821  000B48                     i2l60:
 10822                           
 10823                           ;i2c1.c: 216: if(i2c1_object.trStatus.s.empty != 1)
 10824  000B48  0100               	movlb	0	; () banked
 10825  000B4A  B394               	btfsc	(_i2c1_object+4)& (0+255),1,b
 10826  000B4C  0012               	return	
 10827                           
 10828                           ; BSR set to: 0
 10829                           ;i2c1.c: 217: {
 10830                           ;i2c1.c: 219: p_i2c1_current = i2c1_object.pTrHead;
 10831  000B4E  0100               	movlb	0	; () banked
 10832  000B50  C093  F0A6         	movff	_i2c1_object+3,_p_i2c1_current+1
 10833  000B54  0100               	movlb	0	; () banked
 10834  000B56  C092  F0A5         	movff	_i2c1_object+2,_p_i2c1_current
 10835                           
 10836                           ; BSR set to: 0
 10837                           ;i2c1.c: 220: i2c1_trb_count = i2c1_object.pTrHead->count;
 10838  000B5A  C092  FFD9         	movff	_i2c1_object+2,fsr2l
 10839  000B5E  C093  FFDA         	movff	_i2c1_object+3,fsr2h
 10840  000B62  50DF               	movf	indf2,w,c
 10841  000B64  6E38               	movwf	_i2c1_trb_count,c
 10842                           
 10843                           ; BSR set to: 0
 10844                           ;i2c1.c: 221: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 10845  000B66  0100               	movlb	0	; () banked
 10846  000B68  EE20 F001          	lfsr	2,1
 10847  000B6C  0100               	movlb	0	; () banked
 10848  000B6E  5192               	movf	(_i2c1_object+2)& (0+255),w,b
 10849  000B70  26D9               	addwf	fsr2l,f,c
 10850  000B72  0100               	movlb	0	; () banked
 10851  000B74  5193               	movf	(_i2c1_object+3)& (0+255),w,b
 10852  000B76  22DA               	addwfc	fsr2h,f,c
 10853  000B78  CFDE F02B          	movff	postinc2,_p_i2c1_trb_current
 10854  000B7C  CFDD F02C          	movff	postdec2,_p_i2c1_trb_current+1
 10855                           
 10856                           ; BSR set to: 0
 10857                           ;i2c1.c: 223: i2c1_object.pTrHead++;
 10858  000B80  0E05               	movlw	5
 10859  000B82  0100               	movlb	0	; () banked
 10860  000B84  2792               	addwf	(_i2c1_object+2)& (0+255),f,b
 10861  000B86  0E00               	movlw	0
 10862  000B88  0100               	movlb	0	; () banked
 10863  000B8A  2393               	addwfc	(_i2c1_object+3)& (0+255),f,b
 10864                           
 10865                           ; BSR set to: 0
 10866                           ;i2c1.c: 226: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 10867  000B8C  0ED3               	movlw	low (_i2c1_tr_queue+5)
 10868  000B8E  6E04               	movwf	??_I2C1_ISR& (0+255),c
 10869  000B90  0E00               	movlw	high (_i2c1_tr_queue+5)
 10870  000B92  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 10871  000B94  0100               	movlb	0	; () banked
 10872  000B96  EE20  F092         	lfsr	2,_i2c1_object+2
 10873  000B9A  52DE               	movf	postinc2,f,c
 10874  000B9C  5005               	movf	??_I2C1_ISR+1,w,c
 10875  000B9E  18DD               	xorwf	postdec2,w,c
 10876  000BA0  C004  FFE8         	movff	??_I2C1_ISR,wreg
 10877  000BA4  B4D8               	btfsc	status,2,c
 10878  000BA6  18DF               	xorwf	indf2,w,c
 10879  000BA8  A4D8               	btfss	status,2,c
 10880  000BAA  D008               	goto	i2l5042
 10881                           
 10882                           ; BSR set to: 0
 10883                           ;i2c1.c: 227: {
 10884                           ;i2c1.c: 229: i2c1_object.pTrHead = i2c1_tr_queue;
 10885  000BAC  0100               	movlb	0	; () banked
 10886  000BAE  0E00               	movlw	high _i2c1_tr_queue
 10887  000BB0  0100               	movlb	0	; () banked
 10888  000BB2  6F93               	movwf	(_i2c1_object+3)& (0+255),b
 10889  000BB4  0100               	movlb	0	; () banked
 10890  000BB6  0ECE               	movlw	low _i2c1_tr_queue
 10891  000BB8  0100               	movlb	0	; () banked
 10892  000BBA  6F92               	movwf	(_i2c1_object+2)& (0+255),b
 10893  000BBC                     i2l5042:
 10894                           
 10895                           ; BSR set to: 0
 10896                           ;i2c1.c: 230: }
 10897                           ;i2c1.c: 234: i2c1_object.trStatus.s.full = 0;
 10898  000BBC  0100               	movlb	0	; () banked
 10899  000BBE  9194               	bcf	(_i2c1_object+4)& (0+255),0,b
 10900                           
 10901                           ; BSR set to: 0
 10902                           ;i2c1.c: 237: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 10903  000BC0  0100               	movlb	0	; () banked
 10904  000BC2  EE20  F092         	lfsr	2,_i2c1_object+2
 10905  000BC6  0100               	movlb	0	; () banked
 10906  000BC8  52DE               	movf	postinc2,f,c
 10907  000BCA  0100               	movlb	0	; () banked
 10908  000BCC  5191               	movf	(_i2c1_object+1)& (0+255),w,b
 10909  000BCE  18DD               	xorwf	postdec2,w,c
 10910  000BD0  0100               	movlb	0	; () banked
 10911  000BD2  C090  FFE8         	movff	_i2c1_object,wreg
 10912  000BD6  B4D8               	btfsc	status,2,c
 10913  000BD8  18DF               	xorwf	indf2,w,c
 10914  000BDA  A4D8               	btfss	status,2,c
 10915  000BDC  D002               	goto	i2l63
 10916                           
 10917                           ; BSR set to: 0
 10918                           ;i2c1.c: 238: {
 10919                           ;i2c1.c: 240: i2c1_object.trStatus.s.empty = 1;
 10920  000BDE  0100               	movlb	0	; () banked
 10921  000BE0  8394               	bsf	(_i2c1_object+4)& (0+255),1,b
 10922  000BE2                     i2l63:
 10923                           
 10924                           ; BSR set to: 0
 10925                           ;i2c1.c: 241: }
 10926                           ;i2c1.c: 244: SSP1CON2bits.SEN = 1;
 10927  000BE2  80C5               	bsf	4037,0,c	;volatile
 10928                           
 10929                           ; BSR set to: 0
 10930                           ;i2c1.c: 247: i2c1_state = S_MASTER_SEND_ADDR;
 10931  000BE4  0E02               	movlw	2
 10932  000BE6  6E37               	movwf	_i2c1_state,c
 10933  000BE8  0012               	return	
 10934  000BEA                     i2l65:
 10935                           
 10936                           ;i2c1.c: 257: SSP1CON2bits.RSEN = 1;
 10937  000BEA  82C5               	bsf	4037,1,c	;volatile
 10938                           
 10939                           ;i2c1.c: 260: i2c1_state = S_MASTER_SEND_ADDR;
 10940  000BEC  0E02               	movlw	2
 10941  000BEE  6E37               	movwf	_i2c1_state,c
 10942                           
 10943                           ;i2c1.c: 262: break;
 10944  000BF0  0012               	return	
 10945  000BF2                     i2l66:
 10946                           
 10947                           ;i2c1.c: 266: if(SSP1CON2bits.ACKSTAT)
 10948  000BF2  ACC5               	btfss	4037,6,c	;volatile
 10949  000BF4  D006               	goto	i2l5056
 10950                           
 10951                           ;i2c1.c: 267: {
 10952                           ;i2c1.c: 268: i2c1_object.i2cErrors++;
 10953  000BF6  0100               	movlb	0	; () banked
 10954  000BF8  2B96               	incf	(_i2c1_object+6)& (0+255),f,b
 10955                           
 10956                           ; BSR set to: 0
 10957                           ;i2c1.c: 269: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 10958  000BFA  0E04               	movlw	4
 10959  000BFC  EC8E  F013         	call	_I2C1_Stop
 10960                           
 10961                           ;i2c1.c: 270: }
 10962  000C00  0012               	return	
 10963  000C02                     i2l5056:
 10964                           
 10965                           ;i2c1.c: 271: else
 10966                           ;i2c1.c: 272: {
 10967                           ;i2c1.c: 274: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 10968  000C02  90D8               	bcf	status,0,c
 10969  000C04  3040               	rrcf	I2C1_ISR@i2c_address+1,w,c
 10970  000C06  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 10971  000C08  303F               	rrcf	I2C1_ISR@i2c_address,w,c
 10972  000C0A  6E04               	movwf	??_I2C1_ISR& (0+255),c
 10973  000C0C  5004               	movf	??_I2C1_ISR,w,c
 10974  000C0E  6EC9               	movwf	4041,c	;volatile
 10975                           
 10976                           ;i2c1.c: 277: if(i2c_address & 0x01)
 10977  000C10  A03F               	btfss	I2C1_ISR@i2c_address,0,c
 10978  000C12  D003               	goto	i2l5062
 10979                           
 10980                           ;i2c1.c: 278: {
 10981                           ;i2c1.c: 281: i2c1_state = S_MASTER_10BIT_RESTART;
 10982  000C14  0E0B               	movlw	11
 10983  000C16  6E37               	movwf	_i2c1_state,c
 10984                           
 10985                           ;i2c1.c: 282: }
 10986  000C18  0012               	return	
 10987  000C1A                     i2l5062:
 10988                           
 10989                           ;i2c1.c: 283: else
 10990                           ;i2c1.c: 284: {
 10991                           ;i2c1.c: 286: i2c1_state = S_MASTER_SEND_DATA;
 10992  000C1A  0E03               	movlw	3
 10993  000C1C  6E37               	movwf	_i2c1_state,c
 10994  000C1E  0012               	return	
 10995  000C20                     i2l71:
 10996                           
 10997                           ;i2c1.c: 294: if(SSP1CON2bits.ACKSTAT)
 10998  000C20  ACC5               	btfss	4037,6,c	;volatile
 10999  000C22  D006               	goto	i2l72
 11000                           
 11001                           ;i2c1.c: 295: {
 11002                           ;i2c1.c: 296: i2c1_object.i2cErrors++;
 11003  000C24  0100               	movlb	0	; () banked
 11004  000C26  2B96               	incf	(_i2c1_object+6)& (0+255),f,b
 11005                           
 11006                           ; BSR set to: 0
 11007                           ;i2c1.c: 297: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 11008  000C28  0E04               	movlw	4
 11009  000C2A  EC8E  F013         	call	_I2C1_Stop
 11010                           
 11011                           ;i2c1.c: 298: }
 11012  000C2E  0012               	return	
 11013  000C30                     i2l72:
 11014                           
 11015                           ;i2c1.c: 299: else
 11016                           ;i2c1.c: 300: {
 11017                           ;i2c1.c: 303: SSP1CON2bits.RSEN = 1;
 11018  000C30  82C5               	bsf	4037,1,c	;volatile
 11019                           
 11020                           ;i2c1.c: 307: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 11021  000C32  C040  F004         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR
 11022  000C36  C004  F005         	movff	??_I2C1_ISR,??_I2C1_ISR+1
 11023  000C3A  6A06               	clrf	(??_I2C1_ISR+2)& (0+255),c
 11024  000C3C  0E06               	movlw	6
 11025  000C3E  1605               	andwf	??_I2C1_ISR+1,f,c
 11026  000C40  0E00               	movlw	0
 11027  000C42  1606               	andwf	??_I2C1_ISR+2,f,c
 11028  000C44  0EF0               	movlw	240
 11029  000C46  1005               	iorwf	??_I2C1_ISR+1,w,c
 11030  000C48  6E3F               	movwf	I2C1_ISR@i2c_address,c
 11031  000C4A  5006               	movf	??_I2C1_ISR+2,w,c
 11032  000C4C  6E40               	movwf	I2C1_ISR@i2c_address+1,c
 11033                           
 11034                           ;i2c1.c: 310: i2c_address |= 0x0001;
 11035  000C4E  803F               	bsf	I2C1_ISR@i2c_address,0,c
 11036                           
 11037                           ;i2c1.c: 313: i2c_10bit_address_restart = 1;
 11038  000C50  0E01               	movlw	1
 11039  000C52  6E33               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
 11040                           
 11041                           ;i2c1.c: 316: i2c1_state = S_MASTER_SEND_ADDR;
 11042  000C54  0E02               	movlw	2
 11043  000C56  6E37               	movwf	_i2c1_state,c
 11044  000C58  0012               	return	
 11045  000C5A                     i2l5076:
 11046                           
 11047                           ;i2c1.c: 334: if(i2c_10bit_address_restart != 1)
 11048  000C5A  0433               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
 11049  000C5C  B4D8               	btfsc	status,2,c
 11050  000C5E  D01C               	goto	i2l76
 11051                           
 11052                           ;i2c1.c: 335: {
 11053                           ;i2c1.c: 337: i2c_address = p_i2c1_trb_current->address;
 11054  000C60  C02B  FFD9         	movff	_p_i2c1_trb_current,fsr2l
 11055  000C64  C02C  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
 11056  000C68  CFDE F03F          	movff	postinc2,I2C1_ISR@i2c_address
 11057  000C6C  CFDD F040          	movff	postdec2,I2C1_ISR@i2c_address+1
 11058                           
 11059                           ;i2c1.c: 338: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 11060  000C70  EE20 F003          	lfsr	2,3
 11061  000C74  502B               	movf	_p_i2c1_trb_current,w,c
 11062  000C76  26D9               	addwf	fsr2l,f,c
 11063  000C78  502C               	movf	_p_i2c1_trb_current+1,w,c
 11064  000C7A  22DA               	addwfc	fsr2h,f,c
 11065  000C7C  0100               	movlb	0	; () banked
 11066  000C7E  CFDE F097          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
 11067  000C82  0100               	movlb	0	; () banked
 11068  000C84  CFDD F098          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
 11069                           
 11070                           ; BSR set to: 0
 11071                           ;i2c1.c: 339: i2c_bytes_left = p_i2c1_trb_current->length;
 11072  000C88  EE20 F002          	lfsr	2,2
 11073  000C8C  502B               	movf	_p_i2c1_trb_current,w,c
 11074  000C8E  26D9               	addwf	fsr2l,f,c
 11075  000C90  502C               	movf	_p_i2c1_trb_current+1,w,c
 11076  000C92  22DA               	addwfc	fsr2h,f,c
 11077  000C94  50DF               	movf	indf2,w,c
 11078  000C96  6E34               	movwf	I2C1_ISR@i2c_bytes_left,c
 11079  000C98                     i2l76:
 11080                           
 11081                           ;i2c1.c: 362: else
 11082                           ;i2c1.c: 363: {
 11083                           ;i2c1.c: 365: SSP1BUF = i2c_address;
 11084  000C98  C03F  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
 11085                           
 11086                           ;i2c1.c: 366: if(i2c_address & 0x01)
 11087  000C9C  A03F               	btfss	I2C1_ISR@i2c_address,0,c
 11088  000C9E  D003               	goto	i2l5096
 11089                           
 11090                           ;i2c1.c: 367: {
 11091                           ;i2c1.c: 369: i2c1_state = S_MASTER_ACK_ADDR;
 11092  000CA0  0E05               	movlw	5
 11093  000CA2  6E37               	movwf	_i2c1_state,c
 11094                           
 11095                           ;i2c1.c: 370: }
 11096  000CA4  0012               	return	
 11097  000CA6                     i2l5096:
 11098                           
 11099                           ;i2c1.c: 371: else
 11100                           ;i2c1.c: 372: {
 11101                           ;i2c1.c: 374: i2c1_state = S_MASTER_SEND_DATA;
 11102  000CA6  0E03               	movlw	3
 11103  000CA8  6E37               	movwf	_i2c1_state,c
 11104  000CAA  0012               	return	
 11105  000CAC                     i2l82:
 11106                           
 11107                           ;i2c1.c: 382: if(SSP1CON2bits.ACKSTAT)
 11108  000CAC  ACC5               	btfss	4037,6,c	;volatile
 11109  000CAE  D007               	goto	i2l5104
 11110                           
 11111                           ;i2c1.c: 383: {
 11112                           ;i2c1.c: 385: i2c1_object.i2cErrors++;
 11113  000CB0  0100               	movlb	0	; () banked
 11114  000CB2  2B96               	incf	(_i2c1_object+6)& (0+255),f,b
 11115                           
 11116                           ; BSR set to: 0
 11117                           ;i2c1.c: 388: SSP1CON2bits.ACKSTAT = 0;
 11118  000CB4  9CC5               	bcf	4037,6,c	;volatile
 11119                           
 11120                           ; BSR set to: 0
 11121                           ;i2c1.c: 391: I2C1_Stop(I2C1_DATA_NO_ACK);
 11122  000CB6  0E05               	movlw	5
 11123  000CB8  EC8E  F013         	call	_I2C1_Stop
 11124                           
 11125                           ;i2c1.c: 393: }
 11126  000CBC  0012               	return	
 11127  000CBE                     i2l5104:
 11128                           
 11129                           ;i2c1.c: 394: else
 11130                           ;i2c1.c: 395: {
 11131                           ;i2c1.c: 397: if(i2c_bytes_left-- == 0U)
 11132  000CBE  0634               	decf	I2C1_ISR@i2c_bytes_left,f,c
 11133  000CC0  2834               	incf	I2C1_ISR@i2c_bytes_left& (0+255),w,c
 11134  000CC2  A4D8               	btfss	status,2,c
 11135  000CC4  D00E               	goto	i2l5114
 11136                           
 11137                           ;i2c1.c: 398: {
 11138                           ;i2c1.c: 402: p_i2c1_trb_current++;
 11139  000CC6  0E05               	movlw	5
 11140  000CC8  262B               	addwf	_p_i2c1_trb_current,f,c
 11141  000CCA  0E00               	movlw	0
 11142  000CCC  222C               	addwfc	_p_i2c1_trb_current+1,f,c
 11143                           
 11144                           ;i2c1.c: 405: if(--i2c1_trb_count == 0)
 11145  000CCE  2E38               	decfsz	_i2c1_trb_count,f,c
 11146  000CD0  D004               	goto	i2l86
 11147                           
 11148                           ;i2c1.c: 406: {
 11149                           ;i2c1.c: 407: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 11150  000CD2  0E00               	movlw	0
 11151  000CD4  EC8E  F013         	call	_I2C1_Stop
 11152                           
 11153                           ;i2c1.c: 408: }
 11154  000CD8  0012               	return	
 11155  000CDA                     i2l86:
 11156                           
 11157                           ;i2c1.c: 409: else
 11158                           ;i2c1.c: 410: {
 11159                           ;i2c1.c: 417: SSP1CON2bits.RSEN = 1;
 11160  000CDA  82C5               	bsf	4037,1,c	;volatile
 11161                           
 11162                           ;i2c1.c: 420: i2c1_state = S_MASTER_SEND_ADDR;
 11163  000CDC  0E02               	movlw	2
 11164  000CDE  6E37               	movwf	_i2c1_state,c
 11165  000CE0  0012               	return	
 11166  000CE2                     i2l5114:
 11167                           
 11168                           ;i2c1.c: 424: else
 11169                           ;i2c1.c: 425: {
 11170                           ;i2c1.c: 427: SSP1BUF = *pi2c_buf_ptr++;
 11171  000CE2  C097  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 11172  000CE6  C098  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 11173  000CEA  50DF               	movf	indf2,w,c
 11174  000CEC  6EC9               	movwf	4041,c	;volatile
 11175  000CEE  0100               	movlb	0	; () banked
 11176  000CF0  4B97               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 11177  000CF2  2B98               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 11178  000CF4  0012               	return	
 11179  000CF6                     i2l89:
 11180                           
 11181                           ;i2c1.c: 435: if(SSP1CON2bits.ACKSTAT)
 11182  000CF6  ACC5               	btfss	4037,6,c	;volatile
 11183  000CF8  D007               	goto	i2l90
 11184                           
 11185                           ;i2c1.c: 436: {
 11186                           ;i2c1.c: 439: i2c1_object.i2cErrors++;
 11187  000CFA  0100               	movlb	0	; () banked
 11188  000CFC  2B96               	incf	(_i2c1_object+6)& (0+255),f,b
 11189                           
 11190                           ; BSR set to: 0
 11191                           ;i2c1.c: 442: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 11192  000CFE  0E04               	movlw	4
 11193  000D00  EC8E  F013         	call	_I2C1_Stop
 11194                           
 11195                           ;i2c1.c: 445: SSP1CON2bits.ACKSTAT = 0;
 11196  000D04  9CC5               	bcf	4037,6,c	;volatile
 11197                           
 11198                           ;i2c1.c: 446: }
 11199  000D06  0012               	return	
 11200  000D08                     i2l90:
 11201                           
 11202                           ;i2c1.c: 447: else
 11203                           ;i2c1.c: 448: {
 11204                           ;i2c1.c: 449: SSP1CON2bits.RCEN = 1;
 11205  000D08  86C5               	bsf	4037,3,c	;volatile
 11206                           
 11207                           ;i2c1.c: 450: i2c1_state = S_MASTER_ACK_RCV_DATA;
 11208  000D0A  0E08               	movlw	8
 11209  000D0C  6E37               	movwf	_i2c1_state,c
 11210  000D0E  0012               	return	
 11211  000D10                     i2l5126:
 11212                           
 11213                           ;i2c1.c: 459: i2c1_state = S_MASTER_ACK_RCV_DATA;
 11214  000D10  0E08               	movlw	8
 11215  000D12  6E37               	movwf	_i2c1_state,c
 11216                           
 11217                           ;i2c1.c: 462: SSP1CON2bits.RCEN = 1;
 11218  000D14  86C5               	bsf	4037,3,c	;volatile
 11219                           
 11220                           ;i2c1.c: 464: break;
 11221  000D16  0012               	return	
 11222  000D18                     i2l5130:
 11223                           
 11224                           ;i2c1.c: 469: *pi2c_buf_ptr++ = SSP1BUF;
 11225  000D18  C097  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 11226  000D1C  C098  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 11227  000D20  CFC9 FFDF          	movff	4041,indf2	;volatile
 11228  000D24  0100               	movlb	0	; () banked
 11229  000D26  4B97               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 11230  000D28  2B98               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 11231                           
 11232                           ; BSR set to: 0
 11233                           ;i2c1.c: 472: if(--i2c_bytes_left)
 11234  000D2A  0E01               	movlw	1
 11235  000D2C  5E34               	subwf	I2C1_ISR@i2c_bytes_left,f,c
 11236  000D2E  B4D8               	btfsc	status,2,c
 11237  000D30  D004               	goto	i2l94
 11238                           
 11239                           ; BSR set to: 0
 11240                           ;i2c1.c: 473: {
 11241                           ;i2c1.c: 479: SSP1CON2bits.ACKDT = 0;
 11242  000D32  9AC5               	bcf	4037,5,c	;volatile
 11243                           
 11244                           ; BSR set to: 0
 11245                           ;i2c1.c: 482: i2c1_state = S_MASTER_RCV_DATA;
 11246  000D34  0E06               	movlw	6
 11247  000D36  6E37               	movwf	_i2c1_state,c
 11248                           
 11249                           ;i2c1.c: 483: }
 11250  000D38  D003               	goto	i2l5142
 11251  000D3A                     i2l94:
 11252                           
 11253                           ; BSR set to: 0
 11254                           ;i2c1.c: 484: else
 11255                           ;i2c1.c: 485: {
 11256                           ;i2c1.c: 489: SSP1CON2bits.ACKDT = 1;
 11257  000D3A  8AC5               	bsf	4037,5,c	;volatile
 11258                           
 11259                           ; BSR set to: 0
 11260                           ;i2c1.c: 491: I2C1_FunctionComplete();
 11261  000D3C  ECB9  F015         	call	_I2C1_FunctionComplete	;wreg free
 11262  000D40                     i2l5142:
 11263                           
 11264                           ;i2c1.c: 492: }
 11265                           ;i2c1.c: 495: SSP1CON2bits.ACKEN = 1;
 11266  000D40  88C5               	bsf	4037,4,c	;volatile
 11267                           
 11268                           ;i2c1.c: 496: break;
 11269  000D42  0012               	return	
 11270  000D44                     i2l5144:
 11271                           
 11272                           ;i2c1.c: 499: case S_MASTER_SEND_STOP:
 11273                           ;i2c1.c: 502: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 11274  000D44  0E00               	movlw	0
 11275  000D46  EC8E  F013         	call	_I2C1_Stop
 11276                           
 11277                           ;i2c1.c: 503: break;
 11278  000D4A  0012               	return	
 11279  000D4C                     i2l5146:
 11280                           
 11281                           ;i2c1.c: 509: i2c1_object.i2cErrors++;
 11282  000D4C  0100               	movlb	0	; () banked
 11283  000D4E  2B96               	incf	(_i2c1_object+6)& (0+255),f,b
 11284                           
 11285                           ; BSR set to: 0
 11286                           ;i2c1.c: 510: I2C1_Stop(I2C1_LOST_STATE);
 11287  000D50  0E06               	movlw	6
 11288  000D52  EC8E  F013         	call	_I2C1_Stop
 11289                           
 11290                           ;i2c1.c: 511: break;
 11291  000D56  0012               	return	
 11292  000D58                     i2l5152:
 11293  000D58  5037               	movf	_i2c1_state,w,c
 11294                           
 11295                           ; Switch size 1, requested type "space"
 11296                           ; Number of cases is 11, Range of values is 0 to 11
 11297                           ; switch strategies available:
 11298                           ; Name         Instructions Cycles
 11299                           ; simple_byte           34    18 (average)
 11300                           ;	Chosen strategy is simple_byte
 11301  000D5A  0A00               	xorlw	0	; case 0
 11302  000D5C  B4D8               	btfsc	status,2,c
 11303  000D5E  D6F4               	goto	i2l60
 11304  000D60  0A01               	xorlw	1	; case 1
 11305  000D62  B4D8               	btfsc	status,2,c
 11306  000D64  D742               	goto	i2l65
 11307  000D66  0A03               	xorlw	3	; case 2
 11308  000D68  B4D8               	btfsc	status,2,c
 11309  000D6A  D777               	goto	i2l5076
 11310  000D6C  0A01               	xorlw	1	; case 3
 11311  000D6E  B4D8               	btfsc	status,2,c
 11312  000D70  D79D               	goto	i2l82
 11313  000D72  0A07               	xorlw	7	; case 4
 11314  000D74  B4D8               	btfsc	status,2,c
 11315  000D76  D7E6               	goto	i2l5144
 11316  000D78  0A01               	xorlw	1	; case 5
 11317  000D7A  B4D8               	btfsc	status,2,c
 11318  000D7C  D7BC               	goto	i2l89
 11319  000D7E  0A03               	xorlw	3	; case 6
 11320  000D80  B4D8               	btfsc	status,2,c
 11321  000D82  D7C6               	goto	i2l5126
 11322  000D84  0A01               	xorlw	1	; case 7
 11323  000D86  B4D8               	btfsc	status,2,c
 11324  000D88  D7DD               	goto	i2l5144
 11325  000D8A  0A0F               	xorlw	15	; case 8
 11326  000D8C  B4D8               	btfsc	status,2,c
 11327  000D8E  D7C4               	goto	i2l5130
 11328  000D90  0A02               	xorlw	2	; case 10
 11329  000D92  B4D8               	btfsc	status,2,c
 11330  000D94  D72E               	goto	i2l66
 11331  000D96  0A01               	xorlw	1	; case 11
 11332  000D98  B4D8               	btfsc	status,2,c
 11333  000D9A  D742               	goto	i2l71
 11334  000D9C  D7D7               	goto	i2l5146
 11335  000D9E                     __end_of_I2C1_ISR:
 11336                           	opt stack 0
 11337                           tosu	equ	0xFFF
 11338                           tosh	equ	0xFFE
 11339                           tosl	equ	0xFFD
 11340                           pclatu	equ	0xFFB
 11341                           pclath	equ	0xFFA
 11342                           tblptru	equ	0xFF8
 11343                           tblptrh	equ	0xFF7
 11344                           tblptrl	equ	0xFF6
 11345                           tablat	equ	0xFF5
 11346                           prodh	equ	0xFF4
 11347                           prodl	equ	0xFF3
 11348                           intcon	equ	0xFF2
 11349                           intcon2	equ	0xFF1
 11350                           postinc0	equ	0xFEE
 11351                           fsr0h	equ	0xFEA
 11352                           fsr0l	equ	0xFE9
 11353                           wreg	equ	0xFE8
 11354                           fsr1h	equ	0xFE2
 11355                           fsr1l	equ	0xFE1
 11356                           indf2	equ	0xFDF
 11357                           postinc2	equ	0xFDE
 11358                           postdec2	equ	0xFDD
 11359                           fsr2h	equ	0xFDA
 11360                           fsr2l	equ	0xFD9
 11361                           status	equ	0xFD8
 11362                           
 11363 ;; *************** function _I2C1_Stop *****************
 11364 ;; Defined at:
 11365 ;;		line 534 in file "mcc_generated_files/i2c1.c"
 11366 ;; Parameters:    Size  Location     Type
 11367 ;;  completion_c    1    wreg     enum E8836
 11368 ;; Auto vars:     Size  Location     Type
 11369 ;;  completion_c    1    2[COMRAM] enum E8836
 11370 ;; Return value:  Size  Location     Type
 11371 ;;		None               void
 11372 ;; Registers used:
 11373 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11374 ;; Tracked objects:
 11375 ;;		On entry : 0/0
 11376 ;;		On exit  : 0/0
 11377 ;;		Unchanged: 0/0
 11378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11379 ;;      Params:         0       0       0       0       0       0       0
 11380 ;;      Locals:         1       0       0       0       0       0       0
 11381 ;;      Temps:          2       0       0       0       0       0       0
 11382 ;;      Totals:         3       0       0       0       0       0       0
 11383 ;;Total ram usage:        3 bytes
 11384 ;; Hardware stack levels used:    1
 11385 ;; This function calls:
 11386 ;;		Nothing
 11387 ;; This function is called by:
 11388 ;;		_I2C1_ISR
 11389 ;; This function uses a non-reentrant model
 11390 ;;
 11391                           
 11392                           	psect	text60
 11393  00271C                     __ptext60:
 11394                           	opt stack 0
 11395  00271C                     _I2C1_Stop:
 11396                           	opt stack 22
 11397                           
 11398                           ;incstack = 0
 11399                           ;I2C1_Stop@completion_code stored from wreg
 11400  00271C  6E03               	movwf	I2C1_Stop@completion_code,c
 11401                           
 11402                           ;i2c1.c: 537: SSP1CON2bits.PEN = 1;
 11403  00271E  84C5               	bsf	4037,2,c	;volatile
 11404                           
 11405                           ;i2c1.c: 540: if (p_i2c1_current->pTrFlag != (0))
 11406  002720  0100               	movlb	0	; () banked
 11407  002722  EE20 F003          	lfsr	2,3
 11408  002726  0100               	movlb	0	; () banked
 11409  002728  51A5               	movf	_p_i2c1_current& (0+255),w,b
 11410  00272A  26D9               	addwf	fsr2l,f,c
 11411  00272C  0100               	movlb	0	; () banked
 11412  00272E  51A6               	movf	(_p_i2c1_current+1)& (0+255),w,b
 11413  002730  22DA               	addwfc	fsr2h,f,c
 11414  002732  50DE               	movf	postinc2,w,c
 11415  002734  10DD               	iorwf	postdec2,w,c
 11416  002736  B4D8               	btfsc	status,2,c
 11417  002738  D013               	goto	i2l4688
 11418                           
 11419                           ; BSR set to: 0
 11420                           ;i2c1.c: 541: {
 11421                           ;i2c1.c: 543: *(p_i2c1_current->pTrFlag) = completion_code;
 11422  00273A  0100               	movlb	0	; () banked
 11423  00273C  EE20 F003          	lfsr	2,3
 11424  002740  0100               	movlb	0	; () banked
 11425  002742  51A5               	movf	_p_i2c1_current& (0+255),w,b
 11426  002744  26D9               	addwf	fsr2l,f,c
 11427  002746  0100               	movlb	0	; () banked
 11428  002748  51A6               	movf	(_p_i2c1_current+1)& (0+255),w,b
 11429  00274A  22DA               	addwfc	fsr2h,f,c
 11430  00274C  CFDE F001          	movff	postinc2,??_I2C1_Stop
 11431  002750  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
 11432  002754  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
 11433  002758  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
 11434  00275C  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
 11435  002760                     i2l4688:
 11436                           
 11437                           ; BSR set to: 0
 11438                           ;i2c1.c: 544: }
 11439                           ;i2c1.c: 547: i2c1_state = S_MASTER_IDLE;
 11440  002760  0E00               	movlw	0
 11441  002762  6E37               	movwf	_i2c1_state,c
 11442                           
 11443                           ; BSR set to: 0
 11444  002764  0012               	return	
 11445  002766                     __end_of_I2C1_Stop:
 11446                           	opt stack 0
 11447                           tosu	equ	0xFFF
 11448                           tosh	equ	0xFFE
 11449                           tosl	equ	0xFFD
 11450                           pclatu	equ	0xFFB
 11451                           pclath	equ	0xFFA
 11452                           tblptru	equ	0xFF8
 11453                           tblptrh	equ	0xFF7
 11454                           tblptrl	equ	0xFF6
 11455                           tablat	equ	0xFF5
 11456                           prodh	equ	0xFF4
 11457                           prodl	equ	0xFF3
 11458                           intcon	equ	0xFF2
 11459                           intcon2	equ	0xFF1
 11460                           postinc0	equ	0xFEE
 11461                           fsr0h	equ	0xFEA
 11462                           fsr0l	equ	0xFE9
 11463                           wreg	equ	0xFE8
 11464                           fsr1h	equ	0xFE2
 11465                           fsr1l	equ	0xFE1
 11466                           indf2	equ	0xFDF
 11467                           postinc2	equ	0xFDE
 11468                           postdec2	equ	0xFDD
 11469                           fsr2h	equ	0xFDA
 11470                           fsr2l	equ	0xFD9
 11471                           status	equ	0xFD8
 11472                           
 11473 ;; *************** function _I2C1_FunctionComplete *****************
 11474 ;; Defined at:
 11475 ;;		line 516 in file "mcc_generated_files/i2c1.c"
 11476 ;; Parameters:    Size  Location     Type
 11477 ;;		None
 11478 ;; Auto vars:     Size  Location     Type
 11479 ;;		None
 11480 ;; Return value:  Size  Location     Type
 11481 ;;		None               void
 11482 ;; Registers used:
 11483 ;;		wreg, status,2, status,0
 11484 ;; Tracked objects:
 11485 ;;		On entry : 0/0
 11486 ;;		On exit  : 0/0
 11487 ;;		Unchanged: 0/0
 11488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11489 ;;      Params:         0       0       0       0       0       0       0
 11490 ;;      Locals:         0       0       0       0       0       0       0
 11491 ;;      Temps:          0       0       0       0       0       0       0
 11492 ;;      Totals:         0       0       0       0       0       0       0
 11493 ;;Total ram usage:        0 bytes
 11494 ;; Hardware stack levels used:    1
 11495 ;; This function calls:
 11496 ;;		Nothing
 11497 ;; This function is called by:
 11498 ;;		_I2C1_ISR
 11499 ;; This function uses a non-reentrant model
 11500 ;;
 11501                           
 11502                           	psect	text61
 11503  002B72                     __ptext61:
 11504                           	opt stack 0
 11505  002B72                     _I2C1_FunctionComplete:
 11506                           	opt stack 22
 11507                           
 11508                           ;i2c1.c: 520: p_i2c1_trb_current++;
 11509                           
 11510                           ; BSR set to: 0
 11511                           ;incstack = 0
 11512  002B72  0E05               	movlw	5
 11513  002B74  262B               	addwf	_p_i2c1_trb_current,f,c
 11514  002B76  0E00               	movlw	0
 11515  002B78  222C               	addwfc	_p_i2c1_trb_current+1,f,c
 11516                           
 11517                           ;i2c1.c: 523: if(--i2c1_trb_count == 0)
 11518  002B7A  2E38               	decfsz	_i2c1_trb_count,f,c
 11519  002B7C  D003               	goto	i2l4696
 11520                           
 11521                           ;i2c1.c: 524: {
 11522                           ;i2c1.c: 525: i2c1_state = S_MASTER_SEND_STOP;
 11523  002B7E  0E04               	movlw	4
 11524  002B80  6E37               	movwf	_i2c1_state,c
 11525                           
 11526                           ;i2c1.c: 526: }
 11527  002B82  0012               	return	
 11528  002B84                     i2l4696:
 11529                           
 11530                           ;i2c1.c: 527: else
 11531                           ;i2c1.c: 528: {
 11532                           ;i2c1.c: 529: i2c1_state = S_MASTER_RESTART;
 11533  002B84  0E01               	movlw	1
 11534  002B86  6E37               	movwf	_i2c1_state,c
 11535  002B88  0012               	return	
 11536  002B8A                     __end_of_I2C1_FunctionComplete:
 11537                           	opt stack 0
 11538                           tosu	equ	0xFFF
 11539                           tosh	equ	0xFFE
 11540                           tosl	equ	0xFFD
 11541                           pclatu	equ	0xFFB
 11542                           pclath	equ	0xFFA
 11543                           tblptru	equ	0xFF8
 11544                           tblptrh	equ	0xFF7
 11545                           tblptrl	equ	0xFF6
 11546                           tablat	equ	0xFF5
 11547                           prodh	equ	0xFF4
 11548                           prodl	equ	0xFF3
 11549                           intcon	equ	0xFF2
 11550                           intcon2	equ	0xFF1
 11551                           postinc0	equ	0xFEE
 11552                           fsr0h	equ	0xFEA
 11553                           fsr0l	equ	0xFE9
 11554                           wreg	equ	0xFE8
 11555                           fsr1h	equ	0xFE2
 11556                           fsr1l	equ	0xFE1
 11557                           indf2	equ	0xFDF
 11558                           postinc2	equ	0xFDE
 11559                           postdec2	equ	0xFDD
 11560                           fsr2h	equ	0xFDA
 11561                           fsr2l	equ	0xFD9
 11562                           status	equ	0xFD8
 11563                           
 11564 ;; *************** function _I2C1_BusCollisionISR *****************
 11565 ;; Defined at:
 11566 ;;		line 681 in file "mcc_generated_files/i2c1.c"
 11567 ;; Parameters:    Size  Location     Type
 11568 ;;		None
 11569 ;; Auto vars:     Size  Location     Type
 11570 ;;		None
 11571 ;; Return value:  Size  Location     Type
 11572 ;;		None               void
 11573 ;; Registers used:
 11574 ;;		None
 11575 ;; Tracked objects:
 11576 ;;		On entry : 0/0
 11577 ;;		On exit  : 0/0
 11578 ;;		Unchanged: 0/0
 11579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11580 ;;      Params:         0       0       0       0       0       0       0
 11581 ;;      Locals:         0       0       0       0       0       0       0
 11582 ;;      Temps:          0       0       0       0       0       0       0
 11583 ;;      Totals:         0       0       0       0       0       0       0
 11584 ;;Total ram usage:        0 bytes
 11585 ;; Hardware stack levels used:    1
 11586 ;; This function calls:
 11587 ;;		Nothing
 11588 ;; This function is called by:
 11589 ;;		_INTERRUPT_InterruptManager
 11590 ;; This function uses a non-reentrant model
 11591 ;;
 11592                           
 11593                           	psect	text62
 11594  002C14                     __ptext62:
 11595                           	opt stack 0
 11596  002C14                     _I2C1_BusCollisionISR:
 11597                           	opt stack 23
 11598                           
 11599                           ;incstack = 0
 11600  002C14  0012               	return	
 11601  002C16                     __end_of_I2C1_BusCollisionISR:
 11602                           	opt stack 0
 11603                           tosu	equ	0xFFF
 11604                           tosh	equ	0xFFE
 11605                           tosl	equ	0xFFD
 11606                           pclatu	equ	0xFFB
 11607                           pclath	equ	0xFFA
 11608                           tblptru	equ	0xFF8
 11609                           tblptrh	equ	0xFF7
 11610                           tblptrl	equ	0xFF6
 11611                           tablat	equ	0xFF5
 11612                           prodh	equ	0xFF4
 11613                           prodl	equ	0xFF3
 11614                           intcon	equ	0xFF2
 11615                           intcon2	equ	0xFF1
 11616                           postinc0	equ	0xFEE
 11617                           fsr0h	equ	0xFEA
 11618                           fsr0l	equ	0xFE9
 11619                           wreg	equ	0xFE8
 11620                           fsr1h	equ	0xFE2
 11621                           fsr1l	equ	0xFE1
 11622                           indf2	equ	0xFDF
 11623                           postinc2	equ	0xFDE
 11624                           postdec2	equ	0xFDD
 11625                           fsr2h	equ	0xFDA
 11626                           fsr2l	equ	0xFD9
 11627                           status	equ	0xFD8
 11628                           
 11629 ;; *************** function _EUSART1_Transmit_ISR *****************
 11630 ;; Defined at:
 11631 ;;		line 150 in file "UART.c"
 11632 ;; Parameters:    Size  Location     Type
 11633 ;;		None
 11634 ;; Auto vars:     Size  Location     Type
 11635 ;;		None
 11636 ;; Return value:  Size  Location     Type
 11637 ;;		None               void
 11638 ;; Registers used:
 11639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11640 ;; Tracked objects:
 11641 ;;		On entry : 0/0
 11642 ;;		On exit  : 0/0
 11643 ;;		Unchanged: 0/0
 11644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11645 ;;      Params:         0       0       0       0       0       0       0
 11646 ;;      Locals:         0       0       0       0       0       0       0
 11647 ;;      Temps:          0       0       0       0       0       0       0
 11648 ;;      Totals:         0       0       0       0       0       0       0
 11649 ;;Total ram usage:        0 bytes
 11650 ;; Hardware stack levels used:    1
 11651 ;; Hardware stack levels required when called:    2
 11652 ;; This function calls:
 11653 ;;		i2_UART_buff_get
 11654 ;;		i2_UART_buff_size
 11655 ;; This function is called by:
 11656 ;;		_INTERRUPT_InterruptManager
 11657 ;; This function uses a non-reentrant model
 11658 ;;
 11659                           
 11660                           	psect	text63
 11661  0028FE                     __ptext63:
 11662                           	opt stack 0
 11663  0028FE                     _EUSART1_Transmit_ISR:
 11664                           	opt stack 21
 11665                           
 11666                           ;UART.c: 152: if (UART_buff_size(&output_buffer) > 0) {
 11667                           
 11668                           ;incstack = 0
 11669  0028FE  0104               	movlb	4	; () banked
 11670  002900  0E04               	movlw	high _output_buffer
 11671  002902  6E02               	movwf	i2UART_buff_size@_this+1,c
 11672  002904  0104               	movlb	4	; () banked
 11673  002906  0E00               	movlw	low _output_buffer
 11674  002908  6E01               	movwf	i2UART_buff_size@_this,c
 11675  00290A  ECD0  F015         	call	i2_UART_buff_size	;wreg free
 11676  00290E  5002               	movf	?i2_UART_buff_size+1,w,c
 11677  002910  0A80               	xorlw	128
 11678  002912  0F80               	addlw	-128
 11679  002914  0E01               	movlw	1
 11680  002916  B4D8               	btfsc	status,2,c
 11681  002918  5C01               	subwf	?i2_UART_buff_size,w,c
 11682  00291A  A0D8               	btfss	status,0,c
 11683  00291C  D00A               	goto	i2l4024
 11684                           
 11685                           ;UART.c: 153: TXREG1 = UART_buff_get(&output_buffer);
 11686  00291E  0104               	movlb	4	; () banked
 11687  002920  0E04               	movlw	high _output_buffer
 11688  002922  6E08               	movwf	i2UART_buff_get@_this+1,c
 11689  002924  0104               	movlb	4	; () banked
 11690  002926  0E00               	movlw	low _output_buffer
 11691  002928  6E07               	movwf	i2UART_buff_get@_this,c
 11692  00292A  EC31  F011         	call	i2_UART_buff_get	;wreg free
 11693  00292E  6EAD               	movwf	4013,c	;volatile
 11694                           
 11695                           ;UART.c: 154: } else {
 11696  002930  0012               	return	
 11697  002932                     i2l4024:
 11698                           
 11699                           ;UART.c: 155: Transmit_stall = 1;
 11700  002932  0E01               	movlw	1
 11701  002934  6E45               	movwf	_Transmit_stall,c
 11702                           
 11703                           ;UART.c: 156: PIE1bits.TX1IE = 0;
 11704  002936  989D               	bcf	3997,4,c	;volatile
 11705  002938  0012               	return	
 11706  00293A                     __end_of_EUSART1_Transmit_ISR:
 11707                           	opt stack 0
 11708                           tosu	equ	0xFFF
 11709                           tosh	equ	0xFFE
 11710                           tosl	equ	0xFFD
 11711                           pclatu	equ	0xFFB
 11712                           pclath	equ	0xFFA
 11713                           tblptru	equ	0xFF8
 11714                           tblptrh	equ	0xFF7
 11715                           tblptrl	equ	0xFF6
 11716                           tablat	equ	0xFF5
 11717                           prodh	equ	0xFF4
 11718                           prodl	equ	0xFF3
 11719                           intcon	equ	0xFF2
 11720                           intcon2	equ	0xFF1
 11721                           postinc0	equ	0xFEE
 11722                           fsr0h	equ	0xFEA
 11723                           fsr0l	equ	0xFE9
 11724                           wreg	equ	0xFE8
 11725                           fsr1h	equ	0xFE2
 11726                           fsr1l	equ	0xFE1
 11727                           indf2	equ	0xFDF
 11728                           postinc2	equ	0xFDE
 11729                           postdec2	equ	0xFDD
 11730                           fsr2h	equ	0xFDA
 11731                           fsr2l	equ	0xFD9
 11732                           status	equ	0xFD8
 11733                           
 11734 ;; *************** function i2_UART_buff_size *****************
 11735 ;; Defined at:
 11736 ;;		line 102 in file "UART.c"
 11737 ;; Parameters:    Size  Location     Type
 11738 ;;  _this           2    0[COMRAM] PTR struct UART_ring_buf
 11739 ;;		 -> output_buffer(206), input_buffer(206), 
 11740 ;; Auto vars:     Size  Location     Type
 11741 ;;		None
 11742 ;; Return value:  Size  Location     Type
 11743 ;;                  2    0[COMRAM] int 
 11744 ;; Registers used:
 11745 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11746 ;; Tracked objects:
 11747 ;;		On entry : 0/0
 11748 ;;		On exit  : 0/0
 11749 ;;		Unchanged: 0/0
 11750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11751 ;;      Params:         2       0       0       0       0       0       0
 11752 ;;      Locals:         0       0       0       0       0       0       0
 11753 ;;      Temps:          0       0       0       0       0       0       0
 11754 ;;      Totals:         2       0       0       0       0       0       0
 11755 ;;Total ram usage:        2 bytes
 11756 ;; Hardware stack levels used:    1
 11757 ;; This function calls:
 11758 ;;		Nothing
 11759 ;; This function is called by:
 11760 ;;		_EUSART1_Transmit_ISR
 11761 ;; This function uses a non-reentrant model
 11762 ;;
 11763                           
 11764                           	psect	text64
 11765  002BA0                     __ptext64:
 11766                           	opt stack 0
 11767  002BA0                     i2_UART_buff_size:
 11768                           	opt stack 22
 11769                           
 11770                           ;UART.c: 103: return (_this->count);
 11771                           
 11772                           ;incstack = 0
 11773  002BA0  EE20 F0CC          	lfsr	2,204
 11774  002BA4  5001               	movf	i2UART_buff_size@_this,w,c
 11775  002BA6  26D9               	addwf	fsr2l,f,c
 11776  002BA8  5002               	movf	i2UART_buff_size@_this+1,w,c
 11777  002BAA  22DA               	addwfc	fsr2h,f,c
 11778  002BAC  CFDE F001          	movff	postinc2,?i2_UART_buff_size
 11779  002BB0  CFDD F002          	movff	postdec2,?i2_UART_buff_size+1
 11780  002BB4  0012               	return	
 11781  002BB6                     __end_ofi2_UART_buff_size:
 11782                           	opt stack 0
 11783                           tosu	equ	0xFFF
 11784                           tosh	equ	0xFFE
 11785                           tosl	equ	0xFFD
 11786                           pclatu	equ	0xFFB
 11787                           pclath	equ	0xFFA
 11788                           tblptru	equ	0xFF8
 11789                           tblptrh	equ	0xFF7
 11790                           tblptrl	equ	0xFF6
 11791                           tablat	equ	0xFF5
 11792                           prodh	equ	0xFF4
 11793                           prodl	equ	0xFF3
 11794                           intcon	equ	0xFF2
 11795                           intcon2	equ	0xFF1
 11796                           postinc0	equ	0xFEE
 11797                           fsr0h	equ	0xFEA
 11798                           fsr0l	equ	0xFE9
 11799                           wreg	equ	0xFE8
 11800                           fsr1h	equ	0xFE2
 11801                           fsr1l	equ	0xFE1
 11802                           indf2	equ	0xFDF
 11803                           postinc2	equ	0xFDE
 11804                           postdec2	equ	0xFDD
 11805                           fsr2h	equ	0xFDA
 11806                           fsr2l	equ	0xFD9
 11807                           status	equ	0xFD8
 11808                           
 11809 ;; *************** function i2_UART_buff_get *****************
 11810 ;; Defined at:
 11811 ;;		line 81 in file "UART.c"
 11812 ;; Parameters:    Size  Location     Type
 11813 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 11814 ;;		 -> output_buffer(206), input_buffer(206), 
 11815 ;; Auto vars:     Size  Location     Type
 11816 ;;  UART_buff_ge    1   10[COMRAM] unsigned char 
 11817 ;; Return value:  Size  Location     Type
 11818 ;;                  1    wreg      unsigned char 
 11819 ;; Registers used:
 11820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11821 ;; Tracked objects:
 11822 ;;		On entry : 0/0
 11823 ;;		On exit  : 0/0
 11824 ;;		Unchanged: 0/0
 11825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11826 ;;      Params:         2       0       0       0       0       0       0
 11827 ;;      Locals:         1       0       0       0       0       0       0
 11828 ;;      Temps:          2       0       0       0       0       0       0
 11829 ;;      Totals:         5       0       0       0       0       0       0
 11830 ;;Total ram usage:        5 bytes
 11831 ;; Hardware stack levels used:    1
 11832 ;; Hardware stack levels required when called:    1
 11833 ;; This function calls:
 11834 ;;		i2_UART_buff_modulo_inc
 11835 ;; This function is called by:
 11836 ;;		_EUSART1_Transmit_ISR
 11837 ;; This function uses a non-reentrant model
 11838 ;;
 11839                           
 11840                           	psect	text65
 11841  002262                     __ptext65:
 11842                           	opt stack 0
 11843  002262                     i2_UART_buff_get:
 11844                           	opt stack 21
 11845                           
 11846                           ;UART.c: 82: unsigned char c;
 11847                           ;UART.c: 83: if (_this->count > 0) {
 11848                           
 11849                           ;incstack = 0
 11850  002262  EE20 F0CC          	lfsr	2,204
 11851  002266  5007               	movf	i2UART_buff_get@_this,w,c
 11852  002268  26D9               	addwf	fsr2l,f,c
 11853  00226A  5008               	movf	i2UART_buff_get@_this+1,w,c
 11854  00226C  22DA               	addwfc	fsr2h,f,c
 11855  00226E  52DE               	movf	postinc2,f,c
 11856  002270  50DD               	movf	postdec2,w,c
 11857  002272  0A80               	xorlw	128
 11858  002274  0F80               	addlw	128
 11859  002276  0E01               	movlw	1
 11860  002278  B4D8               	btfsc	status,2,c
 11861  00227A  5CDF               	subwf	indf2,w,c
 11862  00227C  A0D8               	btfss	status,0,c
 11863  00227E  D036               	goto	i2l3846
 11864                           
 11865                           ;UART.c: 84: c = _this->buf[_this->tail];
 11866  002280  EE20 F0CA          	lfsr	2,202
 11867  002284  5007               	movf	i2UART_buff_get@_this,w,c
 11868  002286  26D9               	addwf	fsr2l,f,c
 11869  002288  5008               	movf	i2UART_buff_get@_this+1,w,c
 11870  00228A  22DA               	addwfc	fsr2h,f,c
 11871  00228C  CFDE F009          	movff	postinc2,??i2_UART_buff_get
 11872  002290  CFDD F00A          	movff	postdec2,??i2_UART_buff_get+1
 11873  002294  5009               	movf	??i2_UART_buff_get,w,c
 11874  002296  2407               	addwf	i2UART_buff_get@_this,w,c
 11875  002298  6ED9               	movwf	fsr2l,c
 11876  00229A  500A               	movf	??i2_UART_buff_get+1,w,c
 11877  00229C  2008               	addwfc	i2UART_buff_get@_this+1,w,c
 11878  00229E  6EDA               	movwf	fsr2h,c
 11879  0022A0  50DF               	movf	indf2,w,c
 11880  0022A2  6E0B               	movwf	i2UART_buff_get@c,c
 11881                           
 11882                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 11883  0022A4  EE20 F0CA          	lfsr	2,202
 11884  0022A8  5007               	movf	i2UART_buff_get@_this,w,c
 11885  0022AA  26D9               	addwf	fsr2l,f,c
 11886  0022AC  5008               	movf	i2UART_buff_get@_this+1,w,c
 11887  0022AE  22DA               	addwfc	fsr2h,f,c
 11888  0022B0  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 11889  0022B4  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 11890  0022B8  0E00               	movlw	0
 11891  0022BA  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 11892  0022BC  0EC8               	movlw	200
 11893  0022BE  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 11894  0022C0  EC28  F015         	call	i2_UART_buff_modulo_inc	;wreg free
 11895  0022C4  EE20 F0CA          	lfsr	2,202
 11896  0022C8  5007               	movf	i2UART_buff_get@_this,w,c
 11897  0022CA  26D9               	addwf	fsr2l,f,c
 11898  0022CC  5008               	movf	i2UART_buff_get@_this+1,w,c
 11899  0022CE  22DA               	addwfc	fsr2h,f,c
 11900  0022D0  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 11901  0022D4  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 11902                           
 11903                           ;UART.c: 86: --_this->count;
 11904  0022D8  EE20 F0CC          	lfsr	2,204
 11905  0022DC  5007               	movf	i2UART_buff_get@_this,w,c
 11906  0022DE  26D9               	addwf	fsr2l,f,c
 11907  0022E0  5008               	movf	i2UART_buff_get@_this+1,w,c
 11908  0022E2  22DA               	addwfc	fsr2h,f,c
 11909  0022E4  06DE               	decf	postinc2,f,c
 11910  0022E6  0E00               	movlw	0
 11911  0022E8  5ADD               	subwfb	postdec2,f,c
 11912                           
 11913                           ;UART.c: 87: } else {
 11914  0022EA  D002               	goto	i2l933
 11915  0022EC                     i2l3846:
 11916                           
 11917                           ;UART.c: 88: c = 0;
 11918  0022EC  0E00               	movlw	0
 11919  0022EE  6E0B               	movwf	i2UART_buff_get@c,c
 11920  0022F0                     i2l933:
 11921                           
 11922                           ;UART.c: 89: }
 11923                           ;UART.c: 90: return (c);
 11924  0022F0  500B               	movf	i2UART_buff_get@c,w,c
 11925  0022F2  0012               	return	
 11926  0022F4                     __end_ofi2_UART_buff_get:
 11927                           	opt stack 0
 11928                           tosu	equ	0xFFF
 11929                           tosh	equ	0xFFE
 11930                           tosl	equ	0xFFD
 11931                           pclatu	equ	0xFFB
 11932                           pclath	equ	0xFFA
 11933                           tblptru	equ	0xFF8
 11934                           tblptrh	equ	0xFF7
 11935                           tblptrl	equ	0xFF6
 11936                           tablat	equ	0xFF5
 11937                           prodh	equ	0xFF4
 11938                           prodl	equ	0xFF3
 11939                           intcon	equ	0xFF2
 11940                           intcon2	equ	0xFF1
 11941                           postinc0	equ	0xFEE
 11942                           fsr0h	equ	0xFEA
 11943                           fsr0l	equ	0xFE9
 11944                           wreg	equ	0xFE8
 11945                           fsr1h	equ	0xFE2
 11946                           fsr1l	equ	0xFE1
 11947                           indf2	equ	0xFDF
 11948                           postinc2	equ	0xFDE
 11949                           postdec2	equ	0xFDD
 11950                           fsr2h	equ	0xFDA
 11951                           fsr2l	equ	0xFD9
 11952                           status	equ	0xFD8
 11953                           
 11954 ;; *************** function _EUSART1_Receive_ISR *****************
 11955 ;; Defined at:
 11956 ;;		line 139 in file "UART.c"
 11957 ;; Parameters:    Size  Location     Type
 11958 ;;		None
 11959 ;; Auto vars:     Size  Location     Type
 11960 ;;  data            1   11[COMRAM] unsigned char 
 11961 ;; Return value:  Size  Location     Type
 11962 ;;		None               void
 11963 ;; Registers used:
 11964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
 11965 ;; Tracked objects:
 11966 ;;		On entry : 0/0
 11967 ;;		On exit  : 0/0
 11968 ;;		Unchanged: 0/0
 11969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11970 ;;      Params:         0       0       0       0       0       0       0
 11971 ;;      Locals:         1       0       0       0       0       0       0
 11972 ;;      Temps:          0       0       0       0       0       0       0
 11973 ;;      Totals:         1       0       0       0       0       0       0
 11974 ;;Total ram usage:        1 bytes
 11975 ;; Hardware stack levels used:    1
 11976 ;; Hardware stack levels required when called:    2
 11977 ;; This function calls:
 11978 ;;		i2_UART_buff_put
 11979 ;; This function is called by:
 11980 ;;		_INTERRUPT_InterruptManager
 11981 ;; This function uses a non-reentrant model
 11982 ;;
 11983                           
 11984                           	psect	text66
 11985  002AC2                     __ptext66:
 11986                           	opt stack 0
 11987  002AC2                     _EUSART1_Receive_ISR:
 11988                           	opt stack 21
 11989                           
 11990                           ;UART.c: 140: if (1 == RC1STAbits.OERR) {
 11991                           
 11992                           ;incstack = 0
 11993  002AC2  A2AB               	btfss	4011,1,c	;volatile
 11994  002AC4  D002               	goto	i2l964
 11995                           
 11996                           ;UART.c: 143: RC1STAbits.CREN = 0;
 11997  002AC6  98AB               	bcf	4011,4,c	;volatile
 11998                           
 11999                           ;UART.c: 144: RC1STAbits.CREN = 1;
 12000  002AC8  88AB               	bsf	4011,4,c	;volatile
 12001  002ACA                     i2l964:
 12002                           
 12003                           ;UART.c: 145: }
 12004                           ;UART.c: 146: unsigned char data = RCREG1;
 12005  002ACA  CFAE F00C          	movff	4014,EUSART1_Receive_ISR@data	;volatile
 12006                           
 12007                           ;UART.c: 147: UART_buff_put(&input_buffer, data);
 12008  002ACE  0103               	movlb	3	; () banked
 12009  002AD0  0E03               	movlw	high _input_buffer
 12010  002AD2  6E08               	movwf	i2UART_buff_put@_this+1,c
 12011  002AD4  0103               	movlb	3	; () banked
 12012  002AD6  0E00               	movlw	low _input_buffer
 12013  002AD8  6E07               	movwf	i2UART_buff_put@_this,c
 12014  002ADA  C00C  F009         	movff	EUSART1_Receive_ISR@data,i2UART_buff_put@c
 12015  002ADE  EC22  F00C         	call	i2_UART_buff_put	;wreg free
 12016  002AE2  0012               	return	
 12017  002AE4                     __end_of_EUSART1_Receive_ISR:
 12018                           	opt stack 0
 12019                           tosu	equ	0xFFF
 12020                           tosh	equ	0xFFE
 12021                           tosl	equ	0xFFD
 12022                           pclatu	equ	0xFFB
 12023                           pclath	equ	0xFFA
 12024                           tblptru	equ	0xFF8
 12025                           tblptrh	equ	0xFF7
 12026                           tblptrl	equ	0xFF6
 12027                           tablat	equ	0xFF5
 12028                           prodh	equ	0xFF4
 12029                           prodl	equ	0xFF3
 12030                           intcon	equ	0xFF2
 12031                           intcon2	equ	0xFF1
 12032                           postinc0	equ	0xFEE
 12033                           fsr0h	equ	0xFEA
 12034                           fsr0l	equ	0xFE9
 12035                           wreg	equ	0xFE8
 12036                           fsr1h	equ	0xFE2
 12037                           fsr1l	equ	0xFE1
 12038                           indf2	equ	0xFDF
 12039                           postinc2	equ	0xFDE
 12040                           postdec2	equ	0xFDD
 12041                           fsr2h	equ	0xFDA
 12042                           fsr2l	equ	0xFD9
 12043                           status	equ	0xFD8
 12044                           
 12045 ;; *************** function i2_UART_buff_put *****************
 12046 ;; Defined at:
 12047 ;;		line 68 in file "UART.c"
 12048 ;; Parameters:    Size  Location     Type
 12049 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 12050 ;;		 -> output_buffer(206), input_buffer(206), 
 12051 ;;  c               1    8[COMRAM] const unsigned char 
 12052 ;; Auto vars:     Size  Location     Type
 12053 ;;		None
 12054 ;; Return value:  Size  Location     Type
 12055 ;;		None               void
 12056 ;; Registers used:
 12057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
 12058 ;; Tracked objects:
 12059 ;;		On entry : 0/0
 12060 ;;		On exit  : 0/0
 12061 ;;		Unchanged: 0/0
 12062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12063 ;;      Params:         3       0       0       0       0       0       0
 12064 ;;      Locals:         0       0       0       0       0       0       0
 12065 ;;      Temps:          2       0       0       0       0       0       0
 12066 ;;      Totals:         5       0       0       0       0       0       0
 12067 ;;Total ram usage:        5 bytes
 12068 ;; Hardware stack levels used:    1
 12069 ;; Hardware stack levels required when called:    1
 12070 ;; This function calls:
 12071 ;;		i2_UART_buff_modulo_inc
 12072 ;; This function is called by:
 12073 ;;		_EUSART1_Receive_ISR
 12074 ;; This function uses a non-reentrant model
 12075 ;;
 12076                           
 12077                           	psect	text67
 12078  001844                     __ptext67:
 12079                           	opt stack 0
 12080  001844                     i2_UART_buff_put:
 12081                           	opt stack 21
 12082                           
 12083                           ;UART.c: 69: if (_this->count < 200) {
 12084                           
 12085                           ;incstack = 0
 12086  001844  EE20 F0CC          	lfsr	2,204
 12087  001848  5007               	movf	i2UART_buff_put@_this,w,c
 12088  00184A  26D9               	addwf	fsr2l,f,c
 12089  00184C  5008               	movf	i2UART_buff_put@_this+1,w,c
 12090  00184E  22DA               	addwfc	fsr2h,f,c
 12091  001850  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 12092  001854  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 12093  001858  500B               	movf	??i2_UART_buff_put+1,w,c
 12094  00185A  0A80               	xorlw	128
 12095  00185C  6EF3               	movwf	prodl,c
 12096  00185E  0E80               	movlw	128
 12097  001860  5CF3               	subwf	prodl,w,c
 12098  001862  0EC8               	movlw	200
 12099  001864  B4D8               	btfsc	status,2,c
 12100  001866  5C0A               	subwf	??i2_UART_buff_put,w,c
 12101  001868  B0D8               	btfsc	status,0,c
 12102  00186A  D036               	goto	i2l3832
 12103                           
 12104                           ;UART.c: 70: _this->buf[_this->head] = c;
 12105  00186C  EE20 F0C8          	lfsr	2,200
 12106  001870  5007               	movf	i2UART_buff_put@_this,w,c
 12107  001872  26D9               	addwf	fsr2l,f,c
 12108  001874  5008               	movf	i2UART_buff_put@_this+1,w,c
 12109  001876  22DA               	addwfc	fsr2h,f,c
 12110  001878  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 12111  00187C  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 12112  001880  500A               	movf	??i2_UART_buff_put,w,c
 12113  001882  2407               	addwf	i2UART_buff_put@_this,w,c
 12114  001884  6ED9               	movwf	fsr2l,c
 12115  001886  500B               	movf	??i2_UART_buff_put+1,w,c
 12116  001888  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 12117  00188A  6EDA               	movwf	fsr2h,c
 12118  00188C  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 12119                           
 12120                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
 12121  001890  EE20 F0C8          	lfsr	2,200
 12122  001894  5007               	movf	i2UART_buff_put@_this,w,c
 12123  001896  26D9               	addwf	fsr2l,f,c
 12124  001898  5008               	movf	i2UART_buff_put@_this+1,w,c
 12125  00189A  22DA               	addwfc	fsr2h,f,c
 12126  00189C  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 12127  0018A0  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 12128  0018A4  0E00               	movlw	0
 12129  0018A6  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 12130  0018A8  0EC8               	movlw	200
 12131  0018AA  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 12132  0018AC  EC28  F015         	call	i2_UART_buff_modulo_inc	;wreg free
 12133  0018B0  EE20 F0C8          	lfsr	2,200
 12134  0018B4  5007               	movf	i2UART_buff_put@_this,w,c
 12135  0018B6  26D9               	addwf	fsr2l,f,c
 12136  0018B8  5008               	movf	i2UART_buff_put@_this+1,w,c
 12137  0018BA  22DA               	addwfc	fsr2h,f,c
 12138  0018BC  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 12139  0018C0  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 12140                           
 12141                           ;UART.c: 72: ++_this->count;
 12142  0018C4  EE20 F0CC          	lfsr	2,204
 12143  0018C8  5007               	movf	i2UART_buff_put@_this,w,c
 12144  0018CA  26D9               	addwf	fsr2l,f,c
 12145  0018CC  5008               	movf	i2UART_buff_put@_this+1,w,c
 12146  0018CE  22DA               	addwfc	fsr2h,f,c
 12147  0018D0  2ADE               	incf	postinc2,f,c
 12148  0018D2  0E00               	movlw	0
 12149  0018D4  22DD               	addwfc	postdec2,f,c
 12150                           
 12151                           ;UART.c: 73: } else {
 12152  0018D6  0012               	return	
 12153  0018D8                     i2l3832:
 12154                           
 12155                           ;UART.c: 74: _this->buf[_this->head] = c;
 12156  0018D8  EE20 F0C8          	lfsr	2,200
 12157  0018DC  5007               	movf	i2UART_buff_put@_this,w,c
 12158  0018DE  26D9               	addwf	fsr2l,f,c
 12159  0018E0  5008               	movf	i2UART_buff_put@_this+1,w,c
 12160  0018E2  22DA               	addwfc	fsr2h,f,c
 12161  0018E4  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 12162  0018E8  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 12163  0018EC  500A               	movf	??i2_UART_buff_put,w,c
 12164  0018EE  2407               	addwf	i2UART_buff_put@_this,w,c
 12165  0018F0  6ED9               	movwf	fsr2l,c
 12166  0018F2  500B               	movf	??i2_UART_buff_put+1,w,c
 12167  0018F4  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 12168  0018F6  6EDA               	movwf	fsr2h,c
 12169  0018F8  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 12170                           
 12171                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
 12172  0018FC  EE20 F0C8          	lfsr	2,200
 12173  001900  5007               	movf	i2UART_buff_put@_this,w,c
 12174  001902  26D9               	addwf	fsr2l,f,c
 12175  001904  5008               	movf	i2UART_buff_put@_this+1,w,c
 12176  001906  22DA               	addwfc	fsr2h,f,c
 12177  001908  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 12178  00190C  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 12179  001910  0E00               	movlw	0
 12180  001912  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 12181  001914  0EC8               	movlw	200
 12182  001916  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 12183  001918  EC28  F015         	call	i2_UART_buff_modulo_inc	;wreg free
 12184  00191C  EE20 F0C8          	lfsr	2,200
 12185  001920  5007               	movf	i2UART_buff_put@_this,w,c
 12186  001922  26D9               	addwf	fsr2l,f,c
 12187  001924  5008               	movf	i2UART_buff_put@_this+1,w,c
 12188  001926  22DA               	addwfc	fsr2h,f,c
 12189  001928  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 12190  00192C  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 12191                           
 12192                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 12193  001930  EE20 F0CA          	lfsr	2,202
 12194  001934  5007               	movf	i2UART_buff_put@_this,w,c
 12195  001936  26D9               	addwf	fsr2l,f,c
 12196  001938  5008               	movf	i2UART_buff_put@_this+1,w,c
 12197  00193A  22DA               	addwfc	fsr2h,f,c
 12198  00193C  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 12199  001940  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 12200  001944  0E00               	movlw	0
 12201  001946  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 12202  001948  0EC8               	movlw	200
 12203  00194A  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 12204  00194C  EC28  F015         	call	i2_UART_buff_modulo_inc	;wreg free
 12205  001950  EE20 F0CA          	lfsr	2,202
 12206  001954  5007               	movf	i2UART_buff_put@_this,w,c
 12207  001956  26D9               	addwf	fsr2l,f,c
 12208  001958  5008               	movf	i2UART_buff_put@_this+1,w,c
 12209  00195A  22DA               	addwfc	fsr2h,f,c
 12210  00195C  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 12211  001960  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 12212  001964  0012               	return	
 12213  001966                     __end_ofi2_UART_buff_put:
 12214                           	opt stack 0
 12215                           tosu	equ	0xFFF
 12216                           tosh	equ	0xFFE
 12217                           tosl	equ	0xFFD
 12218                           pclatu	equ	0xFFB
 12219                           pclath	equ	0xFFA
 12220                           tblptru	equ	0xFF8
 12221                           tblptrh	equ	0xFF7
 12222                           tblptrl	equ	0xFF6
 12223                           tablat	equ	0xFF5
 12224                           prodh	equ	0xFF4
 12225                           prodl	equ	0xFF3
 12226                           intcon	equ	0xFF2
 12227                           intcon2	equ	0xFF1
 12228                           postinc0	equ	0xFEE
 12229                           fsr0h	equ	0xFEA
 12230                           fsr0l	equ	0xFE9
 12231                           wreg	equ	0xFE8
 12232                           fsr1h	equ	0xFE2
 12233                           fsr1l	equ	0xFE1
 12234                           indf2	equ	0xFDF
 12235                           postinc2	equ	0xFDE
 12236                           postdec2	equ	0xFDD
 12237                           fsr2h	equ	0xFDA
 12238                           fsr2l	equ	0xFD9
 12239                           status	equ	0xFD8
 12240                           
 12241 ;; *************** function i2_UART_buff_modulo_inc *****************
 12242 ;; Defined at:
 12243 ;;		line 106 in file "UART.c"
 12244 ;; Parameters:    Size  Location     Type
 12245 ;;  value           2    0[COMRAM] const unsigned int 
 12246 ;;  modulus         2    2[COMRAM] const unsigned int 
 12247 ;; Auto vars:     Size  Location     Type
 12248 ;;  UART_buff_mo    2    4[COMRAM] unsigned int 
 12249 ;; Return value:  Size  Location     Type
 12250 ;;                  2    0[COMRAM] unsigned int 
 12251 ;; Registers used:
 12252 ;;		wreg, status,2, status,0
 12253 ;; Tracked objects:
 12254 ;;		On entry : 0/0
 12255 ;;		On exit  : 0/0
 12256 ;;		Unchanged: 0/0
 12257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12258 ;;      Params:         4       0       0       0       0       0       0
 12259 ;;      Locals:         2       0       0       0       0       0       0
 12260 ;;      Temps:          0       0       0       0       0       0       0
 12261 ;;      Totals:         6       0       0       0       0       0       0
 12262 ;;Total ram usage:        6 bytes
 12263 ;; Hardware stack levels used:    1
 12264 ;; This function calls:
 12265 ;;		Nothing
 12266 ;; This function is called by:
 12267 ;;		i2_UART_buff_put
 12268 ;;		i2_UART_buff_get
 12269 ;; This function uses a non-reentrant model
 12270 ;;
 12271                           
 12272                           	psect	text68
 12273  002A50                     __ptext68:
 12274                           	opt stack 0
 12275  002A50                     i2_UART_buff_modulo_inc:
 12276                           	opt stack 21
 12277                           
 12278                           ;UART.c: 107: unsigned int my_value = value + 1;
 12279                           
 12280                           ;incstack = 0
 12281  002A50  0E01               	movlw	1
 12282  002A52  2401               	addwf	i2UART_buff_modulo_inc@value,w,c
 12283  002A54  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 12284  002A56  0E00               	movlw	0
 12285  002A58  2002               	addwfc	i2UART_buff_modulo_inc@value+1,w,c
 12286  002A5A  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 12287                           
 12288                           ;UART.c: 108: if (my_value >= modulus) {
 12289  002A5C  5003               	movf	i2UART_buff_modulo_inc@modulus,w,c
 12290  002A5E  5C05               	subwf	i2UART_buff_modulo_inc@my_value,w,c
 12291  002A60  5004               	movf	i2UART_buff_modulo_inc@modulus+1,w,c
 12292  002A62  5806               	subwfb	i2UART_buff_modulo_inc@my_value+1,w,c
 12293  002A64  A0D8               	btfss	status,0,c
 12294  002A66  D004               	goto	i2l3400
 12295                           
 12296                           ;UART.c: 109: my_value = 0;
 12297  002A68  0E00               	movlw	0
 12298  002A6A  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 12299  002A6C  0E00               	movlw	0
 12300  002A6E  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 12301  002A70                     i2l3400:
 12302                           
 12303                           ;UART.c: 110: }
 12304                           ;UART.c: 111: return (my_value);
 12305  002A70  C005  F001         	movff	i2UART_buff_modulo_inc@my_value,?i2_UART_buff_modulo_inc
 12306  002A74  C006  F002         	movff	i2UART_buff_modulo_inc@my_value+1,?i2_UART_buff_modulo_inc+1
 12307  002A78  0012               	return	
 12308  002A7A                     __end_ofi2_UART_buff_modulo_inc:
 12309                           	opt stack 0
 12310                           tosu	equ	0xFFF
 12311                           tosh	equ	0xFFE
 12312                           tosl	equ	0xFFD
 12313                           pclatu	equ	0xFFB
 12314                           pclath	equ	0xFFA
 12315                           tblptru	equ	0xFF8
 12316                           tblptrh	equ	0xFF7
 12317                           tblptrl	equ	0xFF6
 12318                           tablat	equ	0xFF5
 12319                           prodh	equ	0xFF4
 12320                           prodl	equ	0xFF3
 12321                           intcon	equ	0xFF2
 12322                           intcon2	equ	0xFF1
 12323                           postinc0	equ	0xFEE
 12324                           fsr0h	equ	0xFEA
 12325                           fsr0l	equ	0xFE9
 12326                           wreg	equ	0xFE8
 12327                           fsr1h	equ	0xFE2
 12328                           fsr1l	equ	0xFE1
 12329                           indf2	equ	0xFDF
 12330                           postinc2	equ	0xFDE
 12331                           postdec2	equ	0xFDD
 12332                           fsr2h	equ	0xFDA
 12333                           fsr2l	equ	0xFD9
 12334                           status	equ	0xFD8
 12335                           
 12336 ;; *************** function _ADC_ISR *****************
 12337 ;; Defined at:
 12338 ;;		line 128 in file "mcc_generated_files/adc.c"
 12339 ;; Parameters:    Size  Location     Type
 12340 ;;		None
 12341 ;; Auto vars:     Size  Location     Type
 12342 ;;		None
 12343 ;; Return value:  Size  Location     Type
 12344 ;;		None               void
 12345 ;; Registers used:
 12346 ;;		None
 12347 ;; Tracked objects:
 12348 ;;		On entry : 0/0
 12349 ;;		On exit  : 0/0
 12350 ;;		Unchanged: 0/0
 12351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12352 ;;      Params:         0       0       0       0       0       0       0
 12353 ;;      Locals:         0       0       0       0       0       0       0
 12354 ;;      Temps:          0       0       0       0       0       0       0
 12355 ;;      Totals:         0       0       0       0       0       0       0
 12356 ;;Total ram usage:        0 bytes
 12357 ;; Hardware stack levels used:    1
 12358 ;; This function calls:
 12359 ;;		Nothing
 12360 ;; This function is called by:
 12361 ;;		_INTERRUPT_InterruptManager
 12362 ;; This function uses a non-reentrant model
 12363 ;;
 12364                           
 12365                           	psect	text69
 12366  002C0E                     __ptext69:
 12367                           	opt stack 0
 12368  002C0E                     _ADC_ISR:
 12369                           	opt stack 23
 12370                           
 12371                           ;adc.c: 131: PIR1bits.ADIF = 0;
 12372                           
 12373                           ;incstack = 0
 12374  002C0E  9C9E               	bcf	3998,6,c	;volatile
 12375  002C10  0012               	return	
 12376  002C12                     __end_of_ADC_ISR:
 12377                           	opt stack 0
 12378  0000                     tosu	equ	0xFFF
 12379                           tosh	equ	0xFFE
 12380                           tosl	equ	0xFFD
 12381                           pclatu	equ	0xFFB
 12382                           pclath	equ	0xFFA
 12383                           tblptru	equ	0xFF8
 12384                           tblptrh	equ	0xFF7
 12385                           tblptrl	equ	0xFF6
 12386                           tablat	equ	0xFF5
 12387                           prodh	equ	0xFF4
 12388                           prodl	equ	0xFF3
 12389                           intcon	equ	0xFF2
 12390                           intcon2	equ	0xFF1
 12391                           postinc0	equ	0xFEE
 12392                           fsr0h	equ	0xFEA
 12393                           fsr0l	equ	0xFE9
 12394                           wreg	equ	0xFE8
 12395                           fsr1h	equ	0xFE2
 12396                           fsr1l	equ	0xFE1
 12397                           indf2	equ	0xFDF
 12398                           postinc2	equ	0xFDE
 12399                           postdec2	equ	0xFDD
 12400                           fsr2h	equ	0xFDA
 12401                           fsr2l	equ	0xFD9
 12402                           status	equ	0xFD8
 12403                           tosu	equ	0xFFF
 12404                           tosh	equ	0xFFE
 12405                           tosl	equ	0xFFD
 12406                           pclatu	equ	0xFFB
 12407                           pclath	equ	0xFFA
 12408                           tblptru	equ	0xFF8
 12409                           tblptrh	equ	0xFF7
 12410                           tblptrl	equ	0xFF6
 12411                           tablat	equ	0xFF5
 12412                           prodh	equ	0xFF4
 12413                           prodl	equ	0xFF3
 12414                           intcon	equ	0xFF2
 12415                           intcon2	equ	0xFF1
 12416                           postinc0	equ	0xFEE
 12417                           fsr0h	equ	0xFEA
 12418                           fsr0l	equ	0xFE9
 12419                           wreg	equ	0xFE8
 12420                           fsr1h	equ	0xFE2
 12421                           fsr1l	equ	0xFE1
 12422                           indf2	equ	0xFDF
 12423                           postinc2	equ	0xFDE
 12424                           postdec2	equ	0xFDD
 12425                           fsr2h	equ	0xFDA
 12426                           fsr2l	equ	0xFD9
 12427                           status	equ	0xFD8
 12428                           
 12429                           	psect	text70
 12430  000000                     __ptext70:
 12431                           	opt stack 0
 12432                           tosu	equ	0xFFF
 12433                           tosh	equ	0xFFE
 12434                           tosl	equ	0xFFD
 12435                           pclatu	equ	0xFFB
 12436                           pclath	equ	0xFFA
 12437                           tblptru	equ	0xFF8
 12438                           tblptrh	equ	0xFF7
 12439                           tblptrl	equ	0xFF6
 12440                           tablat	equ	0xFF5
 12441                           prodh	equ	0xFF4
 12442                           prodl	equ	0xFF3
 12443                           intcon	equ	0xFF2
 12444                           intcon2	equ	0xFF1
 12445                           postinc0	equ	0xFEE
 12446                           fsr0h	equ	0xFEA
 12447                           fsr0l	equ	0xFE9
 12448                           wreg	equ	0xFE8
 12449                           fsr1h	equ	0xFE2
 12450                           fsr1l	equ	0xFE1
 12451                           indf2	equ	0xFDF
 12452                           postinc2	equ	0xFDE
 12453                           postdec2	equ	0xFDD
 12454                           fsr2h	equ	0xFDA
 12455                           fsr2l	equ	0xFD9
 12456                           status	equ	0xFD8
 12457                           
 12458                           	psect	rparam
 12459  0000                     tosu	equ	0xFFF
 12460                           tosh	equ	0xFFE
 12461                           tosl	equ	0xFFD
 12462                           pclatu	equ	0xFFB
 12463                           pclath	equ	0xFFA
 12464                           tblptru	equ	0xFF8
 12465                           tblptrh	equ	0xFF7
 12466                           tblptrl	equ	0xFF6
 12467                           tablat	equ	0xFF5
 12468                           prodh	equ	0xFF4
 12469                           prodl	equ	0xFF3
 12470                           intcon	equ	0xFF2
 12471                           intcon2	equ	0xFF1
 12472                           postinc0	equ	0xFEE
 12473                           fsr0h	equ	0xFEA
 12474                           fsr0l	equ	0xFE9
 12475                           wreg	equ	0xFE8
 12476                           fsr1h	equ	0xFE2
 12477                           fsr1l	equ	0xFE1
 12478                           indf2	equ	0xFDF
 12479                           postinc2	equ	0xFDE
 12480                           postdec2	equ	0xFDD
 12481                           fsr2h	equ	0xFDA
 12482                           fsr2l	equ	0xFD9
 12483                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         997
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     42      69
    BANK0           160     40     155
    BANK1           256      0     246
    BANK2           256      0     200
    BANK3           256      0     206
    BANK4           256      0     206
    BANK5           256      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> LEDwriteDisplay@writeBuffer(BANK0[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_tr_queue.pTrFlag	PTR enum E8836 size(2) Largest target is 0
		 -> LEDwriteDisplay@status(BANK0[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    memset@p1	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), ring_buffer(BANK1[206]), 

    memset@p	PTR unsigned char  size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), ring_buffer(BANK1[206]), 

    UART_buff_peek@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> input_buffer(BANK3[206]), 

    UART_buff_size@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    UART_buff_get@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    UART_buff_put@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    UART_buff_init@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    crcBufS_get@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK0[17]), 

    crcBufS_status_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK0[17]), 

    crcBufS_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK0[17]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), ring_buffer(BANK1[206]), 

    FastTransfer_buffer_flush@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), 

    FastTransfer_buffer_put@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), 

    CRC8@data	PTR const unsigned char  size(2) Largest target is 206
		 -> CRCcheck@arrayHolder(BANK0[3]), receiveData@holder_2257(BANK0[3]), receiveData@holder(BANK0[3]), rx_buffer(BANK2[200]), 
		 -> ring_buffer(BANK1[206]), NULL(NULL[0]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), NULL(NULL[0]), 

    begin@stufftoreceive	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_get(), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_get(), 

    begin@stuffpeek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_peek(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_peek(), 

    begin@stuffavailable	PTR FTN()int  size(2) Largest target is 2
		 -> Receive_available(), 

    serial_available	PTR FTN()int  size(2) Largest target is 2
		 -> Absolute function(), Receive_available(), 

    begin@stufftosend	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Send_put(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), Send_put(), 

    begin@ptr	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), NULL(NULL[0]), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK0[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK0[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK0[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK0[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E8836 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK0[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E8836 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK0[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    F8948.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK0[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWrite@pflag	PTR enum E8836 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK0[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK0[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    F8943.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK0[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 20
		 -> group(COMRAM[2]), LEDwriteDisplay@writeBuffer(BANK0[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), 
		 -> LEDblinkRate@b(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), LEDBsetBrightness@b(BANK0[2]), I2C1_ISR@i2c_address(COMRAM[2]), 
		 -> NULL(NULL[0]), 

    S21$pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK0[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 20
		 -> LEDwriteDisplay@writeBuffer(BANK0[20]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E8836 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK0[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    S33$pTrFlag	PTR enum E8836 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK0[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E8836 size(2) Largest target is 1
		 -> LEDwriteDisplay@status(BANK0[1]), LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    S33$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), NULL(NULL[0]), 

    S44$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    S44$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 


Critical Paths under _main in COMRAM

    _updateComms->_receiveData
    _respondECU->_ToSend
    _sendData->_FastTransfer_buffer_flush
    _sendData->_Send_put
    _FastTransfer_buffer_flush->_memset
    _buttonsCollector->_GetButtonState
    _ToSend->_buttonsCollector
    _FastTransfer_buffer_put->_FastTransfer_buffer_modulo_inc
    _receiveData->_Send_put
    _Send_put->_UART_buff_get
    _Send_put->_UART_buff_put
    _UART_buff_put->_UART_buff_modulo_inc
    _Receive_peek->_UART_buff_peek
    _CRCcheck->_crcBufS_get
    _Receive_get->_UART_buff_get
    _UART_buff_get->_UART_buff_modulo_inc
    _Receive_available->_UART_buff_size
    _handleIndicators->_SetLEDOut
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    _begin->___awdiv
    _EUSART1_Initialize->_UART_buff_init
    _UART_buff_init->_memset
    _LEDwriteDisplay->_I2C1_MasterWrite
    _LEDsetValue->_LEDsetBar
    _LEDsetBar->___awdiv
    _LEDbegin->_I2C1_MasterWrite
    _LEDblinkRate->_I2C1_MasterWrite
    _LEDBsetBrightness->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _TMR0_ISR->_ReadButtonState
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Transmit_ISR->i2_UART_buff_get
    i2_UART_buff_get->i2_UART_buff_modulo_inc
    _EUSART1_Receive_ISR->i2_UART_buff_put
    i2_UART_buff_put->i2_UART_buff_modulo_inc

Critical Paths under _main in BANK0

    _main->_LEDsetValue
    _updateComms->_receiveData
    _respondECU->_sendData
    _receiveData->_CRCcheck
    ___fttol->___ftmul
    _SYSTEM_Initialize->_begin
    _LEDsetValue->___fttol
    _LEDbegin->_LEDBsetBrightness
    _LEDbegin->_LEDblinkRate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   43433
                                             34 BANK0      6     6      0
                           _LEDbegin
                        _LEDsetValue
                    _LEDwriteDisplay
                  _SYSTEM_Initialize
                            ___ftmul
                            ___fttol
                           ___lwtoft
                        _updateComms
 ---------------------------------------------------------------------------------
 (1) _updateComms                                          0     0      0   18897
                        _TBbarGraphs
                   _handleIndicators
                        _receiveData
                         _respondECU
 ---------------------------------------------------------------------------------
 (2) _respondECU                                           0     0      0    7507
                              _Delay
                             _ToSend
                   _buttonsCollector
                           _sendData
 ---------------------------------------------------------------------------------
 (3) _sendData                                             5     5      0    5704
                                             38 COMRAM     1     1      0
                                              0 BANK0      4     4      0
                   Absolute function *
                               _CRC8
          _FastTransfer_buffer_flush
                           _Send_put *
                        _crcBufS_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_put                                          7     2      5     742
                                             26 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_flush                            4     0      4    1139
                                             34 COMRAM     4     0      4
                             _memset
 ---------------------------------------------------------------------------------
 (3) _buttonsCollector                                     9     7      2     223
                                             32 COMRAM     9     7      2
                     _GetButtonState
 ---------------------------------------------------------------------------------
 (4) _GetButtonState                                       6     4      2      86
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _ToSend                                               3     1      2    1406
                                             41 COMRAM     1     1      0
                                              0 BANK0      2     0      2
            _FastTransfer_buffer_put
                   _buttonsCollector (ARG)
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_put                              7     2      5    1190
                                             32 COMRAM     7     2      5
     _FastTransfer_buffer_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _FastTransfer_buffer_modulo_inc                       6     2      4     602
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay                                                5     3      2     174
                                             26 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _receiveData                                         16    16      0   10715
                                             38 COMRAM     4     4      0
                                              7 BANK0     12    12      0
                   Absolute function *
                               _CRC8
                           _CRCcheck
                  _Receive_available *
                        _Receive_get *
                       _Receive_peek *
                           _Send_put *
 ---------------------------------------------------------------------------------
 (4) _Send_put                                             1     1      0    2614
                                             37 COMRAM     1     1      0
                      _UART_buff_get
                      _UART_buff_put
 ---------------------------------------------------------------------------------
 (5) _UART_buff_put                                        5     2      3    1418
                                             32 COMRAM     5     2      3
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (3) _Receive_peek                                         0     0      0     139
                     _UART_buff_peek
 ---------------------------------------------------------------------------------
 (4) _UART_buff_peek                                       4     2      2     139
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _CRCcheck                                             7     7      0    5114
                                              0 BANK0      7     7      0
                   Absolute function *
                               _CRC8
                  _Receive_available *
                        _Receive_get *
                        _crcBufS_get
                 _crcBufS_status_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_status_put                                  10     6      4     908
                                             26 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) _crcBufS_get                                         12     8      4    1404
                                             26 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (3) _Receive_get                                          0     0      0    1165
                      _UART_buff_get
 ---------------------------------------------------------------------------------
 (5) _UART_buff_get                                        5     3      2    1165
                                             32 COMRAM     5     3      2
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (6) _UART_buff_modulo_inc                                 6     2      4     746
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Receive_available                                    2     0      2     150
                                             28 COMRAM     2     0      2
                     _UART_buff_size
 ---------------------------------------------------------------------------------
 (4) _UART_buff_size                                       2     0      2     150
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _CRC8                                                 7     4      3    1014
                                             26 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _handleIndicators                                     7     5      2     503
                                             31 COMRAM     7     5      2
                          _SetLEDOut
 ---------------------------------------------------------------------------------
 (3) _SetLEDOut                                            5     2      3     282
                                             26 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _TBbarGraphs                                          4     0      4     172
                                             26 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2498
                                             34 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     525
                                             12 BANK0     15    11      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3223
                                             37 COMRAM     3     3      0
                                              0 BANK0     12     6      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2313
                                             26 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2563
                     _ADC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                              _begin
 ---------------------------------------------------------------------------------
 (2) _begin                                               13     0     13    1548
                                              0 BANK0     13     0     13
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0    1015
                     _UART_buff_init
 ---------------------------------------------------------------------------------
 (3) _UART_buff_init                                       2     0      2    1015
                                             34 COMRAM     2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     830
                                             26 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDwriteDisplay                                     24    24      0    3911
                                              0 BANK0     24    24      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _LEDsetValue                                          7     3      4    2316
                                             27 BANK0      7     3      4
                          _LEDsetBar
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _LEDsetBar                                           24    20      4    1717
                                             34 COMRAM     8     4      4
                                              0 BANK0     16    16      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     684
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LEDbegin                                             7     7      0    9497
                                              8 BANK0      7     7      0
                   _I2C1_MasterWrite
                  _LEDBsetBrightness
                       _LEDblinkRate
 ---------------------------------------------------------------------------------
 (2) _LEDblinkRate                                         8     5      3    3225
                                              0 BANK0      8     5      3
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _LEDBsetBrightness                                    8     5      3    3225
                                              0 BANK0      8     5      3
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _I2C1_MasterWrite                                     7     0      7    2683
                                             35 COMRAM     7     0      7
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWriteTRBBuild                             9     2      7     494
                                             26 COMRAM     9     2      7
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterTRBInsert                                 7     3      4     494
                                             26 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0    1570
                                             12 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             5     5      0     330
                                              4 COMRAM     5     5      0
                    _ReadButtonState
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR0_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ReadButtonState                                      4     2      2     262
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _I2C1_ISR                                             3     3      0      31
                                              3 COMRAM     3     3      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C1_Stop                                            3     3      0      31
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0     528
                    i2_UART_buff_get
                   i2_UART_buff_size
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_size                                     2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_get                                      5     3      2     480
                                              6 COMRAM     5     3      2
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  1     1      0     681
                                             11 COMRAM     1     1      0
                    i2_UART_buff_put
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_put                                      5     2      3     658
                                              6 COMRAM     5     2      3
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_modulo_inc                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LEDbegin
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
     _LEDBsetBrightness
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
     _LEDblinkRate
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
   _LEDsetValue
     _LEDsetBar
       ___awdiv
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   _LEDwriteDisplay
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _UART_buff_init
         _memset
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _begin
       ___awdiv
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _updateComms
     _TBbarGraphs
     _handleIndicators
       _SetLEDOut
     _receiveData
       Absolute function(Fake) *
       _CRC8 *
       _CRCcheck *
         Absolute function(Fake) *
         _CRC8 *
         _Receive_available *
           _UART_buff_size
         _Receive_get *
           _UART_buff_get
             _UART_buff_modulo_inc
         _crcBufS_get *
         _crcBufS_status_put *
       _Receive_available *
         _UART_buff_size
       _Receive_get *
         _UART_buff_get
           _UART_buff_modulo_inc
       _Receive_peek *
         _UART_buff_peek
       _Send_put *
         _UART_buff_get
           _UART_buff_modulo_inc
         _UART_buff_put
           _UART_buff_modulo_inc
     _respondECU
       _Delay
       _ToSend
         _FastTransfer_buffer_put
           _FastTransfer_buffer_modulo_inc
         _buttonsCollector (ARG)
           _GetButtonState
       _buttonsCollector
         _GetButtonState
       _sendData
         Absolute function(Fake) *
         _CRC8 *
         _FastTransfer_buffer_flush *
           _memset
         _Send_put *
           _UART_buff_get
             _UART_buff_modulo_inc
           _UART_buff_put
             _UART_buff_modulo_inc
         _crcBufS_put *

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
     i2_UART_buff_put
       i2_UART_buff_modulo_inc
   _EUSART1_Transmit_ISR
     i2_UART_buff_get
       i2_UART_buff_modulo_inc
     i2_UART_buff_size
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR
     _ReadButtonState
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      CE      13       80.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      CE      11       80.5%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      C8       8       78.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      F6       6       96.1%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     28      9B       4       96.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2A      45       1       72.6%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     43A       9        0.0%
DATA                 0      0     43A      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat Dec 12 20:56:53 2015

      __end_of_FastTransfer_buffer_flush 2678                   i2_UART_buff_modulo_inc 2A50  
                           _rx_array_inx 003D                             ___awdiv@sign 0020  
               LEDBsetBrightness@timeOut 00D8                             __CFG_CP0$OFF 000000  
                           __CFG_CP1$OFF 000000                             __CFG_CP2$OFF 000000  
                           __CFG_CP3$OFF 000000                                      l127 1DE2  
                                    l129 1DF0                                      l420 298E  
                                    l512 077C                                      l433 1E38  
                                    l703 25A8                                      l570 231C  
                                    l563 230E                                      l555 2300  
                                    l591 2346                                      l584 2338  
                                    l577 232A                                      l933 225E  
                                    l774 27E0                                      l695 24D4  
                           __CFG_CPB$OFF 000000                             __CFG_CPD$OFF 000000  
                        __end_of_ADC_ISR 2C12     FastTransfer_buffer_flush@clearBuffer 0025  
                                    prod 000FF3                                      tosl 000FFD  
                                    wreg 000FE8                              _TBbarGraphs 2BDA  
          i2UART_buff_modulo_inc@modulus 0003                             __CFG_LVP$OFF 000000  
                       __end_of_I2C1_ISR 0D9E                                     l3044 2A1C  
                                   l5000 1F04                                     l5002 1F22  
                                   l3250 22F6                                     l5004 1F2C  
                                   l3260 233C                                     l3252 2304  
                                   l3244 297A                                     l3254 2312  
                                   l3360 1F74                                     l3256 2320  
                                   l3264 234A                                     l3258 232E  
                                   l3372 1FAA                                     l5220 1EA0  
                                   l4502 1DAE                                     l3374 1FB2  
                                   l3366 1F94                                     l5206 1E16  
                                   l5302 15E2                                     l5310 122A  
                                   l3392 1FEA                                     l3384 1FD2  
                                   l3376 1FB6                                     l5232 150A  
                                   l4520 27CA                                     l4610 26BE  
                                   l5170 2012                                     l5218 1E8C  
                                   l5226 14D0                                     l5330 12AC  
                                   l4514 27B4                                     l4530 27EA  
                                   l4508 1DD6                                     l5172 203A  
                                   l3388 1FDC                                     l5228 14F8  
                                   l5244 1524                                     l4444 29DA  
                                   l5340 12F6                                     l5316 125E  
                                   l5190 206E                                     l5246 152C  
                                   l5334 12CA                                     l4438 2A46  
                                   l4550 1A90                                     l5176 204C  
                                   l4448 29EA                                     l5344 1314  
                                   l4528 27E6                                     l4472 225A  
                                   l4632 1444                                     l5290 15C8  
                                   l4554 1A9A                                     l4642 108A  
                                   l4458 17B6                                     l4804 212C  
                                   l5188 2066                                     l4724 073C  
                                   l5284 158E                                     l5380 0EA2  
                                   l4812 00F2                                     l4820 0128  
                                   l4628 1410                                     l4750 2154  
                                   l4742 0A08                                     l4734 087A  
                                   l5286 15B6                                     l5390 0EE2  
                                   l5358 0DDE                                     l4566 1B26  
                                   l4582 1C08                                     l4574 1B7A  
                                   l4670 11E6                                     l5376 0E86  
                                   l4920 058A                                     l4832 01CE  
                                   l5448 198A                     receiveData@crcHolder 00E0  
                                   l4762 21AC                                     l4738 0932  
                                   l5394 0F08                                     l5386 0EC4  
                                   l4666 11C2                                     l4674 11EE  
                                   l4930 0596                                     l4850 0224  
                                   l4756 2172                                     l4780 20B6  
                                   l5388 0EDC                                     l4836 01EC  
                                   l4844 021A                                     l4758 219A  
                                   l4774 21C6                                     l4792 2112  
                                   l4960 0702                                     l4880 034E  
                                   l4872 02DE                                     l4864 0282  
                                   l4786 20D8                                     l4890 0406  
                                   l4788 2100                                     l4868 02B6  
                                   l4886 03EC                                     l4992 1EC6  
                                   l4888 03F2                                     l4968 070E  
                                   l4994 1ED0                                     l4996 1EEE  
                                   l4988 1EB8                                     _CRC8 27AE  
                                   _LATA 000F89                                     _LATB 000F8A  
                                   _LATC 000F8B                                     _LATD 000F8C  
                                   _LATE 000F8D                                     u5018 10B6  
                                   u5019 10CA                                     u5204 08C4  
                                   u5028 10D2                                     u5205 08BC  
                                   u5029 10E6                                     u5038 10EE  
                                   u5039 1102                                     u5224 095A  
                                   u5048 110A                                     u5225 0952  
                                   u5049 111E                                     u5234 098A  
                                   u2674 2592                                     u5235 0982  
                                   u2675 258C                                     u5164 079E  
                                   u5165 0796                                     u5254 0A32  
                                   u5174 0814                                     u5255 0A2A  
                                   u5175 080C                                     u6311 120A  
                                   u3815 247E                                     u5264 0AA2  
                                   u5408 00CC                                     u5265 0A9A  
                                   u5409 00E0                                     u5194 08A4  
                                   u3834 24C0                                     u5195 089C  
                                   u6331 123E                                     u3835 24BA  
                                   u5508 019C                                     u5428 00FC  
                                   u5509 01B0                                     u5429 0110  
                                   u5608 0286                                     u5528 01D2  
                                   u5448 012C                                     u5609 029A  
                                   u5529 01E6                                     u5449 0140  
                                   u5618 02BA                                     u4755 1D9A  
                                   u6371 0DB6                                     u5619 02CE  
                                   i2l60 0B48                                     u5708 0496  
                                   u5468 014A                                     u5709 04AC  
                                   u5469 015E                                     u6390 0E0A  
                                   u5718 04B0                                     u4918 1380  
                                   i2l71 0C20                                     i2l63 0BE2  
                                   u5719 04C6                                     u4919 1396  
                                   i2l72 0C30                                     u5808 060E  
                                   u5728 04CA                                     u5568 0228  
                                   u5488 0168                                     u4928 139A  
                                   i2l65 0BEA                                     u5809 0624  
                                   u5729 04E0                                     u5569 023C  
                                   u5489 017C                                     u4929 13B0  
                                   i2l90 0D08                                     i2l82 0CAC  
                                   i2l66 0BF2                                     u5818 0628  
                                   u5738 04E4                                     u5498 0182  
                                   u4938 13B4                                     u6395 0E00  
                                   u5819 063E                                     u5739 04FA  
                                   u5499 0196                                     u4939 13CC  
                                   i2l76 0C98                                     u5828 0642  
                                   u5748 04FE                                     u5588 0250  
                                   u4948 13D0                                     u5829 0658  
                                   u5749 0514                                     u5589 026A  
                                   u6637 2980                                     u4949 13E6  
                                   i2l94 0D3A                                     i2l86 0CDA  
                                   u5838 065C                                     u5758 0518  
                                   u4958 13EA                                     u5839 0672  
                                   u5759 052E                                     u4959 1402  
                                   u5848 0676                                     u5768 0532  
                                   u4968 1414                                     i2l89 0CF6  
                                   u5849 068C                                     u5769 056E  
                                   u4969 143E                                     u5858 0690  
                                   u5778 0572                                     u5698 047C  
                                   u5859 06A6                                     u5699 0492  
                                   u5868 06AA                                     u4988 1464  
                                   u5869 06E6                                     u4989 147C  
                                   u4998 108E                                     u5878 06EA  
                                   u5798 05F4                                     u4999 10A2  
                                   u5799 060A                                     _WPUB 000F61  
                                   _main 1966                             ___ftpack@arg 001B  
                           ___ftpack@exp 001E                          _TMR0_StartTimer 2C0A  
                                   _time 00AF                                     fsr0h 000FEA  
                                   fsr1h 000FE2                                     fsr0l 000FE9  
                                   fsr2h 000FDA                                     fsr1l 000FE1  
                                   indf2 000FDF                                     fsr2l 000FD9  
                 ??_I2C1_MasterTRBInsert 001F                            __CFG_BORV$190 000000  
                                   pclat 000FFA                                     prodh 000FF4  
                                   prodl 000FF3          __end_of_FastTransfer_buffer_put 108A  
                                   start 00C0                            __CFG_IESO$OFF 000000  
                           ___ftmul@cntr 00DD                             ___ftmul@sign 00DE  
         I2C1_MasterWriteTRBBuild@length 001F           i2UART_buff_modulo_inc@my_value 0005  
                       _handleIndicators 2470                             ___fttol@exp1 00ED  
                     __size_of_LEDsetBar 03F6                             ___fttol@lval 00E9  
                                  ?_CRC8 001B                  __end_of_TMR0_Initialize 2B22  
                             _i2c1_state 0037                         __end_of_CRCcheck 11F6  
         __size_of_OSCILLATOR_Initialize 000E                I2C1_MasterTRBInsert@count 0021  
          __end_of_OSCILLATOR_Initialize 2C0A                I2C1_MasterTRBInsert@pflag 001D  
                       LEDbegin@i2c_addr 00E0                       crcBufS_put@address 001D  
                       __end_of_LEDbegin 2098                                    ?_main 0001  
                        __end_of___awdiv 1FF4                        __end_of_I2C1_Stop 2766  
                        __end_of___ftmul 1360                                    _T0CON 000FD5  
                        ___awdiv@divisor 001D                          __end_of___fttol 0F1A  
                                  _LATA3 007C4B                                    _LATB3 007C53  
                                  _LATD1 007C61                                    _LATB5 007C55  
                                  _LATE1 007C69                                    _LATE2 007C6A  
                         __CFG_DEBUG$OFF 000000                                    i2l320 0064  
                                  i2l322 0070                                    i2l324 007C  
                                  i2l316 004C                                    i2l318 0058  
                                  i2l328 0086                                    i2l933 22F0  
                                  i2l964 2ACA                          ___awdiv@counter 001F  
                                  _TMR0H 000FD7                                    _TMR0L 000FD6  
                                  _TRISA 000F92                                    _TRISB 000F93  
                                  _TRISC 000F94                                    _TRISD 000F95  
                                  _TRISE 000F96                                    _Delay 2970  
           __end_of_I2C1_BusCollisionISR 2C16                            __CFG_WRT0$OFF 000000  
                          __CFG_WRT1$OFF 000000                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                        ?_buttonsCollector 0021  
                   _EUSART1_Transmit_ISR 28FE                           __CFG_EBTR0$OFF 000000  
                         __CFG_FCMEN$OFF 000000                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                      ??_I2C1_Initialize 001B                         __end_of_TMR0_ISR 254A  
                          __CFG_WRTB$OFF 000000                             ?_LEDsetValue 00EE  
                          __CFG_WRTC$OFF 000000                            __CFG_WRTD$OFF 000000  
                                  _begin 2382                           __CFG_EBTRB$OFF 000000  
                                  _brake 009F                       ??_buttonsCollector 0023  
                                  _group 0041                       __CFG_MCLRE$EXTMCLR 000000  
                          ___ftpack@sign 001F                                    pclath 000FFA  
                                  tablat 000FF5                            ??_Receive_get 0026  
                   __size_of_crcBufS_get 00EA                           begin@stuffpeek 00DE  
                   __size_of_crcBufS_put 00D6                                    status 000FD8  
                         __CFG_HFOFST$ON 000000                             ?_receiveData 0001  
                         SetLEDOut@state 001D                        ??_ReadButtonState 0003  
                         __CFG_PBADEN$ON 000000          I2C1_MasterWriteTRBBuild@address 0020  
                           __end_of_CRC8 27F6                          CRCcheck@SentCRC 00D3  
                        __initialization 25B2                    I2C1_MasterWrite@pdata 0024  
                  I2C1_MasterWrite@pflag 0029               __end_of_EUSART1_Initialize 287E  
                           __end_of_main 1A86                               ToSend@what 00D3  
                                 ??_CRC8 001E                            ?_LEDblinkRate 00D3  
                              ??_ADC_ISR 0001              ?_INTERRUPT_InterruptManager 0001  
                            _i2c1_object 0090                                   ??_main 00F5  
                          ___fttol@sign1 00E8                            __activetblptr 000002  
                       __end_of_Send_put 2970                __size_ofi2_UART_buff_size 0016  
                                 ?_Delay 001B                    ?_EUSART1_Transmit_ISR 0001  
          FastTransfer_buffer_put@towhat 0024                            ?_Receive_peek 0001  
                                 ?_begin 00D3                  __end_of_TMR0_StartTimer 2C0E  
                                 _ADCON0 000FC2                                   _ADCON1 000FC1  
                                 _ADCON2 000FC0                                   _ADRESH 000FC4  
                                 _ADRESL 000FC3                         ___awdiv@dividend 001B  
                                 _ANSELA 000F38                                   _ANSELB 000F39  
                                 _ANSELC 000F3A                                   _ANSELD 000F3B  
                                 _ANSELE 000F3C                         __end_of___ftpack 1F50  
                      __end_of_LEDsetBar 0B08                          i2_UART_buff_get 2262  
                                 _RC1STA 000FAB                          i2_UART_buff_put 1844  
                                 i2l4012 2546                                   i2l4004 251A  
                                 i2l3400 2A70                                   i2l4024 2932  
                         __CFG_WDTEN$OFF 000000                                   i2l5104 0CBE  
                                 i2l5130 0D18                                   i2l5114 0CE2  
                                 i2l5042 0BBC                                   i2l3450 15EE  
                                 i2l3460 1684                                   i2l3452 160C  
                                 Delay@x 001E                                   i2l5142 0D40  
                                 i2l5126 0D10                                   i2l5062 0C1A  
                                 i2l3462 16A2                                   i2l3454 162A  
                                 i2l5144 0D44                                   i2l5056 0C02  
                                 i2l5152 0D58                                   i2l3464 16C0  
                                 i2l3456 1648              UART_buff_modulo_inc@modulus 001D  
                                 i2l5146 0D4C                                   i2l3458 1666  
                                 i2l5076 0C5A                                   i2l3468 16DE  
                                 i2l3832 18D8                                   i2l5096 0CA6  
                                 i2l3846 22EC                                   i2l4696 2B84  
                                 i2l4688 2760                           _GetButtonState 29A4  
                                 _RCREG1 000FAE                         __end_of___lwtoft 2AC2  
                                 _OSCCON 000FD3                                   _SPBRG1 000FAF  
                                 _TX1STA 000FAC                                   _TXREG1 000FAD  
                     __size_of_SetLEDOut 008E                        ?_I2C1_MasterWrite 0024  
                         __CFG_XINST$OFF 000000                                   _ToSend 2AE4  
                     ??_I2C1_MasterWrite 002B                      __end_of_Receive_get 2BDA  
                       crcBufS_get@_this 001B              ??_FastTransfer_buffer_flush 0027  
                         _p_i2c1_current 00A5                            _output_buffer 0400  
                       crcBufS_get@space 001E                                ??___awdiv 001F  
                              CRC8@tempI 0020                           __CFG_STVREN$ON 000000  
                              ??___ftmul 0026                                ??___fttol 00E3  
                         ??_LEDblinkRate 002B               ??_I2C1_MasterWriteTRBBuild 0022  
                       ?_TMR0_Initialize 0001                                   _memset 29D0  
                              ?_I2C1_ISR 0001                                   clear_0 25B8  
                                 clear_1 25C4                                   clear_2 25D0  
                                 clear_3 25DC                                   clear_4 25E8  
                                 clear_5 25F4                         ___awdiv@quotient 0021  
                                 _rx_len 003E                         __end_of_sendData 14B2  
                  ___ftmul@f3_as_product 00DA                             __pdataCOMRAM 0045  
                          Send_put@_data 0026                           ??_Receive_peek 001F  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8         __size_of_FastTransfer_buffer_put 0170  
           __end_of_UART_buff_modulo_inc 2A50                    __end_of_TMR0_CallBack 2C14  
                 __end_of_GetButtonState 29D0            I2C1_MasterWriteTRBBuild@pdata 001D  
                     LEDblinkRate@status 00DA            __size_of_INTERRUPT_Initialize 0010  
                        SetLEDOut@lednum 001B                        _SYSTEM_Initialize 23FC  
                             __accesstop 0060                  __end_of__initialization 260C  
                              ?_CRCcheck 0001                       ?_SYSTEM_Initialize 0001  
                              ?_LEDbegin 0001                  ?i2_UART_buff_modulo_inc 0001  
                         _i2c1_trb_count 0038                             ?_updateComms 0001  
                           TBbarGraphs@b 001D                             TBbarGraphs@t 001B  
                          __end_of_Delay 29A4                               ___ftmul@f1 00D3  
                             ___ftmul@f2 00D6                    _I2C1_FunctionComplete 2B72  
                   _I2C1_BusCollisionISR 2C14                               ___fttol@f1 00DF  
                 LEDwriteDisplay@timeOut 00E8                           __pcstackCOMRAM 0001  
                 I2C1_MasterWrite@length 0026                       _crcBufS_status_put 1B70  
                    ??_SYSTEM_Initialize 0025                         crcBufS_put@_this 001B  
                          __end_of_begin 23FC                                ?_TMR0_ISR 0001  
 __end_of_FastTransfer_buffer_modulo_inc 2A26  __size_of_FastTransfer_buffer_modulo_inc 002A  
         _FastTransfer_buffer_modulo_inc 29FC                               ??_I2C1_ISR 0004  
           FastTransfer_buffer_put@_this 0021                              ToSend@where 002A  
                             ___lwtoft@c 0023                       UART_buff_get@_this 0021  
                    ?_crcBufS_status_put 001B                    __end_of_UART_buff_get 2262  
                 ??_EUSART1_Transmit_ISR 000C                    __end_of_UART_buff_put 1844  
                      __end_of_SetLEDOut 2382                    TMR0_ISR@CountCallBack 0099  
                                ??_Delay 001D                           LEDbegin@status 00E1  
                __end_ofi2_UART_buff_get 22F4                  __end_ofi2_UART_buff_put 1966  
                           ?_TBbarGraphs 001B              __end_of_EUSART1_Receive_ISR 2AE4  
              _FastTransfer_buffer_flush 2616                                  CRC8@crc 0021  
                                CRC8@len 001D                                  CRC8@sum 001E  
                                ??_begin 0023                         ?_TMR0_StartTimer 0001  
                        ?_GetButtonState 001B                __end_of_SYSTEM_Initialize 2470  
               __end_of_handleIndicators 24DE                   receiveData@holder_2257 00DD  
                    _addressErrorCounter 009B                     __size_of_LEDsetValue 00B0  
                             __pbssBANK0 0060                               __pbssBANK1 0100  
                             __pbssBANK2 0200                               __pbssBANK3 0300  
                             __pbssBANK4 0400                          __CFG_PLLCFG$OFF 000000  
                            _Receive_get 2BC8                               ??_CRCcheck 0027  
                   ??_crcBufS_status_put 001F           __end_ofi2_UART_buff_modulo_inc 2A7A  
                             __pnvCOMRAM 0043                        begin@givenAddress 00D6  
                __size_of_UART_buff_init 001E                  __size_of_UART_buff_peek 0024  
                             ??_LEDbegin 002B                  __size_of_UART_buff_size 0016  
                              ?_Send_put 0001                    ?_I2C1_BusCollisionISR 0001  
                   __size_of_receiveData 064E                                  ?_ToSend 00D3  
                     __CFG_CCP2MX$PORTC1 000000                 __size_of_LEDwriteDisplay 013A  
                             ??_TMR0_ISR 0005                       __CFG_CCP3MX$PORTB5 000000  
    FastTransfer_buffer_modulo_inc@value 001B                          _I2C1_Initialize 27F6  
                                _ADC_ISR 2C0E                                  ?_memset 001B  
                             _crc_buffer 00B3                                ?___ftpack 001B  
                              TMR0_ISR@x 0008                  __size_of_ADC_Initialize 0018  
                              ?___lwtoft 0023                       UART_buff_put@_this 0021  
                       i2_UART_buff_size 2BA0              i2UART_buff_modulo_inc@value 0001  
                                _OSCCON2 000FD2                                _I2C1_Stop 271C  
                      _Receive_available 2B40             UART_buff_modulo_inc@my_value 001F  
                      __CFG_PRICLKEN$OFF 000000                                  _OSCTUNE 000F9B  
                                _SPBRGH1 000FB0                                  _SSP1ADD 000FC8  
                    sendData@whereToSend 00D3                          _ReadButtonState 15EC  
                    _receiveArrayAddress 00A7                                  _SSP1BUF 000FC9  
                     ?_Receive_available 001D                               begin@error 00D7  
                   __end_of_LEDblinkRate 2136            I2C1_MasterTRBInsert@ptrb_list 001B  
                    ??_Receive_available 001F                                ?_sendData 0001  
                      _alignErrorCounter 009D                          __CFG_PWRTEN$OFF 000000  
              __size_of_buttonsCollector 0068                   ?_I2C1_FunctionComplete 0001  
                             ??_Send_put 0026                                  __Hparam 0000  
          __size_of_I2C1_MasterTRBInsert 00D4                                  __Lparam 0000  
                        __size_of_ToSend 0020                       _p_i2c1_trb_current 002B  
                   __end_of_Receive_peek 2BC8                                _AKNAKsend 0035  
                                ___awdiv 1F50                     _UART_buff_modulo_inc 2A26  
                                ___ftmul 11F6                                  ___fttol 0D9E  
                                _calc_CS 0036                                  __pcinit 25B2  
                             ??___ftpack 0020                          __size_of_memset 002C  
                                __ramtop 0600                         i2UART_buff_get@c 000B  
                                __ptext0 1966                                  __ptext1 28C2  
                                __ptext2 2766                                  __ptext3 1360  
                                __ptext4 1C4E                                  __ptext5 2616  
                                __ptext6 254A                                  __ptext7 29A4  
                                __ptext8 2AE4                                  __ptext9 0F1A  
                             ??___lwtoft 0026                                _T0CONbits 000FD5  
                       i2UART_buff_put@c 0009                    _OSCILLATOR_Initialize 2BFC  
              __end_of_Receive_available 2B5A                  _FastTransfer_buffer_put 0F1A  
                  CRCcheck@calculatedCRC 00D4                       _EUSART1_Initialize 283A  
                       ?i2_UART_buff_get 0007                 ??_PIN_MANAGER_Initialize 001B  
                       ?i2_UART_buff_put 0007                               ?_I2C1_Stop 0001  
           crcBufS_status_put@wantedTime 0023                            ??_crcBufS_get 001F  
                          ??_crcBufS_put 0020               __size_of_SYSTEM_Initialize 0074  
                   I2C1_ISR@pi2c_buf_ptr 0097                     end_of_initialization 260C  
                              Delay@wait 001B                      ?_EUSART1_Initialize 0001  
                LEDwriteDisplay@i2c_addr 00E7                                  memset@c 001D  
                                memset@n 001F                                  memset@p 0021  
                           LEDsetBar@bar 0023                            __Lmediumconst 0000  
                              _LEDsetBar 0712                   ??_I2C1_BusCollisionISR 0001  
                             ??_sendData 0027                  __end_of_I2C1_Initialize 283A  
                  ?_UART_buff_modulo_inc 001B                     __size_of_updateComms 003C  
                                postdec2 000FDD                                  postinc0 000FEE  
                                postinc2 000FDE                               _respondECU 2766  
                  ReadButtonState@btnnum 0001                         begin@stufftosend 00D8  
                    CRCcheck@arrayHolder 00D5                             LEDsetValue@k 00F3  
                   ??_EUSART1_Initialize 0025                      LEDblinkRate@timeOut 00D8  
                              _PORTAbits 000F80                                _PORTBbits 000F81  
                              _PORTDbits 000F83                        ??_LEDwriteDisplay 002B  
                __end_of_ReadButtonState 1722                __size_of_I2C1_MasterWrite 0054  
                 _dataAdressErrorCounter 00A3                        __size_of_I2C1_ISR 0296  
                             _rx_address 003C                                _TRISCbits 000F94  
                   __size_of_TBbarGraphs 0012                  LEDBsetBrightness@status 00DA  
      I2C1_ISR@i2c_10bit_address_restart 0033                      LEDbegin@writeBuffer 00DB  
                           begin@maxSize 00D5       __size_of_FastTransfer_buffer_flush 0062  
                  i2UART_buff_size@_this 0001                           _UART_buff_init 2B22  
                         _UART_buff_peek 2A7A                           _UART_buff_size 2B8A  
                    __end_of_crcBufS_get 1B70                               ?_LEDsetBar 0023  
                    __end_of_crcBufS_put 1D24                  I2C1_MasterWrite@address 0027  
                      __size_of_CRCcheck 016C                LEDBsetBrightness@i2c_addr 00D5  
                            ___ftmul@exp 00D9                        __size_of_LEDbegin 00A4  
                          _moduleAddress 003A                     _timer0ReloadVal16bit 0043  
                             CRCcheck@rt 00D8                           __end_of_ToSend 2B04  
           __end_of_INTERRUPT_Initialize 2BFC                          _crcErrorCounter 00A1  
                I2C1_MasterWrite@trBlock 00C9                        crcBufS_put@oldCRC 001E  
                          __pidataCOMRAM 2C16                        __size_of_TMR0_ISR 006C  
               I2C1_Stop@completion_code 0003                           _ADC_Initialize 2B5A  
              ??_FastTransfer_buffer_put 0026                   ?_OSCILLATOR_Initialize 0001  
                         __end_of_memset 29FC                        crcBufS_put@status 001F  
                buttonsCollector@sendVal 0026                             receiveData@r 00E4  
             __size_of_Receive_available 001A                             receiveData@u 00E2  
                       ??_GetButtonState 001D                        _LEDBsetBrightness 2136  
                    start_initialization 25B2                    __size_of_LEDblinkRate 009E  
                            ??_I2C1_Stop 0001                 __size_of_TMR0_Initialize 001E  
        __size_of_PIN_MANAGER_Initialize 0050                    crcBufS_get@wantedTime 0025  
                     ?_LEDBsetBrightness 00D3                                _SetLEDOut 22F4  
      __size_of_I2C1_MasterWriteTRBBuild 0044                        ?_handleIndicators 0020  
              ?_I2C1_MasterWriteTRBBuild 001B                   __end_of_UART_buff_init 2B40  
                 __end_of_UART_buff_peek 2A9E                           UART_buff_get@c 0025  
                 __end_of_UART_buff_size 2BA0                             ?_Receive_get 0001  
                         UART_buff_put@c 0023                       ??_handleIndicators 0022  
                        LEDbegin@timeOut 00DE                      ??_LEDBsetBrightness 002B  
                  __size_of_Receive_peek 0012                         _buttonsCollector 254A  
               __end_ofi2_UART_buff_size 2BB6                         ?_I2C1_Initialize 0001  
                               ??_ToSend 002A                   ??_UART_buff_modulo_inc 001F  
                               CRC8@data 001B                          crcBufS_get@time 001D  
                      __size_of_Send_put 0036                              ?_respondECU 0001  
             LEDwriteDisplay@writeBuffer 00D3                   __size_of_TMR0_CallBack 0002  
                 __end_of_ADC_Initialize 2B72                               LEDsetBar@a 0029  
                             LEDsetBar@c 0027                                 ?_ADC_ISR 0001  
                               ??_memset 0021                             _LEDblinkRate 2098  
                      handleIndicators@i 0025                __end_of_LEDBsetBrightness 21D0  
           I2C1_MasterWriteTRBBuild@ptrb 001B                         ?_ReadButtonState 0001  
                      __size_of___ftpack 00A8                              __pbssCOMRAM 002B  
                      __size_of___lwtoft 0024            __size_of_EUSART1_Transmit_ISR 003C  
                          __pcstackBANK0 00D3                            ??_LEDsetValue 00F2  
                          _i2c1_tr_queue 00CE                    LEDwriteDisplay@status 00EA  
                           _Receive_peek 2BB6                               ?_SetLEDOut 001B  
                    UART_buff_init@_this 0023                              _crcBufS_get 1A86  
                    UART_buff_peek@_this 001B                              _crcBufS_put 1C4E  
                       LEDsetValue@color 00F0                          ?_UART_buff_init 0023  
                        ?_UART_buff_peek 001B                          ?_UART_buff_size 001B  
                       LEDsetValue@value 00EE                  ??_I2C1_FunctionComplete 0001  
           __size_of_EUSART1_Receive_ISR 0022                            ??_receiveData 0027  
            __size_of_crcBufS_status_put 00DE                               sendData@CS 00D4  
                            ??_LEDsetBar 00D3                 __size_of_TMR0_StartTimer 0004  
                 __size_of_UART_buff_get 0092                   __size_of_UART_buff_put 0122  
                 _PIN_MANAGER_Initialize 26CC                        __size_of_sendData 0152  
                              __pintcode 0008                                 ?___awdiv 001B  
                               ?___ftmul 00D3                                 ?___fttol 00DF  
                        ?_ADC_Initialize 0001                                 _I2C1_ISR 0B08  
           ??_INTERRUPT_InterruptManager 000D             LEDBsetBrightness@writeBuffer 00D6  
                   i2UART_buff_get@_this 0007                         _I2C1_MasterWrite 2678  
                               _BAUD1CON 000FB8             __end_of_I2C1_MasterTRBInsert 1DF8  
                      buttonsCollector@i 0028                           __size_of_Delay 0034  
                              _butnarray 0088                           __size_of_begin 007A  
                          _TMR0_CallBack 2C12                      __size_of_respondECU 0048  
                   _INTERRUPT_Initialize 2BEC                     GetButtonState@btnnum 001B  
                           _receiveArray 01CE                   I2C1_MasterRead@trBlock 00C4  
                      ??_TMR0_Initialize 001B                      __end_of_LEDsetValue 1EA8  
                               _CRCcheck 108A                                 _LATCbits 000F8B  
                    UART_buff_size@_this 001B                                 _IPR1bits 000F9F  
                               _LEDbegin 1FF4                                 _IPR2bits 000FA2  
                               _PIE1bits 000F9D                                 _PIE2bits 000FA0  
                          LEDblinkRate@b 00D3                                 i2u300_40 1642  
                               i2u300_46 1644                                 i2u301_40 1660  
                               i2u301_46 1662                          _LEDwriteDisplay 14B2  
                               i2u302_40 167E                                 i2u302_46 1680  
                               i2u303_40 169C      __size_of_INTERRUPT_InterruptManager 00B8  
                               i2u303_46 169E                                 i2u304_40 16BA  
                               i2u304_46 16BC                                 i2u305_40 16D8  
                               i2u305_46 16DA                                 _PIR1bits 000F9E  
                               _PIR2bits 000FA1                                 i2u298_40 1606  
                               i2u298_46 1608                                 i2u299_40 1624  
                               i2u299_46 1626                      begin@stuffavailable 00DC  
                               _RCONbits 000FD0                         __CFG_WDTPS$32768 000000  
                    __end_of_receiveData 0712                                 _SSP1CON1 000FC6  
                               _SSP1CON3 000FCB                                 _TMR0_ISR 24DE  
                              main@ADCNT 00F9                                 _SSP1STAT 000FC7  
         FastTransfer_buffer_flush@_this 0023                             _input_buffer 0300  
                              _rx_buffer 0200                         __size_of_ADC_ISR 0004  
                             _ADCON0bits 000FC2               __size_of_LEDBsetBrightness 009A  
                   i2UART_buff_put@_this 0007                            _UART_buff_get 21D0  
                          _UART_buff_put 1722                           ?_TMR0_CallBack 0001  
               ??i2_UART_buff_modulo_inc 0005                              ??_SetLEDOut 001E  
                            _INTCON2bits 000FF1                    ?_INTERRUPT_Initialize 0001  
                      _sendStructAddress 00A9                 __size_ofi2_UART_buff_get 0092  
               __size_ofi2_UART_buff_put 0122                            ??_updateComms 002B  
                   __size_of_Receive_get 0012                                 __Hrparam 0000  
                               _Send_put 293A            __size_of_I2C1_BusCollisionISR 0002  
                               __Lrparam 0000                       __CFG_BOREN$SBORDIS 000000  
                 I2C1_ISR@i2c_bytes_left 0034                        __CFG_P2BMX$PORTD2 000000  
                LEDblinkRate@writeBuffer 00D6                  ??_OSCILLATOR_Initialize 001B  
                      ??_TMR0_StartTimer 001B                           LEDsetBar@color 0025  
                       __size_of___awdiv 00A4                         __size_of___ftmul 016A  
                       __size_of___fttol 017C              __size_of_EUSART1_Initialize 0044  
                    begin@stufftoreceive 00DA                                 ___ftpack 1EA8  
       __end_of_I2C1_MasterWriteTRBBuild 28C2                                 ___lwtoft 2A9E  
                         ?_UART_buff_get 0021                           ?_UART_buff_put 0021  
                            CRC8@extract 001F                 __end_of_buttonsCollector 25B2  
                              sendData@i 00D5                            ??_TBbarGraphs 001F  
                    I2C1_ISR@i2c_address 003F                              _LEDsetValue 1DF8  
               crcBufS_status_put@status 001E                                 __ptext10 29FC  
                               __ptext11 2970                                 __ptext20 2BC8  
                               __ptext12 00C4                                 __ptext21 21D0  
                               __ptext13 293A                                 __ptext30 0D9E  
                               __ptext22 2A26                                 __ptext14 1722  
                               __ptext31 11F6                                 __ptext23 2B40  
                               __ptext15 2BB6                                 __ptext40 27F6  
                               __ptext32 1EA8                                 __ptext24 2B8A  
                               __ptext16 2A7A                                 __ptext41 283A  
                               __ptext33 23FC                                 __ptext25 27AE  
                               __ptext17 108A                                 __ptext50 2098  
                               __ptext42 2B22                                 __ptext34 2382  
                               __ptext26 2470                                 __ptext18 1B70  
                               __ptext51 2136                                 __ptext43 29D0  
                               __ptext35 2B04                                 __ptext27 22F4  
                               __ptext19 1A86                                 __ptext60 271C  
                               __ptext52 2678                                 __ptext44 2B5A  
                               __ptext36 2C0A                                 __ptext28 2BDA  
                               __ptext61 2B72                                 __ptext53 287E  
                               __ptext45 14B2                                 __ptext37 26CC  
                               __ptext29 2A9E                                 __ptext70 0000  
                               __ptext62 2C14                                 __ptext54 1D24  
                               __ptext46 1DF8                                 __ptext38 2BFC  
                               __ptext63 28FE                                 __ptext47 0712  
                               __ptext39 2BEC                                 __ptext64 2BA0  
                               __ptext56 24DE                                 __ptext48 1F50  
                               __ptext65 2262                                 __ptext57 2C12  
                               __ptext49 1FF4                                 __ptext66 2AC2  
                               __ptext58 15EC                                 __ptext67 1844  
                               __ptext59 0B08                                 __ptext68 2A50  
                               __ptext69 2C0E                             _SSP1CON1bits 000FC6  
                           _SSP1CON2bits 000FC5                            __size_of_CRC8 0048  
                               begin@ptr 00D3                  EUSART1_Receive_ISR@data 000C  
                __end_of_LEDwriteDisplay 15EC                            _returnAddress 003B  
                          __size_of_main 0120                              _receiveData 00C4  
                         _Transmit_stall 0045                                 _sendData 1360  
                   _I2C1_MasterTRBInsert 1D24                        ?i2_UART_buff_size 0001  
                             _RC1STAbits 000FAB                     LEDblinkRate@i2c_addr 00D5  
                           ??_respondECU 002B                       ??i2_UART_buff_size 0003  
              __size_of_handleIndicators 006E            handleIndicators@oldIndicators 00B1  
                           _serial_write 0031                                 _throttle 00AD  
                    __end_of_updateComms 28FE       __end_of_INTERRUPT_InterruptManager 00C0  
             _INTERRUPT_InterruptManager 0008                      _EUSART1_Receive_ISR 2AC2  
                      receiveData@holder 00DA                       LEDBsetBrightness@b 00D3  
                             _INTCONbits 000FF2                          ??_TMR0_CallBack 0001  
              UART_buff_modulo_inc@value 001B       handleIndicators@receivedIndicators 0020  
                       ??_UART_buff_init 0025                         ??_UART_buff_peek 001D  
                       ??_UART_buff_size 001D                   ??_INTERRUPT_Initialize 001B  
                               memset@p1 001B                         _serial_available 002D  
        __size_ofi2_UART_buff_modulo_inc 002A                             ?_crcBufS_get 001B  
                           ?_crcBufS_put 001B                                 intlevel2 0000  
                crcBufS_status_put@_this 001B                       __end_of_respondECU 27AE  
                    __end_of_TBbarGraphs 2BEC                     ?_EUSART1_Receive_ISR 0001  
 FastTransfer_buffer_modulo_inc@my_value 001F           FastTransfer_buffer_put@towhere 0023  
                ?_PIN_MANAGER_Initialize 0001                 __end_of_I2C1_MasterWrite 26CC  
         __size_of_I2C1_FunctionComplete 0018            __end_of_I2C1_FunctionComplete 2B8A  
                  ?_I2C1_MasterTRBInsert 001B             __end_of_EUSART1_Transmit_ISR 293A  
                            _ring_buffer 0100                         ??_ADC_Initialize 001B  
             ?_FastTransfer_buffer_flush 0023                        ??i2_UART_buff_get 0009  
                            _serial_peek 00AB                              _serial_read 002F  
                      ??i2_UART_buff_put 000A                 ?_FastTransfer_buffer_put 0021  
          __size_of_UART_buff_modulo_inc 002A                 __size_of_I2C1_Initialize 0044  
                        ??_UART_buff_get 0023                          ??_UART_buff_put 0024  
  FastTransfer_buffer_modulo_inc@modulus 001D                   crcBufS_status_put@time 001D  
                        _TMR0_Initialize 2B04                receiveData@crcHolder_2258 00E1  
               _I2C1_MasterWriteTRBBuild 287E                        __CFG_T3CMX$PORTC0 000000  
                         _maxDataAddress 0039                 __size_of_ReadButtonState 0136  
             __end_of_crcBufS_status_put 1C4E                    ??_EUSART1_Receive_ISR 000C  
         __end_of_PIN_MANAGER_Initialize 271C         ??_FastTransfer_buffer_modulo_inc 001F  
        ?_FastTransfer_buffer_modulo_inc 001B                         ?_LEDwriteDisplay 0001  
                __size_of_GetButtonState 002C                       __size_of_I2C1_Stop 004A  
                          _displaybuffer 0060                        __CFG_FOSC$INTIO67 000000  
                            _updateComms 28C2  
