

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon May 11 16:53:21 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    29  0000                     
    30                           	psect	nvCOMRAM
    31  000051                     __pnvCOMRAM:
    32                           	opt stack 0
    33  000051                     _eusart1TxBufferRemaining:
    34                           	opt stack 0
    35  000051                     	ds	1
    36  0000                     _ANSELA	set	3896
    37  0000                     _ANSELB	set	3897
    38  0000                     _ANSELC	set	3898
    39  0000                     _ANSELD	set	3899
    40  0000                     _ANSELE	set	3900
    41  0000                     _ADCON0	set	4034
    42  0000                     _ADCON0bits	set	4034
    43  0000                     _ADCON1	set	4033
    44  0000                     _ADCON2	set	4032
    45  0000                     _ADRESH	set	4036
    46  0000                     _ADRESL	set	4035
    47  0000                     _BAUD1CON	set	4024
    48  0000                     _INTCON2bits	set	4081
    49  0000                     _INTCONbits	set	4082
    50  0000                     _IPR1bits	set	3999
    51  0000                     _LATA	set	3977
    52  0000                     _LATB	set	3978
    53  0000                     _LATC	set	3979
    54  0000                     _LATD	set	3980
    55  0000                     _LATE	set	3981
    56  0000                     _OSCCON	set	4051
    57  0000                     _OSCCON2	set	4050
    58  0000                     _OSCTUNE	set	3995
    59  0000                     _PIE1bits	set	3997
    60  0000                     _PIR1bits	set	3998
    61  0000                     _RC1STA	set	4011
    62  0000                     _RC1STAbits	set	4011
    63  0000                     _RCONbits	set	4048
    64  0000                     _RCREG1	set	4014
    65  0000                     _SPBRG1	set	4015
    66  0000                     _SPBRGH1	set	4016
    67  0000                     _TRISA	set	3986
    68  0000                     _TRISB	set	3987
    69  0000                     _TRISC	set	3988
    70  0000                     _TRISD	set	3989
    71  0000                     _TRISE	set	3990
    72  0000                     _TX1STA	set	4012
    73  0000                     _TXREG1	set	4013
    74  0000                     _WPUB	set	3937
    75  0000                     _LATA3	set	31819
    76  0000                     _LATB0	set	31824
    77  0000                     _LATB1	set	31825
    78  0000                     _LATD5	set	31845
    79  0000                     _LATD6	set	31846
    80  0000                     _LATD7	set	31847
    81                           
    82                           ; #config settings
    83  0000                     
    84                           	psect	cinit
    85  0003CC                     __pcinit:
    86                           	opt stack 0
    87  0003CC                     start_initialization:
    88                           	opt stack 0
    89  0003CC                     __initialization:
    90                           	opt stack 0
    91                           
    92                           ; Clear objects allocated to BANK0 (32 bytes)
    93  0003CC  EE00  F060         	lfsr	0,__pbssBANK0
    94  0003D0  0E20               	movlw	32
    95  0003D2                     clear_0:
    96  0003D2  6AEE               	clrf	postinc0,c
    97  0003D4  06E8               	decf	wreg,f,c
    98  0003D6  E1FD               	bnz	clear_0
    99                           
   100                           ; Clear objects allocated to COMRAM (61 bytes)
   101  0003D8  EE00  F001         	lfsr	0,__pbssCOMRAM
   102  0003DC  0E3D               	movlw	61
   103  0003DE                     clear_1:
   104  0003DE  6AEE               	clrf	postinc0,c
   105  0003E0  06E8               	decf	wreg,f,c
   106  0003E2  E1FD               	bnz	clear_1
   107  0003E4                     end_of_initialization:
   108                           	opt stack 0
   109  0003E4                     __end_of__initialization:
   110                           	opt stack 0
   111  0003E4  0100               	movlb	0
   112  0003E6  EF51  F000         	goto	_main	;jump to C main() function
   113                           postinc0	equ	0xFEE
   114                           wreg	equ	0xFE8
   115                           
   116                           	psect	bssCOMRAM
   117  000001                     __pbssCOMRAM:
   118                           	opt stack 0
   119  000001                     _registers:
   120                           	opt stack 0
   121  000001                     	ds	48
   122  000031                     _eusart1TxBuffer:
   123                           	opt stack 0
   124  000031                     	ds	8
   125  000039                     _eusart1RxCount:
   126                           	opt stack 0
   127  000039                     	ds	1
   128  00003A                     _eusart1RxHead:
   129                           	opt stack 0
   130  00003A                     	ds	1
   131  00003B                     _eusart1RxTail:
   132                           	opt stack 0
   133  00003B                     	ds	1
   134  00003C                     _eusart1TxHead:
   135                           	opt stack 0
   136  00003C                     	ds	1
   137  00003D                     _eusart1TxTail:
   138                           	opt stack 0
   139  00003D                     	ds	1
   140                           postinc0	equ	0xFEE
   141                           wreg	equ	0xFE8
   142                           
   143                           	psect	bssBANK0
   144  000060                     __pbssBANK0:
   145                           	opt stack 0
   146  000060                     _eusart1RxBuffer:
   147                           	opt stack 0
   148  000060                     	ds	32
   149                           postinc0	equ	0xFEE
   150                           wreg	equ	0xFE8
   151                           
   152                           	psect	cstackBANK0
   153  000080                     __pcstackBANK0:
   154                           	opt stack 0
   155  000080                     SetPin595@Reg:
   156                           	opt stack 0
   157  000080                     Clear595@i:
   158                           	opt stack 0
   159  000080                     Delay@i:
   160                           	opt stack 0
   161                           
   162                           ; 4 bytes @ 0x0
   163  000080                     	ds	2
   164  000082                     SetPin595@pin:
   165                           	opt stack 0
   166                           
   167                           ; 2 bytes @ 0x2
   168  000082                     	ds	2
   169  000084                     SetPin595@value:
   170                           	opt stack 0
   171                           
   172                           ; 2 bytes @ 0x4
   173  000084                     	ds	2
   174                           postinc0	equ	0xFEE
   175                           wreg	equ	0xFE8
   176                           
   177                           	psect	cstackCOMRAM
   178  00003E                     __pcstackCOMRAM:
   179                           	opt stack 0
   180  00003E                     ??_INTERRUPT_InterruptManager:
   181  00003E                     
   182                           ; 0 bytes @ 0x0
   183  00003E                     	ds	14
   184  00004C                     ??_SetPin595:
   185  00004C                     writeRegisters@val:
   186                           	opt stack 0
   187  00004C                     Delay@wait:
   188                           	opt stack 0
   189                           
   190                           ; 4 bytes @ 0xE
   191  00004C                     	ds	2
   192  00004E                     writeRegisters@i:
   193                           	opt stack 0
   194                           
   195                           ; 2 bytes @ 0x10
   196  00004E                     	ds	2
   197  000050                     ??_Delay:
   198  000050                     
   199                           ; 0 bytes @ 0x12
   200  000050                     	ds	1
   201  000051                     postinc0	equ	0xFEE
   202                           wreg	equ	0xFE8
   203                           
   204                           ; 0 bytes @ 0x13
   205 ;;
   206 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   207 ;;
   208 ;; *************** function _main *****************
   209 ;; Defined at:
   210 ;;		line 54 in file "main.c"
   211 ;; Parameters:    Size  Location     Type
   212 ;;		None
   213 ;; Auto vars:     Size  Location     Type
   214 ;;		None
   215 ;; Return value:  Size  Location     Type
   216 ;;		None               void
   217 ;; Registers used:
   218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   219 ;; Tracked objects:
   220 ;;		On entry : 0/0
   221 ;;		On exit  : 0/0
   222 ;;		Unchanged: 0/0
   223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   224 ;;      Params:         0       0       0       0       0       0       0
   225 ;;      Locals:         0       0       0       0       0       0       0
   226 ;;      Temps:          0       0       0       0       0       0       0
   227 ;;      Totals:         0       0       0       0       0       0       0
   228 ;;Total ram usage:        0 bytes
   229 ;; Hardware stack levels required when called:    5
   230 ;; This function calls:
   231 ;;		_Delay
   232 ;;		_SYSTEM_Initialize
   233 ;;		_SetPin595
   234 ;;		_StartUp595
   235 ;; This function is called by:
   236 ;;		Startup code after reset
   237 ;; This function uses a non-reentrant model
   238 ;;
   239                           
   240                           	psect	text0
   241  0000A2                     __ptext0:
   242                           	opt stack 0
   243  0000A2                     _main:
   244                           	opt stack 26
   245                           
   246                           ;main.c: 57: SYSTEM_Initialize();
   247                           
   248                           ;incstack = 0
   249  0000A2  EC01  F002         	call	_SYSTEM_Initialize	;wreg free
   250                           
   251                           ;main.c: 58: StartUp595();
   252  0000A6  EC96  F000         	call	_StartUp595	;wreg free
   253                           
   254                           ;main.c: 77: (INTCONbits.GIE = 1);
   255  0000AA  8EF2               	bsf	intcon,7,c	;volatile
   256                           
   257                           ;main.c: 80: (INTCONbits.PEIE = 1);
   258  0000AC  8CF2               	bsf	intcon,6,c	;volatile
   259  0000AE  D000               	goto	l1206
   260  0000B0                     l1206:
   261                           
   262                           ;main.c: 89: {
   263                           ;main.c: 90: Delay(500);
   264  0000B0  0EF4               	movlw	244
   265  0000B2  6E4C               	movwf	Delay@wait,c
   266  0000B4  0E01               	movlw	1
   267  0000B6  6E4D               	movwf	Delay@wait+1,c
   268  0000B8  0E00               	movlw	0
   269  0000BA  6E4E               	movwf	Delay@wait+2,c
   270  0000BC  0E00               	movlw	0
   271  0000BE  6E4F               	movwf	Delay@wait+3,c
   272  0000C0  ECFA  F000         	call	_Delay	;wreg free
   273                           
   274                           ;main.c: 91: SetPin595(2,3,1);
   275  0000C4  0E00               	movlw	0
   276  0000C6  0100               	movlb	0	; () banked
   277  0000C8  6F81               	movwf	(SetPin595@Reg+1)& (0+255),b
   278  0000CA  0E02               	movlw	2
   279  0000CC  6F80               	movwf	SetPin595@Reg& (0+255),b
   280  0000CE  0E00               	movlw	0
   281  0000D0  0100               	movlb	0	; () banked
   282  0000D2  6F83               	movwf	(SetPin595@pin+1)& (0+255),b
   283  0000D4  0E03               	movlw	3
   284  0000D6  6F82               	movwf	SetPin595@pin& (0+255),b
   285  0000D8  0E00               	movlw	0
   286  0000DA  0100               	movlb	0	; () banked
   287  0000DC  6F85               	movwf	(SetPin595@value+1)& (0+255),b
   288  0000DE  0E01               	movlw	1
   289  0000E0  6F84               	movwf	SetPin595@value& (0+255),b
   290  0000E2  EC26  F001         	call	_SetPin595	;wreg free
   291  0000E6  D000               	goto	l1210
   292  0000E8                     l1210:
   293  0000E8  8689               	bsf	3977,3,c	;volatile
   294  0000EA  D000               	goto	l1212
   295  0000EC                     l1212:
   296                           
   297                           ;main.c: 93: Delay(500);
   298  0000EC  0EF4               	movlw	244
   299  0000EE  6E4C               	movwf	Delay@wait,c
   300  0000F0  0E01               	movlw	1
   301  0000F2  6E4D               	movwf	Delay@wait+1,c
   302  0000F4  0E00               	movlw	0
   303  0000F6  6E4E               	movwf	Delay@wait+2,c
   304  0000F8  0E00               	movlw	0
   305  0000FA  6E4F               	movwf	Delay@wait+3,c
   306  0000FC  ECFA  F000         	call	_Delay	;wreg free
   307                           
   308                           ;main.c: 94: SetPin595(2,3,0);
   309  000100  0E00               	movlw	0
   310  000102  0100               	movlb	0	; () banked
   311  000104  6F81               	movwf	(SetPin595@Reg+1)& (0+255),b
   312  000106  0E02               	movlw	2
   313  000108  6F80               	movwf	SetPin595@Reg& (0+255),b
   314  00010A  0E00               	movlw	0
   315  00010C  0100               	movlb	0	; () banked
   316  00010E  6F83               	movwf	(SetPin595@pin+1)& (0+255),b
   317  000110  0E03               	movlw	3
   318  000112  6F82               	movwf	SetPin595@pin& (0+255),b
   319  000114  0E00               	movlw	0
   320  000116  0100               	movlb	0	; () banked
   321  000118  6F85               	movwf	(SetPin595@value+1)& (0+255),b
   322  00011A  0E00               	movlw	0
   323  00011C  6F84               	movwf	SetPin595@value& (0+255),b
   324  00011E  EC26  F001         	call	_SetPin595	;wreg free
   325  000122  D000               	goto	l1216
   326  000124                     l1216:
   327  000124  9689               	bcf	3977,3,c	;volatile
   328  000126  D7C4               	goto	l1206
   329  000128  EF4F  F000         	goto	start
   330  00012C                     __end_of_main:
   331                           	opt stack 0
   332                           intcon	equ	0xFF2
   333                           postinc0	equ	0xFEE
   334                           wreg	equ	0xFE8
   335                           
   336 ;; *************** function _StartUp595 *****************
   337 ;; Defined at:
   338 ;;		line 7 in file "Shift595.c"
   339 ;; Parameters:    Size  Location     Type
   340 ;;		None
   341 ;; Auto vars:     Size  Location     Type
   342 ;;		None
   343 ;; Return value:  Size  Location     Type
   344 ;;		None               void
   345 ;; Registers used:
   346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   347 ;; Tracked objects:
   348 ;;		On entry : 0/0
   349 ;;		On exit  : 0/0
   350 ;;		Unchanged: 0/0
   351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   352 ;;      Params:         0       0       0       0       0       0       0
   353 ;;      Locals:         0       0       0       0       0       0       0
   354 ;;      Temps:          0       0       0       0       0       0       0
   355 ;;      Totals:         0       0       0       0       0       0       0
   356 ;;Total ram usage:        0 bytes
   357 ;; Hardware stack levels used:    1
   358 ;; Hardware stack levels required when called:    4
   359 ;; This function calls:
   360 ;;		_Clear595
   361 ;;		_Delay
   362 ;; This function is called by:
   363 ;;		_main
   364 ;; This function uses a non-reentrant model
   365 ;;
   366                           
   367                           	psect	text1
   368  00012C                     __ptext1:
   369                           	opt stack 0
   370  00012C                     _StartUp595:
   371                           	opt stack 26
   372                           
   373                           ;incstack = 0
   374                           ;Shift595.c: 10: do { LATB1 = 1; } while(0);
   375  00012C  828A               	bsf	3978,1,c	;volatile
   376  00012E  D000               	goto	l1184
   377  000130                     l1184:
   378                           
   379                           ;Shift595.c: 12: Delay(10);
   380  000130  0E0A               	movlw	10
   381  000132  6E4C               	movwf	Delay@wait,c
   382  000134  0E00               	movlw	0
   383  000136  6E4D               	movwf	Delay@wait+1,c
   384  000138  0E00               	movlw	0
   385  00013A  6E4E               	movwf	Delay@wait+2,c
   386  00013C  0E00               	movlw	0
   387  00013E  6E4F               	movwf	Delay@wait+3,c
   388  000140  ECFA  F000         	call	_Delay	;wreg free
   389  000144  D000               	goto	l1186
   390  000146                     l1186:
   391  000146  808A               	bsf	3978,0,c	;volatile
   392                           
   393                           ;Shift595.c: 14: Delay(10);
   394  000148  0E0A               	movlw	10
   395  00014A  6E4C               	movwf	Delay@wait,c
   396  00014C  0E00               	movlw	0
   397  00014E  6E4D               	movwf	Delay@wait+1,c
   398  000150  0E00               	movlw	0
   399  000152  6E4E               	movwf	Delay@wait+2,c
   400  000154  0E00               	movlw	0
   401  000156  6E4F               	movwf	Delay@wait+3,c
   402  000158  ECFA  F000         	call	_Delay	;wreg free
   403  00015C  D000               	goto	l1188
   404  00015E                     l1188:
   405  00015E  908A               	bcf	3978,0,c	;volatile
   406                           
   407                           ;Shift595.c: 16: Delay(10);
   408  000160  0E0A               	movlw	10
   409  000162  6E4C               	movwf	Delay@wait,c
   410  000164  0E00               	movlw	0
   411  000166  6E4D               	movwf	Delay@wait+1,c
   412  000168  0E00               	movlw	0
   413  00016A  6E4E               	movwf	Delay@wait+2,c
   414  00016C  0E00               	movlw	0
   415  00016E  6E4F               	movwf	Delay@wait+3,c
   416  000170  ECFA  F000         	call	_Delay	;wreg free
   417  000174  D000               	goto	l1190
   418  000176                     l1190:
   419  000176  808A               	bsf	3978,0,c	;volatile
   420                           
   421                           ;Shift595.c: 18: Delay(10);
   422  000178  0E0A               	movlw	10
   423  00017A  6E4C               	movwf	Delay@wait,c
   424  00017C  0E00               	movlw	0
   425  00017E  6E4D               	movwf	Delay@wait+1,c
   426  000180  0E00               	movlw	0
   427  000182  6E4E               	movwf	Delay@wait+2,c
   428  000184  0E00               	movlw	0
   429  000186  6E4F               	movwf	Delay@wait+3,c
   430  000188  ECFA  F000         	call	_Delay	;wreg free
   431  00018C  D000               	goto	l1192
   432  00018E                     l1192:
   433  00018E  928A               	bcf	3978,1,c	;volatile
   434  000190  D000               	goto	l1194
   435  000192                     l1194:
   436                           
   437                           ;Shift595.c: 21: Clear595();
   438  000192  EC76  F001         	call	_Clear595	;wreg free
   439  000196  0012               	return		;funcret
   440  000198                     __end_of_StartUp595:
   441                           	opt stack 0
   442                           intcon	equ	0xFF2
   443                           postinc0	equ	0xFEE
   444                           wreg	equ	0xFE8
   445                           
   446 ;; *************** function _Delay *****************
   447 ;; Defined at:
   448 ;;		line 5 in file "Functions.c"
   449 ;; Parameters:    Size  Location     Type
   450 ;;  wait            4   14[COMRAM] long 
   451 ;; Auto vars:     Size  Location     Type
   452 ;;  i               4    0[BANK0 ] long 
   453 ;; Return value:  Size  Location     Type
   454 ;;		None               void
   455 ;; Registers used:
   456 ;;		wreg, status,2, status,0
   457 ;; Tracked objects:
   458 ;;		On entry : 0/0
   459 ;;		On exit  : 0/0
   460 ;;		Unchanged: 0/0
   461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   462 ;;      Params:         4       0       0       0       0       0       0
   463 ;;      Locals:         0       4       0       0       0       0       0
   464 ;;      Temps:          1       0       0       0       0       0       0
   465 ;;      Totals:         5       4       0       0       0       0       0
   466 ;;Total ram usage:        9 bytes
   467 ;; Hardware stack levels used:    1
   468 ;; Hardware stack levels required when called:    2
   469 ;; This function calls:
   470 ;;		Nothing
   471 ;; This function is called by:
   472 ;;		_main
   473 ;;		_StartUp595
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477                           	psect	text2
   478  0001F4                     __ptext2:
   479                           	opt stack 0
   480  0001F4                     _Delay:
   481                           	opt stack 27
   482                           
   483                           ;Functions.c: 7: long int i = 0;
   484                           
   485                           ;incstack = 0
   486  0001F4  0E00               	movlw	0
   487  0001F6  0100               	movlb	0	; () banked
   488  0001F8  6F80               	movwf	Delay@i& (0+255),b
   489  0001FA  0E00               	movlw	0
   490  0001FC  6F81               	movwf	(Delay@i+1)& (0+255),b
   491  0001FE  0E00               	movlw	0
   492  000200  6F82               	movwf	(Delay@i+2)& (0+255),b
   493  000202  0E00               	movlw	0
   494  000204  6F83               	movwf	(Delay@i+3)& (0+255),b
   495                           
   496                           ;Functions.c: 8: for(;wait>i;i++)
   497  000206  D00F               	goto	l1168
   498  000208                     l1164:
   499                           
   500                           ; BSR set to: 0
   501                           ;Functions.c: 9: {
   502                           ;Functions.c: 10: _delay((unsigned long)((1)*(8000000/4000.0)));
   503  000208  0E03               	movlw	3
   504  00020A  6E50               	movwf	??_Delay& (0+255),c
   505  00020C  0E98               	movlw	152
   506  00020E                     u427:
   507  00020E  2EE8               	decfsz	wreg,f,c
   508  000210  D7FE               	goto	u427
   509  000212  2E50               	decfsz	??_Delay& (0+255),f,c
   510  000214  D7FC               	goto	u427
   511  000216  0E01               	movlw	1
   512  000218  0100               	movlb	0	; () banked
   513  00021A  2780               	addwf	Delay@i& (0+255),f,b
   514  00021C  0E00               	movlw	0
   515  00021E  2381               	addwfc	(Delay@i+1)& (0+255),f,b
   516  000220  2382               	addwfc	(Delay@i+2)& (0+255),f,b
   517  000222  2383               	addwfc	(Delay@i+3)& (0+255),f,b
   518  000224  D000               	goto	l1168
   519  000226                     l1168:
   520                           
   521                           ; BSR set to: 0
   522  000226  504C               	movf	Delay@wait,w,c
   523  000228  0100               	movlb	0	; () banked
   524  00022A  5D80               	subwf	Delay@i& (0+255),w,b
   525  00022C  504D               	movf	Delay@wait+1,w,c
   526  00022E  0100               	movlb	0	; () banked
   527  000230  5981               	subwfb	(Delay@i+1)& (0+255),w,b
   528  000232  504E               	movf	Delay@wait+2,w,c
   529  000234  0100               	movlb	0	; () banked
   530  000236  5982               	subwfb	(Delay@i+2)& (0+255),w,b
   531  000238  0100               	movlb	0	; () banked
   532  00023A  5183               	movf	(Delay@i+3)& (0+255),w,b
   533  00023C  0A80               	xorlw	128
   534  00023E  6E50               	movwf	??_Delay& (0+255),c
   535  000240  504F               	movf	Delay@wait+3,w,c
   536  000242  0A80               	xorlw	128
   537  000244  5850               	subwfb	??_Delay& (0+255),w,c
   538  000246  A0D8               	btfss	status,0,c
   539  000248  D7DF               	goto	l1164
   540                           
   541                           ; BSR set to: 0
   542                           
   543                           ; BSR set to: 0
   544  00024A  0012               	return		;funcret
   545  00024C                     __end_of_Delay:
   546                           	opt stack 0
   547                           intcon	equ	0xFF2
   548                           postinc0	equ	0xFEE
   549                           wreg	equ	0xFE8
   550                           status	equ	0xFD8
   551                           
   552 ;; *************** function _Clear595 *****************
   553 ;; Defined at:
   554 ;;		line 29 in file "Shift595.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;  i               2    0[BANK0 ] int 
   559 ;; Return value:  Size  Location     Type
   560 ;;		None               void
   561 ;; Registers used:
   562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   568 ;;      Params:         0       0       0       0       0       0       0
   569 ;;      Locals:         0       2       0       0       0       0       0
   570 ;;      Temps:          0       0       0       0       0       0       0
   571 ;;      Totals:         0       2       0       0       0       0       0
   572 ;;Total ram usage:        2 bytes
   573 ;; Hardware stack levels used:    1
   574 ;; Hardware stack levels required when called:    3
   575 ;; This function calls:
   576 ;;		_writeRegisters
   577 ;; This function is called by:
   578 ;;		_StartUp595
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           	psect	text3
   583  0002EC                     __ptext3:
   584                           	opt stack 0
   585  0002EC                     _Clear595:
   586                           	opt stack 26
   587                           
   588                           ;Shift595.c: 31: for(int i = 3 * 8 - 1; i >= 0; i--){
   589                           
   590                           ; BSR set to: 0
   591                           ;incstack = 0
   592  0002EC  0E00               	movlw	0
   593  0002EE  0100               	movlb	0	; () banked
   594  0002F0  6F81               	movwf	(Clear595@i+1)& (0+255),b
   595  0002F2  0E17               	movlw	23
   596  0002F4  6F80               	movwf	Clear595@i& (0+255),b
   597  0002F6                     l1172:
   598                           
   599                           ; BSR set to: 0
   600  0002F6  0100               	movlb	0	; () banked
   601  0002F8  BF81               	btfsc	(Clear595@i+1)& (0+255),7,b
   602  0002FA  D016               	goto	l1182
   603  0002FC  D001               	goto	l1176
   604                           
   605                           ; BSR set to: 0
   606  0002FE  D014               	goto	l1182
   607  000300                     l1176:
   608                           
   609                           ; BSR set to: 0
   610                           ;Shift595.c: 32: registers[i] = 0;
   611  000300  90D8               	bcf	status,0,c
   612  000302  0100               	movlb	0	; () banked
   613  000304  3580               	rlcf	Clear595@i& (0+255),w,b
   614  000306  6ED9               	movwf	fsr2l,c
   615  000308  0100               	movlb	0	; () banked
   616  00030A  3581               	rlcf	(Clear595@i+1)& (0+255),w,b
   617  00030C  6EDA               	movwf	fsr2h,c
   618  00030E  0E01               	movlw	low _registers
   619  000310  26D9               	addwf	fsr2l,f,c
   620  000312  0E00               	movlw	high _registers
   621  000314  22DA               	addwfc	fsr2h,f,c
   622  000316  0E00               	movlw	0
   623  000318  6EDE               	movwf	postinc2,c
   624  00031A  0E00               	movlw	0
   625  00031C  6EDD               	movwf	postdec2,c
   626                           
   627                           ; BSR set to: 0
   628  00031E  0100               	movlb	0	; () banked
   629  000320  0780               	decf	Clear595@i& (0+255),f,b
   630  000322  A0D8               	btfss	status,0,c
   631  000324  0781               	decf	(Clear595@i+1)& (0+255),f,b
   632  000326  D7E7               	goto	l1172
   633  000328                     l1182:
   634                           
   635                           ; BSR set to: 0
   636                           ;Shift595.c: 33: }
   637                           ;Shift595.c: 34: writeRegisters();
   638  000328  ECCC  F000         	call	_writeRegisters	;wreg free
   639  00032C  0012               	return		;funcret
   640  00032E                     __end_of_Clear595:
   641                           	opt stack 0
   642                           intcon	equ	0xFF2
   643                           postinc0	equ	0xFEE
   644                           wreg	equ	0xFE8
   645                           postinc2	equ	0xFDE
   646                           postdec2	equ	0xFDD
   647                           fsr2h	equ	0xFDA
   648                           fsr2l	equ	0xFD9
   649                           status	equ	0xFD8
   650                           
   651 ;; *************** function _writeRegisters *****************
   652 ;; Defined at:
   653 ;;		line 37 in file "Shift595.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;		None
   656 ;; Auto vars:     Size  Location     Type
   657 ;;  val             2   14[COMRAM] int 
   658 ;;  i               2   16[COMRAM] int 
   659 ;; Return value:  Size  Location     Type
   660 ;;		None               void
   661 ;; Registers used:
   662 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   668 ;;      Params:         0       0       0       0       0       0       0
   669 ;;      Locals:         4       0       0       0       0       0       0
   670 ;;      Temps:          0       0       0       0       0       0       0
   671 ;;      Totals:         4       0       0       0       0       0       0
   672 ;;Total ram usage:        4 bytes
   673 ;; Hardware stack levels used:    1
   674 ;; Hardware stack levels required when called:    2
   675 ;; This function calls:
   676 ;;		Nothing
   677 ;; This function is called by:
   678 ;;		_Clear595
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           	psect	text4
   683  000198                     __ptext4:
   684                           	opt stack 0
   685  000198                     _writeRegisters:
   686                           	opt stack 26
   687                           
   688                           ;incstack = 0
   689                           ;Shift595.c: 39: do { LATD7 = 0; } while(0);
   690  000198  9E8C               	bcf	3980,7,c	;volatile
   691  00019A  D000               	goto	l1146
   692  00019C                     l1146:
   693                           
   694                           ;Shift595.c: 41: for(int i = 3 * 8 - 1; i >= 0; i--){
   695  00019C  0E00               	movlw	0
   696  00019E  6E4F               	movwf	writeRegisters@i+1,c
   697  0001A0  0E17               	movlw	23
   698  0001A2  6E4E               	movwf	writeRegisters@i,c
   699  0001A4                     l1148:
   700  0001A4  BE4F               	btfsc	writeRegisters@i+1,7,c
   701  0001A6  D023               	goto	l266
   702  0001A8  D001               	goto	l256
   703  0001AA  D021               	goto	l266
   704  0001AC                     l256:
   705  0001AC  9A8C               	bcf	3980,5,c	;volatile
   706  0001AE  D000               	goto	l1152
   707  0001B0                     l1152:
   708                           
   709                           ;Shift595.c: 44: int val = registers[i];
   710  0001B0  90D8               	bcf	status,0,c
   711  0001B2  344E               	rlcf	writeRegisters@i,w,c
   712  0001B4  6ED9               	movwf	fsr2l,c
   713  0001B6  344F               	rlcf	writeRegisters@i+1,w,c
   714  0001B8  6EDA               	movwf	fsr2h,c
   715  0001BA  0E01               	movlw	low _registers
   716  0001BC  26D9               	addwf	fsr2l,f,c
   717  0001BE  0E00               	movlw	high _registers
   718  0001C0  22DA               	addwfc	fsr2h,f,c
   719  0001C2  CFDE F04C          	movff	postinc2,writeRegisters@val
   720  0001C6  CFDD F04D          	movff	postdec2,writeRegisters@val+1
   721                           
   722                           ;Shift595.c: 45: if (val == 1 )
   723  0001CA  044C               	decf	writeRegisters@val,w,c
   724  0001CC  104D               	iorwf	writeRegisters@val+1,w,c
   725  0001CE  A4D8               	btfss	status,2,c
   726  0001D0  D002               	goto	l1156
   727                           
   728                           ;Shift595.c: 46: {
   729                           ;Shift595.c: 47: do { LATD6 = 1; } while(0);
   730  0001D2  8C8C               	bsf	3980,6,c	;volatile
   731  0001D4  D000               	goto	l1156
   732  0001D6                     l1156:
   733                           
   734                           ;Shift595.c: 48: }
   735                           ;Shift595.c: 49: if (val == 0 )
   736  0001D6  504C               	movf	writeRegisters@val,w,c
   737  0001D8  104D               	iorwf	writeRegisters@val+1,w,c
   738  0001DA  A4D8               	btfss	status,2,c
   739  0001DC  D002               	goto	l264
   740                           
   741                           ;Shift595.c: 50: {
   742                           ;Shift595.c: 51: do { LATD6 = 0; } while(0);
   743  0001DE  9C8C               	bcf	3980,6,c	;volatile
   744  0001E0  D000               	goto	l264
   745  0001E2                     l264:
   746  0001E2  8A8C               	bsf	3980,5,c	;volatile
   747  0001E4  D000               	goto	l1158
   748  0001E6                     l1158:
   749  0001E6  064E               	decf	writeRegisters@i,f,c
   750  0001E8  A0D8               	btfss	status,0,c
   751  0001EA  064F               	decf	writeRegisters@i+1,f,c
   752  0001EC  D7DB               	goto	l1148
   753  0001EE                     l266:
   754  0001EE  8E8C               	bsf	3980,7,c	;volatile
   755  0001F0  0012               	return	
   756  0001F2  0012               	return		;funcret
   757  0001F4                     __end_of_writeRegisters:
   758                           	opt stack 0
   759                           intcon	equ	0xFF2
   760                           postinc0	equ	0xFEE
   761                           wreg	equ	0xFE8
   762                           postinc2	equ	0xFDE
   763                           postdec2	equ	0xFDD
   764                           fsr2h	equ	0xFDA
   765                           fsr2l	equ	0xFD9
   766                           status	equ	0xFD8
   767                           
   768 ;; *************** function _SetPin595 *****************
   769 ;; Defined at:
   770 ;;		line 24 in file "Shift595.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;  Reg             2    0[BANK0 ] int 
   773 ;;  pin             2    2[BANK0 ] int 
   774 ;;  value           2    4[BANK0 ] int 
   775 ;; Auto vars:     Size  Location     Type
   776 ;;		None
   777 ;; Return value:  Size  Location     Type
   778 ;;		None               void
   779 ;; Registers used:
   780 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   786 ;;      Params:         0       6       0       0       0       0       0
   787 ;;      Locals:         0       0       0       0       0       0       0
   788 ;;      Temps:          4       0       0       0       0       0       0
   789 ;;      Totals:         4       6       0       0       0       0       0
   790 ;;Total ram usage:       10 bytes
   791 ;; Hardware stack levels used:    1
   792 ;; Hardware stack levels required when called:    2
   793 ;; This function calls:
   794 ;;		Nothing
   795 ;; This function is called by:
   796 ;;		_main
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           	psect	text5
   801  00024C                     __ptext5:
   802                           	opt stack 0
   803  00024C                     _SetPin595:
   804                           	opt stack 28
   805                           
   806                           ;Shift595.c: 26: registers[((Reg-1)*8)+pin] = value;
   807                           
   808                           ;incstack = 0
   809  00024C  0EF0               	movlw	240
   810  00024E  6E4C               	movwf	??_SetPin595& (0+255),c
   811  000250  0EFF               	movlw	255
   812  000252  6E4D               	movwf	(??_SetPin595+1)& (0+255),c
   813  000254  C080  F04E         	movff	SetPin595@Reg,??_SetPin595+2
   814  000258  C081  F04F         	movff	SetPin595@Reg+1,??_SetPin595+3
   815  00025C  90D8               	bcf	status,0,c
   816  00025E  364E               	rlcf	??_SetPin595+2,f,c
   817  000260  364F               	rlcf	??_SetPin595+3,f,c
   818  000262  90D8               	bcf	status,0,c
   819  000264  364E               	rlcf	??_SetPin595+2,f,c
   820  000266  364F               	rlcf	??_SetPin595+3,f,c
   821  000268  90D8               	bcf	status,0,c
   822  00026A  364E               	rlcf	??_SetPin595+2,f,c
   823  00026C  364F               	rlcf	??_SetPin595+3,f,c
   824  00026E  0100               	movlb	0	; () banked
   825  000270  5182               	movf	SetPin595@pin& (0+255),w,b
   826  000272  264E               	addwf	??_SetPin595+2,f,c
   827  000274  0100               	movlb	0	; () banked
   828  000276  5183               	movf	(SetPin595@pin+1)& (0+255),w,b
   829  000278  224F               	addwfc	??_SetPin595+3,f,c
   830  00027A  90D8               	bcf	status,0,c
   831  00027C  364E               	rlcf	??_SetPin595+2,f,c
   832  00027E  364F               	rlcf	??_SetPin595+3,f,c
   833  000280  504C               	movf	??_SetPin595,w,c
   834  000282  264E               	addwf	??_SetPin595+2,f,c
   835  000284  504D               	movf	??_SetPin595+1,w,c
   836  000286  224F               	addwfc	??_SetPin595+3,f,c
   837  000288  0E01               	movlw	low _registers
   838  00028A  244E               	addwf	??_SetPin595+2,w,c
   839  00028C  6ED9               	movwf	fsr2l,c
   840  00028E  0E00               	movlw	high _registers
   841  000290  204F               	addwfc	??_SetPin595+3,w,c
   842  000292  6EDA               	movwf	fsr2h,c
   843  000294  C084  FFDE         	movff	SetPin595@value,postinc2
   844  000298  C085  FFDD         	movff	SetPin595@value+1,postdec2
   845                           
   846                           ; BSR set to: 0
   847  00029C  0012               	return		;funcret
   848  00029E                     __end_of_SetPin595:
   849                           	opt stack 0
   850                           intcon	equ	0xFF2
   851                           postinc0	equ	0xFEE
   852                           wreg	equ	0xFE8
   853                           postinc2	equ	0xFDE
   854                           postdec2	equ	0xFDD
   855                           fsr2h	equ	0xFDA
   856                           fsr2l	equ	0xFD9
   857                           status	equ	0xFD8
   858                           
   859 ;; *************** function _SYSTEM_Initialize *****************
   860 ;; Defined at:
   861 ;;		line 112 in file "mcc_generated_files/mcc.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;		None
   864 ;; Auto vars:     Size  Location     Type
   865 ;;		None
   866 ;; Return value:  Size  Location     Type
   867 ;;		None               void
   868 ;; Registers used:
   869 ;;		wreg, status,2, cstack
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   875 ;;      Params:         0       0       0       0       0       0       0
   876 ;;      Locals:         0       0       0       0       0       0       0
   877 ;;      Temps:          0       0       0       0       0       0       0
   878 ;;      Totals:         0       0       0       0       0       0       0
   879 ;;Total ram usage:        0 bytes
   880 ;; Hardware stack levels used:    1
   881 ;; Hardware stack levels required when called:    3
   882 ;; This function calls:
   883 ;;		_ADC_Initialize
   884 ;;		_EUSART1_Initialize
   885 ;;		_INTERRUPT_Initialize
   886 ;;		_OSCILLATOR_Initialize
   887 ;;		_PIN_MANAGER_Initialize
   888 ;; This function is called by:
   889 ;;		_main
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           	psect	text6
   894  000402                     __ptext6:
   895                           	opt stack 0
   896  000402                     _SYSTEM_Initialize:
   897                           	opt stack 27
   898                           
   899                           ;mcc.c: 114: OSCILLATOR_Initialize();
   900                           
   901                           ; BSR set to: 0
   902                           ;incstack = 0
   903  000402  EC0C  F002         	call	_OSCILLATOR_Initialize	;wreg free
   904                           
   905                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   906  000406  EC4F  F001         	call	_PIN_MANAGER_Initialize	;wreg free
   907                           
   908                           ;mcc.c: 116: INTERRUPT_Initialize();
   909  00040A  EC13  F002         	call	_INTERRUPT_Initialize	;wreg free
   910                           
   911                           ;mcc.c: 117: EUSART1_Initialize();
   912  00040E  EC97  F001         	call	_EUSART1_Initialize	;wreg free
   913                           
   914                           ;mcc.c: 118: ADC_Initialize();
   915  000412  ECF5  F001         	call	_ADC_Initialize	;wreg free
   916  000416  0012               	return		;funcret
   917  000418                     __end_of_SYSTEM_Initialize:
   918                           	opt stack 0
   919                           intcon	equ	0xFF2
   920                           postinc0	equ	0xFEE
   921                           wreg	equ	0xFE8
   922                           postinc2	equ	0xFDE
   923                           postdec2	equ	0xFDD
   924                           fsr2h	equ	0xFDA
   925                           fsr2l	equ	0xFD9
   926                           status	equ	0xFD8
   927                           
   928 ;; *************** function _PIN_MANAGER_Initialize *****************
   929 ;; Defined at:
   930 ;;		line 6 in file "mcc_generated_files/pin_manager.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;		None
   933 ;; Auto vars:     Size  Location     Type
   934 ;;		None
   935 ;; Return value:  Size  Location     Type
   936 ;;		None               void
   937 ;; Registers used:
   938 ;;		wreg, status,2
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   944 ;;      Params:         0       0       0       0       0       0       0
   945 ;;      Locals:         0       0       0       0       0       0       0
   946 ;;      Temps:          0       0       0       0       0       0       0
   947 ;;      Totals:         0       0       0       0       0       0       0
   948 ;;Total ram usage:        0 bytes
   949 ;; Hardware stack levels used:    1
   950 ;; Hardware stack levels required when called:    2
   951 ;; This function calls:
   952 ;;		Nothing
   953 ;; This function is called by:
   954 ;;		_SYSTEM_Initialize
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958                           	psect	text7
   959  00029E                     __ptext7:
   960                           	opt stack 0
   961  00029E                     _PIN_MANAGER_Initialize:
   962                           	opt stack 27
   963                           
   964                           ;pin_manager.c: 8: LATA = 0x00;
   965                           
   966                           ;incstack = 0
   967  00029E  0E00               	movlw	0
   968  0002A0  6E89               	movwf	3977,c	;volatile
   969                           
   970                           ;pin_manager.c: 9: TRISA = 0xE7;
   971  0002A2  0EE7               	movlw	231
   972  0002A4  6E92               	movwf	3986,c	;volatile
   973                           
   974                           ;pin_manager.c: 10: ANSELA = 0x27;
   975  0002A6  0E27               	movlw	39
   976  0002A8  010F               	movlb	15	; () banked
   977  0002AA  6F38               	movwf	56,b	;volatile
   978                           
   979                           ;pin_manager.c: 12: LATB = 0x03;
   980  0002AC  0E03               	movlw	3
   981  0002AE  6E8A               	movwf	3978,c	;volatile
   982                           
   983                           ;pin_manager.c: 13: TRISB = 0xFC;
   984  0002B0  0EFC               	movlw	252
   985  0002B2  6E93               	movwf	3987,c	;volatile
   986                           
   987                           ;pin_manager.c: 14: ANSELB = 0x3C;
   988  0002B4  0E3C               	movlw	60
   989  0002B6  010F               	movlb	15	; () banked
   990  0002B8  6F39               	movwf	57,b	;volatile
   991                           
   992                           ;pin_manager.c: 15: WPUB = 0x00;
   993  0002BA  0E00               	movlw	0
   994  0002BC  6E61               	movwf	3937,c	;volatile
   995                           
   996                           ;pin_manager.c: 17: LATC = 0x00;
   997  0002BE  0E00               	movlw	0
   998  0002C0  6E8B               	movwf	3979,c	;volatile
   999                           
  1000                           ;pin_manager.c: 18: TRISC = 0xDF;
  1001  0002C2  0EDF               	movlw	223
  1002  0002C4  6E94               	movwf	3988,c	;volatile
  1003                           
  1004                           ;pin_manager.c: 19: ANSELC = 0x1C;
  1005  0002C6  0E1C               	movlw	28
  1006  0002C8  010F               	movlb	15	; () banked
  1007  0002CA  6F3A               	movwf	58,b	;volatile
  1008                           
  1009                           ;pin_manager.c: 21: LATD = 0x00;
  1010  0002CC  0E00               	movlw	0
  1011  0002CE  6E8C               	movwf	3980,c	;volatile
  1012                           
  1013                           ;pin_manager.c: 22: TRISD = 0x1F;
  1014  0002D0  0E1F               	movlw	31
  1015  0002D2  6E95               	movwf	3989,c	;volatile
  1016                           
  1017                           ;pin_manager.c: 23: ANSELD = 0x1F;
  1018  0002D4  0E1F               	movlw	31
  1019  0002D6  010F               	movlb	15	; () banked
  1020  0002D8  6F3B               	movwf	59,b	;volatile
  1021                           
  1022                           ;pin_manager.c: 25: LATE = 0x00;
  1023  0002DA  0E00               	movlw	0
  1024  0002DC  6E8D               	movwf	3981,c	;volatile
  1025                           
  1026                           ;pin_manager.c: 26: TRISE = 0x07;
  1027  0002DE  0E07               	movlw	7
  1028  0002E0  6E96               	movwf	3990,c	;volatile
  1029                           
  1030                           ;pin_manager.c: 27: ANSELE = 0x07;
  1031  0002E2  0E07               	movlw	7
  1032  0002E4  010F               	movlb	15	; () banked
  1033  0002E6  6F3C               	movwf	60,b	;volatile
  1034                           
  1035                           ; BSR set to: 15
  1036                           ;pin_manager.c: 29: INTCON2bits.nRBPU = 0x01;
  1037  0002E8  8EF1               	bsf	intcon2,7,c	;volatile
  1038                           
  1039                           ; BSR set to: 15
  1040  0002EA  0012               	return		;funcret
  1041  0002EC                     __end_of_PIN_MANAGER_Initialize:
  1042                           	opt stack 0
  1043                           intcon	equ	0xFF2
  1044                           intcon2	equ	0xFF1
  1045                           postinc0	equ	0xFEE
  1046                           wreg	equ	0xFE8
  1047                           postinc2	equ	0xFDE
  1048                           postdec2	equ	0xFDD
  1049                           fsr2h	equ	0xFDA
  1050                           fsr2l	equ	0xFD9
  1051                           status	equ	0xFD8
  1052                           
  1053 ;; *************** function _OSCILLATOR_Initialize *****************
  1054 ;; Defined at:
  1055 ;;		line 121 in file "mcc_generated_files/mcc.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;		None               void
  1062 ;; Registers used:
  1063 ;;		wreg, status,2
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1069 ;;      Params:         0       0       0       0       0       0       0
  1070 ;;      Locals:         0       0       0       0       0       0       0
  1071 ;;      Temps:          0       0       0       0       0       0       0
  1072 ;;      Totals:         0       0       0       0       0       0       0
  1073 ;;Total ram usage:        0 bytes
  1074 ;; Hardware stack levels used:    1
  1075 ;; Hardware stack levels required when called:    2
  1076 ;; This function calls:
  1077 ;;		Nothing
  1078 ;; This function is called by:
  1079 ;;		_SYSTEM_Initialize
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           	psect	text8
  1084  000418                     __ptext8:
  1085                           	opt stack 0
  1086  000418                     _OSCILLATOR_Initialize:
  1087                           	opt stack 27
  1088                           
  1089                           ;mcc.c: 124: OSCCON = 0x60;
  1090                           
  1091                           ; BSR set to: 15
  1092                           ;incstack = 0
  1093  000418  0E60               	movlw	96
  1094  00041A  6ED3               	movwf	4051,c	;volatile
  1095                           
  1096                           ;mcc.c: 126: OSCCON2 = 0x04;
  1097  00041C  0E04               	movlw	4
  1098  00041E  6ED2               	movwf	4050,c	;volatile
  1099                           
  1100                           ;mcc.c: 128: OSCTUNE = 0x00;
  1101  000420  0E00               	movlw	0
  1102  000422  6E9B               	movwf	3995,c	;volatile
  1103  000424  0012               	return		;funcret
  1104  000426                     __end_of_OSCILLATOR_Initialize:
  1105                           	opt stack 0
  1106                           intcon	equ	0xFF2
  1107                           intcon2	equ	0xFF1
  1108                           postinc0	equ	0xFEE
  1109                           wreg	equ	0xFE8
  1110                           postinc2	equ	0xFDE
  1111                           postdec2	equ	0xFDD
  1112                           fsr2h	equ	0xFDA
  1113                           fsr2l	equ	0xFD9
  1114                           status	equ	0xFD8
  1115                           
  1116 ;; *************** function _INTERRUPT_Initialize *****************
  1117 ;; Defined at:
  1118 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;		None               void
  1125 ;; Registers used:
  1126 ;;		None
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1132 ;;      Params:         0       0       0       0       0       0       0
  1133 ;;      Locals:         0       0       0       0       0       0       0
  1134 ;;      Temps:          0       0       0       0       0       0       0
  1135 ;;      Totals:         0       0       0       0       0       0       0
  1136 ;;Total ram usage:        0 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; Hardware stack levels required when called:    2
  1139 ;; This function calls:
  1140 ;;		Nothing
  1141 ;; This function is called by:
  1142 ;;		_SYSTEM_Initialize
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text9
  1147  000426                     __ptext9:
  1148                           	opt stack 0
  1149  000426                     _INTERRUPT_Initialize:
  1150                           	opt stack 27
  1151                           
  1152                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  1153                           
  1154                           ;incstack = 0
  1155  000426  9ED0               	bcf	4048,7,c	;volatile
  1156                           
  1157                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
  1158  000428  9A9F               	bcf	3999,5,c	;volatile
  1159                           
  1160                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  1161  00042A  989F               	bcf	3999,4,c	;volatile
  1162                           
  1163                           ;interrupt_manager.c: 64: IPR1bits.ADIP = 0;
  1164  00042C  9C9F               	bcf	3999,6,c	;volatile
  1165  00042E  0012               	return		;funcret
  1166  000430                     __end_of_INTERRUPT_Initialize:
  1167                           	opt stack 0
  1168                           intcon	equ	0xFF2
  1169                           intcon2	equ	0xFF1
  1170                           postinc0	equ	0xFEE
  1171                           wreg	equ	0xFE8
  1172                           postinc2	equ	0xFDE
  1173                           postdec2	equ	0xFDD
  1174                           fsr2h	equ	0xFDA
  1175                           fsr2l	equ	0xFD9
  1176                           status	equ	0xFD8
  1177                           
  1178 ;; *************** function _EUSART1_Initialize *****************
  1179 ;; Defined at:
  1180 ;;		line 76 in file "mcc_generated_files/eusart1.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;		None
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;		None               void
  1187 ;; Registers used:
  1188 ;;		wreg, status,2
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1194 ;;      Params:         0       0       0       0       0       0       0
  1195 ;;      Locals:         0       0       0       0       0       0       0
  1196 ;;      Temps:          0       0       0       0       0       0       0
  1197 ;;      Totals:         0       0       0       0       0       0       0
  1198 ;;Total ram usage:        0 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; Hardware stack levels required when called:    2
  1201 ;; This function calls:
  1202 ;;		Nothing
  1203 ;; This function is called by:
  1204 ;;		_SYSTEM_Initialize
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text10
  1209  00032E                     __ptext10:
  1210                           	opt stack 0
  1211  00032E                     _EUSART1_Initialize:
  1212                           	opt stack 27
  1213                           
  1214                           ;eusart1.c: 79: PIE1bits.RC1IE = 0;
  1215                           
  1216                           ;incstack = 0
  1217  00032E  9A9D               	bcf	3997,5,c	;volatile
  1218                           
  1219                           ;eusart1.c: 80: PIE1bits.TX1IE = 0;
  1220  000330  989D               	bcf	3997,4,c	;volatile
  1221                           
  1222                           ;eusart1.c: 85: BAUD1CON = 0x48;
  1223  000332  0E48               	movlw	72
  1224  000334  6EB8               	movwf	4024,c	;volatile
  1225                           
  1226                           ;eusart1.c: 88: RC1STA = 0x90;
  1227  000336  0E90               	movlw	144
  1228  000338  6EAB               	movwf	4011,c	;volatile
  1229                           
  1230                           ;eusart1.c: 91: TX1STA = 0x26;
  1231  00033A  0E26               	movlw	38
  1232  00033C  6EAC               	movwf	4012,c	;volatile
  1233                           
  1234                           ;eusart1.c: 94: SPBRG1 = 0x22;
  1235  00033E  0E22               	movlw	34
  1236  000340  6EAF               	movwf	4015,c	;volatile
  1237                           
  1238                           ;eusart1.c: 97: SPBRGH1 = 0x00;
  1239  000342  0E00               	movlw	0
  1240  000344  6EB0               	movwf	4016,c	;volatile
  1241                           
  1242                           ;eusart1.c: 100: TXREG1 = 0x00;
  1243  000346  0E00               	movlw	0
  1244  000348  6EAD               	movwf	4013,c	;volatile
  1245                           
  1246                           ;eusart1.c: 103: RCREG1 = 0x00;
  1247  00034A  0E00               	movlw	0
  1248  00034C  6EAE               	movwf	4014,c	;volatile
  1249                           
  1250                           ;eusart1.c: 107: eusart1TxHead = 0;
  1251  00034E  0E00               	movlw	0
  1252  000350  6E3C               	movwf	_eusart1TxHead,c
  1253                           
  1254                           ;eusart1.c: 108: eusart1TxTail = 0;
  1255  000352  0E00               	movlw	0
  1256  000354  6E3D               	movwf	_eusart1TxTail,c
  1257                           
  1258                           ;eusart1.c: 109: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  1259  000356  0E08               	movlw	8
  1260  000358  6E51               	movwf	_eusart1TxBufferRemaining,c	;volatile
  1261                           
  1262                           ;eusart1.c: 111: eusart1RxHead = 0;
  1263  00035A  0E00               	movlw	0
  1264  00035C  6E3A               	movwf	_eusart1RxHead,c
  1265                           
  1266                           ;eusart1.c: 112: eusart1RxTail = 0;
  1267  00035E  0E00               	movlw	0
  1268  000360  6E3B               	movwf	_eusart1RxTail,c
  1269                           
  1270                           ;eusart1.c: 113: eusart1RxCount = 0;
  1271  000362  0E00               	movlw	0
  1272  000364  6E39               	movwf	_eusart1RxCount,c	;volatile
  1273                           
  1274                           ;eusart1.c: 116: PIE1bits.RC1IE = 1;
  1275  000366  8A9D               	bsf	3997,5,c	;volatile
  1276  000368  0012               	return		;funcret
  1277  00036A                     __end_of_EUSART1_Initialize:
  1278                           	opt stack 0
  1279                           intcon	equ	0xFF2
  1280                           intcon2	equ	0xFF1
  1281                           postinc0	equ	0xFEE
  1282                           wreg	equ	0xFE8
  1283                           postinc2	equ	0xFDE
  1284                           postdec2	equ	0xFDD
  1285                           fsr2h	equ	0xFDA
  1286                           fsr2l	equ	0xFD9
  1287                           status	equ	0xFD8
  1288                           
  1289 ;; *************** function _ADC_Initialize *****************
  1290 ;; Defined at:
  1291 ;;		line 59 in file "mcc_generated_files/adc.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;		None
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;		None
  1296 ;; Return value:  Size  Location     Type
  1297 ;;		None               void
  1298 ;; Registers used:
  1299 ;;		wreg, status,2
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1305 ;;      Params:         0       0       0       0       0       0       0
  1306 ;;      Locals:         0       0       0       0       0       0       0
  1307 ;;      Temps:          0       0       0       0       0       0       0
  1308 ;;      Totals:         0       0       0       0       0       0       0
  1309 ;;Total ram usage:        0 bytes
  1310 ;; Hardware stack levels used:    1
  1311 ;; Hardware stack levels required when called:    2
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		_SYSTEM_Initialize
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           	psect	text11
  1320  0003EA                     __ptext11:
  1321                           	opt stack 0
  1322  0003EA                     _ADC_Initialize:
  1323                           	opt stack 27
  1324                           
  1325                           ;adc.c: 64: ADCON0 = 0x01;
  1326                           
  1327                           ;incstack = 0
  1328  0003EA  0E01               	movlw	1
  1329  0003EC  6EC2               	movwf	4034,c	;volatile
  1330                           
  1331                           ;adc.c: 67: ADCON1 = 0x80;
  1332  0003EE  0E80               	movlw	128
  1333  0003F0  6EC1               	movwf	4033,c	;volatile
  1334                           
  1335                           ;adc.c: 70: ADCON2 = 0x12;
  1336  0003F2  0E12               	movlw	18
  1337  0003F4  6EC0               	movwf	4032,c	;volatile
  1338                           
  1339                           ;adc.c: 73: ADRESL = 0x00;
  1340  0003F6  0E00               	movlw	0
  1341  0003F8  6EC3               	movwf	4035,c	;volatile
  1342                           
  1343                           ;adc.c: 76: ADRESH = 0x00;
  1344  0003FA  0E00               	movlw	0
  1345  0003FC  6EC4               	movwf	4036,c	;volatile
  1346                           
  1347                           ;adc.c: 79: PIE1bits.ADIE = 1;
  1348  0003FE  8C9D               	bsf	3997,6,c	;volatile
  1349  000400  0012               	return		;funcret
  1350  000402                     __end_of_ADC_Initialize:
  1351                           	opt stack 0
  1352                           intcon	equ	0xFF2
  1353                           intcon2	equ	0xFF1
  1354                           postinc0	equ	0xFEE
  1355                           wreg	equ	0xFE8
  1356                           postinc2	equ	0xFDE
  1357                           postdec2	equ	0xFDD
  1358                           fsr2h	equ	0xFDA
  1359                           fsr2l	equ	0xFD9
  1360                           status	equ	0xFD8
  1361                           
  1362 ;; *************** function _INTERRUPT_InterruptManager *****************
  1363 ;; Defined at:
  1364 ;;		line 67 in file "mcc_generated_files/interrupt_manager.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;		None
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;		None
  1369 ;; Return value:  Size  Location     Type
  1370 ;;		None               void
  1371 ;; Registers used:
  1372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1378 ;;      Params:         0       0       0       0       0       0       0
  1379 ;;      Locals:         0       0       0       0       0       0       0
  1380 ;;      Temps:         14       0       0       0       0       0       0
  1381 ;;      Totals:        14       0       0       0       0       0       0
  1382 ;;Total ram usage:       14 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; Hardware stack levels required when called:    1
  1385 ;; This function calls:
  1386 ;;		_ADC_ISR
  1387 ;;		_EUSART1_Receive_ISR
  1388 ;;		_EUSART1_Transmit_ISR
  1389 ;; This function is called by:
  1390 ;;		Interrupt level 2
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           	psect	intcode
  1395  000008                     __pintcode:
  1396                           	opt stack 0
  1397  000008                     _INTERRUPT_InterruptManager:
  1398                           	opt stack 26
  1399                           
  1400                           ;incstack = 0
  1401  000008  CFFA F03E          	movff	pclath,??_INTERRUPT_InterruptManager
  1402  00000C  CFFB F03F          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1403  000010  CFE9 F040          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1404  000014  CFEA F041          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1405  000018  CFE1 F042          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1406  00001C  CFE2 F043          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1407  000020  CFD9 F044          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1408  000024  CFDA F045          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1409  000028  CFF3 F046          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1410  00002C  CFF4 F047          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1411  000030  CFF6 F048          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1412  000034  CFF7 F049          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1413  000038  CFF8 F04A          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1414  00003C  CFF5 F04B          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1415                           
  1416                           ;interrupt_manager.c: 70: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  1417  000040  BA9D               	btfsc	3997,5,c	;volatile
  1418  000042  AA9E               	btfss	3998,5,c	;volatile
  1419  000044  D003               	goto	i2l158
  1420                           
  1421                           ;interrupt_manager.c: 71: {
  1422                           ;interrupt_manager.c: 72: EUSART1_Receive_ISR();
  1423  000046  ECCE  F001         	call	_EUSART1_Receive_ISR	;wreg free
  1424                           
  1425                           ;interrupt_manager.c: 73: }
  1426  00004A  D00C               	goto	i2l164
  1427  00004C                     i2l158:
  1428                           
  1429                           ;interrupt_manager.c: 74: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  1430  00004C  B89D               	btfsc	3997,4,c	;volatile
  1431  00004E  A89E               	btfss	3998,4,c	;volatile
  1432  000050  D003               	goto	i2l160
  1433                           
  1434                           ;interrupt_manager.c: 75: {
  1435                           ;interrupt_manager.c: 76: EUSART1_Transmit_ISR();
  1436  000052  ECB5  F001         	call	_EUSART1_Transmit_ISR	;wreg free
  1437                           
  1438                           ;interrupt_manager.c: 77: }
  1439  000056  D006               	goto	i2l164
  1440  000058                     i2l160:
  1441                           
  1442                           ;interrupt_manager.c: 78: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  1443  000058  BC9D               	btfsc	3997,6,c	;volatile
  1444  00005A  AC9E               	btfss	3998,6,c	;volatile
  1445  00005C  D003               	goto	i2l164
  1446                           
  1447                           ;interrupt_manager.c: 79: {
  1448                           ;interrupt_manager.c: 80: ADC_ISR();
  1449  00005E  EC18  F002         	call	_ADC_ISR	;wreg free
  1450                           
  1451                           ;interrupt_manager.c: 82: else
  1452                           ;interrupt_manager.c: 83: {
  1453                           
  1454                           ;interrupt_manager.c: 81: }
  1455  000062  D000               	goto	i2l164
  1456  000064                     i2l164:
  1457  000064  C04B  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1458  000068  C04A  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1459  00006C  C049  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1460  000070  C048  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1461  000074  C047  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1462  000078  C046  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1463  00007C  C045  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1464  000080  C044  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1465  000084  C043  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1466  000088  C042  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1467  00008C  C041  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1468  000090  C040  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1469  000094  C03F  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1470  000098  C03E  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1471  00009C  0011               	retfie		f
  1472  00009E                     __end_of_INTERRUPT_InterruptManager:
  1473                           	opt stack 0
  1474                           pclatu	equ	0xFFB
  1475                           pclath	equ	0xFFA
  1476                           tblptru	equ	0xFF8
  1477                           tblptrh	equ	0xFF7
  1478                           tblptrl	equ	0xFF6
  1479                           tablat	equ	0xFF5
  1480                           prodh	equ	0xFF4
  1481                           prodl	equ	0xFF3
  1482                           intcon	equ	0xFF2
  1483                           intcon2	equ	0xFF1
  1484                           postinc0	equ	0xFEE
  1485                           fsr0h	equ	0xFEA
  1486                           fsr0l	equ	0xFE9
  1487                           wreg	equ	0xFE8
  1488                           fsr1h	equ	0xFE2
  1489                           fsr1l	equ	0xFE1
  1490                           postinc2	equ	0xFDE
  1491                           postdec2	equ	0xFDD
  1492                           fsr2h	equ	0xFDA
  1493                           fsr2l	equ	0xFD9
  1494                           status	equ	0xFD8
  1495                           
  1496 ;; *************** function _EUSART1_Transmit_ISR *****************
  1497 ;; Defined at:
  1498 ;;		line 163 in file "mcc_generated_files/eusart1.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;		None
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;		None
  1503 ;; Return value:  Size  Location     Type
  1504 ;;		None               void
  1505 ;; Registers used:
  1506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1512 ;;      Params:         0       0       0       0       0       0       0
  1513 ;;      Locals:         0       0       0       0       0       0       0
  1514 ;;      Temps:          0       0       0       0       0       0       0
  1515 ;;      Totals:         0       0       0       0       0       0       0
  1516 ;;Total ram usage:        0 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		_INTERRUPT_InterruptManager
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           	psect	text13
  1526  00036A                     __ptext13:
  1527                           	opt stack 0
  1528  00036A                     _EUSART1_Transmit_ISR:
  1529                           	opt stack 26
  1530                           
  1531                           ;eusart1.c: 167: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  1532                           
  1533                           ;incstack = 0
  1534  00036A  0E08               	movlw	8
  1535  00036C  6051               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  1536  00036E  D013               	goto	i2l93
  1537                           
  1538                           ;eusart1.c: 168: {
  1539                           ;eusart1.c: 169: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  1540  000370  503D               	movf	_eusart1TxTail,w,c
  1541  000372  0D01               	mullw	1
  1542  000374  0E31               	movlw	low _eusart1TxBuffer
  1543  000376  24F3               	addwf	prodl,w,c
  1544  000378  6ED9               	movwf	fsr2l,c
  1545  00037A  0E00               	movlw	high _eusart1TxBuffer
  1546  00037C  20F4               	addwfc	prodh,w,c
  1547  00037E  6EDA               	movwf	fsr2h,c
  1548  000380  50DF               	movf	indf2,w,c
  1549  000382  6EAD               	movwf	4013,c	;volatile
  1550  000384  2A3D               	incf	_eusart1TxTail,f,c
  1551                           
  1552                           ;eusart1.c: 170: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  1553  000386  0E07               	movlw	7
  1554  000388  643D               	cpfsgt	_eusart1TxTail,c
  1555  00038A  D003               	goto	i2l926
  1556                           
  1557                           ;eusart1.c: 171: {
  1558                           ;eusart1.c: 172: eusart1TxTail = 0;
  1559  00038C  0E00               	movlw	0
  1560  00038E  6E3D               	movwf	_eusart1TxTail,c
  1561  000390  D000               	goto	i2l926
  1562  000392                     i2l926:
  1563                           
  1564                           ;eusart1.c: 173: }
  1565                           ;eusart1.c: 174: eusart1TxBufferRemaining++;
  1566  000392  2A51               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  1567                           
  1568                           ;eusart1.c: 175: }
  1569  000394  0012               	return	
  1570  000396                     i2l93:
  1571                           
  1572                           ;eusart1.c: 176: else
  1573                           ;eusart1.c: 177: {
  1574                           ;eusart1.c: 178: PIE1bits.TX1IE = 0;
  1575  000396  989D               	bcf	3997,4,c	;volatile
  1576  000398  0012               	return	
  1577  00039A  0012               	return		;funcret
  1578  00039C                     __end_of_EUSART1_Transmit_ISR:
  1579                           	opt stack 0
  1580                           pclatu	equ	0xFFB
  1581                           pclath	equ	0xFFA
  1582                           tblptru	equ	0xFF8
  1583                           tblptrh	equ	0xFF7
  1584                           tblptrl	equ	0xFF6
  1585                           tablat	equ	0xFF5
  1586                           prodh	equ	0xFF4
  1587                           prodl	equ	0xFF3
  1588                           intcon	equ	0xFF2
  1589                           intcon2	equ	0xFF1
  1590                           postinc0	equ	0xFEE
  1591                           fsr0h	equ	0xFEA
  1592                           fsr0l	equ	0xFE9
  1593                           wreg	equ	0xFE8
  1594                           fsr1h	equ	0xFE2
  1595                           fsr1l	equ	0xFE1
  1596                           indf2	equ	0xFDF
  1597                           postinc2	equ	0xFDE
  1598                           postdec2	equ	0xFDD
  1599                           fsr2h	equ	0xFDA
  1600                           fsr2l	equ	0xFD9
  1601                           status	equ	0xFD8
  1602                           
  1603 ;; *************** function _EUSART1_Receive_ISR *****************
  1604 ;; Defined at:
  1605 ;;		line 182 in file "mcc_generated_files/eusart1.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;		None
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;		None
  1610 ;; Return value:  Size  Location     Type
  1611 ;;		None               void
  1612 ;; Registers used:
  1613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1619 ;;      Params:         0       0       0       0       0       0       0
  1620 ;;      Locals:         0       0       0       0       0       0       0
  1621 ;;      Temps:          0       0       0       0       0       0       0
  1622 ;;      Totals:         0       0       0       0       0       0       0
  1623 ;;Total ram usage:        0 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; This function calls:
  1626 ;;		Nothing
  1627 ;; This function is called by:
  1628 ;;		_INTERRUPT_InterruptManager
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text14
  1633  00039C                     __ptext14:
  1634                           	opt stack 0
  1635  00039C                     _EUSART1_Receive_ISR:
  1636                           	opt stack 26
  1637                           
  1638                           ;eusart1.c: 184: if(1 == RC1STAbits.OERR)
  1639                           
  1640                           ;incstack = 0
  1641  00039C  A2AB               	btfss	4011,1,c	;volatile
  1642  00039E  D003               	goto	i2l1070
  1643                           
  1644                           ;eusart1.c: 185: {
  1645                           ;eusart1.c: 188: RC1STAbits.CREN = 0;
  1646  0003A0  98AB               	bcf	4011,4,c	;volatile
  1647                           
  1648                           ;eusart1.c: 189: RC1STAbits.CREN = 1;
  1649  0003A2  88AB               	bsf	4011,4,c	;volatile
  1650  0003A4  D000               	goto	i2l1070
  1651  0003A6                     i2l1070:
  1652                           
  1653                           ;eusart1.c: 190: }
  1654                           ;eusart1.c: 193: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  1655  0003A6  503A               	movf	_eusart1RxHead,w,c
  1656  0003A8  0D01               	mullw	1
  1657  0003AA  0E60               	movlw	low _eusart1RxBuffer
  1658  0003AC  24F3               	addwf	prodl,w,c
  1659  0003AE  6ED9               	movwf	fsr2l,c
  1660  0003B0  0E00               	movlw	high _eusart1RxBuffer
  1661  0003B2  20F4               	addwfc	prodh,w,c
  1662  0003B4  6EDA               	movwf	fsr2h,c
  1663  0003B6  CFAE FFDF          	movff	4014,indf2	;volatile
  1664  0003BA  2A3A               	incf	_eusart1RxHead,f,c
  1665                           
  1666                           ;eusart1.c: 194: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  1667  0003BC  0E1F               	movlw	31
  1668  0003BE  643A               	cpfsgt	_eusart1RxHead,c
  1669  0003C0  D003               	goto	i2l1078
  1670                           
  1671                           ;eusart1.c: 195: {
  1672                           ;eusart1.c: 196: eusart1RxHead = 0;
  1673  0003C2  0E00               	movlw	0
  1674  0003C4  6E3A               	movwf	_eusart1RxHead,c
  1675  0003C6  D000               	goto	i2l1078
  1676  0003C8                     i2l1078:
  1677                           
  1678                           ;eusart1.c: 197: }
  1679                           ;eusart1.c: 198: eusart1RxCount++;
  1680  0003C8  2A39               	incf	_eusart1RxCount,f,c	;volatile
  1681  0003CA  0012               	return		;funcret
  1682  0003CC                     __end_of_EUSART1_Receive_ISR:
  1683                           	opt stack 0
  1684                           pclatu	equ	0xFFB
  1685                           pclath	equ	0xFFA
  1686                           tblptru	equ	0xFF8
  1687                           tblptrh	equ	0xFF7
  1688                           tblptrl	equ	0xFF6
  1689                           tablat	equ	0xFF5
  1690                           prodh	equ	0xFF4
  1691                           prodl	equ	0xFF3
  1692                           intcon	equ	0xFF2
  1693                           intcon2	equ	0xFF1
  1694                           postinc0	equ	0xFEE
  1695                           fsr0h	equ	0xFEA
  1696                           fsr0l	equ	0xFE9
  1697                           wreg	equ	0xFE8
  1698                           fsr1h	equ	0xFE2
  1699                           fsr1l	equ	0xFE1
  1700                           indf2	equ	0xFDF
  1701                           postinc2	equ	0xFDE
  1702                           postdec2	equ	0xFDD
  1703                           fsr2h	equ	0xFDA
  1704                           fsr2l	equ	0xFD9
  1705                           status	equ	0xFD8
  1706                           
  1707 ;; *************** function _ADC_ISR *****************
  1708 ;; Defined at:
  1709 ;;		line 128 in file "mcc_generated_files/adc.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;		None
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;		None
  1714 ;; Return value:  Size  Location     Type
  1715 ;;		None               void
  1716 ;; Registers used:
  1717 ;;		None
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1723 ;;      Params:         0       0       0       0       0       0       0
  1724 ;;      Locals:         0       0       0       0       0       0       0
  1725 ;;      Temps:          0       0       0       0       0       0       0
  1726 ;;      Totals:         0       0       0       0       0       0       0
  1727 ;;Total ram usage:        0 bytes
  1728 ;; Hardware stack levels used:    1
  1729 ;; This function calls:
  1730 ;;		Nothing
  1731 ;; This function is called by:
  1732 ;;		_INTERRUPT_InterruptManager
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           	psect	text15
  1737  000430                     __ptext15:
  1738                           	opt stack 0
  1739  000430                     _ADC_ISR:
  1740                           	opt stack 26
  1741                           
  1742                           ;adc.c: 131: PIR1bits.ADIF = 0;
  1743                           
  1744                           ;incstack = 0
  1745  000430  9C9E               	bcf	3998,6,c	;volatile
  1746  000432  0012               	return		;funcret
  1747  000434                     __end_of_ADC_ISR:
  1748                           	opt stack 0
  1749  0000                     pclatu	equ	0xFFB
  1750                           pclath	equ	0xFFA
  1751                           tblptru	equ	0xFF8
  1752                           tblptrh	equ	0xFF7
  1753                           tblptrl	equ	0xFF6
  1754                           tablat	equ	0xFF5
  1755                           prodh	equ	0xFF4
  1756                           prodl	equ	0xFF3
  1757                           intcon	equ	0xFF2
  1758                           intcon2	equ	0xFF1
  1759                           postinc0	equ	0xFEE
  1760                           fsr0h	equ	0xFEA
  1761                           fsr0l	equ	0xFE9
  1762                           wreg	equ	0xFE8
  1763                           fsr1h	equ	0xFE2
  1764                           fsr1l	equ	0xFE1
  1765                           indf2	equ	0xFDF
  1766                           postinc2	equ	0xFDE
  1767                           postdec2	equ	0xFDD
  1768                           fsr2h	equ	0xFDA
  1769                           fsr2l	equ	0xFD9
  1770                           status	equ	0xFD8
  1771                           pclatu	equ	0xFFB
  1772                           pclath	equ	0xFFA
  1773                           tblptru	equ	0xFF8
  1774                           tblptrh	equ	0xFF7
  1775                           tblptrl	equ	0xFF6
  1776                           tablat	equ	0xFF5
  1777                           prodh	equ	0xFF4
  1778                           prodl	equ	0xFF3
  1779                           intcon	equ	0xFF2
  1780                           intcon2	equ	0xFF1
  1781                           postinc0	equ	0xFEE
  1782                           fsr0h	equ	0xFEA
  1783                           fsr0l	equ	0xFE9
  1784                           wreg	equ	0xFE8
  1785                           fsr1h	equ	0xFE2
  1786                           fsr1l	equ	0xFE1
  1787                           indf2	equ	0xFDF
  1788                           postinc2	equ	0xFDE
  1789                           postdec2	equ	0xFDD
  1790                           fsr2h	equ	0xFDA
  1791                           fsr2l	equ	0xFD9
  1792                           status	equ	0xFD8
  1793                           
  1794                           	psect	rparam
  1795  0000                     pclatu	equ	0xFFB
  1796                           pclath	equ	0xFFA
  1797                           tblptru	equ	0xFF8
  1798                           tblptrh	equ	0xFF7
  1799                           tblptrl	equ	0xFF6
  1800                           tablat	equ	0xFF5
  1801                           prodh	equ	0xFF4
  1802                           prodl	equ	0xFF3
  1803                           intcon	equ	0xFF2
  1804                           intcon2	equ	0xFF1
  1805                           postinc0	equ	0xFEE
  1806                           fsr0h	equ	0xFEA
  1807                           fsr0l	equ	0xFE9
  1808                           wreg	equ	0xFE8
  1809                           fsr1h	equ	0xFE2
  1810                           fsr1l	equ	0xFE1
  1811                           indf2	equ	0xFDF
  1812                           postinc2	equ	0xFDE
  1813                           postdec2	equ	0xFDD
  1814                           fsr2h	equ	0xFDA
  1815                           fsr2l	equ	0xFD9
  1816                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         93
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     19      81
    BANK0           160      6      38
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Delay
    _StartUp595->_Delay
    _Clear595->_writeRegisters

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_SetPin595
    _StartUp595->_Delay

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1382
                              _Delay
                  _SYSTEM_Initialize
                          _SetPin595
                         _StartUp595
 ---------------------------------------------------------------------------------
 (1) _StartUp595                                           0     0      0     573
                           _Clear595
                              _Delay
 ---------------------------------------------------------------------------------
 (2) _Delay                                                9     5      4     392
                                             14 COMRAM     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _Clear595                                             2     2      0     181
                                              0 BANK0      2     2      0
                     _writeRegisters
 ---------------------------------------------------------------------------------
 (3) _writeRegisters                                       4     4      0     113
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _SetPin595                                           10     4      6     417
                                             14 COMRAM     4     4      0
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _SetPin595
   _StartUp595
     _Clear595
       _writeRegisters
     _Delay

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      6      26       4       23.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     13      51       1       85.3%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      77       9        0.0%
DATA                 0      0      77      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon May 11 16:53:21 2015

           _eusart1TxBufferRemaining 0051                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                                  l264 01E2  
                                l256 01AC                                  l266 01EE  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                                u427 020E                      __end_of_ADC_ISR 0434  
                                prod 000FF3                                  wreg 000FE8  
                       __CFG_LVP$OFF 000000                                 l1210 00E8  
                               l1212 00EC                                 l1206 00B0  
                               l1152 01B0                                 l1216 0124  
                               l1146 019C                                 l1156 01D6  
                               l1148 01A4                                 l1172 02F6  
                               l1164 0208                                 l1158 01E6  
                               l1182 0328                                 l1190 0176  
                               l1176 0300                                 l1168 0226  
                               l1192 018E                                 l1184 0130  
                               l1194 0192                                 l1186 0146  
                               l1188 015E                                 _LATA 000F89  
                               _LATB 000F8A                                 _LATC 000F8B  
                               _LATD 000F8C                                 _LATE 000F8D  
                               i2l93 0396                                 _WPUB 000F61  
                               _main 00A2                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                      __CFG_BORV$190 000000                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 009E                        __CFG_IESO$OFF 000000  
                       ___param_bank 000010       __size_of_OSCILLATOR_Initialize 000E  
      __end_of_OSCILLATOR_Initialize 0426                                ?_main 003E  
                              _LATB0 007C50                                _LATB1 007C51  
                              _LATA3 007C4B                                _LATD5 007C65  
                              _LATD6 007C66                                _LATD7 007C67  
                     __CFG_DEBUG$OFF 000000                                i2l160 0058  
                              i2l164 0064                                i2l158 004C  
                              i2l926 0392                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
                              _Delay 01F4                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                 _EUSART1_Transmit_ISR 036A  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                     ??_writeRegisters 004C  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                 __CFG_MCLRE$EXTMCLR 000000                                tablat 000FF5  
                              status 000FD8                     __end_of_Clear595 032E  
                     __CFG_HFOFST$ON 000000                       __CFG_PBADEN$ON 000000  
                    __initialization 03CC           __end_of_EUSART1_Initialize 036A  
                       __end_of_main 012C                            ??_ADC_ISR 003E  
        ?_INTERRUPT_InterruptManager 003E                               ??_main 0051  
                      __activetblptr 000000                               ?_Delay 004C  
              ?_EUSART1_Transmit_ISR 003E                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
                             _ANSELA 000F38                               _ANSELB 000F39  
                             _ANSELC 000F3A                               _ANSELD 000F3B  
                             _ANSELE 000F3C                               _RC1STA 000FAB  
                             i2l1070 03A6                               i2l1078 03C8  
                             Delay@i 0080                       __CFG_WDTEN$OFF 000000  
                             _RCREG1 000FAE                               _OSCCON 000FD3  
                             _SPBRG1 000FAF                               _TX1STA 000FAC  
                             _TXREG1 000FAD                       __CFG_XINST$OFF 000000  
                 __size_of_SetPin595 0052                       __CFG_STVREN$ON 000000  
                             clear_0 03D2                               clear_1 03DE  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                           _StartUp595 012C  
                    _eusart1RxBuffer 0060        __size_of_INTERRUPT_Initialize 000A  
                    _eusart1TxBuffer 0031                    _SYSTEM_Initialize 0402  
                         __accesstop 0060              __end_of__initialization 03E4  
                 ?_SYSTEM_Initialize 003E                        ___rparam_used 000001  
                      __end_of_Delay 024C                       __pcstackCOMRAM 003E  
                ??_SYSTEM_Initialize 004C               ??_EUSART1_Transmit_ISR 003E  
                          ?_Clear595 003E                              ??_Delay 0050  
        __end_of_EUSART1_Receive_ISR 03CC                    __end_of_SetPin595 029E  
          __end_of_SYSTEM_Initialize 0418                        _eusart1RxHead 003A  
                      _eusart1TxHead 003C                        _eusart1RxTail 003B  
                         __pbssBANK0 0060                        _eusart1TxTail 003D  
                    __CFG_PLLCFG$OFF 000000                           __pnvCOMRAM 0051  
                 __CFG_CCP2MX$PORTC1 000000                   __CFG_CCP3MX$PORTB5 000000  
                            _ADC_ISR 0430              __size_of_ADC_Initialize 0018  
                         ??_Clear595 0050                              _OSCCON2 000FD2  
                        ?_StartUp595 003E                    __CFG_PRICLKEN$OFF 000000  
                            _OSCTUNE 000F9B                              _SPBRGH1 000FB0  
                    __CFG_PWRTEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000                              __pcinit 03CC  
                            __ramtop 0600                              __ptext0 00A2  
                            __ptext1 012C                              __ptext2 01F4  
                            __ptext3 02EC                              __ptext4 0198  
                            __ptext5 024C                              __ptext6 0402  
                            __ptext7 029E                              __ptext8 0418  
                            __ptext9 0426                _OSCILLATOR_Initialize 0418  
                 _EUSART1_Initialize 032E             ??_PIN_MANAGER_Initialize 004C  
                          Clear595@i 0080           __size_of_SYSTEM_Initialize 0016  
               end_of_initialization 03E4                            Delay@wait 004C  
                ?_EUSART1_Initialize 003E                              postdec2 000FDD  
                __size_of_StartUp595 006C                              postinc0 000FEE  
                            postinc2 000FDE                         SetPin595@Reg 0080  
               ??_EUSART1_Initialize 004C                         SetPin595@pin 0082  
            __size_of_writeRegisters 005C         __end_of_INTERRUPT_Initialize 0430  
                     _ADC_Initialize 03EA               ?_OSCILLATOR_Initialize 003E  
                start_initialization 03CC      __size_of_PIN_MANAGER_Initialize 004E  
                  __size_of_Clear595 0042                            _SetPin595 024C  
             __end_of_ADC_Initialize 0402                             ?_ADC_ISR 003E  
                     _eusart1RxCount 0039                          __pbssCOMRAM 0001  
      __size_of_EUSART1_Transmit_ISR 0032                        __pcstackBANK0 0080  
                       ??_StartUp595 0051         __size_of_EUSART1_Receive_ISR 0030  
                         ?_SetPin595 0080               _PIN_MANAGER_Initialize 029E  
                          __pintcode 0008                   __end_of_StartUp595 0198  
                    ?_ADC_Initialize 003E         ??_INTERRUPT_InterruptManager 003E  
                           _BAUD1CON 000FB8                       __size_of_Delay 0058  
               _INTERRUPT_Initialize 0426                       _writeRegisters 0198  
                          _registers 0001                             _IPR1bits 000F9F  
                           _PIE1bits 000F9D  __size_of_INTERRUPT_InterruptManager 0096  
                           _PIR1bits 000F9E                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                     __size_of_ADC_ISR 0004  
                         _ADCON0bits 000FC2                             _Clear595 02EC  
                        _INTCON2bits 000FF1                ?_INTERRUPT_Initialize 003E  
             __end_of_writeRegisters 01F4                          ??_SetPin595 004C  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000                    __CFG_P2BMX$PORTD2 000000  
            ??_OSCILLATOR_Initialize 004C          __size_of_EUSART1_Initialize 003C  
                           __ptext10 032E                             __ptext11 03EA  
                           __ptext13 036A                             __ptext14 039C  
                           __ptext15 0430                      ?_writeRegisters 003E  
                      __size_of_main 008A                           _RC1STAbits 000FAB  
                  writeRegisters@val 004C   __end_of_INTERRUPT_InterruptManager 009E  
         _INTERRUPT_InterruptManager 0008                  _EUSART1_Receive_ISR 039C  
                         _INTCONbits 000FF2               ??_INTERRUPT_Initialize 004C  
                           intlevel2 0000                 ?_EUSART1_Receive_ISR 003E  
            ?_PIN_MANAGER_Initialize 003E                       SetPin595@value 0084  
       __end_of_EUSART1_Transmit_ISR 039C                     ??_ADC_Initialize 004C  
                  __CFG_T3CMX$PORTC0 000000                      writeRegisters@i 004E  
              ??_EUSART1_Receive_ISR 003E       __end_of_PIN_MANAGER_Initialize 02EC  
                  __CFG_FOSC$INTIO67 000000  
