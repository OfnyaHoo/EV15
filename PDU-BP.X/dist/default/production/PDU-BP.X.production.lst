

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun May 31 05:04:10 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    34  0000                     _TMR1	set	4046
    35  0000                     _ADCON0	set	4034
    36  0000                     _ADCON0bits	set	4034
    37  0000                     _ADCON1	set	4033
    38  0000                     _ADCON2	set	4032
    39  0000                     _ADRESH	set	4036
    40  0000                     _ADRESL	set	4035
    41  0000                     _ANSELA	set	3896
    42  0000                     _ANSELB	set	3897
    43  0000                     _ANSELC	set	3898
    44  0000                     _ANSELD	set	3899
    45  0000                     _ANSELE	set	3900
    46  0000                     _BAUD1CON	set	4024
    47  0000                     _EEADR	set	4009
    48  0000                     _EECON1bits	set	4006
    49  0000                     _EECON2	set	4007
    50  0000                     _EEDATA	set	4008
    51  0000                     _INTCON2bits	set	4081
    52  0000                     _INTCONbits	set	4082
    53  0000                     _IPR1bits	set	3999
    54  0000                     _LATA	set	3977
    55  0000                     _LATB	set	3978
    56  0000                     _LATC	set	3979
    57  0000                     _LATD	set	3980
    58  0000                     _LATE	set	3981
    59  0000                     _OSCCON	set	4051
    60  0000                     _OSCCON2	set	4050
    61  0000                     _OSCTUNE	set	3995
    62  0000                     _PIE1bits	set	3997
    63  0000                     _PIR1bits	set	3998
    64  0000                     _RC1STA	set	4011
    65  0000                     _RC1STAbits	set	4011
    66  0000                     _RCONbits	set	4048
    67  0000                     _RCREG1	set	4014
    68  0000                     _SPBRG1	set	4015
    69  0000                     _SPBRGH1	set	4016
    70  0000                     _T1CON	set	4045
    71  0000                     _T1CONbits	set	4045
    72  0000                     _T1GCON	set	4044
    73  0000                     _T1GCONbits	set	4044
    74  0000                     _TABLAT	set	4085
    75  0000                     _TBLPTRH	set	4087
    76  0000                     _TBLPTRL	set	4086
    77  0000                     _TBLPTRU	set	4088
    78  0000                     _TMR1H	set	4047
    79  0000                     _TMR1L	set	4046
    80  0000                     _TRISA	set	3986
    81  0000                     _TRISB	set	3987
    82  0000                     _TRISC	set	3988
    83  0000                     _TRISD	set	3989
    84  0000                     _TRISE	set	3990
    85  0000                     _TX1STA	set	4012
    86  0000                     _TXREG1	set	4013
    87  0000                     _WPUB	set	3937
    88  0000                     _LATA3	set	31819
    89  0000                     _LATB0	set	31824
    90  0000                     _LATD4	set	31844
    91  0000                     _LATD5	set	31845
    92  0000                     _LATD6	set	31846
    93  0000                     _LATD7	set	31847
    94                           
    95                           	psect	nvCOMRAM
    96  000051                     __pnvCOMRAM:
    97                           	opt stack 0
    98  000051                     _eusart1TxBufferRemaining:
    99                           	opt stack 0
   100  000051                     	ds	1
   101                           
   102                           ; #config settings
   103  0000                     
   104                           	psect	cinit
   105  0005A6                     __pcinit:
   106                           	opt stack 0
   107  0005A6                     start_initialization:
   108                           	opt stack 0
   109  0005A6                     __initialization:
   110                           	opt stack 0
   111                           
   112                           ; Clear objects allocated to BANK0 (92 bytes)
   113  0005A6  EE00  F060         	lfsr	0,__pbssBANK0
   114  0005AA  0E5C               	movlw	92
   115  0005AC                     clear_0:
   116  0005AC  6AEE               	clrf	postinc0,c
   117  0005AE  06E8               	decf	wreg,f,c
   118  0005B0  E1FD               	bnz	clear_0
   119                           
   120                           ; Clear objects allocated to COMRAM (51 bytes)
   121  0005B2  EE00  F001         	lfsr	0,__pbssCOMRAM
   122  0005B6  0E33               	movlw	51
   123  0005B8                     clear_1:
   124  0005B8  6AEE               	clrf	postinc0,c
   125  0005BA  06E8               	decf	wreg,f,c
   126  0005BC  E1FD               	bnz	clear_1
   127  0005BE                     end_of_initialization:
   128                           	opt stack 0
   129  0005BE                     __end_of__initialization:
   130                           	opt stack 0
   131  0005BE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   132  0005C0  6EF8               	movwf	tblptru,c
   133  0005C2  0100               	movlb	0
   134  0005C4  EF71  F002         	goto	_main	;jump to C main() function
   135                           tblptru	equ	0xFF8
   136                           postinc0	equ	0xFEE
   137                           wreg	equ	0xFE8
   138                           
   139                           	psect	bssCOMRAM
   140  000001                     __pbssCOMRAM:
   141                           	opt stack 0
   142  000001                     _CurrentADC:
   143                           	opt stack 0
   144  000001                     	ds	12
   145  00000D                     _Currentcomp:
   146                           	opt stack 0
   147  00000D                     	ds	12
   148  000019                     _data:
   149                           	opt stack 0
   150  000019                     	ds	12
   151  000025                     _eusart1TxBuffer:
   152                           	opt stack 0
   153  000025                     	ds	8
   154  00002D                     _timer1ReloadVal:
   155                           	opt stack 0
   156  00002D                     	ds	2
   157  00002F                     _eusart1RxCount:
   158                           	opt stack 0
   159  00002F                     	ds	1
   160  000030                     _eusart1RxHead:
   161                           	opt stack 0
   162  000030                     	ds	1
   163  000031                     _eusart1RxTail:
   164                           	opt stack 0
   165  000031                     	ds	1
   166  000032                     _eusart1TxHead:
   167                           	opt stack 0
   168  000032                     	ds	1
   169  000033                     _eusart1TxTail:
   170                           	opt stack 0
   171  000033                     	ds	1
   172                           tblptru	equ	0xFF8
   173                           postinc0	equ	0xFEE
   174                           wreg	equ	0xFE8
   175                           
   176                           	psect	bssBANK0
   177  000060                     __pbssBANK0:
   178                           	opt stack 0
   179  000060                     _registers:
   180                           	opt stack 0
   181  000060                     	ds	48
   182  000090                     _eusart1RxBuffer:
   183                           	opt stack 0
   184  000090                     	ds	32
   185  0000B0                     _Current:
   186                           	opt stack 0
   187  0000B0                     	ds	12
   188                           tblptru	equ	0xFF8
   189                           postinc0	equ	0xFEE
   190                           wreg	equ	0xFE8
   191                           
   192                           	psect	cstackBANK0
   193  0000BC                     __pcstackBANK0:
   194                           	opt stack 0
   195  0000BC                     ??_Clear595:
   196                           
   197                           ; 0 bytes @ 0x0
   198  0000BC                     	ds	2
   199  0000BE                     Clear595@i:
   200                           	opt stack 0
   201                           
   202                           ; 2 bytes @ 0x2
   203  0000BE                     	ds	2
   204                           tblptru	equ	0xFF8
   205                           postinc0	equ	0xFEE
   206                           wreg	equ	0xFE8
   207                           
   208                           	psect	cstackCOMRAM
   209  000034                     __pcstackCOMRAM:
   210                           	opt stack 0
   211  000034                     ??_INTERRUPT_InterruptManager:
   212  000034                     
   213                           ; 1 bytes @ 0x0
   214  000034                     	ds	14
   215  000042                     DATAEE_ReadByte@bAdd:
   216                           	opt stack 0
   217  000042                     SetPin595@Reg:
   218                           	opt stack 0
   219  000042                     Delay@wait:
   220                           	opt stack 0
   221                           
   222                           ; 4 bytes @ 0xE
   223  000042                     	ds	1
   224  000043                     ??_ComputeStorageData:
   225                           
   226                           ; 0 bytes @ 0xF
   227  000043                     	ds	1
   228  000044                     SetPin595@pin:
   229                           	opt stack 0
   230                           
   231                           ; 2 bytes @ 0x10
   232  000044                     	ds	1
   233  000045                     ComputeStorageData@i:
   234                           	opt stack 0
   235                           
   236                           ; 2 bytes @ 0x11
   237  000045                     	ds	1
   238  000046                     ??_Delay:
   239  000046                     SetPin595@value:
   240                           	opt stack 0
   241                           
   242                           ; 2 bytes @ 0x12
   243  000046                     	ds	1
   244  000047                     Delay@i:
   245                           	opt stack 0
   246                           
   247                           ; 4 bytes @ 0x13
   248  000047                     	ds	1
   249  000048                     ??_SetPin595:
   250                           
   251                           ; 0 bytes @ 0x14
   252  000048                     	ds	3
   253  00004B                     ??_writeRegisters:
   254                           
   255                           ; 0 bytes @ 0x17
   256  00004B                     	ds	1
   257  00004C                     EnableSlavePower@onof:
   258                           	opt stack 0
   259                           
   260                           ; 2 bytes @ 0x18
   261  00004C                     	ds	1
   262  00004D                     writeRegisters@val:
   263                           	opt stack 0
   264                           
   265                           ; 2 bytes @ 0x19
   266  00004D                     	ds	1
   267  00004E                     EnableSlavePower@slave:
   268                           	opt stack 0
   269                           
   270                           ; 1 bytes @ 0x1A
   271  00004E                     	ds	1
   272  00004F                     writeRegisters@i:
   273                           	opt stack 0
   274                           
   275                           ; 2 bytes @ 0x1B
   276  00004F                     	ds	2
   277  000051                     tblptru	equ	0xFF8
   278                           postinc0	equ	0xFEE
   279                           wreg	equ	0xFE8
   280                           
   281                           ; 0 bytes @ 0x1D
   282 ;;
   283 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   284 ;;
   285 ;; *************** function _main *****************
   286 ;; Defined at:
   287 ;;		line 8 in file "main.c"
   288 ;; Parameters:    Size  Location     Type
   289 ;;		None
   290 ;; Auto vars:     Size  Location     Type
   291 ;;		None
   292 ;; Return value:  Size  Location     Type
   293 ;;		None               void
   294 ;; Registers used:
   295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
   296 ;; Tracked objects:
   297 ;;		On entry : 0/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   301 ;;      Params:         0       0       0       0       0       0       0
   302 ;;      Locals:         0       0       0       0       0       0       0
   303 ;;      Temps:          0       0       0       0       0       0       0
   304 ;;      Totals:         0       0       0       0       0       0       0
   305 ;;Total ram usage:        0 bytes
   306 ;; Hardware stack levels required when called:    7
   307 ;; This function calls:
   308 ;;		_Delay
   309 ;;		_PDUStartup
   310 ;;		_SYSTEM_Initialize
   311 ;; This function is called by:
   312 ;;		Startup code after reset
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           	psect	text0
   317  0004E2                     __ptext0:
   318                           	opt stack 0
   319  0004E2                     _main:
   320                           	opt stack 24
   321                           
   322                           ;main.c: 11: SYSTEM_Initialize();
   323                           
   324                           ;incstack = 0
   325  0004E2  ECF0  F002         	call	_SYSTEM_Initialize	;wreg free
   326                           
   327                           ;main.c: 12: PDUStartup();
   328  0004E6  ECBE  F002         	call	_PDUStartup	;wreg free
   329                           
   330                           ;main.c: 30: (INTCONbits.GIE = 1);
   331  0004EA  8EF2               	bsf	intcon,7,c	;volatile
   332                           
   333                           ;main.c: 33: (INTCONbits.PEIE = 1);
   334  0004EC  8CF2               	bsf	intcon,6,c	;volatile
   335  0004EE                     l1820:
   336                           
   337                           ;main.c: 42: {
   338                           ;main.c: 43: Delay(500);
   339  0004EE  0EF4               	movlw	244
   340  0004F0  6E42               	movwf	Delay@wait,c
   341  0004F2  0E01               	movlw	1
   342  0004F4  6E43               	movwf	Delay@wait+1,c
   343  0004F6  0E00               	movlw	0
   344  0004F8  6E44               	movwf	Delay@wait+2,c
   345  0004FA  0E00               	movlw	0
   346  0004FC  6E45               	movwf	Delay@wait+3,c
   347  0004FE  EC2E  F002         	call	_Delay	;wreg free
   348                           
   349                           ;main.c: 44: do { LATA3 = 1; } while(0);
   350  000502  8689               	bsf	3977,3,c	;volatile
   351                           
   352                           ;main.c: 45: Delay(500);
   353  000504  0EF4               	movlw	244
   354  000506  6E42               	movwf	Delay@wait,c
   355  000508  0E01               	movlw	1
   356  00050A  6E43               	movwf	Delay@wait+1,c
   357  00050C  0E00               	movlw	0
   358  00050E  6E44               	movwf	Delay@wait+2,c
   359  000510  0E00               	movlw	0
   360  000512  6E45               	movwf	Delay@wait+3,c
   361  000514  EC2E  F002         	call	_Delay	;wreg free
   362                           
   363                           ;main.c: 46: do { LATA3 = 0; } while(0);
   364  000518  9689               	bcf	3977,3,c	;volatile
   365  00051A  D7E9               	goto	l1820
   366  00051C                     __end_of_main:
   367                           	opt stack 0
   368                           tblptru	equ	0xFF8
   369                           intcon	equ	0xFF2
   370                           postinc0	equ	0xFEE
   371                           wreg	equ	0xFE8
   372                           
   373 ;; *************** function _SYSTEM_Initialize *****************
   374 ;; Defined at:
   375 ;;		line 112 in file "mcc_generated_files/mcc.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;		None
   380 ;; Return value:  Size  Location     Type
   381 ;;		None               void
   382 ;; Registers used:
   383 ;;		wreg, status,2, cstack
   384 ;; Tracked objects:
   385 ;;		On entry : 0/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   389 ;;      Params:         0       0       0       0       0       0       0
   390 ;;      Locals:         0       0       0       0       0       0       0
   391 ;;      Temps:          0       0       0       0       0       0       0
   392 ;;      Totals:         0       0       0       0       0       0       0
   393 ;;Total ram usage:        0 bytes
   394 ;; Hardware stack levels used:    1
   395 ;; Hardware stack levels required when called:    3
   396 ;; This function calls:
   397 ;;		_ADC_Initialize
   398 ;;		_EUSART1_Initialize
   399 ;;		_INTERRUPT_Initialize
   400 ;;		_OSCILLATOR_Initialize
   401 ;;		_PIN_MANAGER_Initialize
   402 ;; This function is called by:
   403 ;;		_main
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407                           	psect	text1
   408  0005E0                     __ptext1:
   409                           	opt stack 0
   410  0005E0                     _SYSTEM_Initialize:
   411                           	opt stack 27
   412                           
   413                           ;mcc.c: 114: OSCILLATOR_Initialize();
   414                           
   415                           ;incstack = 0
   416  0005E0  EC05  F003         	call	_OSCILLATOR_Initialize	;wreg free
   417                           
   418                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   419  0005E4  EC07  F002         	call	_PIN_MANAGER_Initialize	;wreg free
   420                           
   421                           ;mcc.c: 116: INTERRUPT_Initialize();
   422  0005E8  EC0C  F003         	call	_INTERRUPT_Initialize	;wreg free
   423                           
   424                           ;mcc.c: 117: EUSART1_Initialize();
   425  0005EC  EC53  F002         	call	_EUSART1_Initialize	;wreg free
   426                           
   427                           ;mcc.c: 118: ADC_Initialize();
   428  0005F0  ECE4  F002         	call	_ADC_Initialize	;wreg free
   429  0005F4  0012               	return	
   430  0005F6                     __end_of_SYSTEM_Initialize:
   431                           	opt stack 0
   432                           tblptru	equ	0xFF8
   433                           intcon	equ	0xFF2
   434                           postinc0	equ	0xFEE
   435                           wreg	equ	0xFE8
   436                           
   437 ;; *************** function _PIN_MANAGER_Initialize *****************
   438 ;; Defined at:
   439 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;		None
   444 ;; Return value:  Size  Location     Type
   445 ;;		None               void
   446 ;; Registers used:
   447 ;;		wreg, status,2
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   453 ;;      Params:         0       0       0       0       0       0       0
   454 ;;      Locals:         0       0       0       0       0       0       0
   455 ;;      Temps:          0       0       0       0       0       0       0
   456 ;;      Totals:         0       0       0       0       0       0       0
   457 ;;Total ram usage:        0 bytes
   458 ;; Hardware stack levels used:    1
   459 ;; Hardware stack levels required when called:    2
   460 ;; This function calls:
   461 ;;		Nothing
   462 ;; This function is called by:
   463 ;;		_SYSTEM_Initialize
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           	psect	text2
   468  00040E                     __ptext2:
   469                           	opt stack 0
   470  00040E                     _PIN_MANAGER_Initialize:
   471                           	opt stack 27
   472                           
   473                           ;pin_manager.c: 52: LATA = 0x00;
   474                           
   475                           ;incstack = 0
   476  00040E  0E00               	movlw	0
   477  000410  6E89               	movwf	3977,c	;volatile
   478                           
   479                           ;pin_manager.c: 53: TRISA = 0xF7;
   480  000412  0EF7               	movlw	247
   481  000414  6E92               	movwf	3986,c	;volatile
   482                           
   483                           ;pin_manager.c: 54: ANSELA = 0x27;
   484  000416  0E27               	movlw	39
   485  000418  010F               	movlb	15	; () banked
   486  00041A  6F38               	movwf	56,b	;volatile
   487                           
   488                           ;pin_manager.c: 56: LATB = 0x01;
   489  00041C  0E01               	movlw	1
   490  00041E  6E8A               	movwf	3978,c	;volatile
   491                           
   492                           ;pin_manager.c: 57: TRISB = 0xFE;
   493  000420  0EFE               	movlw	254
   494  000422  6E93               	movwf	3987,c	;volatile
   495                           
   496                           ;pin_manager.c: 58: ANSELB = 0x3E;
   497  000424  0E3E               	movlw	62
   498  000426  010F               	movlb	15	; () banked
   499  000428  6F39               	movwf	57,b	;volatile
   500                           
   501                           ;pin_manager.c: 59: WPUB = 0x00;
   502  00042A  0E00               	movlw	0
   503  00042C  6E61               	movwf	3937,c	;volatile
   504                           
   505                           ;pin_manager.c: 61: LATC = 0x00;
   506  00042E  0E00               	movlw	0
   507  000430  6E8B               	movwf	3979,c	;volatile
   508                           
   509                           ;pin_manager.c: 62: TRISC = 0xDF;
   510  000432  0EDF               	movlw	223
   511  000434  6E94               	movwf	3988,c	;volatile
   512                           
   513                           ;pin_manager.c: 63: ANSELC = 0x1C;
   514  000436  0E1C               	movlw	28
   515  000438  010F               	movlb	15	; () banked
   516  00043A  6F3A               	movwf	58,b	;volatile
   517                           
   518                           ;pin_manager.c: 65: LATD = 0x00;
   519  00043C  0E00               	movlw	0
   520  00043E  6E8C               	movwf	3980,c	;volatile
   521                           
   522                           ;pin_manager.c: 66: TRISD = 0x0F;
   523  000440  0E0F               	movlw	15
   524  000442  6E95               	movwf	3989,c	;volatile
   525                           
   526                           ;pin_manager.c: 67: ANSELD = 0x0F;
   527  000444  0E0F               	movlw	15
   528  000446  010F               	movlb	15	; () banked
   529  000448  6F3B               	movwf	59,b	;volatile
   530                           
   531                           ;pin_manager.c: 69: LATE = 0x00;
   532  00044A  0E00               	movlw	0
   533  00044C  6E8D               	movwf	3981,c	;volatile
   534                           
   535                           ;pin_manager.c: 70: TRISE = 0x07;
   536  00044E  0E07               	movlw	7
   537  000450  6E96               	movwf	3990,c	;volatile
   538                           
   539                           ;pin_manager.c: 71: ANSELE = 0x07;
   540  000452  0E07               	movlw	7
   541  000454  010F               	movlb	15	; () banked
   542  000456  6F3C               	movwf	60,b	;volatile
   543                           
   544                           ; BSR set to: 15
   545                           ;pin_manager.c: 73: INTCON2bits.nRBPU = 0x01;
   546  000458  8EF1               	bsf	intcon2,7,c	;volatile
   547                           
   548                           ; BSR set to: 15
   549  00045A  0012               	return	
   550  00045C                     __end_of_PIN_MANAGER_Initialize:
   551                           	opt stack 0
   552                           tblptru	equ	0xFF8
   553                           intcon	equ	0xFF2
   554                           intcon2	equ	0xFF1
   555                           postinc0	equ	0xFEE
   556                           wreg	equ	0xFE8
   557                           
   558 ;; *************** function _OSCILLATOR_Initialize *****************
   559 ;; Defined at:
   560 ;;		line 121 in file "mcc_generated_files/mcc.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;		None
   563 ;; Auto vars:     Size  Location     Type
   564 ;;		None
   565 ;; Return value:  Size  Location     Type
   566 ;;		None               void
   567 ;; Registers used:
   568 ;;		wreg, status,2
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   574 ;;      Params:         0       0       0       0       0       0       0
   575 ;;      Locals:         0       0       0       0       0       0       0
   576 ;;      Temps:          0       0       0       0       0       0       0
   577 ;;      Totals:         0       0       0       0       0       0       0
   578 ;;Total ram usage:        0 bytes
   579 ;; Hardware stack levels used:    1
   580 ;; Hardware stack levels required when called:    2
   581 ;; This function calls:
   582 ;;		Nothing
   583 ;; This function is called by:
   584 ;;		_SYSTEM_Initialize
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           	psect	text3
   589  00060A                     __ptext3:
   590                           	opt stack 0
   591  00060A                     _OSCILLATOR_Initialize:
   592                           	opt stack 27
   593                           
   594                           ;mcc.c: 124: OSCCON = 0x60;
   595                           
   596                           ; BSR set to: 15
   597                           ;incstack = 0
   598  00060A  0E60               	movlw	96
   599  00060C  6ED3               	movwf	4051,c	;volatile
   600                           
   601                           ;mcc.c: 126: OSCCON2 = 0x04;
   602  00060E  0E04               	movlw	4
   603  000610  6ED2               	movwf	4050,c	;volatile
   604                           
   605                           ;mcc.c: 128: OSCTUNE = 0x00;
   606  000612  0E00               	movlw	0
   607  000614  6E9B               	movwf	3995,c	;volatile
   608  000616  0012               	return	
   609  000618                     __end_of_OSCILLATOR_Initialize:
   610                           	opt stack 0
   611                           tblptru	equ	0xFF8
   612                           intcon	equ	0xFF2
   613                           intcon2	equ	0xFF1
   614                           postinc0	equ	0xFEE
   615                           wreg	equ	0xFE8
   616                           
   617 ;; *************** function _INTERRUPT_Initialize *****************
   618 ;; Defined at:
   619 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;		None               void
   626 ;; Registers used:
   627 ;;		None
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   633 ;;      Params:         0       0       0       0       0       0       0
   634 ;;      Locals:         0       0       0       0       0       0       0
   635 ;;      Temps:          0       0       0       0       0       0       0
   636 ;;      Totals:         0       0       0       0       0       0       0
   637 ;;Total ram usage:        0 bytes
   638 ;; Hardware stack levels used:    1
   639 ;; Hardware stack levels required when called:    2
   640 ;; This function calls:
   641 ;;		Nothing
   642 ;; This function is called by:
   643 ;;		_SYSTEM_Initialize
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           	psect	text4
   648  000618                     __ptext4:
   649                           	opt stack 0
   650  000618                     _INTERRUPT_Initialize:
   651                           	opt stack 27
   652                           
   653                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
   654                           
   655                           ;incstack = 0
   656  000618  9ED0               	bcf	4048,7,c	;volatile
   657                           
   658                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
   659  00061A  9A9F               	bcf	3999,5,c	;volatile
   660                           
   661                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
   662  00061C  989F               	bcf	3999,4,c	;volatile
   663                           
   664                           ;interrupt_manager.c: 64: IPR1bits.ADIP = 0;
   665  00061E  9C9F               	bcf	3999,6,c	;volatile
   666  000620  0012               	return	
   667  000622                     __end_of_INTERRUPT_Initialize:
   668                           	opt stack 0
   669                           tblptru	equ	0xFF8
   670                           intcon	equ	0xFF2
   671                           intcon2	equ	0xFF1
   672                           postinc0	equ	0xFEE
   673                           wreg	equ	0xFE8
   674                           
   675 ;; *************** function _EUSART1_Initialize *****************
   676 ;; Defined at:
   677 ;;		line 76 in file "mcc_generated_files/eusart1.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;		None
   680 ;; Auto vars:     Size  Location     Type
   681 ;;		None
   682 ;; Return value:  Size  Location     Type
   683 ;;		None               void
   684 ;; Registers used:
   685 ;;		wreg, status,2
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   691 ;;      Params:         0       0       0       0       0       0       0
   692 ;;      Locals:         0       0       0       0       0       0       0
   693 ;;      Temps:          0       0       0       0       0       0       0
   694 ;;      Totals:         0       0       0       0       0       0       0
   695 ;;Total ram usage:        0 bytes
   696 ;; Hardware stack levels used:    1
   697 ;; Hardware stack levels required when called:    2
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		_SYSTEM_Initialize
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           	psect	text5
   706  0004A6                     __ptext5:
   707                           	opt stack 0
   708  0004A6                     _EUSART1_Initialize:
   709                           	opt stack 27
   710                           
   711                           ;eusart1.c: 79: PIE1bits.RC1IE = 0;
   712                           
   713                           ;incstack = 0
   714  0004A6  9A9D               	bcf	3997,5,c	;volatile
   715                           
   716                           ;eusart1.c: 80: PIE1bits.TX1IE = 0;
   717  0004A8  989D               	bcf	3997,4,c	;volatile
   718                           
   719                           ;eusart1.c: 85: BAUD1CON = 0x48;
   720  0004AA  0E48               	movlw	72
   721  0004AC  6EB8               	movwf	4024,c	;volatile
   722                           
   723                           ;eusart1.c: 88: RC1STA = 0x90;
   724  0004AE  0E90               	movlw	144
   725  0004B0  6EAB               	movwf	4011,c	;volatile
   726                           
   727                           ;eusart1.c: 91: TX1STA = 0x26;
   728  0004B2  0E26               	movlw	38
   729  0004B4  6EAC               	movwf	4012,c	;volatile
   730                           
   731                           ;eusart1.c: 94: SPBRG1 = 0x22;
   732  0004B6  0E22               	movlw	34
   733  0004B8  6EAF               	movwf	4015,c	;volatile
   734                           
   735                           ;eusart1.c: 97: SPBRGH1 = 0x00;
   736  0004BA  0E00               	movlw	0
   737  0004BC  6EB0               	movwf	4016,c	;volatile
   738                           
   739                           ;eusart1.c: 100: TXREG1 = 0x00;
   740  0004BE  0E00               	movlw	0
   741  0004C0  6EAD               	movwf	4013,c	;volatile
   742                           
   743                           ;eusart1.c: 103: RCREG1 = 0x00;
   744  0004C2  0E00               	movlw	0
   745  0004C4  6EAE               	movwf	4014,c	;volatile
   746                           
   747                           ;eusart1.c: 107: eusart1TxHead = 0;
   748  0004C6  0E00               	movlw	0
   749  0004C8  6E32               	movwf	_eusart1TxHead,c
   750                           
   751                           ;eusart1.c: 108: eusart1TxTail = 0;
   752  0004CA  0E00               	movlw	0
   753  0004CC  6E33               	movwf	_eusart1TxTail,c
   754                           
   755                           ;eusart1.c: 109: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
   756  0004CE  0E08               	movlw	8
   757  0004D0  6E51               	movwf	_eusart1TxBufferRemaining,c	;volatile
   758                           
   759                           ;eusart1.c: 111: eusart1RxHead = 0;
   760  0004D2  0E00               	movlw	0
   761  0004D4  6E30               	movwf	_eusart1RxHead,c
   762                           
   763                           ;eusart1.c: 112: eusart1RxTail = 0;
   764  0004D6  0E00               	movlw	0
   765  0004D8  6E31               	movwf	_eusart1RxTail,c
   766                           
   767                           ;eusart1.c: 113: eusart1RxCount = 0;
   768  0004DA  0E00               	movlw	0
   769  0004DC  6E2F               	movwf	_eusart1RxCount,c	;volatile
   770                           
   771                           ;eusart1.c: 116: PIE1bits.RC1IE = 1;
   772  0004DE  8A9D               	bsf	3997,5,c	;volatile
   773  0004E0  0012               	return	
   774  0004E2                     __end_of_EUSART1_Initialize:
   775                           	opt stack 0
   776                           tblptru	equ	0xFF8
   777                           intcon	equ	0xFF2
   778                           intcon2	equ	0xFF1
   779                           postinc0	equ	0xFEE
   780                           wreg	equ	0xFE8
   781                           
   782 ;; *************** function _ADC_Initialize *****************
   783 ;; Defined at:
   784 ;;		line 59 in file "mcc_generated_files/adc.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;		None               void
   791 ;; Registers used:
   792 ;;		wreg, status,2
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   798 ;;      Params:         0       0       0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0       0       0
   800 ;;      Temps:          0       0       0       0       0       0       0
   801 ;;      Totals:         0       0       0       0       0       0       0
   802 ;;Total ram usage:        0 bytes
   803 ;; Hardware stack levels used:    1
   804 ;; Hardware stack levels required when called:    2
   805 ;; This function calls:
   806 ;;		Nothing
   807 ;; This function is called by:
   808 ;;		_SYSTEM_Initialize
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text6
   813  0005C8                     __ptext6:
   814                           	opt stack 0
   815  0005C8                     _ADC_Initialize:
   816                           	opt stack 27
   817                           
   818                           ;adc.c: 64: ADCON0 = 0x01;
   819                           
   820                           ;incstack = 0
   821  0005C8  0E01               	movlw	1
   822  0005CA  6EC2               	movwf	4034,c	;volatile
   823                           
   824                           ;adc.c: 67: ADCON1 = 0x80;
   825  0005CC  0E80               	movlw	128
   826  0005CE  6EC1               	movwf	4033,c	;volatile
   827                           
   828                           ;adc.c: 70: ADCON2 = 0x12;
   829  0005D0  0E12               	movlw	18
   830  0005D2  6EC0               	movwf	4032,c	;volatile
   831                           
   832                           ;adc.c: 73: ADRESL = 0x00;
   833  0005D4  0E00               	movlw	0
   834  0005D6  6EC3               	movwf	4035,c	;volatile
   835                           
   836                           ;adc.c: 76: ADRESH = 0x00;
   837  0005D8  0E00               	movlw	0
   838  0005DA  6EC4               	movwf	4036,c	;volatile
   839                           
   840                           ;adc.c: 79: PIE1bits.ADIE = 1;
   841  0005DC  8C9D               	bsf	3997,6,c	;volatile
   842  0005DE  0012               	return	
   843  0005E0                     __end_of_ADC_Initialize:
   844                           	opt stack 0
   845                           tblptru	equ	0xFF8
   846                           intcon	equ	0xFF2
   847                           intcon2	equ	0xFF1
   848                           postinc0	equ	0xFEE
   849                           wreg	equ	0xFE8
   850                           
   851 ;; *************** function _PDUStartup *****************
   852 ;; Defined at:
   853 ;;		line 14 in file "PDU.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;		None
   856 ;; Auto vars:     Size  Location     Type
   857 ;;		None
   858 ;; Return value:  Size  Location     Type
   859 ;;		None               void
   860 ;; Registers used:
   861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   867 ;;      Params:         0       0       0       0       0       0       0
   868 ;;      Locals:         0       0       0       0       0       0       0
   869 ;;      Temps:          0       0       0       0       0       0       0
   870 ;;      Totals:         0       0       0       0       0       0       0
   871 ;;Total ram usage:        0 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; Hardware stack levels required when called:    6
   874 ;; This function calls:
   875 ;;		_ComputeStorageData
   876 ;;		_EnableSlavePower
   877 ;;		_StartUp595
   878 ;;		_Update
   879 ;; This function is called by:
   880 ;;		_main
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           	psect	text7
   885  00057C                     __ptext7:
   886                           	opt stack 0
   887  00057C                     _PDUStartup:
   888                           	opt stack 24
   889                           
   890                           ;PDU.c: 18: StartUp595();
   891                           
   892                           ;incstack = 0
   893  00057C  EC7F  F001         	call	_StartUp595	;wreg free
   894                           
   895                           ;PDU.c: 20: EnableSlavePower(SAS,ON);
   896  000580  0E00               	movlw	0
   897  000582  6E4D               	movwf	EnableSlavePower@onof+1,c
   898  000584  0E01               	movlw	1
   899  000586  6E4C               	movwf	EnableSlavePower@onof,c
   900  000588  0E01               	movlw	1
   901  00058A  EC50  F000         	call	_EnableSlavePower
   902                           
   903                           ;PDU.c: 21: EnableSlavePower(DDS,ON);
   904  00058E  0E00               	movlw	0
   905  000590  6E4D               	movwf	EnableSlavePower@onof+1,c
   906  000592  0E01               	movlw	1
   907  000594  6E4C               	movwf	EnableSlavePower@onof,c
   908  000596  0E02               	movlw	2
   909  000598  EC50  F000         	call	_EnableSlavePower
   910                           
   911                           ;PDU.c: 22: Update();
   912  00059C  EC11  F003         	call	_Update	;wreg free
   913                           
   914                           ;PDU.c: 24: ComputeStorageData();
   915  0005A0  EC23  F001         	call	_ComputeStorageData	;wreg free
   916  0005A4  0012               	return	
   917  0005A6                     __end_of_PDUStartup:
   918                           	opt stack 0
   919                           tblptru	equ	0xFF8
   920                           intcon	equ	0xFF2
   921                           intcon2	equ	0xFF1
   922                           postinc0	equ	0xFEE
   923                           wreg	equ	0xFE8
   924                           
   925 ;; *************** function _Update *****************
   926 ;; Defined at:
   927 ;;		line 127 in file "PDU.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;		None
   930 ;; Auto vars:     Size  Location     Type
   931 ;;		None
   932 ;; Return value:  Size  Location     Type
   933 ;;		None               void
   934 ;; Registers used:
   935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   941 ;;      Params:         0       0       0       0       0       0       0
   942 ;;      Locals:         0       0       0       0       0       0       0
   943 ;;      Temps:          0       0       0       0       0       0       0
   944 ;;      Totals:         0       0       0       0       0       0       0
   945 ;;Total ram usage:        0 bytes
   946 ;; Hardware stack levels used:    1
   947 ;; Hardware stack levels required when called:    4
   948 ;; This function calls:
   949 ;;		_writeRegisters
   950 ;; This function is called by:
   951 ;;		_PDUStartup
   952 ;;		_ReadCurrent
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text8
   957  000622                     __ptext8:
   958                           	opt stack 0
   959  000622                     _Update:
   960                           	opt stack 25
   961                           
   962                           ;PDU.c: 129: writeRegisters();
   963                           
   964                           ;incstack = 0
   965  000622  ECC0  F000         	call	_writeRegisters	;wreg free
   966  000626  0012               	return	
   967  000628                     __end_of_Update:
   968                           	opt stack 0
   969                           tblptru	equ	0xFF8
   970                           intcon	equ	0xFF2
   971                           intcon2	equ	0xFF1
   972                           postinc0	equ	0xFEE
   973                           wreg	equ	0xFE8
   974                           
   975 ;; *************** function _StartUp595 *****************
   976 ;; Defined at:
   977 ;;		line 10 in file "Shift595.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;		None
   980 ;; Auto vars:     Size  Location     Type
   981 ;;		None
   982 ;; Return value:  Size  Location     Type
   983 ;;		None               void
   984 ;; Registers used:
   985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   991 ;;      Params:         0       0       0       0       0       0       0
   992 ;;      Locals:         0       0       0       0       0       0       0
   993 ;;      Temps:          0       0       0       0       0       0       0
   994 ;;      Totals:         0       0       0       0       0       0       0
   995 ;;Total ram usage:        0 bytes
   996 ;; Hardware stack levels used:    1
   997 ;; Hardware stack levels required when called:    5
   998 ;; This function calls:
   999 ;;		_Clear595
  1000 ;;		_Delay
  1001 ;; This function is called by:
  1002 ;;		_PDUStartup
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           	psect	text9
  1007  0002FE                     __ptext9:
  1008                           	opt stack 0
  1009  0002FE                     _StartUp595:
  1010                           	opt stack 24
  1011                           
  1012                           ;incstack = 0
  1013                           ;Shift595.c: 12: do { LATD5 = 1; } while(0);
  1014  0002FE  8A8C               	bsf	3980,5,c	;volatile
  1015                           
  1016                           ;Shift595.c: 14: Delay(2);
  1017  000300  0E02               	movlw	2
  1018  000302  6E42               	movwf	Delay@wait,c
  1019  000304  0E00               	movlw	0
  1020  000306  6E43               	movwf	Delay@wait+1,c
  1021  000308  0E00               	movlw	0
  1022  00030A  6E44               	movwf	Delay@wait+2,c
  1023  00030C  0E00               	movlw	0
  1024  00030E  6E45               	movwf	Delay@wait+3,c
  1025  000310  EC2E  F002         	call	_Delay	;wreg free
  1026                           
  1027                           ;Shift595.c: 15: do { LATB0 = 1; } while(0);
  1028  000314  808A               	bsf	3978,0,c	;volatile
  1029                           
  1030                           ;Shift595.c: 16: Delay(2);
  1031  000316  0E02               	movlw	2
  1032  000318  6E42               	movwf	Delay@wait,c
  1033  00031A  0E00               	movlw	0
  1034  00031C  6E43               	movwf	Delay@wait+1,c
  1035  00031E  0E00               	movlw	0
  1036  000320  6E44               	movwf	Delay@wait+2,c
  1037  000322  0E00               	movlw	0
  1038  000324  6E45               	movwf	Delay@wait+3,c
  1039  000326  EC2E  F002         	call	_Delay	;wreg free
  1040                           
  1041                           ;Shift595.c: 17: do { LATB0 = 0; } while(0);
  1042  00032A  908A               	bcf	3978,0,c	;volatile
  1043                           
  1044                           ;Shift595.c: 18: Delay(2);
  1045  00032C  0E02               	movlw	2
  1046  00032E  6E42               	movwf	Delay@wait,c
  1047  000330  0E00               	movlw	0
  1048  000332  6E43               	movwf	Delay@wait+1,c
  1049  000334  0E00               	movlw	0
  1050  000336  6E44               	movwf	Delay@wait+2,c
  1051  000338  0E00               	movlw	0
  1052  00033A  6E45               	movwf	Delay@wait+3,c
  1053  00033C  EC2E  F002         	call	_Delay	;wreg free
  1054                           
  1055                           ;Shift595.c: 19: do { LATB0 = 1; } while(0);
  1056  000340  808A               	bsf	3978,0,c	;volatile
  1057                           
  1058                           ;Shift595.c: 20: Delay(2);
  1059  000342  0E02               	movlw	2
  1060  000344  6E42               	movwf	Delay@wait,c
  1061  000346  0E00               	movlw	0
  1062  000348  6E43               	movwf	Delay@wait+1,c
  1063  00034A  0E00               	movlw	0
  1064  00034C  6E44               	movwf	Delay@wait+2,c
  1065  00034E  0E00               	movlw	0
  1066  000350  6E45               	movwf	Delay@wait+3,c
  1067  000352  EC2E  F002         	call	_Delay	;wreg free
  1068                           
  1069                           ;Shift595.c: 22: do { LATD5 = 0; } while(0);
  1070  000356  9A8C               	bcf	3980,5,c	;volatile
  1071                           
  1072                           ;Shift595.c: 23: Clear595();
  1073  000358  ECAF  F001         	call	_Clear595	;wreg free
  1074  00035C  0012               	return	
  1075  00035E                     __end_of_StartUp595:
  1076                           	opt stack 0
  1077                           tblptru	equ	0xFF8
  1078                           intcon	equ	0xFF2
  1079                           intcon2	equ	0xFF1
  1080                           postinc0	equ	0xFEE
  1081                           wreg	equ	0xFE8
  1082                           
  1083 ;; *************** function _Clear595 *****************
  1084 ;; Defined at:
  1085 ;;		line 38 in file "Shift595.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;		None
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;  i               2    2[BANK0 ] int 
  1090 ;; Return value:  Size  Location     Type
  1091 ;;		None               void
  1092 ;; Registers used:
  1093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1099 ;;      Params:         0       0       0       0       0       0       0
  1100 ;;      Locals:         0       2       0       0       0       0       0
  1101 ;;      Temps:          0       2       0       0       0       0       0
  1102 ;;      Totals:         0       4       0       0       0       0       0
  1103 ;;Total ram usage:        4 bytes
  1104 ;; Hardware stack levels used:    1
  1105 ;; Hardware stack levels required when called:    4
  1106 ;; This function calls:
  1107 ;;		_writeRegisters
  1108 ;; This function is called by:
  1109 ;;		_StartUp595
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text10
  1114  00035E                     __ptext10:
  1115                           	opt stack 0
  1116  00035E                     _Clear595:
  1117                           	opt stack 24
  1118                           
  1119                           ;Shift595.c: 39: for (int i = 3 * 8 - 1; i >= 0; i--) {
  1120                           
  1121                           ;incstack = 0
  1122  00035E  0E00               	movlw	0
  1123  000360  0100               	movlb	0	; () banked
  1124  000362  6FBF               	movwf	(Clear595@i+1)& (0+255),b
  1125  000364  0E17               	movlw	23
  1126  000366  0100               	movlb	0	; () banked
  1127  000368  6FBE               	movwf	Clear595@i& (0+255),b
  1128  00036A                     
  1129                           ; BSR set to: 0
  1130  00036A  0100               	movlb	0	; () banked
  1131  00036C  51BF               	movf	(Clear595@i+1)& (0+255),w,b
  1132  00036E  0A80               	xorlw	128
  1133  000370  6EF3               	movwf	prodl,c
  1134  000372  0E80               	movlw	128
  1135  000374  5CF3               	subwf	prodl,w,c
  1136  000376  0E00               	movlw	0
  1137  000378  B4D8               	btfsc	status,2,c
  1138  00037A  5DBE               	subwf	Clear595@i& (0+255),w,b
  1139  00037C  A0D8               	btfss	status,0,c
  1140  00037E  D01B               	goto	l1788
  1141                           
  1142                           ; BSR set to: 0
  1143                           ;Shift595.c: 40: registers[i] = 0;
  1144                           
  1145                           ; BSR set to: 0
  1146                           
  1147                           ; BSR set to: 0
  1148  000380  0E60               	movlw	low _registers
  1149  000382  0100               	movlb	0	; () banked
  1150  000384  6FBC               	movwf	??_Clear595& (0+255),b
  1151  000386  0E00               	movlw	high _registers
  1152  000388  6FBD               	movwf	(??_Clear595+1)& (0+255),b
  1153  00038A  90D8               	bcf	status,0,c
  1154  00038C  0100               	movlb	0	; () banked
  1155  00038E  35BE               	rlcf	Clear595@i& (0+255),w,b
  1156  000390  6ED9               	movwf	fsr2l,c
  1157  000392  0100               	movlb	0	; () banked
  1158  000394  35BF               	rlcf	(Clear595@i+1)& (0+255),w,b
  1159  000396  6EDA               	movwf	fsr2h,c
  1160  000398  0100               	movlb	0	; () banked
  1161  00039A  51BC               	movf	??_Clear595& (0+255),w,b
  1162  00039C  26D9               	addwf	fsr2l,f,c
  1163  00039E  0100               	movlb	0	; () banked
  1164  0003A0  51BD               	movf	(??_Clear595+1)& (0+255),w,b
  1165  0003A2  22DA               	addwfc	fsr2h,f,c
  1166  0003A4  0E00               	movlw	0
  1167  0003A6  6EDE               	movwf	postinc2,c
  1168  0003A8  0E00               	movlw	0
  1169  0003AA  6EDD               	movwf	postdec2,c
  1170                           
  1171                           ; BSR set to: 0
  1172  0003AC  0100               	movlb	0	; () banked
  1173  0003AE  07BE               	decf	Clear595@i& (0+255),f,b
  1174  0003B0  A0D8               	btfss	status,0,c
  1175  0003B2  07BF               	decf	(Clear595@i+1)& (0+255),f,b
  1176  0003B4  D7DA               	goto	L1
  1177  0003B6                     l1788:
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;Shift595.c: 41: }
  1181                           ;Shift595.c: 43: writeRegisters();
  1182  0003B6  ECC0  F000         	call	_writeRegisters	;wreg free
  1183  0003BA  0012               	return	
  1184  0003BC                     __end_of_Clear595:
  1185                           	opt stack 0
  1186                           tblptru	equ	0xFF8
  1187                           prodl	equ	0xFF3
  1188                           intcon	equ	0xFF2
  1189                           intcon2	equ	0xFF1
  1190                           postinc0	equ	0xFEE
  1191                           wreg	equ	0xFE8
  1192                           postinc2	equ	0xFDE
  1193                           postdec2	equ	0xFDD
  1194                           fsr2h	equ	0xFDA
  1195                           fsr2l	equ	0xFD9
  1196                           status	equ	0xFD8
  1197                           
  1198 ;; *************** function _writeRegisters *****************
  1199 ;; Defined at:
  1200 ;;		line 49 in file "Shift595.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  i               2   27[COMRAM] int 
  1205 ;;  val             2   25[COMRAM] int 
  1206 ;; Return value:  Size  Location     Type
  1207 ;;		None               void
  1208 ;; Registers used:
  1209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1215 ;;      Params:         0       0       0       0       0       0       0
  1216 ;;      Locals:         4       0       0       0       0       0       0
  1217 ;;      Temps:          2       0       0       0       0       0       0
  1218 ;;      Totals:         6       0       0       0       0       0       0
  1219 ;;Total ram usage:        6 bytes
  1220 ;; Hardware stack levels used:    1
  1221 ;; Hardware stack levels required when called:    3
  1222 ;; This function calls:
  1223 ;;		_Delay
  1224 ;; This function is called by:
  1225 ;;		_Clear595
  1226 ;;		_Update
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           	psect	text11
  1231  000180                     __ptext11:
  1232                           	opt stack 0
  1233  000180                     _writeRegisters:
  1234                           	opt stack 25
  1235                           
  1236                           ;incstack = 0
  1237                           ;Shift595.c: 50: do { LATD5 = 1; } while(0);
  1238  000180  8A8C               	bsf	3980,5,c	;volatile
  1239                           
  1240                           ;Shift595.c: 51: int val = 0;
  1241  000182  0E00               	movlw	0
  1242  000184  6E4E               	movwf	writeRegisters@val+1,c
  1243  000186  0E00               	movlw	0
  1244  000188  6E4D               	movwf	writeRegisters@val,c
  1245                           
  1246                           ;Shift595.c: 52: do { LATD6 = 0; } while(0);
  1247  00018A  9C8C               	bcf	3980,6,c	;volatile
  1248                           
  1249                           ;Shift595.c: 53: Delay(2);
  1250  00018C  0E02               	movlw	2
  1251  00018E  6E42               	movwf	Delay@wait,c
  1252  000190  0E00               	movlw	0
  1253  000192  6E43               	movwf	Delay@wait+1,c
  1254  000194  0E00               	movlw	0
  1255  000196  6E44               	movwf	Delay@wait+2,c
  1256  000198  0E00               	movlw	0
  1257  00019A  6E45               	movwf	Delay@wait+3,c
  1258  00019C  EC2E  F002         	call	_Delay	;wreg free
  1259                           
  1260                           ;Shift595.c: 54: for (int i = 3 * 8 - 1; i >= 0; i--) {
  1261  0001A0  0E00               	movlw	0
  1262  0001A2  6E50               	movwf	writeRegisters@i+1,c
  1263  0001A4  0E17               	movlw	23
  1264  0001A6  6E4F               	movwf	writeRegisters@i,c
  1265  0001A8  5050               	movf	writeRegisters@i+1,w,c
  1266  0001AA  0A80               	xorlw	128
  1267  0001AC  6EF3               	movwf	prodl,c
  1268  0001AE  0E80               	movlw	128
  1269  0001B0  5CF3               	subwf	prodl,w,c
  1270  0001B2  0E00               	movlw	0
  1271  0001B4  B4D8               	btfsc	status,2,c
  1272  0001B6  5C4F               	subwf	writeRegisters@i,w,c
  1273  0001B8  A0D8               	btfss	status,0,c
  1274  0001BA  D041               	goto	l383
  1275                           
  1276                           ;Shift595.c: 55: do { LATD7 = 0; } while(0);
  1277  0001BC  9E8C               	bcf	3980,7,c	;volatile
  1278                           
  1279                           ;Shift595.c: 56: do { LATD6 = 0; } while(0);
  1280  0001BE  9C8C               	bcf	3980,6,c	;volatile
  1281                           
  1282                           ;Shift595.c: 57: Delay(2);
  1283  0001C0  0E02               	movlw	2
  1284  0001C2  6E42               	movwf	Delay@wait,c
  1285  0001C4  0E00               	movlw	0
  1286  0001C6  6E43               	movwf	Delay@wait+1,c
  1287  0001C8  0E00               	movlw	0
  1288  0001CA  6E44               	movwf	Delay@wait+2,c
  1289  0001CC  0E00               	movlw	0
  1290  0001CE  6E45               	movwf	Delay@wait+3,c
  1291  0001D0  EC2E  F002         	call	_Delay	;wreg free
  1292                           
  1293                           ;Shift595.c: 58: val = registers[i];
  1294  0001D4  0E60               	movlw	low _registers
  1295  0001D6  6E4B               	movwf	??_writeRegisters& (0+255),c
  1296  0001D8  0E00               	movlw	high _registers
  1297  0001DA  6E4C               	movwf	(??_writeRegisters+1)& (0+255),c
  1298  0001DC  90D8               	bcf	status,0,c
  1299  0001DE  344F               	rlcf	writeRegisters@i,w,c
  1300  0001E0  6ED9               	movwf	fsr2l,c
  1301  0001E2  3450               	rlcf	writeRegisters@i+1,w,c
  1302  0001E4  6EDA               	movwf	fsr2h,c
  1303  0001E6  504B               	movf	??_writeRegisters,w,c
  1304  0001E8  26D9               	addwf	fsr2l,f,c
  1305  0001EA  504C               	movf	??_writeRegisters+1,w,c
  1306  0001EC  22DA               	addwfc	fsr2h,f,c
  1307  0001EE  CFDE F04D          	movff	postinc2,writeRegisters@val
  1308  0001F2  CFDD F04E          	movff	postdec2,writeRegisters@val+1
  1309                           
  1310                           ;Shift595.c: 59: if (val == 1) {
  1311  0001F6  044D               	decf	writeRegisters@val,w,c
  1312  0001F8  104E               	iorwf	writeRegisters@val+1,w,c
  1313  0001FA  A4D8               	btfss	status,2,c
  1314  0001FC  D002               	goto	l1764
  1315                           
  1316                           ;Shift595.c: 60: do { LATD4 = 1; } while(0);
  1317  0001FE  888C               	bsf	3980,4,c	;volatile
  1318  000200  D004               	goto	l1766
  1319  000202                     l1764:
  1320  000202  504E               	movf	writeRegisters@val+1,w,c
  1321  000204  104D               	iorwf	writeRegisters@val,w,c
  1322  000206  B4D8               	btfsc	status,2,c
  1323                           
  1324                           ;Shift595.c: 62: do { LATD4 = 0; } while(0);
  1325  000208  988C               	bcf	3980,4,c	;volatile
  1326  00020A                     l1766:
  1327                           
  1328                           ;Shift595.c: 63: }
  1329                           ;Shift595.c: 64: Delay(2);
  1330  00020A  0E02               	movlw	2
  1331  00020C  6E42               	movwf	Delay@wait,c
  1332  00020E  0E00               	movlw	0
  1333  000210  6E43               	movwf	Delay@wait+1,c
  1334  000212  0E00               	movlw	0
  1335  000214  6E44               	movwf	Delay@wait+2,c
  1336  000216  0E00               	movlw	0
  1337  000218  6E45               	movwf	Delay@wait+3,c
  1338  00021A  EC2E  F002         	call	_Delay	;wreg free
  1339                           
  1340                           ;Shift595.c: 65: do { LATD7 = 1; } while(0);
  1341  00021E  8E8C               	bsf	3980,7,c	;volatile
  1342                           
  1343                           ;Shift595.c: 66: do { LATD6 = 1; } while(0);
  1344  000220  8C8C               	bsf	3980,6,c	;volatile
  1345                           
  1346                           ;Shift595.c: 67: Delay(2);
  1347  000222  0E02               	movlw	2
  1348  000224  6E42               	movwf	Delay@wait,c
  1349  000226  0E00               	movlw	0
  1350  000228  6E43               	movwf	Delay@wait+1,c
  1351  00022A  0E00               	movlw	0
  1352  00022C  6E44               	movwf	Delay@wait+2,c
  1353  00022E  0E00               	movlw	0
  1354  000230  6E45               	movwf	Delay@wait+3,c
  1355  000232  EC2E  F002         	call	_Delay	;wreg free
  1356  000236  064F               	decf	writeRegisters@i,f,c
  1357  000238  A0D8               	btfss	status,0,c
  1358  00023A  0650               	decf	writeRegisters@i+1,f,c
  1359  00023C  D7B5               	goto	L2
  1360  00023E                     l383:
  1361  00023E  9C8C               	bcf	3980,6,c	;volatile
  1362                           
  1363                           ;Shift595.c: 70: do { LATD7 = 0; } while(0);
  1364  000240  9E8C               	bcf	3980,7,c	;volatile
  1365                           
  1366                           ;Shift595.c: 71: do { LATD5 = 0; } while(0);
  1367  000242  9A8C               	bcf	3980,5,c	;volatile
  1368  000244  0012               	return	
  1369  000246                     __end_of_writeRegisters:
  1370                           	opt stack 0
  1371                           tblptru	equ	0xFF8
  1372                           prodl	equ	0xFF3
  1373                           intcon	equ	0xFF2
  1374                           intcon2	equ	0xFF1
  1375                           postinc0	equ	0xFEE
  1376                           wreg	equ	0xFE8
  1377                           postinc2	equ	0xFDE
  1378                           postdec2	equ	0xFDD
  1379                           fsr2h	equ	0xFDA
  1380                           fsr2l	equ	0xFD9
  1381                           status	equ	0xFD8
  1382                           
  1383 ;; *************** function _Delay *****************
  1384 ;; Defined at:
  1385 ;;		line 8 in file "Functions.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;  wait            4   14[COMRAM] long 
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;  i               4   19[COMRAM] long 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;		None               void
  1392 ;; Registers used:
  1393 ;;		wreg, status,2, status,0
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1399 ;;      Params:         4       0       0       0       0       0       0
  1400 ;;      Locals:         4       0       0       0       0       0       0
  1401 ;;      Temps:          1       0       0       0       0       0       0
  1402 ;;      Totals:         9       0       0       0       0       0       0
  1403 ;;Total ram usage:        9 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    2
  1406 ;; This function calls:
  1407 ;;		Nothing
  1408 ;; This function is called by:
  1409 ;;		_main
  1410 ;;		_StartUp595
  1411 ;;		_writeRegisters
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           	psect	text12
  1416  00045C                     __ptext12:
  1417                           	opt stack 0
  1418  00045C                     _Delay:
  1419                           	opt stack 25
  1420                           
  1421                           ;Functions.c: 10: long int i = 0;
  1422                           
  1423                           ;incstack = 0
  1424  00045C  0E00               	movlw	0
  1425  00045E  6E47               	movwf	Delay@i,c
  1426  000460  0E00               	movlw	0
  1427  000462  6E48               	movwf	Delay@i+1,c
  1428  000464  0E00               	movlw	0
  1429  000466  6E49               	movwf	Delay@i+2,c
  1430  000468  0E00               	movlw	0
  1431  00046A  6E4A               	movwf	Delay@i+3,c
  1432                           
  1433                           ;Functions.c: 11: for(;wait>i;i++)
  1434  00046C  D00D               	goto	l1744
  1435  00046E                     l1740:
  1436                           
  1437                           ;Functions.c: 12: {
  1438                           ;Functions.c: 13: _delay((unsigned long)((1)*(8000000/4000.0)));
  1439  00046E  0E03               	movlw	3
  1440  000470  6E46               	movwf	??_Delay& (0+255),c
  1441  000472  0E98               	movlw	152
  1442  000474                     u727:
  1443  000474  2EE8               	decfsz	wreg,f,c
  1444  000476  D7FE               	goto	u727
  1445  000478  2E46               	decfsz	??_Delay& (0+255),f,c
  1446  00047A  D7FC               	goto	u727
  1447  00047C  0E01               	movlw	1
  1448  00047E  2647               	addwf	Delay@i,f,c
  1449  000480  0E00               	movlw	0
  1450  000482  2248               	addwfc	Delay@i+1,f,c
  1451  000484  2249               	addwfc	Delay@i+2,f,c
  1452  000486  224A               	addwfc	Delay@i+3,f,c
  1453  000488                     l1744:
  1454  000488  504A               	movf	Delay@i+3,w,c
  1455  00048A  0A80               	xorlw	128
  1456  00048C  6E46               	movwf	??_Delay& (0+255),c
  1457  00048E  5042               	movf	Delay@wait,w,c
  1458  000490  5C47               	subwf	Delay@i,w,c
  1459  000492  5043               	movf	Delay@wait+1,w,c
  1460  000494  5848               	subwfb	Delay@i+1,w,c
  1461  000496  5044               	movf	Delay@wait+2,w,c
  1462  000498  5849               	subwfb	Delay@i+2,w,c
  1463  00049A  5045               	movf	Delay@wait+3,w,c
  1464  00049C  0A80               	xorlw	128
  1465  00049E  5846               	subwfb	??_Delay& (0+255),w,c
  1466  0004A0  B0D8               	btfsc	status,0,c
  1467  0004A2  0012               	return	
  1468  0004A4  D7E4               	goto	l1740
  1469  0004A6                     __end_of_Delay:
  1470                           	opt stack 0
  1471                           tblptru	equ	0xFF8
  1472                           prodl	equ	0xFF3
  1473                           intcon	equ	0xFF2
  1474                           intcon2	equ	0xFF1
  1475                           postinc0	equ	0xFEE
  1476                           wreg	equ	0xFE8
  1477                           postinc2	equ	0xFDE
  1478                           postdec2	equ	0xFDD
  1479                           fsr2h	equ	0xFDA
  1480                           fsr2l	equ	0xFD9
  1481                           status	equ	0xFD8
  1482                           
  1483 ;; *************** function _EnableSlavePower *****************
  1484 ;; Defined at:
  1485 ;;		line 28 in file "PDU.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;  slave           1    wreg     enum E5
  1488 ;;  onof            2   24[COMRAM] int 
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  slave           1   26[COMRAM] enum E5
  1491 ;; Return value:  Size  Location     Type
  1492 ;;		None               void
  1493 ;; Registers used:
  1494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1500 ;;      Params:         2       0       0       0       0       0       0
  1501 ;;      Locals:         1       0       0       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0       0       0
  1503 ;;      Totals:         3       0       0       0       0       0       0
  1504 ;;Total ram usage:        3 bytes
  1505 ;; Hardware stack levels used:    1
  1506 ;; Hardware stack levels required when called:    3
  1507 ;; This function calls:
  1508 ;;		_SetPin595
  1509 ;; This function is called by:
  1510 ;;		_PDUStartup
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text13
  1515  0000A0                     __ptext13:
  1516                           	opt stack 0
  1517  0000A0                     _EnableSlavePower:
  1518                           	opt stack 26
  1519                           
  1520                           ;incstack = 0
  1521                           ;EnableSlavePower@slave stored from wreg
  1522  0000A0  6E4E               	movwf	EnableSlavePower@slave,c
  1523                           
  1524                           ;PDU.c: 30: switch(slave)
  1525  0000A2  D05A               	goto	l1612
  1526  0000A4                     l1598:
  1527                           
  1528                           ;PDU.c: 33: SetPin595(2, 1, onof);
  1529  0000A4  0E00               	movlw	0
  1530  0000A6  6E43               	movwf	SetPin595@Reg+1,c
  1531  0000A8  0E02               	movlw	2
  1532  0000AA  6E42               	movwf	SetPin595@Reg,c
  1533  0000AC  0E00               	movlw	0
  1534  0000AE  6E45               	movwf	SetPin595@pin+1,c
  1535  0000B0  0E01               	movlw	1
  1536  0000B2  6E44               	movwf	SetPin595@pin,c
  1537  0000B4  C04C  F046         	movff	EnableSlavePower@onof,SetPin595@value
  1538  0000B8  C04D  F047         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  1539  0000BC  ECDE  F001         	call	_SetPin595	;wreg free
  1540                           
  1541                           ;PDU.c: 34: break;
  1542  0000C0  0012               	return	
  1543  0000C2                     l1600:
  1544                           
  1545                           ;PDU.c: 36: SetPin595(3, 1, onof);
  1546  0000C2  0E00               	movlw	0
  1547  0000C4  6E43               	movwf	SetPin595@Reg+1,c
  1548  0000C6  0E03               	movlw	3
  1549  0000C8  6E42               	movwf	SetPin595@Reg,c
  1550  0000CA  0E00               	movlw	0
  1551  0000CC  6E45               	movwf	SetPin595@pin+1,c
  1552  0000CE  0E01               	movlw	1
  1553  0000D0  6E44               	movwf	SetPin595@pin,c
  1554  0000D2  C04C  F046         	movff	EnableSlavePower@onof,SetPin595@value
  1555  0000D6  C04D  F047         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  1556  0000DA  ECDE  F001         	call	_SetPin595	;wreg free
  1557                           
  1558                           ;PDU.c: 37: break;
  1559  0000DE  0012               	return	
  1560  0000E0                     l1602:
  1561                           
  1562                           ;PDU.c: 39: SetPin595(2, 1, onof);
  1563  0000E0  0E00               	movlw	0
  1564  0000E2  6E43               	movwf	SetPin595@Reg+1,c
  1565  0000E4  0E02               	movlw	2
  1566  0000E6  6E42               	movwf	SetPin595@Reg,c
  1567  0000E8  0E00               	movlw	0
  1568  0000EA  6E45               	movwf	SetPin595@pin+1,c
  1569  0000EC  0E01               	movlw	1
  1570  0000EE  6E44               	movwf	SetPin595@pin,c
  1571  0000F0  C04C  F046         	movff	EnableSlavePower@onof,SetPin595@value
  1572  0000F4  C04D  F047         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  1573  0000F8  ECDE  F001         	call	_SetPin595	;wreg free
  1574                           
  1575                           ;PDU.c: 40: break;
  1576  0000FC  0012               	return	
  1577  0000FE                     l1604:
  1578                           
  1579                           ;PDU.c: 42: SetPin595(3, 6, onof);
  1580  0000FE  0E00               	movlw	0
  1581  000100  6E43               	movwf	SetPin595@Reg+1,c
  1582  000102  0E03               	movlw	3
  1583  000104  6E42               	movwf	SetPin595@Reg,c
  1584  000106  0E00               	movlw	0
  1585  000108  6E45               	movwf	SetPin595@pin+1,c
  1586  00010A  0E06               	movlw	6
  1587  00010C  6E44               	movwf	SetPin595@pin,c
  1588  00010E  C04C  F046         	movff	EnableSlavePower@onof,SetPin595@value
  1589  000112  C04D  F047         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  1590  000116  ECDE  F001         	call	_SetPin595	;wreg free
  1591                           
  1592                           ;PDU.c: 43: break;
  1593  00011A  0012               	return	
  1594  00011C                     l1606:
  1595                           
  1596                           ;PDU.c: 45: SetPin595(1, 1, onof);
  1597  00011C  0E00               	movlw	0
  1598  00011E  6E43               	movwf	SetPin595@Reg+1,c
  1599  000120  0E01               	movlw	1
  1600  000122  6E42               	movwf	SetPin595@Reg,c
  1601  000124  0E00               	movlw	0
  1602  000126  6E45               	movwf	SetPin595@pin+1,c
  1603  000128  0E01               	movlw	1
  1604  00012A  6E44               	movwf	SetPin595@pin,c
  1605  00012C  C04C  F046         	movff	EnableSlavePower@onof,SetPin595@value
  1606  000130  C04D  F047         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  1607  000134  ECDE  F001         	call	_SetPin595	;wreg free
  1608                           
  1609                           ;PDU.c: 46: break;
  1610  000138  0012               	return	
  1611  00013A                     l1608:
  1612                           
  1613                           ;PDU.c: 48: SetPin595(1, 6, onof);
  1614  00013A  0E00               	movlw	0
  1615  00013C  6E43               	movwf	SetPin595@Reg+1,c
  1616  00013E  0E01               	movlw	1
  1617  000140  6E42               	movwf	SetPin595@Reg,c
  1618  000142  0E00               	movlw	0
  1619  000144  6E45               	movwf	SetPin595@pin+1,c
  1620  000146  0E06               	movlw	6
  1621  000148  6E44               	movwf	SetPin595@pin,c
  1622  00014A  C04C  F046         	movff	EnableSlavePower@onof,SetPin595@value
  1623  00014E  C04D  F047         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  1624  000152  ECDE  F001         	call	_SetPin595	;wreg free
  1625                           
  1626                           ;PDU.c: 49: break;
  1627  000156  0012               	return	
  1628  000158                     l1612:
  1629  000158  504E               	movf	EnableSlavePower@slave,w,c
  1630                           
  1631                           ; Switch size 1, requested type "space"
  1632                           ; Number of cases is 6, Range of values is 1 to 6
  1633                           ; switch strategies available:
  1634                           ; Name         Instructions Cycles
  1635                           ; simple_byte           19    10 (average)
  1636                           ;	Chosen strategy is simple_byte
  1637  00015A  0A01               	xorlw	1	; case 1
  1638  00015C  B4D8               	btfsc	status,2,c
  1639  00015E  D7A2               	goto	l1598
  1640  000160  0A03               	xorlw	3	; case 2
  1641  000162  B4D8               	btfsc	status,2,c
  1642  000164  D7BD               	goto	l1602
  1643  000166  0A01               	xorlw	1	; case 3
  1644  000168  B4D8               	btfsc	status,2,c
  1645  00016A  D7AB               	goto	l1600
  1646  00016C  0A07               	xorlw	7	; case 4
  1647  00016E  B4D8               	btfsc	status,2,c
  1648  000170  D7C6               	goto	l1604
  1649  000172  0A01               	xorlw	1	; case 5
  1650  000174  B4D8               	btfsc	status,2,c
  1651  000176  D7D2               	goto	l1606
  1652  000178  0A03               	xorlw	3	; case 6
  1653  00017A  A4D8               	btfss	status,2,c
  1654  00017C  0012               	return	
  1655  00017E  D7DD               	goto	l1608
  1656  000180                     __end_of_EnableSlavePower:
  1657                           	opt stack 0
  1658                           tblptru	equ	0xFF8
  1659                           prodl	equ	0xFF3
  1660                           intcon	equ	0xFF2
  1661                           intcon2	equ	0xFF1
  1662                           postinc0	equ	0xFEE
  1663                           wreg	equ	0xFE8
  1664                           postinc2	equ	0xFDE
  1665                           postdec2	equ	0xFDD
  1666                           fsr2h	equ	0xFDA
  1667                           fsr2l	equ	0xFD9
  1668                           status	equ	0xFD8
  1669                           
  1670 ;; *************** function _SetPin595 *****************
  1671 ;; Defined at:
  1672 ;;		line 31 in file "Shift595.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;  Reg             2   14[COMRAM] int 
  1675 ;;  pin             2   16[COMRAM] int 
  1676 ;;  value           2   18[COMRAM] int 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;		None
  1679 ;; Return value:  Size  Location     Type
  1680 ;;		None               void
  1681 ;; Registers used:
  1682 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1688 ;;      Params:         6       0       0       0       0       0       0
  1689 ;;      Locals:         0       0       0       0       0       0       0
  1690 ;;      Temps:          4       0       0       0       0       0       0
  1691 ;;      Totals:        10       0       0       0       0       0       0
  1692 ;;Total ram usage:       10 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:    2
  1695 ;; This function calls:
  1696 ;;		Nothing
  1697 ;; This function is called by:
  1698 ;;		_EnableSlavePower
  1699 ;;		_ReadCurrent
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text14
  1704  0003BC                     __ptext14:
  1705                           	opt stack 0
  1706  0003BC                     _SetPin595:
  1707                           	opt stack 26
  1708                           
  1709                           ;Shift595.c: 32: registers[((Reg - 1)*8) + pin] = value;
  1710                           
  1711                           ;incstack = 0
  1712  0003BC  0EF0               	movlw	240
  1713  0003BE  6E48               	movwf	??_SetPin595& (0+255),c
  1714  0003C0  0EFF               	movlw	255
  1715  0003C2  6E49               	movwf	(??_SetPin595+1)& (0+255),c
  1716  0003C4  C042  F04A         	movff	SetPin595@Reg,??_SetPin595+2
  1717  0003C8  C043  F04B         	movff	SetPin595@Reg+1,??_SetPin595+3
  1718  0003CC  90D8               	bcf	status,0,c
  1719  0003CE  364A               	rlcf	??_SetPin595+2,f,c
  1720  0003D0  364B               	rlcf	??_SetPin595+3,f,c
  1721  0003D2  90D8               	bcf	status,0,c
  1722  0003D4  364A               	rlcf	??_SetPin595+2,f,c
  1723  0003D6  364B               	rlcf	??_SetPin595+3,f,c
  1724  0003D8  90D8               	bcf	status,0,c
  1725  0003DA  364A               	rlcf	??_SetPin595+2,f,c
  1726  0003DC  364B               	rlcf	??_SetPin595+3,f,c
  1727  0003DE  5044               	movf	SetPin595@pin,w,c
  1728  0003E0  264A               	addwf	??_SetPin595+2,f,c
  1729  0003E2  5045               	movf	SetPin595@pin+1,w,c
  1730  0003E4  224B               	addwfc	??_SetPin595+3,f,c
  1731  0003E6  90D8               	bcf	status,0,c
  1732  0003E8  364A               	rlcf	??_SetPin595+2,f,c
  1733  0003EA  364B               	rlcf	??_SetPin595+3,f,c
  1734  0003EC  5048               	movf	??_SetPin595,w,c
  1735  0003EE  264A               	addwf	??_SetPin595+2,f,c
  1736  0003F0  5049               	movf	??_SetPin595+1,w,c
  1737  0003F2  224B               	addwfc	??_SetPin595+3,f,c
  1738  0003F4  0100               	movlb	0	; () banked
  1739  0003F6  0E60               	movlw	low _registers
  1740  0003F8  244A               	addwf	??_SetPin595+2,w,c
  1741  0003FA  6ED9               	movwf	fsr2l,c
  1742  0003FC  0100               	movlb	0	; () banked
  1743  0003FE  0E00               	movlw	high _registers
  1744  000400  204B               	addwfc	??_SetPin595+3,w,c
  1745  000402  6EDA               	movwf	fsr2h,c
  1746  000404  C046  FFDE         	movff	SetPin595@value,postinc2
  1747  000408  C047  FFDD         	movff	SetPin595@value+1,postdec2
  1748                           
  1749                           ; BSR set to: 0
  1750  00040C  0012               	return	
  1751  00040E                     __end_of_SetPin595:
  1752                           	opt stack 0
  1753                           tblptru	equ	0xFF8
  1754                           prodl	equ	0xFF3
  1755                           intcon	equ	0xFF2
  1756                           intcon2	equ	0xFF1
  1757                           postinc0	equ	0xFEE
  1758                           wreg	equ	0xFE8
  1759                           postinc2	equ	0xFDE
  1760                           postdec2	equ	0xFDD
  1761                           fsr2h	equ	0xFDA
  1762                           fsr2l	equ	0xFD9
  1763                           status	equ	0xFD8
  1764                           
  1765 ;; *************** function _ComputeStorageData *****************
  1766 ;; Defined at:
  1767 ;;		line 94 in file "PDU.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  i               2   17[COMRAM] int 
  1772 ;; Return value:  Size  Location     Type
  1773 ;;		None               void
  1774 ;; Registers used:
  1775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1781 ;;      Params:         0       0       0       0       0       0       0
  1782 ;;      Locals:         2       0       0       0       0       0       0
  1783 ;;      Temps:          2       0       0       0       0       0       0
  1784 ;;      Totals:         4       0       0       0       0       0       0
  1785 ;;Total ram usage:        4 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    3
  1788 ;; This function calls:
  1789 ;;		_DATAEE_ReadByte
  1790 ;; This function is called by:
  1791 ;;		_PDUStartup
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text15
  1796  000246                     __ptext15:
  1797                           	opt stack 0
  1798  000246                     _ComputeStorageData:
  1799                           	opt stack 26
  1800                           
  1801                           ;PDU.c: 96: for(int i = 0;i<12;i++)
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;incstack = 0
  1805  000246  0E00               	movlw	0
  1806  000248  6E46               	movwf	ComputeStorageData@i+1,c
  1807  00024A  0E00               	movlw	0
  1808  00024C  6E45               	movwf	ComputeStorageData@i,c
  1809  00024E  5046               	movf	ComputeStorageData@i+1,w,c
  1810  000250  0A80               	xorlw	128
  1811  000252  0F80               	addlw	-128
  1812  000254  0E0C               	movlw	12
  1813  000256  B4D8               	btfsc	status,2,c
  1814  000258  5C45               	subwf	ComputeStorageData@i,w,c
  1815  00025A  B0D8               	btfsc	status,0,c
  1816  00025C  D00D               	goto	l1182
  1817                           
  1818                           ;PDU.c: 97: {
  1819                           ;PDU.c: 98: data[i] = DATAEE_ReadByte(i);
  1820  00025E  0E19               	movlw	low _data
  1821  000260  2445               	addwf	ComputeStorageData@i,w,c
  1822  000262  6ED9               	movwf	fsr2l,c
  1823  000264  0E00               	movlw	high _data
  1824  000266  2046               	addwfc	ComputeStorageData@i+1,w,c
  1825  000268  6EDA               	movwf	fsr2h,c
  1826  00026A  5045               	movf	ComputeStorageData@i,w,c
  1827  00026C  ECFB  F002         	call	_DATAEE_ReadByte
  1828  000270  6EDF               	movwf	indf2,c
  1829  000272  4A45               	infsnz	ComputeStorageData@i,f,c
  1830  000274  2A46               	incf	ComputeStorageData@i+1,f,c
  1831  000276  D7EB               	goto	L3
  1832  000278                     l1182:
  1833                           
  1834                           ;PDU.c: 99: }
  1835                           ;PDU.c: 100: Currentcomp[0] = ((data[0] << 8) | data[1]);
  1836  000278  501A               	movf	_data+1,w,c
  1837  00027A  C019  F043         	movff	_data,??_ComputeStorageData
  1838  00027E  6A44               	clrf	(??_ComputeStorageData+1)& (0+255),c
  1839  000280  C043  F044         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  1840  000284  6A43               	clrf	??_ComputeStorageData,c
  1841  000286  1043               	iorwf	??_ComputeStorageData,w,c
  1842  000288  6E0D               	movwf	_Currentcomp,c
  1843  00028A  5044               	movf	??_ComputeStorageData+1,w,c
  1844  00028C  6E0E               	movwf	_Currentcomp+1,c
  1845                           
  1846                           ;PDU.c: 101: Currentcomp[1] = ((data[2] << 8) | data[3]);
  1847  00028E  501C               	movf	_data+3,w,c
  1848  000290  C01B  F043         	movff	_data+2,??_ComputeStorageData
  1849  000294  6A44               	clrf	(??_ComputeStorageData+1)& (0+255),c
  1850  000296  C043  F044         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  1851  00029A  6A43               	clrf	??_ComputeStorageData,c
  1852  00029C  1043               	iorwf	??_ComputeStorageData,w,c
  1853  00029E  6E0F               	movwf	_Currentcomp+2,c
  1854  0002A0  5044               	movf	??_ComputeStorageData+1,w,c
  1855  0002A2  6E10               	movwf	_Currentcomp+3,c
  1856                           
  1857                           ;PDU.c: 102: Currentcomp[2] = ((data[4] << 8) | data[5]);
  1858  0002A4  501E               	movf	_data+5,w,c
  1859  0002A6  C01D  F043         	movff	_data+4,??_ComputeStorageData
  1860  0002AA  6A44               	clrf	(??_ComputeStorageData+1)& (0+255),c
  1861  0002AC  C043  F044         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  1862  0002B0  6A43               	clrf	??_ComputeStorageData,c
  1863  0002B2  1043               	iorwf	??_ComputeStorageData,w,c
  1864  0002B4  6E11               	movwf	_Currentcomp+4,c
  1865  0002B6  5044               	movf	??_ComputeStorageData+1,w,c
  1866  0002B8  6E12               	movwf	_Currentcomp+5,c
  1867                           
  1868                           ;PDU.c: 103: Currentcomp[3] = ((data[6] << 8) | data[7]);
  1869  0002BA  5020               	movf	_data+7,w,c
  1870  0002BC  C01F  F043         	movff	_data+6,??_ComputeStorageData
  1871  0002C0  6A44               	clrf	(??_ComputeStorageData+1)& (0+255),c
  1872  0002C2  C043  F044         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  1873  0002C6  6A43               	clrf	??_ComputeStorageData,c
  1874  0002C8  1043               	iorwf	??_ComputeStorageData,w,c
  1875  0002CA  6E13               	movwf	_Currentcomp+6,c
  1876  0002CC  5044               	movf	??_ComputeStorageData+1,w,c
  1877  0002CE  6E14               	movwf	_Currentcomp+7,c
  1878                           
  1879                           ;PDU.c: 104: Currentcomp[4] = ((data[8] << 8) | data[9]);
  1880  0002D0  5022               	movf	_data+9,w,c
  1881  0002D2  C021  F043         	movff	_data+8,??_ComputeStorageData
  1882  0002D6  6A44               	clrf	(??_ComputeStorageData+1)& (0+255),c
  1883  0002D8  C043  F044         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  1884  0002DC  6A43               	clrf	??_ComputeStorageData,c
  1885  0002DE  1043               	iorwf	??_ComputeStorageData,w,c
  1886  0002E0  6E15               	movwf	_Currentcomp+8,c
  1887  0002E2  5044               	movf	??_ComputeStorageData+1,w,c
  1888  0002E4  6E16               	movwf	_Currentcomp+9,c
  1889                           
  1890                           ;PDU.c: 105: Currentcomp[5] = ((data[10] << 8) | data[11]);
  1891  0002E6  5024               	movf	_data+11,w,c
  1892  0002E8  C023  F043         	movff	_data+10,??_ComputeStorageData
  1893  0002EC  6A44               	clrf	(??_ComputeStorageData+1)& (0+255),c
  1894  0002EE  C043  F044         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  1895  0002F2  6A43               	clrf	??_ComputeStorageData,c
  1896  0002F4  1043               	iorwf	??_ComputeStorageData,w,c
  1897  0002F6  6E17               	movwf	_Currentcomp+10,c
  1898  0002F8  5044               	movf	??_ComputeStorageData+1,w,c
  1899  0002FA  6E18               	movwf	_Currentcomp+11,c
  1900  0002FC  0012               	return	
  1901  0002FE                     __end_of_ComputeStorageData:
  1902                           	opt stack 0
  1903                           tblptru	equ	0xFF8
  1904                           prodl	equ	0xFF3
  1905                           intcon	equ	0xFF2
  1906                           intcon2	equ	0xFF1
  1907                           postinc0	equ	0xFEE
  1908                           wreg	equ	0xFE8
  1909                           indf2	equ	0xFDF
  1910                           postinc2	equ	0xFDE
  1911                           postdec2	equ	0xFDD
  1912                           fsr2h	equ	0xFDA
  1913                           fsr2l	equ	0xFD9
  1914                           status	equ	0xFD8
  1915                           
  1916 ;; *************** function _DATAEE_ReadByte *****************
  1917 ;; Defined at:
  1918 ;;		line 143 in file "mcc_generated_files/memory.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;  bAdd            1    wreg     unsigned char 
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;  bAdd            1   14[COMRAM] unsigned char 
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  1    wreg      unsigned char 
  1925 ;; Registers used:
  1926 ;;		wreg, status,2
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1932 ;;      Params:         0       0       0       0       0       0       0
  1933 ;;      Locals:         1       0       0       0       0       0       0
  1934 ;;      Temps:          0       0       0       0       0       0       0
  1935 ;;      Totals:         1       0       0       0       0       0       0
  1936 ;;Total ram usage:        1 bytes
  1937 ;; Hardware stack levels used:    1
  1938 ;; Hardware stack levels required when called:    2
  1939 ;; This function calls:
  1940 ;;		Nothing
  1941 ;; This function is called by:
  1942 ;;		_ComputeStorageData
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text16
  1947  0005F6                     __ptext16:
  1948                           	opt stack 0
  1949  0005F6                     _DATAEE_ReadByte:
  1950                           	opt stack 26
  1951                           
  1952                           ;incstack = 0
  1953                           ;DATAEE_ReadByte@bAdd stored from wreg
  1954  0005F6  6E42               	movwf	DATAEE_ReadByte@bAdd,c
  1955                           
  1956                           ;memory.c: 145: EEADR = (bAdd & 0xFF);
  1957  0005F8  C042  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
  1958                           
  1959                           ;memory.c: 146: EECON1bits.CFGS = 0;
  1960  0005FC  9CA6               	bcf	4006,6,c	;volatile
  1961                           
  1962                           ;memory.c: 147: EECON1bits.EEPGD = 0;
  1963  0005FE  9EA6               	bcf	4006,7,c	;volatile
  1964                           
  1965                           ;memory.c: 148: EECON1bits.RD = 1;
  1966  000600  80A6               	bsf	4006,0,c	;volatile
  1967                           
  1968                           ;memory.c: 149: __nop();
  1969  000602  F000               	nop	
  1970                           
  1971                           ;memory.c: 150: __nop();
  1972  000604  F000               	nop	
  1973                           
  1974                           ;memory.c: 152: return (EEDATA);
  1975  000606  50A8               	movf	4008,w,c	;volatile
  1976  000608  0012               	return	
  1977  00060A                     __end_of_DATAEE_ReadByte:
  1978                           	opt stack 0
  1979                           tblptru	equ	0xFF8
  1980                           prodl	equ	0xFF3
  1981                           intcon	equ	0xFF2
  1982                           intcon2	equ	0xFF1
  1983                           postinc0	equ	0xFEE
  1984                           wreg	equ	0xFE8
  1985                           indf2	equ	0xFDF
  1986                           postinc2	equ	0xFDE
  1987                           postdec2	equ	0xFDD
  1988                           fsr2h	equ	0xFDA
  1989                           fsr2l	equ	0xFD9
  1990                           status	equ	0xFD8
  1991                           
  1992 ;; *************** function _INTERRUPT_InterruptManager *****************
  1993 ;; Defined at:
  1994 ;;		line 67 in file "mcc_generated_files/interrupt_manager.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;		None
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;		None
  1999 ;; Return value:  Size  Location     Type
  2000 ;;		None               void
  2001 ;; Registers used:
  2002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2008 ;;      Params:         0       0       0       0       0       0       0
  2009 ;;      Locals:         0       0       0       0       0       0       0
  2010 ;;      Temps:         14       0       0       0       0       0       0
  2011 ;;      Totals:        14       0       0       0       0       0       0
  2012 ;;Total ram usage:       14 bytes
  2013 ;; Hardware stack levels used:    1
  2014 ;; Hardware stack levels required when called:    1
  2015 ;; This function calls:
  2016 ;;		_ADC_ISR
  2017 ;;		_EUSART1_Receive_ISR
  2018 ;;		_EUSART1_Transmit_ISR
  2019 ;; This function is called by:
  2020 ;;		Interrupt level 2
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	intcode
  2025  000008                     __pintcode:
  2026                           	opt stack 0
  2027  000008                     _INTERRUPT_InterruptManager:
  2028                           	opt stack 24
  2029                           
  2030                           ;incstack = 0
  2031  000008  CFFA F034          	movff	pclath,??_INTERRUPT_InterruptManager
  2032  00000C  CFFB F035          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2033  000010  CFE9 F036          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2034  000014  CFEA F037          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2035  000018  CFE1 F038          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2036  00001C  CFE2 F039          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2037  000020  CFD9 F03A          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2038  000024  CFDA F03B          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2039  000028  CFF3 F03C          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2040  00002C  CFF4 F03D          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2041  000030  CFF6 F03E          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2042  000034  CFF7 F03F          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2043  000038  CFF8 F040          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2044  00003C  CFF5 F041          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2045                           
  2046                           ;interrupt_manager.c: 70: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  2047  000040  BA9D               	btfsc	3997,5,c	;volatile
  2048  000042  AA9E               	btfss	3998,5,c	;volatile
  2049  000044  D003               	goto	i2l158
  2050                           
  2051                           ;interrupt_manager.c: 71: {
  2052                           ;interrupt_manager.c: 72: EUSART1_Receive_ISR();
  2053  000046  ECA6  F002         	call	_EUSART1_Receive_ISR	;wreg free
  2054                           
  2055                           ;interrupt_manager.c: 73: }
  2056  00004A  D00B               	goto	i2l164
  2057  00004C                     i2l158:
  2058                           
  2059                           ;interrupt_manager.c: 74: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  2060  00004C  B89D               	btfsc	3997,4,c	;volatile
  2061  00004E  A89E               	btfss	3998,4,c	;volatile
  2062  000050  D003               	goto	i2l160
  2063                           
  2064                           ;interrupt_manager.c: 75: {
  2065                           ;interrupt_manager.c: 76: EUSART1_Transmit_ISR();
  2066  000052  EC8E  F002         	call	_EUSART1_Transmit_ISR	;wreg free
  2067                           
  2068                           ;interrupt_manager.c: 77: }
  2069  000056  D005               	goto	i2l164
  2070  000058                     i2l160:
  2071                           
  2072                           ;interrupt_manager.c: 78: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  2073  000058  BC9D               	btfsc	3997,6,c	;volatile
  2074  00005A  AC9E               	btfss	3998,6,c	;volatile
  2075  00005C  D002               	goto	i2l164
  2076                           
  2077                           ;interrupt_manager.c: 79: {
  2078                           ;interrupt_manager.c: 80: ADC_ISR();
  2079  00005E  EC14  F003         	call	_ADC_ISR	;wreg free
  2080  000062                     i2l164:
  2081  000062  C041  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  2082  000066  C040  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  2083  00006A  C03F  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  2084  00006E  C03E  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  2085  000072  C03D  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  2086  000076  C03C  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  2087  00007A  C03B  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  2088  00007E  C03A  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  2089  000082  C039  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  2090  000086  C038  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  2091  00008A  C037  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  2092  00008E  C036  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  2093  000092  C035  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2094  000096  C034  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2095  00009A  0011               	retfie		f
  2096  00009C                     __end_of_INTERRUPT_InterruptManager:
  2097                           	opt stack 0
  2098                           pclatu	equ	0xFFB
  2099                           pclath	equ	0xFFA
  2100                           tblptru	equ	0xFF8
  2101                           tblptrh	equ	0xFF7
  2102                           tblptrl	equ	0xFF6
  2103                           tablat	equ	0xFF5
  2104                           prodh	equ	0xFF4
  2105                           prodl	equ	0xFF3
  2106                           intcon	equ	0xFF2
  2107                           intcon2	equ	0xFF1
  2108                           postinc0	equ	0xFEE
  2109                           fsr0h	equ	0xFEA
  2110                           fsr0l	equ	0xFE9
  2111                           wreg	equ	0xFE8
  2112                           fsr1h	equ	0xFE2
  2113                           fsr1l	equ	0xFE1
  2114                           indf2	equ	0xFDF
  2115                           postinc2	equ	0xFDE
  2116                           postdec2	equ	0xFDD
  2117                           fsr2h	equ	0xFDA
  2118                           fsr2l	equ	0xFD9
  2119                           status	equ	0xFD8
  2120                           
  2121 ;; *************** function _EUSART1_Transmit_ISR *****************
  2122 ;; Defined at:
  2123 ;;		line 163 in file "mcc_generated_files/eusart1.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;		None               void
  2130 ;; Registers used:
  2131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2137 ;;      Params:         0       0       0       0       0       0       0
  2138 ;;      Locals:         0       0       0       0       0       0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0
  2140 ;;      Totals:         0       0       0       0       0       0       0
  2141 ;;Total ram usage:        0 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_INTERRUPT_InterruptManager
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text18
  2151  00051C                     __ptext18:
  2152                           	opt stack 0
  2153  00051C                     _EUSART1_Transmit_ISR:
  2154                           	opt stack 24
  2155                           
  2156                           ;eusart1.c: 167: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  2157                           
  2158                           ;incstack = 0
  2159  00051C  0E08               	movlw	8
  2160  00051E  5C51               	subwf	_eusart1TxBufferRemaining,w,c	;volatile
  2161  000520  B0D8               	btfsc	status,0,c
  2162  000522  D012               	goto	i2l93
  2163                           
  2164                           ;eusart1.c: 168: {
  2165                           ;eusart1.c: 169: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  2166  000524  5033               	movf	_eusart1TxTail,w,c
  2167  000526  0D01               	mullw	1
  2168  000528  0E25               	movlw	low _eusart1TxBuffer
  2169  00052A  24F3               	addwf	prodl,w,c
  2170  00052C  6ED9               	movwf	fsr2l,c
  2171  00052E  0E00               	movlw	high _eusart1TxBuffer
  2172  000530  20F4               	addwfc	prodh,w,c
  2173  000532  6EDA               	movwf	fsr2h,c
  2174  000534  50DF               	movf	indf2,w,c
  2175  000536  6EAD               	movwf	4013,c	;volatile
  2176  000538  2A33               	incf	_eusart1TxTail,f,c
  2177                           
  2178                           ;eusart1.c: 170: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  2179  00053A  0E07               	movlw	7
  2180  00053C  6433               	cpfsgt	_eusart1TxTail,c
  2181  00053E  D002               	goto	i2l1206
  2182                           
  2183                           ;eusart1.c: 171: {
  2184                           ;eusart1.c: 172: eusart1TxTail = 0;
  2185  000540  0E00               	movlw	0
  2186  000542  6E33               	movwf	_eusart1TxTail,c
  2187  000544                     i2l1206:
  2188                           
  2189                           ;eusart1.c: 173: }
  2190                           ;eusart1.c: 174: eusart1TxBufferRemaining++;
  2191  000544  2A51               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  2192                           
  2193                           ;eusart1.c: 175: }
  2194  000546  0012               	return	
  2195  000548                     i2l93:
  2196                           
  2197                           ;eusart1.c: 176: else
  2198                           ;eusart1.c: 177: {
  2199                           ;eusart1.c: 178: PIE1bits.TX1IE = 0;
  2200  000548  989D               	bcf	3997,4,c	;volatile
  2201  00054A  0012               	return	
  2202  00054C                     __end_of_EUSART1_Transmit_ISR:
  2203                           	opt stack 0
  2204                           pclatu	equ	0xFFB
  2205                           pclath	equ	0xFFA
  2206                           tblptru	equ	0xFF8
  2207                           tblptrh	equ	0xFF7
  2208                           tblptrl	equ	0xFF6
  2209                           tablat	equ	0xFF5
  2210                           prodh	equ	0xFF4
  2211                           prodl	equ	0xFF3
  2212                           intcon	equ	0xFF2
  2213                           intcon2	equ	0xFF1
  2214                           postinc0	equ	0xFEE
  2215                           fsr0h	equ	0xFEA
  2216                           fsr0l	equ	0xFE9
  2217                           wreg	equ	0xFE8
  2218                           fsr1h	equ	0xFE2
  2219                           fsr1l	equ	0xFE1
  2220                           indf2	equ	0xFDF
  2221                           postinc2	equ	0xFDE
  2222                           postdec2	equ	0xFDD
  2223                           fsr2h	equ	0xFDA
  2224                           fsr2l	equ	0xFD9
  2225                           status	equ	0xFD8
  2226                           
  2227 ;; *************** function _EUSART1_Receive_ISR *****************
  2228 ;; Defined at:
  2229 ;;		line 182 in file "mcc_generated_files/eusart1.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;		None
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;		None
  2234 ;; Return value:  Size  Location     Type
  2235 ;;		None               void
  2236 ;; Registers used:
  2237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2243 ;;      Params:         0       0       0       0       0       0       0
  2244 ;;      Locals:         0       0       0       0       0       0       0
  2245 ;;      Temps:          0       0       0       0       0       0       0
  2246 ;;      Totals:         0       0       0       0       0       0       0
  2247 ;;Total ram usage:        0 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; This function calls:
  2250 ;;		Nothing
  2251 ;; This function is called by:
  2252 ;;		_INTERRUPT_InterruptManager
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           	psect	text19
  2257  00054C                     __ptext19:
  2258                           	opt stack 0
  2259  00054C                     _EUSART1_Receive_ISR:
  2260                           	opt stack 24
  2261                           
  2262                           ;eusart1.c: 184: if(1 == RC1STAbits.OERR)
  2263                           
  2264                           ;incstack = 0
  2265  00054C  A2AB               	btfss	4011,1,c	;volatile
  2266  00054E  D002               	goto	i2l1620
  2267                           
  2268                           ;eusart1.c: 185: {
  2269                           ;eusart1.c: 188: RC1STAbits.CREN = 0;
  2270  000550  98AB               	bcf	4011,4,c	;volatile
  2271                           
  2272                           ;eusart1.c: 189: RC1STAbits.CREN = 1;
  2273  000552  88AB               	bsf	4011,4,c	;volatile
  2274  000554                     i2l1620:
  2275                           
  2276                           ;eusart1.c: 190: }
  2277                           ;eusart1.c: 193: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  2278  000554  5030               	movf	_eusart1RxHead,w,c
  2279  000556  0D01               	mullw	1
  2280  000558  0100               	movlb	0	; () banked
  2281  00055A  0E90               	movlw	low _eusart1RxBuffer
  2282  00055C  24F3               	addwf	prodl,w,c
  2283  00055E  6ED9               	movwf	fsr2l,c
  2284  000560  0100               	movlb	0	; () banked
  2285  000562  0E00               	movlw	high _eusart1RxBuffer
  2286  000564  20F4               	addwfc	prodh,w,c
  2287  000566  6EDA               	movwf	fsr2h,c
  2288  000568  CFAE FFDF          	movff	4014,indf2	;volatile
  2289                           
  2290                           ; BSR set to: 0
  2291  00056C  2A30               	incf	_eusart1RxHead,f,c
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;eusart1.c: 194: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  2295  00056E  0E1F               	movlw	31
  2296  000570  6430               	cpfsgt	_eusart1RxHead,c
  2297  000572  D002               	goto	i2l1628
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;eusart1.c: 195: {
  2301                           ;eusart1.c: 196: eusart1RxHead = 0;
  2302  000574  0E00               	movlw	0
  2303  000576  6E30               	movwf	_eusart1RxHead,c
  2304  000578                     i2l1628:
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;eusart1.c: 197: }
  2308                           ;eusart1.c: 198: eusart1RxCount++;
  2309  000578  2A2F               	incf	_eusart1RxCount,f,c	;volatile
  2310                           
  2311                           ; BSR set to: 0
  2312  00057A  0012               	return	
  2313  00057C                     __end_of_EUSART1_Receive_ISR:
  2314                           	opt stack 0
  2315                           pclatu	equ	0xFFB
  2316                           pclath	equ	0xFFA
  2317                           tblptru	equ	0xFF8
  2318                           tblptrh	equ	0xFF7
  2319                           tblptrl	equ	0xFF6
  2320                           tablat	equ	0xFF5
  2321                           prodh	equ	0xFF4
  2322                           prodl	equ	0xFF3
  2323                           intcon	equ	0xFF2
  2324                           intcon2	equ	0xFF1
  2325                           postinc0	equ	0xFEE
  2326                           fsr0h	equ	0xFEA
  2327                           fsr0l	equ	0xFE9
  2328                           wreg	equ	0xFE8
  2329                           fsr1h	equ	0xFE2
  2330                           fsr1l	equ	0xFE1
  2331                           indf2	equ	0xFDF
  2332                           postinc2	equ	0xFDE
  2333                           postdec2	equ	0xFDD
  2334                           fsr2h	equ	0xFDA
  2335                           fsr2l	equ	0xFD9
  2336                           status	equ	0xFD8
  2337                           
  2338 ;; *************** function _ADC_ISR *****************
  2339 ;; Defined at:
  2340 ;;		line 128 in file "mcc_generated_files/adc.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;		None
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;		None
  2345 ;; Return value:  Size  Location     Type
  2346 ;;		None               void
  2347 ;; Registers used:
  2348 ;;		None
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2354 ;;      Params:         0       0       0       0       0       0       0
  2355 ;;      Locals:         0       0       0       0       0       0       0
  2356 ;;      Temps:          0       0       0       0       0       0       0
  2357 ;;      Totals:         0       0       0       0       0       0       0
  2358 ;;Total ram usage:        0 bytes
  2359 ;; Hardware stack levels used:    1
  2360 ;; This function calls:
  2361 ;;		Nothing
  2362 ;; This function is called by:
  2363 ;;		_INTERRUPT_InterruptManager
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           	psect	text20
  2368  000628                     __ptext20:
  2369                           	opt stack 0
  2370  000628                     _ADC_ISR:
  2371                           	opt stack 24
  2372                           
  2373                           ;adc.c: 131: PIR1bits.ADIF = 0;
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;incstack = 0
  2377  000628  9C9E               	bcf	3998,6,c	;volatile
  2378  00062A  0012               	return	
  2379  00062C                     __end_of_ADC_ISR:
  2380                           	opt stack 0
  2381  0000                     pclatu	equ	0xFFB
  2382                           pclath	equ	0xFFA
  2383                           tblptru	equ	0xFF8
  2384                           tblptrh	equ	0xFF7
  2385                           tblptrl	equ	0xFF6
  2386                           tablat	equ	0xFF5
  2387                           prodh	equ	0xFF4
  2388                           prodl	equ	0xFF3
  2389                           intcon	equ	0xFF2
  2390                           intcon2	equ	0xFF1
  2391                           postinc0	equ	0xFEE
  2392                           fsr0h	equ	0xFEA
  2393                           fsr0l	equ	0xFE9
  2394                           wreg	equ	0xFE8
  2395                           fsr1h	equ	0xFE2
  2396                           fsr1l	equ	0xFE1
  2397                           indf2	equ	0xFDF
  2398                           postinc2	equ	0xFDE
  2399                           postdec2	equ	0xFDD
  2400                           fsr2h	equ	0xFDA
  2401                           fsr2l	equ	0xFD9
  2402                           status	equ	0xFD8
  2403                           pclatu	equ	0xFFB
  2404                           pclath	equ	0xFFA
  2405                           tblptru	equ	0xFF8
  2406                           tblptrh	equ	0xFF7
  2407                           tblptrl	equ	0xFF6
  2408                           tablat	equ	0xFF5
  2409                           prodh	equ	0xFF4
  2410                           prodl	equ	0xFF3
  2411                           intcon	equ	0xFF2
  2412                           intcon2	equ	0xFF1
  2413                           postinc0	equ	0xFEE
  2414                           fsr0h	equ	0xFEA
  2415                           fsr0l	equ	0xFE9
  2416                           wreg	equ	0xFE8
  2417                           fsr1h	equ	0xFE2
  2418                           fsr1l	equ	0xFE1
  2419                           indf2	equ	0xFDF
  2420                           postinc2	equ	0xFDE
  2421                           postdec2	equ	0xFDD
  2422                           fsr2h	equ	0xFDA
  2423                           fsr2l	equ	0xFD9
  2424                           status	equ	0xFD8
  2425                           
  2426                           	psect	rparam
  2427  0000                     pclatu	equ	0xFFB
  2428                           pclath	equ	0xFFA
  2429                           tblptru	equ	0xFF8
  2430                           tblptrh	equ	0xFF7
  2431                           tblptrl	equ	0xFF6
  2432                           tablat	equ	0xFF5
  2433                           prodh	equ	0xFF4
  2434                           prodl	equ	0xFF3
  2435                           intcon	equ	0xFF2
  2436                           intcon2	equ	0xFF1
  2437                           postinc0	equ	0xFEE
  2438                           fsr0h	equ	0xFEA
  2439                           fsr0l	equ	0xFE9
  2440                           wreg	equ	0xFE8
  2441                           fsr1h	equ	0xFE2
  2442                           fsr1l	equ	0xFE1
  2443                           indf2	equ	0xFDF
  2444                           postinc2	equ	0xFDE
  2445                           postdec2	equ	0xFDD
  2446                           fsr2h	equ	0xFDA
  2447                           fsr2l	equ	0xFD9
  2448                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         143
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     29      81
    BANK0           160      4      96
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _Update->_writeRegisters
    _Clear595->_writeRegisters
    _writeRegisters->_Delay
    _EnableSlavePower->_SetPin595
    _ComputeStorageData->_DATAEE_ReadByte

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _StartUp595->_Clear595

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8816
                              _Delay
                         _PDUStartup
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PDUStartup                                           0     0      0    7978
                 _ComputeStorageData
                   _EnableSlavePower
                         _StartUp595
                             _Update
 ---------------------------------------------------------------------------------
 (2) _Update                                               0     0      0    1005
                     _writeRegisters
 ---------------------------------------------------------------------------------
 (2) _StartUp595                                           0     0      0    1942
                           _Clear595
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Clear595                                             4     4      0    1104
                                              0 BANK0      4     4      0
                     _writeRegisters
 ---------------------------------------------------------------------------------
 (3) _writeRegisters                                       6     6      0    1005
                                             23 COMRAM     6     6      0
                              _Delay
 ---------------------------------------------------------------------------------
 (4) _Delay                                                9     5      4     838
                                             14 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) _EnableSlavePower                                     3     1      2    4956
                                             24 COMRAM     3     1      2
                          _SetPin595
 ---------------------------------------------------------------------------------
 (3) _SetPin595                                           10     4      6    4674
                                             14 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (2) _ComputeStorageData                                   4     4      0      75
                                             15 COMRAM     4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay
   _PDUStartup
     _ComputeStorageData
       _DATAEE_ReadByte
     _EnableSlavePower
       _SetPin595
     _StartUp595
       _Clear595
         _writeRegisters
           _Delay
       _Delay
     _Update
       _writeRegisters
         _Delay
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      4      60       4       60.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1D      51       1       85.3%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B1       9        0.0%
DATA                 0      0      B1      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun May 31 05:04:10 2015

           _eusart1TxBufferRemaining 0051                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                                  l383 023E  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                                u727 0474                      _timer1ReloadVal 002D  
                    __end_of_ADC_ISR 062C                                  prod 000FF3  
                                wreg 000FE8                         __CFG_LVP$OFF 000000  
                               l1182 0278                                 l1600 00C2  
                               l1602 00E0                                 l1604 00FE  
                               l1612 0158                                 l1606 011C  
                               l1608 013A                                 l1740 046E  
                               l1820 04EE                                 l1744 0488  
                               l1764 0202                                 l1598 00A4  
                               l1766 020A                                 l1788 03B6  
                               _LATA 000F89                                 _LATB 000F8A  
                               _LATC 000F8B                                 _LATD 000F8C  
                               _LATE 000F8D                                 i2l93 0548  
                               _TMR1 000FCE                                 _WPUB 000F61  
                               _data 0019                                 _main 04E2  
           __end_of_EnableSlavePower 0180                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                      __CFG_BORV$190 000000                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 009C                        __CFG_IESO$OFF 000000  
     __size_of_OSCILLATOR_Initialize 000E        __end_of_OSCILLATOR_Initialize 0618  
                              ?_main 0034                                _EEADR 000FA9  
                              _T1CON 000FCD                                _LATB0 007C50  
                              _LATA3 007C4B                                _LATD4 007C64  
                              _LATD5 007C65                                _LATD6 007C66  
                              _LATD7 007C67                       __CFG_DEBUG$OFF 000000  
                              i2l160 0058                                i2l164 0062  
                              i2l158 004C                          ?_PDUStartup 0034  
                              _TMR1H 000FCF                                _TMR1L 000FCE  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                                _TRISD 000F95  
                              _TRISE 000F96                                _Delay 045C  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
               _EUSART1_Transmit_ISR 051C                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                   ??_writeRegisters 004B                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                    _DATAEE_ReadByte 05F6                       __CFG_EBTRB$OFF 000000  
                 __CFG_MCLRE$EXTMCLR 000000                                tablat 000FF5  
                              status 000FD8                     __end_of_Clear595 03BC  
                     __CFG_HFOFST$ON 000000                       __CFG_PBADEN$ON 000000  
                    __initialization 05A6           __end_of_EUSART1_Initialize 04E2  
                       __end_of_main 051C                           _CurrentADC 0001  
                          ??_ADC_ISR 0034          ?_INTERRUPT_InterruptManager 0034  
                             ??_main 0051                        __activetblptr 000002  
                             ?_Delay 0042                ?_EUSART1_Transmit_ISR 0034  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               _EEDATA 000FA8  
                             _EECON2 000FA7                               _ANSELA 000F38  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             _ANSELD 000F3B                               _ANSELE 000F3C  
                             _T1GCON 000FCC                               _RC1STA 000FAB  
                             i2l1206 0544                               i2l1620 0554  
                             Delay@i 0047                               i2l1628 0578  
                     __CFG_WDTEN$OFF 000000                               _TABLAT 000FF5  
                             _RCREG1 000FAE                               _OSCCON 000FD3  
                             _SPBRG1 000FAF                               _TX1STA 000FAC  
                             _TXREG1 000FAD                  __size_of_PDUStartup 002A  
                     __CFG_XINST$OFF 000000                               _Update 0622  
                 __size_of_SetPin595 0052                       __CFG_STVREN$ON 000000  
                             clear_0 05AC                               clear_1 05B8  
            __end_of_DATAEE_ReadByte 060A                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                         _StartUp595 02FE                      _eusart1RxBuffer 0090  
      __size_of_INTERRUPT_Initialize 000A                      _eusart1TxBuffer 0025  
                  _SYSTEM_Initialize 05E0                           __accesstop 0060  
            __end_of__initialization 05BE                   ?_SYSTEM_Initialize 0034  
                      __end_of_Delay 04A6                       __pcstackCOMRAM 0034  
                ??_SYSTEM_Initialize 0042          __size_of_ComputeStorageData 00B8  
                        _Currentcomp 000D               ??_EUSART1_Transmit_ISR 0034  
                          ?_Clear595 0034                              ??_Delay 0046  
        __end_of_EUSART1_Receive_ISR 057C                    __end_of_SetPin595 040E  
          __end_of_SYSTEM_Initialize 05F6                        _eusart1RxHead 0030  
                      _eusart1TxHead 0032                        _eusart1RxTail 0031  
                         __pbssBANK0 0060                        _eusart1TxTail 0033  
                    __CFG_PLLCFG$OFF 000000                           __pnvCOMRAM 0051  
                  ?_EnableSlavePower 004C                   ??_EnableSlavePower 004E  
                 __CFG_CCP2MX$PORTC1 000000                              ?_Update 0034  
                 __CFG_CCP3MX$PORTB5 000000                              _ADC_ISR 0628  
            __size_of_ADC_Initialize 0018                     ?_DATAEE_ReadByte 0034  
                       ??_PDUStartup 0051                           ??_Clear595 00BC  
                            _OSCCON2 000FD2                              _TBLPTRH 000FF7  
                            _TBLPTRL 000FF6                              _TBLPTRU 000FF8  
                        ?_StartUp595 0034                    __CFG_PRICLKEN$OFF 000000  
                            _OSCTUNE 000F9B                              _SPBRGH1 000FB0  
                            _Current 00B0                      __CFG_PWRTEN$OFF 000000  
                            __Hparam 0000                              __Lparam 0000  
                 __end_of_PDUStartup 05A6                      __size_of_Update 0006  
                            __pcinit 05A6                              __ramtop 0600  
                            __ptext0 04E2                              __ptext1 05E0  
                            __ptext2 040E                              __ptext3 060A  
                            __ptext4 0618                              __ptext5 04A6  
                            __ptext6 05C8                              __ptext7 057C  
                            __ptext8 0622                              __ptext9 02FE  
                          _T1CONbits 000FCD                _OSCILLATOR_Initialize 060A  
                 _EUSART1_Initialize 04A6             ??_PIN_MANAGER_Initialize 0042  
                          Clear595@i 00BE           __size_of_SYSTEM_Initialize 0016  
               end_of_initialization 05BE                            Delay@wait 0042  
                ?_EUSART1_Initialize 0034                        __Lmediumconst 0000  
                            postdec2 000FDD                  __size_of_StartUp595 0060  
                            postinc0 000FEE                              postinc2 000FDE  
                       SetPin595@Reg 0042                 ??_EUSART1_Initialize 0042  
                       SetPin595@pin 0044              __size_of_writeRegisters 00C6  
       __end_of_INTERRUPT_Initialize 0622                       __end_of_Update 0628  
                     _ADC_Initialize 05C8               ?_OSCILLATOR_Initialize 0034  
                start_initialization 05A6      __size_of_PIN_MANAGER_Initialize 004E  
              EnableSlavePower@slave 004E                    __size_of_Clear595 005E  
                          _SetPin595 03BC                  DATAEE_ReadByte@bAdd 0042  
                           ??_Update 0051               __end_of_ADC_Initialize 05E0  
         __end_of_ComputeStorageData 02FE                             ?_ADC_ISR 0034  
          __size_of_EnableSlavePower 00E0                       _eusart1RxCount 002F  
                        __pbssCOMRAM 0001        __size_of_EUSART1_Transmit_ISR 0030  
                      __pcstackBANK0 00BC                         ??_StartUp595 0051  
       __size_of_EUSART1_Receive_ISR 0030                           ?_SetPin595 0042  
             _PIN_MANAGER_Initialize 040E                            __pintcode 0008  
                 __end_of_StartUp595 035E                      ?_ADC_Initialize 0034  
       ??_INTERRUPT_InterruptManager 0034                             _BAUD1CON 000FB8  
                     __size_of_Delay 004A             __size_of_DATAEE_ReadByte 0014  
               _INTERRUPT_Initialize 0618                       _writeRegisters 0180  
                          _registers 0060                             _IPR1bits 000F9F  
                           _PIE1bits 000F9D  __size_of_INTERRUPT_InterruptManager 0094  
                           _PIR1bits 000F9E                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                     __size_of_ADC_ISR 0004  
                         _ADCON0bits 000FC2                             _Clear595 035E  
                        _INTCON2bits 000FF1                ?_INTERRUPT_Initialize 0034  
             __end_of_writeRegisters 0246                          ??_SetPin595 0048  
               EnableSlavePower@onof 004C                           _EECON1bits 000FA6  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000                    __CFG_P2BMX$PORTD2 000000  
            ??_OSCILLATOR_Initialize 0042          __size_of_EUSART1_Initialize 003C  
                   _EnableSlavePower 00A0                             __ptext10 035E  
                           __ptext11 0180                             __ptext20 0628  
                           __ptext12 045C                             __ptext13 00A0  
                         _T1GCONbits 000FCC                             __ptext14 03BC  
                           __ptext15 0246                             __ptext16 05F6  
                           __ptext18 051C                             __ptext19 054C  
                    ?_writeRegisters 0034                        __size_of_main 003A  
                  ??_DATAEE_ReadByte 0042                           _RC1STAbits 000FAB  
                  writeRegisters@val 004D   __end_of_INTERRUPT_InterruptManager 009C  
         _INTERRUPT_InterruptManager 0008                  _EUSART1_Receive_ISR 054C  
                         _INTCONbits 000FF2                  ComputeStorageData@i 0045  
                 _ComputeStorageData 0246               ??_INTERRUPT_Initialize 0042  
                           intlevel2 0000                 ?_EUSART1_Receive_ISR 0034  
                ?_ComputeStorageData 0034              ?_PIN_MANAGER_Initialize 0034  
                     SetPin595@value 0046         __end_of_EUSART1_Transmit_ISR 054C  
                   ??_ADC_Initialize 0042                 ??_ComputeStorageData 0043  
                         _PDUStartup 057C                    __CFG_T3CMX$PORTC0 000000  
                    writeRegisters@i 004F                ??_EUSART1_Receive_ISR 0034  
     __end_of_PIN_MANAGER_Initialize 045C                    __CFG_FOSC$INTIO67 000000  
