

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu May 28 23:55:39 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37  0000                     _TMR1	set	4046
    38  0000                     _ADCON0	set	4034
    39  0000                     _ADCON0bits	set	4034
    40  0000                     _ADCON1	set	4033
    41  0000                     _ADCON2	set	4032
    42  0000                     _ADRESH	set	4036
    43  0000                     _ADRESL	set	4035
    44  0000                     _ANSELA	set	3896
    45  0000                     _ANSELB	set	3897
    46  0000                     _ANSELC	set	3898
    47  0000                     _ANSELD	set	3899
    48  0000                     _ANSELE	set	3900
    49  0000                     _BAUD1CON	set	4024
    50  0000                     _EEADR	set	4009
    51  0000                     _EECON1bits	set	4006
    52  0000                     _EECON2	set	4007
    53  0000                     _EEDATA	set	4008
    54  0000                     _INTCON2bits	set	4081
    55  0000                     _INTCONbits	set	4082
    56  0000                     _IPR1bits	set	3999
    57  0000                     _LATA	set	3977
    58  0000                     _LATB	set	3978
    59  0000                     _LATC	set	3979
    60  0000                     _LATD	set	3980
    61  0000                     _LATE	set	3981
    62  0000                     _OSCCON	set	4051
    63  0000                     _OSCCON2	set	4050
    64  0000                     _OSCTUNE	set	3995
    65  0000                     _PIE1bits	set	3997
    66  0000                     _PIR1bits	set	3998
    67  0000                     _RC1STA	set	4011
    68  0000                     _RC1STAbits	set	4011
    69  0000                     _RCONbits	set	4048
    70  0000                     _RCREG1	set	4014
    71  0000                     _SPBRG1	set	4015
    72  0000                     _SPBRGH1	set	4016
    73  0000                     _T1CON	set	4045
    74  0000                     _T1CONbits	set	4045
    75  0000                     _T1GCON	set	4044
    76  0000                     _T1GCONbits	set	4044
    77  0000                     _TABLAT	set	4085
    78  0000                     _TBLPTRH	set	4087
    79  0000                     _TBLPTRL	set	4086
    80  0000                     _TBLPTRU	set	4088
    81  0000                     _TMR1H	set	4047
    82  0000                     _TMR1L	set	4046
    83  0000                     _TRISA	set	3986
    84  0000                     _TRISB	set	3987
    85  0000                     _TRISC	set	3988
    86  0000                     _TRISD	set	3989
    87  0000                     _TRISE	set	3990
    88  0000                     _TX1STA	set	4012
    89  0000                     _TXREG1	set	4013
    90  0000                     _WPUB	set	3937
    91  0000                     _LATA3	set	31819
    92  0000                     _LATB0	set	31824
    93  0000                     _LATD4	set	31844
    94  0000                     _LATD5	set	31845
    95  0000                     _LATD6	set	31846
    96  0000                     _LATD7	set	31847
    97                           
    98                           	psect	nvCOMRAM
    99  00004C                     __pnvCOMRAM:
   100                           	opt stack 0
   101  00004C                     _timer1ReloadVal:
   102                           	opt stack 0
   103  00004C                     	ds	2
   104  00004E                     _eusart1TxBufferRemaining:
   105                           	opt stack 0
   106  00004E                     	ds	1
   107                           
   108                           ; #config settings
   109  0000                     
   110                           	psect	cinit
   111  0005EA                     __pcinit:
   112                           	opt stack 0
   113  0005EA                     start_initialization:
   114                           	opt stack 0
   115  0005EA                     __initialization:
   116                           	opt stack 0
   117                           
   118                           ; Clear objects allocated to BANK0 (92 bytes)
   119  0005EA  EE00  F060         	lfsr	0,__pbssBANK0
   120  0005EE  0E5C               	movlw	92
   121  0005F0                     clear_0:
   122  0005F0  6AEE               	clrf	postinc0,c
   123  0005F2  06E8               	decf	wreg,f,c
   124  0005F4  E1FD               	bnz	clear_0
   125                           
   126                           ; Clear objects allocated to COMRAM (49 bytes)
   127  0005F6  EE00  F001         	lfsr	0,__pbssCOMRAM
   128  0005FA  0E31               	movlw	49
   129  0005FC                     clear_1:
   130  0005FC  6AEE               	clrf	postinc0,c
   131  0005FE  06E8               	decf	wreg,f,c
   132  000600  E1FD               	bnz	clear_1
   133  000602                     end_of_initialization:
   134                           	opt stack 0
   135  000602                     __end_of__initialization:
   136                           	opt stack 0
   137  000602  0E00               	movlw	low (__Lmediumconst shr (0+16))
   138  000604  6EF8               	movwf	tblptru,c
   139  000606  0100               	movlb	0
   140  000608  EF93  F002         	goto	_main	;jump to C main() function
   141                           tblptru	equ	0xFF8
   142                           postinc0	equ	0xFEE
   143                           wreg	equ	0xFE8
   144                           
   145                           	psect	bssCOMRAM
   146  000001                     __pbssCOMRAM:
   147                           	opt stack 0
   148  000001                     _CurrentADC:
   149                           	opt stack 0
   150  000001                     	ds	12
   151  00000D                     _Currentcomp:
   152                           	opt stack 0
   153  00000D                     	ds	12
   154  000019                     _data:
   155                           	opt stack 0
   156  000019                     	ds	12
   157  000025                     _eusart1TxBuffer:
   158                           	opt stack 0
   159  000025                     	ds	8
   160  00002D                     _eusart1RxCount:
   161                           	opt stack 0
   162  00002D                     	ds	1
   163  00002E                     _eusart1RxHead:
   164                           	opt stack 0
   165  00002E                     	ds	1
   166  00002F                     _eusart1RxTail:
   167                           	opt stack 0
   168  00002F                     	ds	1
   169  000030                     _eusart1TxHead:
   170                           	opt stack 0
   171  000030                     	ds	1
   172  000031                     _eusart1TxTail:
   173                           	opt stack 0
   174  000031                     	ds	1
   175                           tblptru	equ	0xFF8
   176                           postinc0	equ	0xFEE
   177                           wreg	equ	0xFE8
   178                           
   179                           	psect	bssBANK0
   180  000060                     __pbssBANK0:
   181                           	opt stack 0
   182  000060                     _registers:
   183                           	opt stack 0
   184  000060                     	ds	48
   185  000090                     _eusart1RxBuffer:
   186                           	opt stack 0
   187  000090                     	ds	32
   188  0000B0                     _Current:
   189                           	opt stack 0
   190  0000B0                     	ds	12
   191                           tblptru	equ	0xFF8
   192                           postinc0	equ	0xFEE
   193                           wreg	equ	0xFE8
   194                           
   195                           	psect	cstackBANK0
   196  0000BC                     __pcstackBANK0:
   197                           	opt stack 0
   198  0000BC                     ??_writeRegisters:
   199  0000BC                     ??_SetPin595:
   200                           
   201                           ; 0 bytes @ 0x0
   202  0000BC                     	ds	2
   203  0000BE                     writeRegisters@val:
   204                           	opt stack 0
   205                           
   206                           ; 2 bytes @ 0x2
   207  0000BE                     	ds	2
   208  0000C0                     writeRegisters@i:
   209                           	opt stack 0
   210                           
   211                           ; 2 bytes @ 0x4
   212  0000C0                     	ds	2
   213  0000C2                     ??_Clear595:
   214                           
   215                           ; 0 bytes @ 0x6
   216  0000C2                     	ds	2
   217  0000C4                     Clear595@i:
   218                           	opt stack 0
   219                           
   220                           ; 2 bytes @ 0x8
   221  0000C4                     	ds	2
   222                           tblptru	equ	0xFF8
   223                           postinc0	equ	0xFEE
   224                           wreg	equ	0xFE8
   225                           
   226                           	psect	cstackCOMRAM
   227  000032                     __pcstackCOMRAM:
   228                           	opt stack 0
   229  000032                     ??_TMR1_ISR:
   230  000032                     
   231                           ; 1 bytes @ 0x0
   232  000032                     	ds	3
   233  000035                     ??_INTERRUPT_InterruptManager:
   234                           
   235                           ; 0 bytes @ 0x3
   236  000035                     	ds	14
   237  000043                     DATAEE_ReadByte@bAdd:
   238                           	opt stack 0
   239  000043                     SetPin595@Reg:
   240                           	opt stack 0
   241  000043                     Delay@wait:
   242                           	opt stack 0
   243                           
   244                           ; 4 bytes @ 0x11
   245  000043                     	ds	1
   246  000044                     ??_ComputeStorageData:
   247                           
   248                           ; 0 bytes @ 0x12
   249  000044                     	ds	1
   250  000045                     SetPin595@pin:
   251                           	opt stack 0
   252                           
   253                           ; 2 bytes @ 0x13
   254  000045                     	ds	1
   255  000046                     ComputeStorageData@i:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0x14
   259  000046                     	ds	1
   260  000047                     ??_Delay:
   261  000047                     SetPin595@value:
   262                           	opt stack 0
   263                           
   264                           ; 2 bytes @ 0x15
   265  000047                     	ds	1
   266  000048                     Delay@i:
   267                           	opt stack 0
   268                           
   269                           ; 4 bytes @ 0x16
   270  000048                     	ds	1
   271  000049                     EnableSlavePower@onof:
   272                           	opt stack 0
   273                           
   274                           ; 2 bytes @ 0x17
   275  000049                     	ds	2
   276  00004B                     EnableSlavePower@slave:
   277                           	opt stack 0
   278                           
   279                           ; 1 bytes @ 0x19
   280  00004B                     	ds	1
   281  00004C                     tblptru	equ	0xFF8
   282                           postinc0	equ	0xFEE
   283                           wreg	equ	0xFE8
   284                           
   285                           ; 0 bytes @ 0x1A
   286 ;;
   287 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   288 ;;
   289 ;; *************** function _main *****************
   290 ;; Defined at:
   291 ;;		line 8 in file "main.c"
   292 ;; Parameters:    Size  Location     Type
   293 ;;		None
   294 ;; Auto vars:     Size  Location     Type
   295 ;;		None
   296 ;; Return value:  Size  Location     Type
   297 ;;		None               void
   298 ;; Registers used:
   299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
   300 ;; Tracked objects:
   301 ;;		On entry : 0/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   305 ;;      Params:         0       0       0       0       0       0       0
   306 ;;      Locals:         0       0       0       0       0       0       0
   307 ;;      Temps:          0       0       0       0       0       0       0
   308 ;;      Totals:         0       0       0       0       0       0       0
   309 ;;Total ram usage:        0 bytes
   310 ;; Hardware stack levels required when called:    7
   311 ;; This function calls:
   312 ;;		_Delay
   313 ;;		_PDUStartup
   314 ;;		_SYSTEM_Initialize
   315 ;; This function is called by:
   316 ;;		Startup code after reset
   317 ;; This function uses a non-reentrant model
   318 ;;
   319                           
   320                           	psect	text0
   321  000526                     __ptext0:
   322                           	opt stack 0
   323  000526                     _main:
   324                           	opt stack 24
   325                           
   326                           ;main.c: 11: SYSTEM_Initialize();
   327                           
   328                           ;incstack = 0
   329  000526  EC17  F003         	call	_SYSTEM_Initialize	;wreg free
   330                           
   331                           ;main.c: 12: PDUStartup();
   332  00052A  ECE0  F002         	call	_PDUStartup	;wreg free
   333                           
   334                           ;main.c: 30: (INTCONbits.GIE = 1);
   335  00052E  8EF2               	bsf	intcon,7,c	;volatile
   336                           
   337                           ;main.c: 33: (INTCONbits.PEIE = 1);
   338  000530  8CF2               	bsf	intcon,6,c	;volatile
   339  000532                     l1856:
   340                           
   341                           ;main.c: 42: {
   342                           ;main.c: 43: Delay(500);
   343  000532  0EF4               	movlw	244
   344  000534  6E43               	movwf	Delay@wait,c
   345  000536  0E01               	movlw	1
   346  000538  6E44               	movwf	Delay@wait+1,c
   347  00053A  0E00               	movlw	0
   348  00053C  6E45               	movwf	Delay@wait+2,c
   349  00053E  0E00               	movlw	0
   350  000540  6E46               	movwf	Delay@wait+3,c
   351  000542  EC50  F002         	call	_Delay	;wreg free
   352                           
   353                           ;main.c: 44: do { LATA3 = 1; } while(0);
   354  000546  8689               	bsf	3977,3,c	;volatile
   355                           
   356                           ;main.c: 45: Delay(500);
   357  000548  0EF4               	movlw	244
   358  00054A  6E43               	movwf	Delay@wait,c
   359  00054C  0E01               	movlw	1
   360  00054E  6E44               	movwf	Delay@wait+1,c
   361  000550  0E00               	movlw	0
   362  000552  6E45               	movwf	Delay@wait+2,c
   363  000554  0E00               	movlw	0
   364  000556  6E46               	movwf	Delay@wait+3,c
   365  000558  EC50  F002         	call	_Delay	;wreg free
   366                           
   367                           ;main.c: 46: do { LATA3 = 0; } while(0);
   368  00055C  9689               	bcf	3977,3,c	;volatile
   369  00055E  D7E9               	goto	l1856
   370  000560                     __end_of_main:
   371                           	opt stack 0
   372                           tblptru	equ	0xFF8
   373                           intcon	equ	0xFF2
   374                           postinc0	equ	0xFEE
   375                           wreg	equ	0xFE8
   376                           
   377 ;; *************** function _SYSTEM_Initialize *****************
   378 ;; Defined at:
   379 ;;		line 112 in file "mcc_generated_files/mcc.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;		None
   382 ;; Auto vars:     Size  Location     Type
   383 ;;		None
   384 ;; Return value:  Size  Location     Type
   385 ;;		None               void
   386 ;; Registers used:
   387 ;;		wreg, status,2, cstack
   388 ;; Tracked objects:
   389 ;;		On entry : 0/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   393 ;;      Params:         0       0       0       0       0       0       0
   394 ;;      Locals:         0       0       0       0       0       0       0
   395 ;;      Temps:          0       0       0       0       0       0       0
   396 ;;      Totals:         0       0       0       0       0       0       0
   397 ;;Total ram usage:        0 bytes
   398 ;; Hardware stack levels used:    1
   399 ;; Hardware stack levels required when called:    4
   400 ;; This function calls:
   401 ;;		_ADC_Initialize
   402 ;;		_EUSART1_Initialize
   403 ;;		_INTERRUPT_Initialize
   404 ;;		_OSCILLATOR_Initialize
   405 ;;		_PIN_MANAGER_Initialize
   406 ;;		_TMR1_Initialize
   407 ;; This function is called by:
   408 ;;		_main
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           	psect	text1
   413  00062E                     __ptext1:
   414                           	opt stack 0
   415  00062E                     _SYSTEM_Initialize:
   416                           	opt stack 26
   417                           
   418                           ;mcc.c: 114: OSCILLATOR_Initialize();
   419                           
   420                           ;incstack = 0
   421  00062E  EC45  F003         	call	_OSCILLATOR_Initialize	;wreg free
   422                           
   423                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   424  000632  EC29  F002         	call	_PIN_MANAGER_Initialize	;wreg free
   425                           
   426                           ;mcc.c: 116: INTERRUPT_Initialize();
   427  000636  EC4C  F003         	call	_INTERRUPT_Initialize	;wreg free
   428                           
   429                           ;mcc.c: 117: EUSART1_Initialize();
   430  00063A  EC75  F002         	call	_EUSART1_Initialize	;wreg free
   431                           
   432                           ;mcc.c: 118: ADC_Initialize();
   433  00063E  EC24  F003         	call	_ADC_Initialize	;wreg free
   434                           
   435                           ;mcc.c: 119: TMR1_Initialize();
   436  000642  EC06  F003         	call	_TMR1_Initialize	;wreg free
   437  000646  0012               	return	
   438  000648                     __end_of_SYSTEM_Initialize:
   439                           	opt stack 0
   440                           tblptru	equ	0xFF8
   441                           intcon	equ	0xFF2
   442                           postinc0	equ	0xFEE
   443                           wreg	equ	0xFE8
   444                           
   445 ;; *************** function _TMR1_Initialize *****************
   446 ;; Defined at:
   447 ;;		line 63 in file "mcc_generated_files/tmr1.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;		None
   450 ;; Auto vars:     Size  Location     Type
   451 ;;		None
   452 ;; Return value:  Size  Location     Type
   453 ;;		None               void
   454 ;; Registers used:
   455 ;;		wreg, status,2, cstack
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   461 ;;      Params:         0       0       0       0       0       0       0
   462 ;;      Locals:         0       0       0       0       0       0       0
   463 ;;      Temps:          0       0       0       0       0       0       0
   464 ;;      Totals:         0       0       0       0       0       0       0
   465 ;;Total ram usage:        0 bytes
   466 ;; Hardware stack levels used:    1
   467 ;; Hardware stack levels required when called:    3
   468 ;; This function calls:
   469 ;;		_TMR1_StartTimer
   470 ;; This function is called by:
   471 ;;		_SYSTEM_Initialize
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475                           	psect	text2
   476  00060C                     __ptext2:
   477                           	opt stack 0
   478  00060C                     _TMR1_Initialize:
   479                           	opt stack 26
   480                           
   481                           ;tmr1.c: 68: T1CON = 0x00;
   482                           
   483                           ;incstack = 0
   484  00060C  0E00               	movlw	0
   485  00060E  6ECD               	movwf	4045,c	;volatile
   486                           
   487                           ;tmr1.c: 71: T1GCON = 0x00;
   488  000610  0E00               	movlw	0
   489  000612  6ECC               	movwf	4044,c	;volatile
   490                           
   491                           ;tmr1.c: 74: TMR1H = 0xB1;
   492  000614  0EB1               	movlw	177
   493  000616  6ECF               	movwf	4047,c	;volatile
   494                           
   495                           ;tmr1.c: 77: TMR1L = 0xE0;
   496  000618  0EE0               	movlw	224
   497  00061A  6ECE               	movwf	4046,c	;volatile
   498                           
   499                           ;tmr1.c: 80: timer1ReloadVal=TMR1;
   500  00061C  CFCE F04C          	movff	4046,_timer1ReloadVal	;volatile
   501  000620  CFCF F04D          	movff	4047,_timer1ReloadVal+1	;volatile
   502                           
   503                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
   504  000624  909E               	bcf	3998,0,c	;volatile
   505                           
   506                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
   507  000626  809D               	bsf	3997,0,c	;volatile
   508                           
   509                           ;tmr1.c: 89: TMR1_StartTimer();
   510  000628  EC55  F003         	call	_TMR1_StartTimer	;wreg free
   511  00062C  0012               	return	
   512  00062E                     __end_of_TMR1_Initialize:
   513                           	opt stack 0
   514                           tblptru	equ	0xFF8
   515                           intcon	equ	0xFF2
   516                           postinc0	equ	0xFEE
   517                           wreg	equ	0xFE8
   518                           
   519 ;; *************** function _TMR1_StartTimer *****************
   520 ;; Defined at:
   521 ;;		line 92 in file "mcc_generated_files/tmr1.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;		None
   524 ;; Auto vars:     Size  Location     Type
   525 ;;		None
   526 ;; Return value:  Size  Location     Type
   527 ;;		None               void
   528 ;; Registers used:
   529 ;;		None
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   535 ;;      Params:         0       0       0       0       0       0       0
   536 ;;      Locals:         0       0       0       0       0       0       0
   537 ;;      Temps:          0       0       0       0       0       0       0
   538 ;;      Totals:         0       0       0       0       0       0       0
   539 ;;Total ram usage:        0 bytes
   540 ;; Hardware stack levels used:    1
   541 ;; Hardware stack levels required when called:    2
   542 ;; This function calls:
   543 ;;		Nothing
   544 ;; This function is called by:
   545 ;;		_TMR1_Initialize
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           	psect	text3
   550  0006AA                     __ptext3:
   551                           	opt stack 0
   552  0006AA                     _TMR1_StartTimer:
   553                           	opt stack 26
   554                           
   555                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
   556                           
   557                           ;incstack = 0
   558  0006AA  80CD               	bsf	4045,0,c	;volatile
   559  0006AC  0012               	return	
   560  0006AE                     __end_of_TMR1_StartTimer:
   561                           	opt stack 0
   562                           tblptru	equ	0xFF8
   563                           intcon	equ	0xFF2
   564                           postinc0	equ	0xFEE
   565                           wreg	equ	0xFE8
   566                           
   567 ;; *************** function _PIN_MANAGER_Initialize *****************
   568 ;; Defined at:
   569 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;		None
   572 ;; Auto vars:     Size  Location     Type
   573 ;;		None
   574 ;; Return value:  Size  Location     Type
   575 ;;		None               void
   576 ;; Registers used:
   577 ;;		wreg, status,2
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   583 ;;      Params:         0       0       0       0       0       0       0
   584 ;;      Locals:         0       0       0       0       0       0       0
   585 ;;      Temps:          0       0       0       0       0       0       0
   586 ;;      Totals:         0       0       0       0       0       0       0
   587 ;;Total ram usage:        0 bytes
   588 ;; Hardware stack levels used:    1
   589 ;; Hardware stack levels required when called:    2
   590 ;; This function calls:
   591 ;;		Nothing
   592 ;; This function is called by:
   593 ;;		_SYSTEM_Initialize
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           	psect	text4
   598  000452                     __ptext4:
   599                           	opt stack 0
   600  000452                     _PIN_MANAGER_Initialize:
   601                           	opt stack 27
   602                           
   603                           ;pin_manager.c: 52: LATA = 0x00;
   604                           
   605                           ;incstack = 0
   606  000452  0E00               	movlw	0
   607  000454  6E89               	movwf	3977,c	;volatile
   608                           
   609                           ;pin_manager.c: 53: TRISA = 0xF7;
   610  000456  0EF7               	movlw	247
   611  000458  6E92               	movwf	3986,c	;volatile
   612                           
   613                           ;pin_manager.c: 54: ANSELA = 0x27;
   614  00045A  0E27               	movlw	39
   615  00045C  010F               	movlb	15	; () banked
   616  00045E  6F38               	movwf	56,b	;volatile
   617                           
   618                           ;pin_manager.c: 56: LATB = 0x01;
   619  000460  0E01               	movlw	1
   620  000462  6E8A               	movwf	3978,c	;volatile
   621                           
   622                           ;pin_manager.c: 57: TRISB = 0xFE;
   623  000464  0EFE               	movlw	254
   624  000466  6E93               	movwf	3987,c	;volatile
   625                           
   626                           ;pin_manager.c: 58: ANSELB = 0x3E;
   627  000468  0E3E               	movlw	62
   628  00046A  010F               	movlb	15	; () banked
   629  00046C  6F39               	movwf	57,b	;volatile
   630                           
   631                           ;pin_manager.c: 59: WPUB = 0x00;
   632  00046E  0E00               	movlw	0
   633  000470  6E61               	movwf	3937,c	;volatile
   634                           
   635                           ;pin_manager.c: 61: LATC = 0x00;
   636  000472  0E00               	movlw	0
   637  000474  6E8B               	movwf	3979,c	;volatile
   638                           
   639                           ;pin_manager.c: 62: TRISC = 0xDF;
   640  000476  0EDF               	movlw	223
   641  000478  6E94               	movwf	3988,c	;volatile
   642                           
   643                           ;pin_manager.c: 63: ANSELC = 0x1C;
   644  00047A  0E1C               	movlw	28
   645  00047C  010F               	movlb	15	; () banked
   646  00047E  6F3A               	movwf	58,b	;volatile
   647                           
   648                           ;pin_manager.c: 65: LATD = 0x00;
   649  000480  0E00               	movlw	0
   650  000482  6E8C               	movwf	3980,c	;volatile
   651                           
   652                           ;pin_manager.c: 66: TRISD = 0x0F;
   653  000484  0E0F               	movlw	15
   654  000486  6E95               	movwf	3989,c	;volatile
   655                           
   656                           ;pin_manager.c: 67: ANSELD = 0x0F;
   657  000488  0E0F               	movlw	15
   658  00048A  010F               	movlb	15	; () banked
   659  00048C  6F3B               	movwf	59,b	;volatile
   660                           
   661                           ;pin_manager.c: 69: LATE = 0x00;
   662  00048E  0E00               	movlw	0
   663  000490  6E8D               	movwf	3981,c	;volatile
   664                           
   665                           ;pin_manager.c: 70: TRISE = 0x07;
   666  000492  0E07               	movlw	7
   667  000494  6E96               	movwf	3990,c	;volatile
   668                           
   669                           ;pin_manager.c: 71: ANSELE = 0x07;
   670  000496  0E07               	movlw	7
   671  000498  010F               	movlb	15	; () banked
   672  00049A  6F3C               	movwf	60,b	;volatile
   673                           
   674                           ; BSR set to: 15
   675                           ;pin_manager.c: 73: INTCON2bits.nRBPU = 0x01;
   676  00049C  8EF1               	bsf	intcon2,7,c	;volatile
   677                           
   678                           ; BSR set to: 15
   679  00049E  0012               	return	
   680  0004A0                     __end_of_PIN_MANAGER_Initialize:
   681                           	opt stack 0
   682                           tblptru	equ	0xFF8
   683                           intcon	equ	0xFF2
   684                           intcon2	equ	0xFF1
   685                           postinc0	equ	0xFEE
   686                           wreg	equ	0xFE8
   687                           
   688 ;; *************** function _OSCILLATOR_Initialize *****************
   689 ;; Defined at:
   690 ;;		line 122 in file "mcc_generated_files/mcc.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;		None
   693 ;; Auto vars:     Size  Location     Type
   694 ;;		None
   695 ;; Return value:  Size  Location     Type
   696 ;;		None               void
   697 ;; Registers used:
   698 ;;		wreg, status,2
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   704 ;;      Params:         0       0       0       0       0       0       0
   705 ;;      Locals:         0       0       0       0       0       0       0
   706 ;;      Temps:          0       0       0       0       0       0       0
   707 ;;      Totals:         0       0       0       0       0       0       0
   708 ;;Total ram usage:        0 bytes
   709 ;; Hardware stack levels used:    1
   710 ;; Hardware stack levels required when called:    2
   711 ;; This function calls:
   712 ;;		Nothing
   713 ;; This function is called by:
   714 ;;		_SYSTEM_Initialize
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           	psect	text5
   719  00068A                     __ptext5:
   720                           	opt stack 0
   721  00068A                     _OSCILLATOR_Initialize:
   722                           	opt stack 27
   723                           
   724                           ;mcc.c: 125: OSCCON = 0x60;
   725                           
   726                           ; BSR set to: 15
   727                           ;incstack = 0
   728  00068A  0E60               	movlw	96
   729  00068C  6ED3               	movwf	4051,c	;volatile
   730                           
   731                           ;mcc.c: 127: OSCCON2 = 0x04;
   732  00068E  0E04               	movlw	4
   733  000690  6ED2               	movwf	4050,c	;volatile
   734                           
   735                           ;mcc.c: 129: OSCTUNE = 0x00;
   736  000692  0E00               	movlw	0
   737  000694  6E9B               	movwf	3995,c	;volatile
   738  000696  0012               	return	
   739  000698                     __end_of_OSCILLATOR_Initialize:
   740                           	opt stack 0
   741                           tblptru	equ	0xFF8
   742                           intcon	equ	0xFF2
   743                           intcon2	equ	0xFF1
   744                           postinc0	equ	0xFEE
   745                           wreg	equ	0xFE8
   746                           
   747 ;; *************** function _INTERRUPT_Initialize *****************
   748 ;; Defined at:
   749 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;		None               void
   756 ;; Registers used:
   757 ;;		None
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   763 ;;      Params:         0       0       0       0       0       0       0
   764 ;;      Locals:         0       0       0       0       0       0       0
   765 ;;      Temps:          0       0       0       0       0       0       0
   766 ;;      Totals:         0       0       0       0       0       0       0
   767 ;;Total ram usage:        0 bytes
   768 ;; Hardware stack levels used:    1
   769 ;; Hardware stack levels required when called:    2
   770 ;; This function calls:
   771 ;;		Nothing
   772 ;; This function is called by:
   773 ;;		_SYSTEM_Initialize
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           	psect	text6
   778  000698                     __ptext6:
   779                           	opt stack 0
   780  000698                     _INTERRUPT_Initialize:
   781                           	opt stack 27
   782                           
   783                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
   784                           
   785                           ;incstack = 0
   786  000698  9ED0               	bcf	4048,7,c	;volatile
   787                           
   788                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
   789  00069A  9A9F               	bcf	3999,5,c	;volatile
   790                           
   791                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
   792  00069C  989F               	bcf	3999,4,c	;volatile
   793                           
   794                           ;interrupt_manager.c: 64: IPR1bits.ADIP = 0;
   795  00069E  9C9F               	bcf	3999,6,c	;volatile
   796                           
   797                           ;interrupt_manager.c: 66: IPR1bits.TMR1IP = 0;
   798  0006A0  909F               	bcf	3999,0,c	;volatile
   799  0006A2  0012               	return	
   800  0006A4                     __end_of_INTERRUPT_Initialize:
   801                           	opt stack 0
   802                           tblptru	equ	0xFF8
   803                           intcon	equ	0xFF2
   804                           intcon2	equ	0xFF1
   805                           postinc0	equ	0xFEE
   806                           wreg	equ	0xFE8
   807                           
   808 ;; *************** function _EUSART1_Initialize *****************
   809 ;; Defined at:
   810 ;;		line 76 in file "mcc_generated_files/eusart1.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;		None
   815 ;; Return value:  Size  Location     Type
   816 ;;		None               void
   817 ;; Registers used:
   818 ;;		wreg, status,2
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   824 ;;      Params:         0       0       0       0       0       0       0
   825 ;;      Locals:         0       0       0       0       0       0       0
   826 ;;      Temps:          0       0       0       0       0       0       0
   827 ;;      Totals:         0       0       0       0       0       0       0
   828 ;;Total ram usage:        0 bytes
   829 ;; Hardware stack levels used:    1
   830 ;; Hardware stack levels required when called:    2
   831 ;; This function calls:
   832 ;;		Nothing
   833 ;; This function is called by:
   834 ;;		_SYSTEM_Initialize
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           	psect	text7
   839  0004EA                     __ptext7:
   840                           	opt stack 0
   841  0004EA                     _EUSART1_Initialize:
   842                           	opt stack 27
   843                           
   844                           ;eusart1.c: 79: PIE1bits.RC1IE = 0;
   845                           
   846                           ;incstack = 0
   847  0004EA  9A9D               	bcf	3997,5,c	;volatile
   848                           
   849                           ;eusart1.c: 80: PIE1bits.TX1IE = 0;
   850  0004EC  989D               	bcf	3997,4,c	;volatile
   851                           
   852                           ;eusart1.c: 85: BAUD1CON = 0x48;
   853  0004EE  0E48               	movlw	72
   854  0004F0  6EB8               	movwf	4024,c	;volatile
   855                           
   856                           ;eusart1.c: 88: RC1STA = 0x90;
   857  0004F2  0E90               	movlw	144
   858  0004F4  6EAB               	movwf	4011,c	;volatile
   859                           
   860                           ;eusart1.c: 91: TX1STA = 0x26;
   861  0004F6  0E26               	movlw	38
   862  0004F8  6EAC               	movwf	4012,c	;volatile
   863                           
   864                           ;eusart1.c: 94: SPBRG1 = 0x22;
   865  0004FA  0E22               	movlw	34
   866  0004FC  6EAF               	movwf	4015,c	;volatile
   867                           
   868                           ;eusart1.c: 97: SPBRGH1 = 0x00;
   869  0004FE  0E00               	movlw	0
   870  000500  6EB0               	movwf	4016,c	;volatile
   871                           
   872                           ;eusart1.c: 100: TXREG1 = 0x00;
   873  000502  0E00               	movlw	0
   874  000504  6EAD               	movwf	4013,c	;volatile
   875                           
   876                           ;eusart1.c: 103: RCREG1 = 0x00;
   877  000506  0E00               	movlw	0
   878  000508  6EAE               	movwf	4014,c	;volatile
   879                           
   880                           ;eusart1.c: 107: eusart1TxHead = 0;
   881  00050A  0E00               	movlw	0
   882  00050C  6E30               	movwf	_eusart1TxHead,c
   883                           
   884                           ;eusart1.c: 108: eusart1TxTail = 0;
   885  00050E  0E00               	movlw	0
   886  000510  6E31               	movwf	_eusart1TxTail,c
   887                           
   888                           ;eusart1.c: 109: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
   889  000512  0E08               	movlw	8
   890  000514  6E4E               	movwf	_eusart1TxBufferRemaining,c	;volatile
   891                           
   892                           ;eusart1.c: 111: eusart1RxHead = 0;
   893  000516  0E00               	movlw	0
   894  000518  6E2E               	movwf	_eusart1RxHead,c
   895                           
   896                           ;eusart1.c: 112: eusart1RxTail = 0;
   897  00051A  0E00               	movlw	0
   898  00051C  6E2F               	movwf	_eusart1RxTail,c
   899                           
   900                           ;eusart1.c: 113: eusart1RxCount = 0;
   901  00051E  0E00               	movlw	0
   902  000520  6E2D               	movwf	_eusart1RxCount,c	;volatile
   903                           
   904                           ;eusart1.c: 116: PIE1bits.RC1IE = 1;
   905  000522  8A9D               	bsf	3997,5,c	;volatile
   906  000524  0012               	return	
   907  000526                     __end_of_EUSART1_Initialize:
   908                           	opt stack 0
   909                           tblptru	equ	0xFF8
   910                           intcon	equ	0xFF2
   911                           intcon2	equ	0xFF1
   912                           postinc0	equ	0xFEE
   913                           wreg	equ	0xFE8
   914                           
   915 ;; *************** function _ADC_Initialize *****************
   916 ;; Defined at:
   917 ;;		line 59 in file "mcc_generated_files/adc.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;		None
   920 ;; Auto vars:     Size  Location     Type
   921 ;;		None
   922 ;; Return value:  Size  Location     Type
   923 ;;		None               void
   924 ;; Registers used:
   925 ;;		wreg, status,2
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   931 ;;      Params:         0       0       0       0       0       0       0
   932 ;;      Locals:         0       0       0       0       0       0       0
   933 ;;      Temps:          0       0       0       0       0       0       0
   934 ;;      Totals:         0       0       0       0       0       0       0
   935 ;;Total ram usage:        0 bytes
   936 ;; Hardware stack levels used:    1
   937 ;; Hardware stack levels required when called:    2
   938 ;; This function calls:
   939 ;;		Nothing
   940 ;; This function is called by:
   941 ;;		_SYSTEM_Initialize
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text8
   946  000648                     __ptext8:
   947                           	opt stack 0
   948  000648                     _ADC_Initialize:
   949                           	opt stack 27
   950                           
   951                           ;adc.c: 64: ADCON0 = 0x01;
   952                           
   953                           ;incstack = 0
   954  000648  0E01               	movlw	1
   955  00064A  6EC2               	movwf	4034,c	;volatile
   956                           
   957                           ;adc.c: 67: ADCON1 = 0x80;
   958  00064C  0E80               	movlw	128
   959  00064E  6EC1               	movwf	4033,c	;volatile
   960                           
   961                           ;adc.c: 70: ADCON2 = 0x12;
   962  000650  0E12               	movlw	18
   963  000652  6EC0               	movwf	4032,c	;volatile
   964                           
   965                           ;adc.c: 73: ADRESL = 0x00;
   966  000654  0E00               	movlw	0
   967  000656  6EC3               	movwf	4035,c	;volatile
   968                           
   969                           ;adc.c: 76: ADRESH = 0x00;
   970  000658  0E00               	movlw	0
   971  00065A  6EC4               	movwf	4036,c	;volatile
   972                           
   973                           ;adc.c: 79: PIE1bits.ADIE = 1;
   974  00065C  8C9D               	bsf	3997,6,c	;volatile
   975  00065E  0012               	return	
   976  000660                     __end_of_ADC_Initialize:
   977                           	opt stack 0
   978                           tblptru	equ	0xFF8
   979                           intcon	equ	0xFF2
   980                           intcon2	equ	0xFF1
   981                           postinc0	equ	0xFEE
   982                           wreg	equ	0xFE8
   983                           
   984 ;; *************** function _PDUStartup *****************
   985 ;; Defined at:
   986 ;;		line 14 in file "PDU.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;		None               void
   993 ;; Registers used:
   994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1000 ;;      Params:         0       0       0       0       0       0       0
  1001 ;;      Locals:         0       0       0       0       0       0       0
  1002 ;;      Temps:          0       0       0       0       0       0       0
  1003 ;;      Totals:         0       0       0       0       0       0       0
  1004 ;;Total ram usage:        0 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; Hardware stack levels required when called:    6
  1007 ;; This function calls:
  1008 ;;		_ComputeStorageData
  1009 ;;		_EnableSlavePower
  1010 ;;		_StartUp595
  1011 ;;		_Update
  1012 ;; This function is called by:
  1013 ;;		_main
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           	psect	text9
  1018  0005C0                     __ptext9:
  1019                           	opt stack 0
  1020  0005C0                     _PDUStartup:
  1021                           	opt stack 24
  1022                           
  1023                           ;PDU.c: 18: StartUp595();
  1024                           
  1025                           ;incstack = 0
  1026  0005C0  ECCA  F001         	call	_StartUp595	;wreg free
  1027                           
  1028                           ;PDU.c: 20: EnableSlavePower(SAS,ON);
  1029  0005C4  0E00               	movlw	0
  1030  0005C6  6E4A               	movwf	EnableSlavePower@onof+1,c
  1031  0005C8  0E01               	movlw	1
  1032  0005CA  6E49               	movwf	EnableSlavePower@onof,c
  1033  0005CC  0E01               	movlw	1
  1034  0005CE  ECC8  F000         	call	_EnableSlavePower
  1035                           
  1036                           ;PDU.c: 21: EnableSlavePower(DDS,ON);
  1037  0005D2  0E00               	movlw	0
  1038  0005D4  6E4A               	movwf	EnableSlavePower@onof+1,c
  1039  0005D6  0E01               	movlw	1
  1040  0005D8  6E49               	movwf	EnableSlavePower@onof,c
  1041  0005DA  0E02               	movlw	2
  1042  0005DC  ECC8  F000         	call	_EnableSlavePower
  1043                           
  1044                           ;PDU.c: 22: Update();
  1045  0005E0  EC52  F003         	call	_Update	;wreg free
  1046                           
  1047                           ;PDU.c: 24: ComputeStorageData();
  1048  0005E4  EC38  F001         	call	_ComputeStorageData	;wreg free
  1049  0005E8  0012               	return	
  1050  0005EA                     __end_of_PDUStartup:
  1051                           	opt stack 0
  1052                           tblptru	equ	0xFF8
  1053                           intcon	equ	0xFF2
  1054                           intcon2	equ	0xFF1
  1055                           postinc0	equ	0xFEE
  1056                           wreg	equ	0xFE8
  1057                           
  1058 ;; *************** function _Update *****************
  1059 ;; Defined at:
  1060 ;;		line 127 in file "PDU.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;		None
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;		None
  1065 ;; Return value:  Size  Location     Type
  1066 ;;		None               void
  1067 ;; Registers used:
  1068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1074 ;;      Params:         0       0       0       0       0       0       0
  1075 ;;      Locals:         0       0       0       0       0       0       0
  1076 ;;      Temps:          0       0       0       0       0       0       0
  1077 ;;      Totals:         0       0       0       0       0       0       0
  1078 ;;Total ram usage:        0 bytes
  1079 ;; Hardware stack levels used:    1
  1080 ;; Hardware stack levels required when called:    4
  1081 ;; This function calls:
  1082 ;;		_writeRegisters
  1083 ;; This function is called by:
  1084 ;;		_PDUStartup
  1085 ;;		_ReadCurrent
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           	psect	text10
  1090  0006A4                     __ptext10:
  1091                           	opt stack 0
  1092  0006A4                     _Update:
  1093                           	opt stack 25
  1094                           
  1095                           ;PDU.c: 129: writeRegisters();
  1096                           
  1097                           ;incstack = 0
  1098  0006A4  EC56  F000         	call	_writeRegisters	;wreg free
  1099  0006A8  0012               	return	
  1100  0006AA                     __end_of_Update:
  1101                           	opt stack 0
  1102                           tblptru	equ	0xFF8
  1103                           intcon	equ	0xFF2
  1104                           intcon2	equ	0xFF1
  1105                           postinc0	equ	0xFEE
  1106                           wreg	equ	0xFE8
  1107                           
  1108 ;; *************** function _StartUp595 *****************
  1109 ;; Defined at:
  1110 ;;		line 10 in file "Shift595.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;		None
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;		None
  1115 ;; Return value:  Size  Location     Type
  1116 ;;		None               void
  1117 ;; Registers used:
  1118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1124 ;;      Params:         0       0       0       0       0       0       0
  1125 ;;      Locals:         0       0       0       0       0       0       0
  1126 ;;      Temps:          0       0       0       0       0       0       0
  1127 ;;      Totals:         0       0       0       0       0       0       0
  1128 ;;Total ram usage:        0 bytes
  1129 ;; Hardware stack levels used:    1
  1130 ;; Hardware stack levels required when called:    5
  1131 ;; This function calls:
  1132 ;;		_Clear595
  1133 ;;		_Delay
  1134 ;; This function is called by:
  1135 ;;		_PDUStartup
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text11
  1140  000394                     __ptext11:
  1141                           	opt stack 0
  1142  000394                     _StartUp595:
  1143                           	opt stack 24
  1144                           
  1145                           ;incstack = 0
  1146                           ;Shift595.c: 12: do { LATD5 = 1; } while(0);
  1147  000394  8A8C               	bsf	3980,5,c	;volatile
  1148                           
  1149                           ;Shift595.c: 14: Delay(1);
  1150  000396  0E01               	movlw	1
  1151  000398  6E43               	movwf	Delay@wait,c
  1152  00039A  0E00               	movlw	0
  1153  00039C  6E44               	movwf	Delay@wait+1,c
  1154  00039E  0E00               	movlw	0
  1155  0003A0  6E45               	movwf	Delay@wait+2,c
  1156  0003A2  0E00               	movlw	0
  1157  0003A4  6E46               	movwf	Delay@wait+3,c
  1158  0003A6  EC50  F002         	call	_Delay	;wreg free
  1159                           
  1160                           ;Shift595.c: 15: do { LATB0 = 1; } while(0);
  1161  0003AA  808A               	bsf	3978,0,c	;volatile
  1162                           
  1163                           ;Shift595.c: 16: Delay(1);
  1164  0003AC  0E01               	movlw	1
  1165  0003AE  6E43               	movwf	Delay@wait,c
  1166  0003B0  0E00               	movlw	0
  1167  0003B2  6E44               	movwf	Delay@wait+1,c
  1168  0003B4  0E00               	movlw	0
  1169  0003B6  6E45               	movwf	Delay@wait+2,c
  1170  0003B8  0E00               	movlw	0
  1171  0003BA  6E46               	movwf	Delay@wait+3,c
  1172  0003BC  EC50  F002         	call	_Delay	;wreg free
  1173                           
  1174                           ;Shift595.c: 17: do { LATB0 = 0; } while(0);
  1175  0003C0  908A               	bcf	3978,0,c	;volatile
  1176                           
  1177                           ;Shift595.c: 18: Delay(1);
  1178  0003C2  0E01               	movlw	1
  1179  0003C4  6E43               	movwf	Delay@wait,c
  1180  0003C6  0E00               	movlw	0
  1181  0003C8  6E44               	movwf	Delay@wait+1,c
  1182  0003CA  0E00               	movlw	0
  1183  0003CC  6E45               	movwf	Delay@wait+2,c
  1184  0003CE  0E00               	movlw	0
  1185  0003D0  6E46               	movwf	Delay@wait+3,c
  1186  0003D2  EC50  F002         	call	_Delay	;wreg free
  1187                           
  1188                           ;Shift595.c: 19: do { LATB0 = 1; } while(0);
  1189  0003D6  808A               	bsf	3978,0,c	;volatile
  1190                           
  1191                           ;Shift595.c: 20: Delay(1);
  1192  0003D8  0E01               	movlw	1
  1193  0003DA  6E43               	movwf	Delay@wait,c
  1194  0003DC  0E00               	movlw	0
  1195  0003DE  6E44               	movwf	Delay@wait+1,c
  1196  0003E0  0E00               	movlw	0
  1197  0003E2  6E45               	movwf	Delay@wait+2,c
  1198  0003E4  0E00               	movlw	0
  1199  0003E6  6E46               	movwf	Delay@wait+3,c
  1200  0003E8  EC50  F002         	call	_Delay	;wreg free
  1201                           
  1202                           ;Shift595.c: 22: do { LATD5 = 0; } while(0);
  1203  0003EC  9A8C               	bcf	3980,5,c	;volatile
  1204                           
  1205                           ;Shift595.c: 23: Clear595();
  1206  0003EE  ECFA  F001         	call	_Clear595	;wreg free
  1207  0003F2  0012               	return	
  1208  0003F4                     __end_of_StartUp595:
  1209                           	opt stack 0
  1210                           tblptru	equ	0xFF8
  1211                           intcon	equ	0xFF2
  1212                           intcon2	equ	0xFF1
  1213                           postinc0	equ	0xFEE
  1214                           wreg	equ	0xFE8
  1215                           
  1216 ;; *************** function _Clear595 *****************
  1217 ;; Defined at:
  1218 ;;		line 38 in file "Shift595.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;  i               2    8[BANK0 ] int 
  1223 ;; Return value:  Size  Location     Type
  1224 ;;		None               void
  1225 ;; Registers used:
  1226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1232 ;;      Params:         0       0       0       0       0       0       0
  1233 ;;      Locals:         0       2       0       0       0       0       0
  1234 ;;      Temps:          0       2       0       0       0       0       0
  1235 ;;      Totals:         0       4       0       0       0       0       0
  1236 ;;Total ram usage:        4 bytes
  1237 ;; Hardware stack levels used:    1
  1238 ;; Hardware stack levels required when called:    4
  1239 ;; This function calls:
  1240 ;;		_writeRegisters
  1241 ;; This function is called by:
  1242 ;;		_StartUp595
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text12
  1247  0003F4                     __ptext12:
  1248                           	opt stack 0
  1249  0003F4                     _Clear595:
  1250                           	opt stack 24
  1251                           
  1252                           ;Shift595.c: 39: for (int i = 3 * 8 - 1; i >= 0; i--) {
  1253                           
  1254                           ;incstack = 0
  1255  0003F4  0E00               	movlw	0
  1256  0003F6  0100               	movlb	0	; () banked
  1257  0003F8  6FC5               	movwf	(Clear595@i+1)& (0+255),b
  1258  0003FA  0E17               	movlw	23
  1259  0003FC  0100               	movlb	0	; () banked
  1260  0003FE  6FC4               	movwf	Clear595@i& (0+255),b
  1261  000400                     
  1262                           ; BSR set to: 0
  1263  000400  0100               	movlb	0	; () banked
  1264  000402  51C5               	movf	(Clear595@i+1)& (0+255),w,b
  1265  000404  0A80               	xorlw	128
  1266  000406  6EF3               	movwf	prodl,c
  1267  000408  0E80               	movlw	128
  1268  00040A  5CF3               	subwf	prodl,w,c
  1269  00040C  0E00               	movlw	0
  1270  00040E  B4D8               	btfsc	status,2,c
  1271  000410  5DC4               	subwf	Clear595@i& (0+255),w,b
  1272  000412  A0D8               	btfss	status,0,c
  1273  000414  D01B               	goto	l1804
  1274                           
  1275                           ; BSR set to: 0
  1276                           ;Shift595.c: 40: registers[i] = 0;
  1277                           
  1278                           ; BSR set to: 0
  1279                           
  1280                           ; BSR set to: 0
  1281  000416  0E60               	movlw	low _registers
  1282  000418  0100               	movlb	0	; () banked
  1283  00041A  6FC2               	movwf	??_Clear595& (0+255),b
  1284  00041C  0E00               	movlw	high _registers
  1285  00041E  6FC3               	movwf	(??_Clear595+1)& (0+255),b
  1286  000420  90D8               	bcf	status,0,c
  1287  000422  0100               	movlb	0	; () banked
  1288  000424  35C4               	rlcf	Clear595@i& (0+255),w,b
  1289  000426  6ED9               	movwf	fsr2l,c
  1290  000428  0100               	movlb	0	; () banked
  1291  00042A  35C5               	rlcf	(Clear595@i+1)& (0+255),w,b
  1292  00042C  6EDA               	movwf	fsr2h,c
  1293  00042E  0100               	movlb	0	; () banked
  1294  000430  51C2               	movf	??_Clear595& (0+255),w,b
  1295  000432  26D9               	addwf	fsr2l,f,c
  1296  000434  0100               	movlb	0	; () banked
  1297  000436  51C3               	movf	(??_Clear595+1)& (0+255),w,b
  1298  000438  22DA               	addwfc	fsr2h,f,c
  1299  00043A  0E00               	movlw	0
  1300  00043C  6EDE               	movwf	postinc2,c
  1301  00043E  0E00               	movlw	0
  1302  000440  6EDD               	movwf	postdec2,c
  1303                           
  1304                           ; BSR set to: 0
  1305  000442  0100               	movlb	0	; () banked
  1306  000444  07C4               	decf	Clear595@i& (0+255),f,b
  1307  000446  A0D8               	btfss	status,0,c
  1308  000448  07C5               	decf	(Clear595@i+1)& (0+255),f,b
  1309  00044A  D7DA               	goto	L1
  1310  00044C                     l1804:
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;Shift595.c: 41: }
  1314                           ;Shift595.c: 43: writeRegisters();
  1315  00044C  EC56  F000         	call	_writeRegisters	;wreg free
  1316  000450  0012               	return	
  1317  000452                     __end_of_Clear595:
  1318                           	opt stack 0
  1319                           tblptru	equ	0xFF8
  1320                           prodl	equ	0xFF3
  1321                           intcon	equ	0xFF2
  1322                           intcon2	equ	0xFF1
  1323                           postinc0	equ	0xFEE
  1324                           wreg	equ	0xFE8
  1325                           postinc2	equ	0xFDE
  1326                           postdec2	equ	0xFDD
  1327                           fsr2h	equ	0xFDA
  1328                           fsr2l	equ	0xFD9
  1329                           status	equ	0xFD8
  1330                           
  1331 ;; *************** function _writeRegisters *****************
  1332 ;; Defined at:
  1333 ;;		line 49 in file "Shift595.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;		None
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;  i               2    4[BANK0 ] int 
  1338 ;;  val             2    2[BANK0 ] int 
  1339 ;; Return value:  Size  Location     Type
  1340 ;;		None               void
  1341 ;; Registers used:
  1342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1348 ;;      Params:         0       0       0       0       0       0       0
  1349 ;;      Locals:         0       4       0       0       0       0       0
  1350 ;;      Temps:          0       2       0       0       0       0       0
  1351 ;;      Totals:         0       6       0       0       0       0       0
  1352 ;;Total ram usage:        6 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; Hardware stack levels required when called:    3
  1355 ;; This function calls:
  1356 ;;		_Delay
  1357 ;; This function is called by:
  1358 ;;		_Clear595
  1359 ;;		_Update
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text13
  1364  0000AC                     __ptext13:
  1365                           	opt stack 0
  1366  0000AC                     _writeRegisters:
  1367                           	opt stack 25
  1368                           
  1369                           ;incstack = 0
  1370                           ;Shift595.c: 50: do { LATD5 = 1; } while(0);
  1371  0000AC  8A8C               	bsf	3980,5,c	;volatile
  1372                           
  1373                           ;Shift595.c: 51: int val = 0;
  1374  0000AE  0E00               	movlw	0
  1375  0000B0  0100               	movlb	0	; () banked
  1376  0000B2  6FBF               	movwf	(writeRegisters@val+1)& (0+255),b
  1377  0000B4  0E00               	movlw	0
  1378  0000B6  0100               	movlb	0	; () banked
  1379  0000B8  6FBE               	movwf	writeRegisters@val& (0+255),b
  1380                           
  1381                           ; BSR set to: 0
  1382                           
  1383                           ; BSR set to: 0
  1384                           
  1385                           ;Shift595.c: 52: do { LATD6 = 0; } while(0);
  1386  0000BA  9C8C               	bcf	3980,6,c	;volatile
  1387                           
  1388                           ; BSR set to: 0
  1389                           ;Shift595.c: 53: Delay(1);
  1390                           
  1391                           ; BSR set to: 0
  1392  0000BC  0E01               	movlw	1
  1393  0000BE  6E43               	movwf	Delay@wait,c
  1394  0000C0  0E00               	movlw	0
  1395  0000C2  6E44               	movwf	Delay@wait+1,c
  1396  0000C4  0E00               	movlw	0
  1397  0000C6  6E45               	movwf	Delay@wait+2,c
  1398  0000C8  0E00               	movlw	0
  1399  0000CA  6E46               	movwf	Delay@wait+3,c
  1400  0000CC  EC50  F002         	call	_Delay	;wreg free
  1401                           
  1402                           ;Shift595.c: 54: for (int i = 3 * 8 - 1; i >= 0; i--) {
  1403  0000D0  0E00               	movlw	0
  1404  0000D2  0100               	movlb	0	; () banked
  1405  0000D4  6FC1               	movwf	(writeRegisters@i+1)& (0+255),b
  1406  0000D6  0E17               	movlw	23
  1407  0000D8  0100               	movlb	0	; () banked
  1408  0000DA  6FC0               	movwf	writeRegisters@i& (0+255),b
  1409  0000DC                     
  1410                           ; BSR set to: 0
  1411  0000DC  0100               	movlb	0	; () banked
  1412  0000DE  51C1               	movf	(writeRegisters@i+1)& (0+255),w,b
  1413  0000E0  0A80               	xorlw	128
  1414  0000E2  6EF3               	movwf	prodl,c
  1415  0000E4  0E80               	movlw	128
  1416  0000E6  5CF3               	subwf	prodl,w,c
  1417  0000E8  0E00               	movlw	0
  1418  0000EA  B4D8               	btfsc	status,2,c
  1419  0000EC  5DC0               	subwf	writeRegisters@i& (0+255),w,b
  1420  0000EE  A0D8               	btfss	status,0,c
  1421  0000F0  D04B               	goto	l283
  1422                           
  1423                           ; BSR set to: 0
  1424                           
  1425                           ; BSR set to: 0
  1426                           ;Shift595.c: 55: do { LATD7 = 0; } while(0);
  1427                           
  1428                           ; BSR set to: 0
  1429  0000F2  9E8C               	bcf	3980,7,c	;volatile
  1430                           
  1431                           ; BSR set to: 0
  1432                           
  1433                           ; BSR set to: 0
  1434                           ;Shift595.c: 56: do { LATD6 = 0; } while(0);
  1435  0000F4  9C8C               	bcf	3980,6,c	;volatile
  1436                           
  1437                           ; BSR set to: 0
  1438                           ;Shift595.c: 57: Delay(1);
  1439                           
  1440                           ; BSR set to: 0
  1441  0000F6  0E01               	movlw	1
  1442  0000F8  6E43               	movwf	Delay@wait,c
  1443  0000FA  0E00               	movlw	0
  1444  0000FC  6E44               	movwf	Delay@wait+1,c
  1445  0000FE  0E00               	movlw	0
  1446  000100  6E45               	movwf	Delay@wait+2,c
  1447  000102  0E00               	movlw	0
  1448  000104  6E46               	movwf	Delay@wait+3,c
  1449  000106  EC50  F002         	call	_Delay	;wreg free
  1450                           
  1451                           ;Shift595.c: 58: val = registers[i];
  1452  00010A  0E60               	movlw	low _registers
  1453  00010C  0100               	movlb	0	; () banked
  1454  00010E  6FBC               	movwf	??_writeRegisters& (0+255),b
  1455  000110  0E00               	movlw	high _registers
  1456  000112  6FBD               	movwf	(??_writeRegisters+1)& (0+255),b
  1457  000114  90D8               	bcf	status,0,c
  1458  000116  0100               	movlb	0	; () banked
  1459  000118  35C0               	rlcf	writeRegisters@i& (0+255),w,b
  1460  00011A  6ED9               	movwf	fsr2l,c
  1461  00011C  0100               	movlb	0	; () banked
  1462  00011E  35C1               	rlcf	(writeRegisters@i+1)& (0+255),w,b
  1463  000120  6EDA               	movwf	fsr2h,c
  1464  000122  0100               	movlb	0	; () banked
  1465  000124  51BC               	movf	??_writeRegisters& (0+255),w,b
  1466  000126  26D9               	addwf	fsr2l,f,c
  1467  000128  0100               	movlb	0	; () banked
  1468  00012A  51BD               	movf	(??_writeRegisters+1)& (0+255),w,b
  1469  00012C  22DA               	addwfc	fsr2h,f,c
  1470  00012E  0100               	movlb	0	; () banked
  1471  000130  CFDE F0BE          	movff	postinc2,writeRegisters@val
  1472  000134  0100               	movlb	0	; () banked
  1473  000136  CFDD F0BF          	movff	postdec2,writeRegisters@val+1
  1474                           
  1475                           ; BSR set to: 0
  1476                           ;Shift595.c: 59: if (val == 1) {
  1477  00013A  0100               	movlb	0	; () banked
  1478  00013C  05BE               	decf	writeRegisters@val& (0+255),w,b
  1479  00013E  11BF               	iorwf	(writeRegisters@val+1)& (0+255),w,b
  1480  000140  A4D8               	btfss	status,2,c
  1481  000142  D002               	goto	l1780
  1482                           
  1483                           ; BSR set to: 0
  1484                           
  1485                           ;Shift595.c: 60: do { LATD4 = 1; } while(0);
  1486  000144  888C               	bsf	3980,4,c	;volatile
  1487  000146  D005               	goto	l1782
  1488  000148                     l1780:
  1489                           
  1490                           ; BSR set to: 0
  1491  000148  0100               	movlb	0	; () banked
  1492  00014A  51BF               	movf	(writeRegisters@val+1)& (0+255),w,b
  1493  00014C  11BE               	iorwf	writeRegisters@val& (0+255),w,b
  1494  00014E  B4D8               	btfsc	status,2,c
  1495                           
  1496                           ; BSR set to: 0
  1497                           
  1498                           ;Shift595.c: 62: do { LATD4 = 0; } while(0);
  1499  000150  988C               	bcf	3980,4,c	;volatile
  1500  000152                     l1782:
  1501                           
  1502                           ; BSR set to: 0
  1503                           ;Shift595.c: 63: }
  1504                           ;Shift595.c: 64: Delay(1);
  1505  000152  0E01               	movlw	1
  1506  000154  6E43               	movwf	Delay@wait,c
  1507  000156  0E00               	movlw	0
  1508  000158  6E44               	movwf	Delay@wait+1,c
  1509  00015A  0E00               	movlw	0
  1510  00015C  6E45               	movwf	Delay@wait+2,c
  1511  00015E  0E00               	movlw	0
  1512  000160  6E46               	movwf	Delay@wait+3,c
  1513  000162  EC50  F002         	call	_Delay	;wreg free
  1514                           
  1515                           ;Shift595.c: 65: do { LATD7 = 1; } while(0);
  1516  000166  8E8C               	bsf	3980,7,c	;volatile
  1517                           
  1518                           ;Shift595.c: 66: do { LATD6 = 1; } while(0);
  1519  000168  8C8C               	bsf	3980,6,c	;volatile
  1520                           
  1521                           ;Shift595.c: 67: Delay(1);
  1522  00016A  0E01               	movlw	1
  1523  00016C  6E43               	movwf	Delay@wait,c
  1524  00016E  0E00               	movlw	0
  1525  000170  6E44               	movwf	Delay@wait+1,c
  1526  000172  0E00               	movlw	0
  1527  000174  6E45               	movwf	Delay@wait+2,c
  1528  000176  0E00               	movlw	0
  1529  000178  6E46               	movwf	Delay@wait+3,c
  1530  00017A  EC50  F002         	call	_Delay	;wreg free
  1531  00017E  0100               	movlb	0	; () banked
  1532  000180  07C0               	decf	writeRegisters@i& (0+255),f,b
  1533  000182  A0D8               	btfss	status,0,c
  1534  000184  07C1               	decf	(writeRegisters@i+1)& (0+255),f,b
  1535  000186  D7AA               	goto	L2
  1536  000188                     l283:
  1537                           
  1538                           ; BSR set to: 0
  1539  000188  9C8C               	bcf	3980,6,c	;volatile
  1540                           
  1541                           ; BSR set to: 0
  1542                           
  1543                           ; BSR set to: 0
  1544                           ;Shift595.c: 70: do { LATD7 = 0; } while(0);
  1545  00018A  9E8C               	bcf	3980,7,c	;volatile
  1546                           
  1547                           ; BSR set to: 0
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;Shift595.c: 71: do { LATD5 = 0; } while(0);
  1551  00018C  9A8C               	bcf	3980,5,c	;volatile
  1552  00018E  0012               	return	
  1553  000190                     __end_of_writeRegisters:
  1554                           	opt stack 0
  1555                           tblptru	equ	0xFF8
  1556                           prodl	equ	0xFF3
  1557                           intcon	equ	0xFF2
  1558                           intcon2	equ	0xFF1
  1559                           postinc0	equ	0xFEE
  1560                           wreg	equ	0xFE8
  1561                           postinc2	equ	0xFDE
  1562                           postdec2	equ	0xFDD
  1563                           fsr2h	equ	0xFDA
  1564                           fsr2l	equ	0xFD9
  1565                           status	equ	0xFD8
  1566                           
  1567 ;; *************** function _Delay *****************
  1568 ;; Defined at:
  1569 ;;		line 5 in file "Functions.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  wait            4   17[COMRAM] long 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  i               4   22[COMRAM] long 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;		None               void
  1576 ;; Registers used:
  1577 ;;		wreg, status,2, status,0
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1583 ;;      Params:         4       0       0       0       0       0       0
  1584 ;;      Locals:         4       0       0       0       0       0       0
  1585 ;;      Temps:          1       0       0       0       0       0       0
  1586 ;;      Totals:         9       0       0       0       0       0       0
  1587 ;;Total ram usage:        9 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    2
  1590 ;; This function calls:
  1591 ;;		Nothing
  1592 ;; This function is called by:
  1593 ;;		_main
  1594 ;;		_StartUp595
  1595 ;;		_writeRegisters
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text14
  1600  0004A0                     __ptext14:
  1601                           	opt stack 0
  1602  0004A0                     _Delay:
  1603                           	opt stack 25
  1604                           
  1605                           ;Functions.c: 7: long int i = 0;
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;incstack = 0
  1609  0004A0  0E00               	movlw	0
  1610  0004A2  6E48               	movwf	Delay@i,c
  1611  0004A4  0E00               	movlw	0
  1612  0004A6  6E49               	movwf	Delay@i+1,c
  1613  0004A8  0E00               	movlw	0
  1614  0004AA  6E4A               	movwf	Delay@i+2,c
  1615  0004AC  0E00               	movlw	0
  1616  0004AE  6E4B               	movwf	Delay@i+3,c
  1617                           
  1618                           ;Functions.c: 8: for(;wait>i;i++)
  1619  0004B0  D00D               	goto	l1760
  1620  0004B2                     l1756:
  1621                           
  1622                           ;Functions.c: 9: {
  1623                           ;Functions.c: 10: _delay((unsigned long)((1)*(8000000/4000.0)));
  1624  0004B2  0E03               	movlw	3
  1625  0004B4  6E47               	movwf	??_Delay& (0+255),c
  1626  0004B6  0E98               	movlw	152
  1627  0004B8                     u767:
  1628  0004B8  2EE8               	decfsz	wreg,f,c
  1629  0004BA  D7FE               	goto	u767
  1630  0004BC  2E47               	decfsz	??_Delay& (0+255),f,c
  1631  0004BE  D7FC               	goto	u767
  1632  0004C0  0E01               	movlw	1
  1633  0004C2  2648               	addwf	Delay@i,f,c
  1634  0004C4  0E00               	movlw	0
  1635  0004C6  2249               	addwfc	Delay@i+1,f,c
  1636  0004C8  224A               	addwfc	Delay@i+2,f,c
  1637  0004CA  224B               	addwfc	Delay@i+3,f,c
  1638  0004CC                     l1760:
  1639  0004CC  504B               	movf	Delay@i+3,w,c
  1640  0004CE  0A80               	xorlw	128
  1641  0004D0  6E47               	movwf	??_Delay& (0+255),c
  1642  0004D2  5043               	movf	Delay@wait,w,c
  1643  0004D4  5C48               	subwf	Delay@i,w,c
  1644  0004D6  5044               	movf	Delay@wait+1,w,c
  1645  0004D8  5849               	subwfb	Delay@i+1,w,c
  1646  0004DA  5045               	movf	Delay@wait+2,w,c
  1647  0004DC  584A               	subwfb	Delay@i+2,w,c
  1648  0004DE  5046               	movf	Delay@wait+3,w,c
  1649  0004E0  0A80               	xorlw	128
  1650  0004E2  5847               	subwfb	??_Delay& (0+255),w,c
  1651  0004E4  B0D8               	btfsc	status,0,c
  1652  0004E6  0012               	return	
  1653  0004E8  D7E4               	goto	l1756
  1654  0004EA                     __end_of_Delay:
  1655                           	opt stack 0
  1656                           tblptru	equ	0xFF8
  1657                           prodl	equ	0xFF3
  1658                           intcon	equ	0xFF2
  1659                           intcon2	equ	0xFF1
  1660                           postinc0	equ	0xFEE
  1661                           wreg	equ	0xFE8
  1662                           postinc2	equ	0xFDE
  1663                           postdec2	equ	0xFDD
  1664                           fsr2h	equ	0xFDA
  1665                           fsr2l	equ	0xFD9
  1666                           status	equ	0xFD8
  1667                           
  1668 ;; *************** function _EnableSlavePower *****************
  1669 ;; Defined at:
  1670 ;;		line 28 in file "PDU.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;  slave           1    wreg     enum E5
  1673 ;;  onof            2   23[COMRAM] int 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  slave           1   25[COMRAM] enum E5
  1676 ;; Return value:  Size  Location     Type
  1677 ;;		None               void
  1678 ;; Registers used:
  1679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1685 ;;      Params:         2       0       0       0       0       0       0
  1686 ;;      Locals:         1       0       0       0       0       0       0
  1687 ;;      Temps:          0       0       0       0       0       0       0
  1688 ;;      Totals:         3       0       0       0       0       0       0
  1689 ;;Total ram usage:        3 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; Hardware stack levels required when called:    3
  1692 ;; This function calls:
  1693 ;;		_SetPin595
  1694 ;; This function is called by:
  1695 ;;		_PDUStartup
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text15
  1700  000190                     __ptext15:
  1701                           	opt stack 0
  1702  000190                     _EnableSlavePower:
  1703                           	opt stack 26
  1704                           
  1705                           ;incstack = 0
  1706                           ;EnableSlavePower@slave stored from wreg
  1707  000190  6E4B               	movwf	EnableSlavePower@slave,c
  1708                           
  1709                           ;PDU.c: 30: switch(slave)
  1710  000192  D05A               	goto	l1836
  1711  000194                     l1822:
  1712                           
  1713                           ;PDU.c: 33: SetPin595(2, 1, onof);
  1714  000194  0E00               	movlw	0
  1715  000196  6E44               	movwf	SetPin595@Reg+1,c
  1716  000198  0E02               	movlw	2
  1717  00019A  6E43               	movwf	SetPin595@Reg,c
  1718  00019C  0E00               	movlw	0
  1719  00019E  6E46               	movwf	SetPin595@pin+1,c
  1720  0001A0  0E01               	movlw	1
  1721  0001A2  6E45               	movwf	SetPin595@pin,c
  1722  0001A4  C049  F047         	movff	EnableSlavePower@onof,SetPin595@value
  1723  0001A8  C04A  F048         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  1724  0001AC  EC94  F001         	call	_SetPin595	;wreg free
  1725                           
  1726                           ;PDU.c: 34: break;
  1727  0001B0  0012               	return	
  1728  0001B2                     l1824:
  1729                           
  1730                           ;PDU.c: 36: SetPin595(3, 1, onof);
  1731  0001B2  0E00               	movlw	0
  1732  0001B4  6E44               	movwf	SetPin595@Reg+1,c
  1733  0001B6  0E03               	movlw	3
  1734  0001B8  6E43               	movwf	SetPin595@Reg,c
  1735  0001BA  0E00               	movlw	0
  1736  0001BC  6E46               	movwf	SetPin595@pin+1,c
  1737  0001BE  0E01               	movlw	1
  1738  0001C0  6E45               	movwf	SetPin595@pin,c
  1739  0001C2  C049  F047         	movff	EnableSlavePower@onof,SetPin595@value
  1740  0001C6  C04A  F048         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  1741  0001CA  EC94  F001         	call	_SetPin595	;wreg free
  1742                           
  1743                           ;PDU.c: 37: break;
  1744  0001CE  0012               	return	
  1745  0001D0                     l1826:
  1746                           
  1747                           ;PDU.c: 39: SetPin595(2, 1, onof);
  1748  0001D0  0E00               	movlw	0
  1749  0001D2  6E44               	movwf	SetPin595@Reg+1,c
  1750  0001D4  0E02               	movlw	2
  1751  0001D6  6E43               	movwf	SetPin595@Reg,c
  1752  0001D8  0E00               	movlw	0
  1753  0001DA  6E46               	movwf	SetPin595@pin+1,c
  1754  0001DC  0E01               	movlw	1
  1755  0001DE  6E45               	movwf	SetPin595@pin,c
  1756  0001E0  C049  F047         	movff	EnableSlavePower@onof,SetPin595@value
  1757  0001E4  C04A  F048         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  1758  0001E8  EC94  F001         	call	_SetPin595	;wreg free
  1759                           
  1760                           ;PDU.c: 40: break;
  1761  0001EC  0012               	return	
  1762  0001EE                     l1828:
  1763                           
  1764                           ;PDU.c: 42: SetPin595(3, 6, onof);
  1765  0001EE  0E00               	movlw	0
  1766  0001F0  6E44               	movwf	SetPin595@Reg+1,c
  1767  0001F2  0E03               	movlw	3
  1768  0001F4  6E43               	movwf	SetPin595@Reg,c
  1769  0001F6  0E00               	movlw	0
  1770  0001F8  6E46               	movwf	SetPin595@pin+1,c
  1771  0001FA  0E06               	movlw	6
  1772  0001FC  6E45               	movwf	SetPin595@pin,c
  1773  0001FE  C049  F047         	movff	EnableSlavePower@onof,SetPin595@value
  1774  000202  C04A  F048         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  1775  000206  EC94  F001         	call	_SetPin595	;wreg free
  1776                           
  1777                           ;PDU.c: 43: break;
  1778  00020A  0012               	return	
  1779  00020C                     l1830:
  1780                           
  1781                           ;PDU.c: 45: SetPin595(1, 1, onof);
  1782  00020C  0E00               	movlw	0
  1783  00020E  6E44               	movwf	SetPin595@Reg+1,c
  1784  000210  0E01               	movlw	1
  1785  000212  6E43               	movwf	SetPin595@Reg,c
  1786  000214  0E00               	movlw	0
  1787  000216  6E46               	movwf	SetPin595@pin+1,c
  1788  000218  0E01               	movlw	1
  1789  00021A  6E45               	movwf	SetPin595@pin,c
  1790  00021C  C049  F047         	movff	EnableSlavePower@onof,SetPin595@value
  1791  000220  C04A  F048         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  1792  000224  EC94  F001         	call	_SetPin595	;wreg free
  1793                           
  1794                           ;PDU.c: 46: break;
  1795  000228  0012               	return	
  1796  00022A                     l1832:
  1797                           
  1798                           ;PDU.c: 48: SetPin595(1, 6, onof);
  1799  00022A  0E00               	movlw	0
  1800  00022C  6E44               	movwf	SetPin595@Reg+1,c
  1801  00022E  0E01               	movlw	1
  1802  000230  6E43               	movwf	SetPin595@Reg,c
  1803  000232  0E00               	movlw	0
  1804  000234  6E46               	movwf	SetPin595@pin+1,c
  1805  000236  0E06               	movlw	6
  1806  000238  6E45               	movwf	SetPin595@pin,c
  1807  00023A  C049  F047         	movff	EnableSlavePower@onof,SetPin595@value
  1808  00023E  C04A  F048         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  1809  000242  EC94  F001         	call	_SetPin595	;wreg free
  1810                           
  1811                           ;PDU.c: 49: break;
  1812  000246  0012               	return	
  1813  000248                     l1836:
  1814  000248  504B               	movf	EnableSlavePower@slave,w,c
  1815                           
  1816                           ; Switch size 1, requested type "space"
  1817                           ; Number of cases is 6, Range of values is 1 to 6
  1818                           ; switch strategies available:
  1819                           ; Name         Instructions Cycles
  1820                           ; simple_byte           19    10 (average)
  1821                           ;	Chosen strategy is simple_byte
  1822  00024A  0A01               	xorlw	1	; case 1
  1823  00024C  B4D8               	btfsc	status,2,c
  1824  00024E  D7A2               	goto	l1822
  1825  000250  0A03               	xorlw	3	; case 2
  1826  000252  B4D8               	btfsc	status,2,c
  1827  000254  D7BD               	goto	l1826
  1828  000256  0A01               	xorlw	1	; case 3
  1829  000258  B4D8               	btfsc	status,2,c
  1830  00025A  D7AB               	goto	l1824
  1831  00025C  0A07               	xorlw	7	; case 4
  1832  00025E  B4D8               	btfsc	status,2,c
  1833  000260  D7C6               	goto	l1828
  1834  000262  0A01               	xorlw	1	; case 5
  1835  000264  B4D8               	btfsc	status,2,c
  1836  000266  D7D2               	goto	l1830
  1837  000268  0A03               	xorlw	3	; case 6
  1838  00026A  A4D8               	btfss	status,2,c
  1839  00026C  0012               	return	
  1840  00026E  D7DD               	goto	l1832
  1841  000270                     __end_of_EnableSlavePower:
  1842                           	opt stack 0
  1843                           tblptru	equ	0xFF8
  1844                           prodl	equ	0xFF3
  1845                           intcon	equ	0xFF2
  1846                           intcon2	equ	0xFF1
  1847                           postinc0	equ	0xFEE
  1848                           wreg	equ	0xFE8
  1849                           postinc2	equ	0xFDE
  1850                           postdec2	equ	0xFDD
  1851                           fsr2h	equ	0xFDA
  1852                           fsr2l	equ	0xFD9
  1853                           status	equ	0xFD8
  1854                           
  1855 ;; *************** function _SetPin595 *****************
  1856 ;; Defined at:
  1857 ;;		line 31 in file "Shift595.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;  Reg             2   17[COMRAM] int 
  1860 ;;  pin             2   19[COMRAM] int 
  1861 ;;  value           2   21[COMRAM] int 
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;		None
  1864 ;; Return value:  Size  Location     Type
  1865 ;;		None               void
  1866 ;; Registers used:
  1867 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1873 ;;      Params:         6       0       0       0       0       0       0
  1874 ;;      Locals:         0       0       0       0       0       0       0
  1875 ;;      Temps:          0       4       0       0       0       0       0
  1876 ;;      Totals:         6       4       0       0       0       0       0
  1877 ;;Total ram usage:       10 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; Hardware stack levels required when called:    2
  1880 ;; This function calls:
  1881 ;;		Nothing
  1882 ;; This function is called by:
  1883 ;;		_EnableSlavePower
  1884 ;;		_ReadCurrent
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           	psect	text16
  1889  000328                     __ptext16:
  1890                           	opt stack 0
  1891  000328                     _SetPin595:
  1892                           	opt stack 26
  1893                           
  1894                           ;Shift595.c: 32: registers[((Reg - 1)*8) + pin] = value;
  1895                           
  1896                           ;incstack = 0
  1897  000328  0EF0               	movlw	240
  1898  00032A  0100               	movlb	0	; () banked
  1899  00032C  6FBC               	movwf	??_SetPin595& (0+255),b
  1900  00032E  0EFF               	movlw	255
  1901  000330  6FBD               	movwf	(??_SetPin595+1)& (0+255),b
  1902  000332  C043  F0BE         	movff	SetPin595@Reg,??_SetPin595+2
  1903  000336  C044  F0BF         	movff	SetPin595@Reg+1,??_SetPin595+3
  1904  00033A  0100               	movlb	0	; () banked
  1905  00033C  90D8               	bcf	status,0,c
  1906  00033E  37BE               	rlcf	(??_SetPin595+2)& (0+255),f,b
  1907  000340  37BF               	rlcf	(??_SetPin595+3)& (0+255),f,b
  1908  000342  0100               	movlb	0	; () banked
  1909  000344  90D8               	bcf	status,0,c
  1910  000346  37BE               	rlcf	(??_SetPin595+2)& (0+255),f,b
  1911  000348  37BF               	rlcf	(??_SetPin595+3)& (0+255),f,b
  1912  00034A  0100               	movlb	0	; () banked
  1913  00034C  90D8               	bcf	status,0,c
  1914  00034E  37BE               	rlcf	(??_SetPin595+2)& (0+255),f,b
  1915  000350  37BF               	rlcf	(??_SetPin595+3)& (0+255),f,b
  1916  000352  5045               	movf	SetPin595@pin,w,c
  1917  000354  0100               	movlb	0	; () banked
  1918  000356  27BE               	addwf	(??_SetPin595+2)& (0+255),f,b
  1919  000358  5046               	movf	SetPin595@pin+1,w,c
  1920  00035A  0100               	movlb	0	; () banked
  1921  00035C  23BF               	addwfc	(??_SetPin595+3)& (0+255),f,b
  1922  00035E  90D8               	bcf	status,0,c
  1923  000360  0100               	movlb	0	; () banked
  1924  000362  37BE               	rlcf	(??_SetPin595+2)& (0+255),f,b
  1925  000364  37BF               	rlcf	(??_SetPin595+3)& (0+255),f,b
  1926  000366  0100               	movlb	0	; () banked
  1927  000368  51BC               	movf	??_SetPin595& (0+255),w,b
  1928  00036A  0100               	movlb	0	; () banked
  1929  00036C  27BE               	addwf	(??_SetPin595+2)& (0+255),f,b
  1930  00036E  0100               	movlb	0	; () banked
  1931  000370  51BD               	movf	(??_SetPin595+1)& (0+255),w,b
  1932  000372  0100               	movlb	0	; () banked
  1933  000374  23BF               	addwfc	(??_SetPin595+3)& (0+255),f,b
  1934  000376  0100               	movlb	0	; () banked
  1935  000378  0E60               	movlw	low _registers
  1936  00037A  0100               	movlb	0	; () banked
  1937  00037C  25BE               	addwf	(??_SetPin595+2)& (0+255),w,b
  1938  00037E  6ED9               	movwf	fsr2l,c
  1939  000380  0100               	movlb	0	; () banked
  1940  000382  0E00               	movlw	high _registers
  1941  000384  0100               	movlb	0	; () banked
  1942  000386  21BF               	addwfc	(??_SetPin595+3)& (0+255),w,b
  1943  000388  6EDA               	movwf	fsr2h,c
  1944  00038A  C047  FFDE         	movff	SetPin595@value,postinc2
  1945  00038E  C048  FFDD         	movff	SetPin595@value+1,postdec2
  1946                           
  1947                           ; BSR set to: 0
  1948  000392  0012               	return	
  1949  000394                     __end_of_SetPin595:
  1950                           	opt stack 0
  1951                           tblptru	equ	0xFF8
  1952                           prodl	equ	0xFF3
  1953                           intcon	equ	0xFF2
  1954                           intcon2	equ	0xFF1
  1955                           postinc0	equ	0xFEE
  1956                           wreg	equ	0xFE8
  1957                           postinc2	equ	0xFDE
  1958                           postdec2	equ	0xFDD
  1959                           fsr2h	equ	0xFDA
  1960                           fsr2l	equ	0xFD9
  1961                           status	equ	0xFD8
  1962                           
  1963 ;; *************** function _ComputeStorageData *****************
  1964 ;; Defined at:
  1965 ;;		line 94 in file "PDU.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;		None
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  i               2   20[COMRAM] int 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;		None               void
  1972 ;; Registers used:
  1973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1979 ;;      Params:         0       0       0       0       0       0       0
  1980 ;;      Locals:         2       0       0       0       0       0       0
  1981 ;;      Temps:          2       0       0       0       0       0       0
  1982 ;;      Totals:         4       0       0       0       0       0       0
  1983 ;;Total ram usage:        4 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; Hardware stack levels required when called:    3
  1986 ;; This function calls:
  1987 ;;		_DATAEE_ReadByte
  1988 ;; This function is called by:
  1989 ;;		_PDUStartup
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           	psect	text17
  1994  000270                     __ptext17:
  1995                           	opt stack 0
  1996  000270                     _ComputeStorageData:
  1997                           	opt stack 26
  1998                           
  1999                           ;PDU.c: 96: for(int i = 0;i<12;i++)
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;incstack = 0
  2003  000270  0E00               	movlw	0
  2004  000272  6E47               	movwf	ComputeStorageData@i+1,c
  2005  000274  0E00               	movlw	0
  2006  000276  6E46               	movwf	ComputeStorageData@i,c
  2007  000278  5047               	movf	ComputeStorageData@i+1,w,c
  2008  00027A  0A80               	xorlw	128
  2009  00027C  0F80               	addlw	-128
  2010  00027E  0E0C               	movlw	12
  2011  000280  B4D8               	btfsc	status,2,c
  2012  000282  5C46               	subwf	ComputeStorageData@i,w,c
  2013  000284  B0D8               	btfsc	status,0,c
  2014  000286  D00D               	goto	l1200
  2015                           
  2016                           ;PDU.c: 97: {
  2017                           ;PDU.c: 98: data[i] = DATAEE_ReadByte(i);
  2018  000288  0E19               	movlw	low _data
  2019  00028A  2446               	addwf	ComputeStorageData@i,w,c
  2020  00028C  6ED9               	movwf	fsr2l,c
  2021  00028E  0E00               	movlw	high _data
  2022  000290  2047               	addwfc	ComputeStorageData@i+1,w,c
  2023  000292  6EDA               	movwf	fsr2h,c
  2024  000294  5046               	movf	ComputeStorageData@i,w,c
  2025  000296  EC3B  F003         	call	_DATAEE_ReadByte
  2026  00029A  6EDF               	movwf	indf2,c
  2027  00029C  4A46               	infsnz	ComputeStorageData@i,f,c
  2028  00029E  2A47               	incf	ComputeStorageData@i+1,f,c
  2029  0002A0  D7EB               	goto	L3
  2030  0002A2                     l1200:
  2031                           
  2032                           ;PDU.c: 99: }
  2033                           ;PDU.c: 100: Currentcomp[0] = ((data[0] << 8) | data[1]);
  2034  0002A2  501A               	movf	_data+1,w,c
  2035  0002A4  C019  F044         	movff	_data,??_ComputeStorageData
  2036  0002A8  6A45               	clrf	(??_ComputeStorageData+1)& (0+255),c
  2037  0002AA  C044  F045         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  2038  0002AE  6A44               	clrf	??_ComputeStorageData,c
  2039  0002B0  1044               	iorwf	??_ComputeStorageData,w,c
  2040  0002B2  6E0D               	movwf	_Currentcomp,c
  2041  0002B4  5045               	movf	??_ComputeStorageData+1,w,c
  2042  0002B6  6E0E               	movwf	_Currentcomp+1,c
  2043                           
  2044                           ;PDU.c: 101: Currentcomp[1] = ((data[2] << 8) | data[3]);
  2045  0002B8  501C               	movf	_data+3,w,c
  2046  0002BA  C01B  F044         	movff	_data+2,??_ComputeStorageData
  2047  0002BE  6A45               	clrf	(??_ComputeStorageData+1)& (0+255),c
  2048  0002C0  C044  F045         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  2049  0002C4  6A44               	clrf	??_ComputeStorageData,c
  2050  0002C6  1044               	iorwf	??_ComputeStorageData,w,c
  2051  0002C8  6E0F               	movwf	_Currentcomp+2,c
  2052  0002CA  5045               	movf	??_ComputeStorageData+1,w,c
  2053  0002CC  6E10               	movwf	_Currentcomp+3,c
  2054                           
  2055                           ;PDU.c: 102: Currentcomp[2] = ((data[4] << 8) | data[5]);
  2056  0002CE  501E               	movf	_data+5,w,c
  2057  0002D0  C01D  F044         	movff	_data+4,??_ComputeStorageData
  2058  0002D4  6A45               	clrf	(??_ComputeStorageData+1)& (0+255),c
  2059  0002D6  C044  F045         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  2060  0002DA  6A44               	clrf	??_ComputeStorageData,c
  2061  0002DC  1044               	iorwf	??_ComputeStorageData,w,c
  2062  0002DE  6E11               	movwf	_Currentcomp+4,c
  2063  0002E0  5045               	movf	??_ComputeStorageData+1,w,c
  2064  0002E2  6E12               	movwf	_Currentcomp+5,c
  2065                           
  2066                           ;PDU.c: 103: Currentcomp[3] = ((data[6] << 8) | data[7]);
  2067  0002E4  5020               	movf	_data+7,w,c
  2068  0002E6  C01F  F044         	movff	_data+6,??_ComputeStorageData
  2069  0002EA  6A45               	clrf	(??_ComputeStorageData+1)& (0+255),c
  2070  0002EC  C044  F045         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  2071  0002F0  6A44               	clrf	??_ComputeStorageData,c
  2072  0002F2  1044               	iorwf	??_ComputeStorageData,w,c
  2073  0002F4  6E13               	movwf	_Currentcomp+6,c
  2074  0002F6  5045               	movf	??_ComputeStorageData+1,w,c
  2075  0002F8  6E14               	movwf	_Currentcomp+7,c
  2076                           
  2077                           ;PDU.c: 104: Currentcomp[4] = ((data[8] << 8) | data[9]);
  2078  0002FA  5022               	movf	_data+9,w,c
  2079  0002FC  C021  F044         	movff	_data+8,??_ComputeStorageData
  2080  000300  6A45               	clrf	(??_ComputeStorageData+1)& (0+255),c
  2081  000302  C044  F045         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  2082  000306  6A44               	clrf	??_ComputeStorageData,c
  2083  000308  1044               	iorwf	??_ComputeStorageData,w,c
  2084  00030A  6E15               	movwf	_Currentcomp+8,c
  2085  00030C  5045               	movf	??_ComputeStorageData+1,w,c
  2086  00030E  6E16               	movwf	_Currentcomp+9,c
  2087                           
  2088                           ;PDU.c: 105: Currentcomp[5] = ((data[10] << 8) | data[11]);
  2089  000310  5024               	movf	_data+11,w,c
  2090  000312  C023  F044         	movff	_data+10,??_ComputeStorageData
  2091  000316  6A45               	clrf	(??_ComputeStorageData+1)& (0+255),c
  2092  000318  C044  F045         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  2093  00031C  6A44               	clrf	??_ComputeStorageData,c
  2094  00031E  1044               	iorwf	??_ComputeStorageData,w,c
  2095  000320  6E17               	movwf	_Currentcomp+10,c
  2096  000322  5045               	movf	??_ComputeStorageData+1,w,c
  2097  000324  6E18               	movwf	_Currentcomp+11,c
  2098  000326  0012               	return	
  2099  000328                     __end_of_ComputeStorageData:
  2100                           	opt stack 0
  2101                           tblptru	equ	0xFF8
  2102                           prodl	equ	0xFF3
  2103                           intcon	equ	0xFF2
  2104                           intcon2	equ	0xFF1
  2105                           postinc0	equ	0xFEE
  2106                           wreg	equ	0xFE8
  2107                           indf2	equ	0xFDF
  2108                           postinc2	equ	0xFDE
  2109                           postdec2	equ	0xFDD
  2110                           fsr2h	equ	0xFDA
  2111                           fsr2l	equ	0xFD9
  2112                           status	equ	0xFD8
  2113                           
  2114 ;; *************** function _DATAEE_ReadByte *****************
  2115 ;; Defined at:
  2116 ;;		line 143 in file "mcc_generated_files/memory.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  bAdd            1    wreg     unsigned char 
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;  bAdd            1   17[COMRAM] unsigned char 
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      unsigned char 
  2123 ;; Registers used:
  2124 ;;		wreg, status,2
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2130 ;;      Params:         0       0       0       0       0       0       0
  2131 ;;      Locals:         1       0       0       0       0       0       0
  2132 ;;      Temps:          0       0       0       0       0       0       0
  2133 ;;      Totals:         1       0       0       0       0       0       0
  2134 ;;Total ram usage:        1 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; Hardware stack levels required when called:    2
  2137 ;; This function calls:
  2138 ;;		Nothing
  2139 ;; This function is called by:
  2140 ;;		_ComputeStorageData
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           	psect	text18
  2145  000676                     __ptext18:
  2146                           	opt stack 0
  2147  000676                     _DATAEE_ReadByte:
  2148                           	opt stack 26
  2149                           
  2150                           ;incstack = 0
  2151                           ;DATAEE_ReadByte@bAdd stored from wreg
  2152  000676  6E43               	movwf	DATAEE_ReadByte@bAdd,c
  2153                           
  2154                           ;memory.c: 145: EEADR = (bAdd & 0xFF);
  2155  000678  C043  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
  2156                           
  2157                           ;memory.c: 146: EECON1bits.CFGS = 0;
  2158  00067C  9CA6               	bcf	4006,6,c	;volatile
  2159                           
  2160                           ;memory.c: 147: EECON1bits.EEPGD = 0;
  2161  00067E  9EA6               	bcf	4006,7,c	;volatile
  2162                           
  2163                           ;memory.c: 148: EECON1bits.RD = 1;
  2164  000680  80A6               	bsf	4006,0,c	;volatile
  2165                           
  2166                           ;memory.c: 149: __nop();
  2167  000682  F000               	nop	
  2168                           
  2169                           ;memory.c: 150: __nop();
  2170  000684  F000               	nop	
  2171                           
  2172                           ;memory.c: 152: return (EEDATA);
  2173  000686  50A8               	movf	4008,w,c	;volatile
  2174  000688  0012               	return	
  2175  00068A                     __end_of_DATAEE_ReadByte:
  2176                           	opt stack 0
  2177                           tblptru	equ	0xFF8
  2178                           prodl	equ	0xFF3
  2179                           intcon	equ	0xFF2
  2180                           intcon2	equ	0xFF1
  2181                           postinc0	equ	0xFEE
  2182                           wreg	equ	0xFE8
  2183                           indf2	equ	0xFDF
  2184                           postinc2	equ	0xFDE
  2185                           postdec2	equ	0xFDD
  2186                           fsr2h	equ	0xFDA
  2187                           fsr2l	equ	0xFD9
  2188                           status	equ	0xFD8
  2189                           
  2190 ;; *************** function _INTERRUPT_InterruptManager *****************
  2191 ;; Defined at:
  2192 ;;		line 69 in file "mcc_generated_files/interrupt_manager.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;		None
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;		None
  2197 ;; Return value:  Size  Location     Type
  2198 ;;		None               void
  2199 ;; Registers used:
  2200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2206 ;;      Params:         0       0       0       0       0       0       0
  2207 ;;      Locals:         0       0       0       0       0       0       0
  2208 ;;      Temps:         14       0       0       0       0       0       0
  2209 ;;      Totals:        14       0       0       0       0       0       0
  2210 ;;Total ram usage:       14 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; Hardware stack levels required when called:    1
  2213 ;; This function calls:
  2214 ;;		_ADC_ISR
  2215 ;;		_EUSART1_Receive_ISR
  2216 ;;		_EUSART1_Transmit_ISR
  2217 ;;		_TMR1_ISR
  2218 ;; This function is called by:
  2219 ;;		Interrupt level 2
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           	psect	intcode
  2224  000008                     __pintcode:
  2225                           	opt stack 0
  2226  000008                     _INTERRUPT_InterruptManager:
  2227                           	opt stack 24
  2228                           
  2229                           ;incstack = 0
  2230  000008  CFFA F035          	movff	pclath,??_INTERRUPT_InterruptManager
  2231  00000C  CFFB F036          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2232  000010  CFE9 F037          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2233  000014  CFEA F038          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2234  000018  CFE1 F039          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2235  00001C  CFE2 F03A          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2236  000020  CFD9 F03B          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2237  000024  CFDA F03C          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2238  000028  CFF3 F03D          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2239  00002C  CFF4 F03E          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2240  000030  CFF6 F03F          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2241  000034  CFF7 F040          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2242  000038  CFF8 F041          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2243  00003C  CFF5 F042          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2244                           
  2245                           ;interrupt_manager.c: 72: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  2246  000040  BA9D               	btfsc	3997,5,c	;volatile
  2247  000042  AA9E               	btfss	3998,5,c	;volatile
  2248  000044  D003               	goto	i2l160
  2249                           
  2250                           ;interrupt_manager.c: 73: {
  2251                           ;interrupt_manager.c: 74: EUSART1_Receive_ISR();
  2252  000046  ECC8  F002         	call	_EUSART1_Receive_ISR	;wreg free
  2253                           
  2254                           ;interrupt_manager.c: 75: }
  2255  00004A  D011               	goto	i2l168
  2256  00004C                     i2l160:
  2257                           
  2258                           ;interrupt_manager.c: 76: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  2259  00004C  B89D               	btfsc	3997,4,c	;volatile
  2260  00004E  A89E               	btfss	3998,4,c	;volatile
  2261  000050  D003               	goto	i2l162
  2262                           
  2263                           ;interrupt_manager.c: 77: {
  2264                           ;interrupt_manager.c: 78: EUSART1_Transmit_ISR();
  2265  000052  ECB0  F002         	call	_EUSART1_Transmit_ISR	;wreg free
  2266                           
  2267                           ;interrupt_manager.c: 79: }
  2268  000056  D00B               	goto	i2l168
  2269  000058                     i2l162:
  2270                           
  2271                           ;interrupt_manager.c: 80: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  2272  000058  BC9D               	btfsc	3997,6,c	;volatile
  2273  00005A  AC9E               	btfss	3998,6,c	;volatile
  2274  00005C  D003               	goto	i2l164
  2275                           
  2276                           ;interrupt_manager.c: 81: {
  2277                           ;interrupt_manager.c: 82: ADC_ISR();
  2278  00005E  EC57  F003         	call	_ADC_ISR	;wreg free
  2279                           
  2280                           ;interrupt_manager.c: 83: }
  2281  000062  D005               	goto	i2l168
  2282  000064                     i2l164:
  2283                           
  2284                           ;interrupt_manager.c: 84: else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  2285  000064  B09D               	btfsc	3997,0,c	;volatile
  2286  000066  A09E               	btfss	3998,0,c	;volatile
  2287  000068  D002               	goto	i2l168
  2288                           
  2289                           ;interrupt_manager.c: 85: {
  2290                           ;interrupt_manager.c: 86: TMR1_ISR();
  2291  00006A  EC30  F003         	call	_TMR1_ISR	;wreg free
  2292  00006E                     i2l168:
  2293  00006E  C042  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  2294  000072  C041  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  2295  000076  C040  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  2296  00007A  C03F  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  2297  00007E  C03E  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  2298  000082  C03D  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  2299  000086  C03C  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  2300  00008A  C03B  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  2301  00008E  C03A  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  2302  000092  C039  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  2303  000096  C038  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  2304  00009A  C037  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  2305  00009E  C036  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2306  0000A2  C035  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2307  0000A6  0011               	retfie		f
  2308  0000A8                     __end_of_INTERRUPT_InterruptManager:
  2309                           	opt stack 0
  2310                           pclatu	equ	0xFFB
  2311                           pclath	equ	0xFFA
  2312                           tblptru	equ	0xFF8
  2313                           tblptrh	equ	0xFF7
  2314                           tblptrl	equ	0xFF6
  2315                           tablat	equ	0xFF5
  2316                           prodh	equ	0xFF4
  2317                           prodl	equ	0xFF3
  2318                           intcon	equ	0xFF2
  2319                           intcon2	equ	0xFF1
  2320                           postinc0	equ	0xFEE
  2321                           fsr0h	equ	0xFEA
  2322                           fsr0l	equ	0xFE9
  2323                           wreg	equ	0xFE8
  2324                           fsr1h	equ	0xFE2
  2325                           fsr1l	equ	0xFE1
  2326                           indf2	equ	0xFDF
  2327                           postinc2	equ	0xFDE
  2328                           postdec2	equ	0xFDD
  2329                           fsr2h	equ	0xFDA
  2330                           fsr2l	equ	0xFD9
  2331                           status	equ	0xFD8
  2332                           
  2333 ;; *************** function _TMR1_ISR *****************
  2334 ;; Defined at:
  2335 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;		None
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;		None
  2340 ;; Return value:  Size  Location     Type
  2341 ;;		None               void
  2342 ;; Registers used:
  2343 ;;		wreg, status,2
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2349 ;;      Params:         0       0       0       0       0       0       0
  2350 ;;      Locals:         0       0       0       0       0       0       0
  2351 ;;      Temps:          3       0       0       0       0       0       0
  2352 ;;      Totals:         3       0       0       0       0       0       0
  2353 ;;Total ram usage:        3 bytes
  2354 ;; Hardware stack levels used:    1
  2355 ;; This function calls:
  2356 ;;		Nothing
  2357 ;; This function is called by:
  2358 ;;		_INTERRUPT_InterruptManager
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           	psect	text20
  2363  000660                     __ptext20:
  2364                           	opt stack 0
  2365  000660                     _TMR1_ISR:
  2366                           	opt stack 24
  2367                           
  2368                           ;tmr1.c: 161: PIR1bits.TMR1IF = 0;
  2369                           
  2370                           ;incstack = 0
  2371  000660  909E               	bcf	3998,0,c	;volatile
  2372                           
  2373                           ;tmr1.c: 164: TMR1H = (timer1ReloadVal >> 8);
  2374  000662  C04D  F032         	movff	_timer1ReloadVal+1,??_TMR1_ISR	;volatile
  2375  000666  C032  F033         	movff	??_TMR1_ISR,??_TMR1_ISR+1
  2376  00066A  6A34               	clrf	(??_TMR1_ISR+2)& (0+255),c
  2377  00066C  5033               	movf	??_TMR1_ISR+1,w,c
  2378  00066E  6ECF               	movwf	4047,c	;volatile
  2379                           
  2380                           ;tmr1.c: 165: TMR1L = (uint8_t) timer1ReloadVal;
  2381  000670  C04C  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  2382  000674  0012               	return	
  2383  000676                     __end_of_TMR1_ISR:
  2384                           	opt stack 0
  2385                           pclatu	equ	0xFFB
  2386                           pclath	equ	0xFFA
  2387                           tblptru	equ	0xFF8
  2388                           tblptrh	equ	0xFF7
  2389                           tblptrl	equ	0xFF6
  2390                           tablat	equ	0xFF5
  2391                           prodh	equ	0xFF4
  2392                           prodl	equ	0xFF3
  2393                           intcon	equ	0xFF2
  2394                           intcon2	equ	0xFF1
  2395                           postinc0	equ	0xFEE
  2396                           fsr0h	equ	0xFEA
  2397                           fsr0l	equ	0xFE9
  2398                           wreg	equ	0xFE8
  2399                           fsr1h	equ	0xFE2
  2400                           fsr1l	equ	0xFE1
  2401                           indf2	equ	0xFDF
  2402                           postinc2	equ	0xFDE
  2403                           postdec2	equ	0xFDD
  2404                           fsr2h	equ	0xFDA
  2405                           fsr2l	equ	0xFD9
  2406                           status	equ	0xFD8
  2407                           
  2408 ;; *************** function _EUSART1_Transmit_ISR *****************
  2409 ;; Defined at:
  2410 ;;		line 163 in file "mcc_generated_files/eusart1.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;		None
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;		None
  2415 ;; Return value:  Size  Location     Type
  2416 ;;		None               void
  2417 ;; Registers used:
  2418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2424 ;;      Params:         0       0       0       0       0       0       0
  2425 ;;      Locals:         0       0       0       0       0       0       0
  2426 ;;      Temps:          0       0       0       0       0       0       0
  2427 ;;      Totals:         0       0       0       0       0       0       0
  2428 ;;Total ram usage:        0 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_INTERRUPT_InterruptManager
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text21
  2438  000560                     __ptext21:
  2439                           	opt stack 0
  2440  000560                     _EUSART1_Transmit_ISR:
  2441                           	opt stack 24
  2442                           
  2443                           ;eusart1.c: 167: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  2444                           
  2445                           ;incstack = 0
  2446  000560  0E08               	movlw	8
  2447  000562  5C4E               	subwf	_eusart1TxBufferRemaining,w,c	;volatile
  2448  000564  B0D8               	btfsc	status,0,c
  2449  000566  D012               	goto	i2l93
  2450                           
  2451                           ;eusart1.c: 168: {
  2452                           ;eusart1.c: 169: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  2453  000568  5031               	movf	_eusart1TxTail,w,c
  2454  00056A  0D01               	mullw	1
  2455  00056C  0E25               	movlw	low _eusart1TxBuffer
  2456  00056E  24F3               	addwf	prodl,w,c
  2457  000570  6ED9               	movwf	fsr2l,c
  2458  000572  0E00               	movlw	high _eusart1TxBuffer
  2459  000574  20F4               	addwfc	prodh,w,c
  2460  000576  6EDA               	movwf	fsr2h,c
  2461  000578  50DF               	movf	indf2,w,c
  2462  00057A  6EAD               	movwf	4013,c	;volatile
  2463  00057C  2A31               	incf	_eusart1TxTail,f,c
  2464                           
  2465                           ;eusart1.c: 170: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  2466  00057E  0E07               	movlw	7
  2467  000580  6431               	cpfsgt	_eusart1TxTail,c
  2468  000582  D002               	goto	i2l1224
  2469                           
  2470                           ;eusart1.c: 171: {
  2471                           ;eusart1.c: 172: eusart1TxTail = 0;
  2472  000584  0E00               	movlw	0
  2473  000586  6E31               	movwf	_eusart1TxTail,c
  2474  000588                     i2l1224:
  2475                           
  2476                           ;eusart1.c: 173: }
  2477                           ;eusart1.c: 174: eusart1TxBufferRemaining++;
  2478  000588  2A4E               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  2479                           
  2480                           ;eusart1.c: 175: }
  2481  00058A  0012               	return	
  2482  00058C                     i2l93:
  2483                           
  2484                           ;eusart1.c: 176: else
  2485                           ;eusart1.c: 177: {
  2486                           ;eusart1.c: 178: PIE1bits.TX1IE = 0;
  2487  00058C  989D               	bcf	3997,4,c	;volatile
  2488  00058E  0012               	return	
  2489  000590                     __end_of_EUSART1_Transmit_ISR:
  2490                           	opt stack 0
  2491                           pclatu	equ	0xFFB
  2492                           pclath	equ	0xFFA
  2493                           tblptru	equ	0xFF8
  2494                           tblptrh	equ	0xFF7
  2495                           tblptrl	equ	0xFF6
  2496                           tablat	equ	0xFF5
  2497                           prodh	equ	0xFF4
  2498                           prodl	equ	0xFF3
  2499                           intcon	equ	0xFF2
  2500                           intcon2	equ	0xFF1
  2501                           postinc0	equ	0xFEE
  2502                           fsr0h	equ	0xFEA
  2503                           fsr0l	equ	0xFE9
  2504                           wreg	equ	0xFE8
  2505                           fsr1h	equ	0xFE2
  2506                           fsr1l	equ	0xFE1
  2507                           indf2	equ	0xFDF
  2508                           postinc2	equ	0xFDE
  2509                           postdec2	equ	0xFDD
  2510                           fsr2h	equ	0xFDA
  2511                           fsr2l	equ	0xFD9
  2512                           status	equ	0xFD8
  2513                           
  2514 ;; *************** function _EUSART1_Receive_ISR *****************
  2515 ;; Defined at:
  2516 ;;		line 182 in file "mcc_generated_files/eusart1.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;		None
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;		None
  2521 ;; Return value:  Size  Location     Type
  2522 ;;		None               void
  2523 ;; Registers used:
  2524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2530 ;;      Params:         0       0       0       0       0       0       0
  2531 ;;      Locals:         0       0       0       0       0       0       0
  2532 ;;      Temps:          0       0       0       0       0       0       0
  2533 ;;      Totals:         0       0       0       0       0       0       0
  2534 ;;Total ram usage:        0 bytes
  2535 ;; Hardware stack levels used:    1
  2536 ;; This function calls:
  2537 ;;		Nothing
  2538 ;; This function is called by:
  2539 ;;		_INTERRUPT_InterruptManager
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           	psect	text22
  2544  000590                     __ptext22:
  2545                           	opt stack 0
  2546  000590                     _EUSART1_Receive_ISR:
  2547                           	opt stack 24
  2548                           
  2549                           ;eusart1.c: 184: if(1 == RC1STAbits.OERR)
  2550                           
  2551                           ;incstack = 0
  2552  000590  A2AB               	btfss	4011,1,c	;volatile
  2553  000592  D002               	goto	i2l1632
  2554                           
  2555                           ;eusart1.c: 185: {
  2556                           ;eusart1.c: 188: RC1STAbits.CREN = 0;
  2557  000594  98AB               	bcf	4011,4,c	;volatile
  2558                           
  2559                           ;eusart1.c: 189: RC1STAbits.CREN = 1;
  2560  000596  88AB               	bsf	4011,4,c	;volatile
  2561  000598                     i2l1632:
  2562                           
  2563                           ;eusart1.c: 190: }
  2564                           ;eusart1.c: 193: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  2565  000598  502E               	movf	_eusart1RxHead,w,c
  2566  00059A  0D01               	mullw	1
  2567  00059C  0100               	movlb	0	; () banked
  2568  00059E  0E90               	movlw	low _eusart1RxBuffer
  2569  0005A0  24F3               	addwf	prodl,w,c
  2570  0005A2  6ED9               	movwf	fsr2l,c
  2571  0005A4  0100               	movlb	0	; () banked
  2572  0005A6  0E00               	movlw	high _eusart1RxBuffer
  2573  0005A8  20F4               	addwfc	prodh,w,c
  2574  0005AA  6EDA               	movwf	fsr2h,c
  2575  0005AC  CFAE FFDF          	movff	4014,indf2	;volatile
  2576                           
  2577                           ; BSR set to: 0
  2578  0005B0  2A2E               	incf	_eusart1RxHead,f,c
  2579                           
  2580                           ; BSR set to: 0
  2581                           ;eusart1.c: 194: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  2582  0005B2  0E1F               	movlw	31
  2583  0005B4  642E               	cpfsgt	_eusart1RxHead,c
  2584  0005B6  D002               	goto	i2l1640
  2585                           
  2586                           ; BSR set to: 0
  2587                           ;eusart1.c: 195: {
  2588                           ;eusart1.c: 196: eusart1RxHead = 0;
  2589  0005B8  0E00               	movlw	0
  2590  0005BA  6E2E               	movwf	_eusart1RxHead,c
  2591  0005BC                     i2l1640:
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;eusart1.c: 197: }
  2595                           ;eusart1.c: 198: eusart1RxCount++;
  2596  0005BC  2A2D               	incf	_eusart1RxCount,f,c	;volatile
  2597                           
  2598                           ; BSR set to: 0
  2599  0005BE  0012               	return	
  2600  0005C0                     __end_of_EUSART1_Receive_ISR:
  2601                           	opt stack 0
  2602                           pclatu	equ	0xFFB
  2603                           pclath	equ	0xFFA
  2604                           tblptru	equ	0xFF8
  2605                           tblptrh	equ	0xFF7
  2606                           tblptrl	equ	0xFF6
  2607                           tablat	equ	0xFF5
  2608                           prodh	equ	0xFF4
  2609                           prodl	equ	0xFF3
  2610                           intcon	equ	0xFF2
  2611                           intcon2	equ	0xFF1
  2612                           postinc0	equ	0xFEE
  2613                           fsr0h	equ	0xFEA
  2614                           fsr0l	equ	0xFE9
  2615                           wreg	equ	0xFE8
  2616                           fsr1h	equ	0xFE2
  2617                           fsr1l	equ	0xFE1
  2618                           indf2	equ	0xFDF
  2619                           postinc2	equ	0xFDE
  2620                           postdec2	equ	0xFDD
  2621                           fsr2h	equ	0xFDA
  2622                           fsr2l	equ	0xFD9
  2623                           status	equ	0xFD8
  2624                           
  2625 ;; *************** function _ADC_ISR *****************
  2626 ;; Defined at:
  2627 ;;		line 128 in file "mcc_generated_files/adc.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;		None
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;		None
  2632 ;; Return value:  Size  Location     Type
  2633 ;;		None               void
  2634 ;; Registers used:
  2635 ;;		None
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2641 ;;      Params:         0       0       0       0       0       0       0
  2642 ;;      Locals:         0       0       0       0       0       0       0
  2643 ;;      Temps:          0       0       0       0       0       0       0
  2644 ;;      Totals:         0       0       0       0       0       0       0
  2645 ;;Total ram usage:        0 bytes
  2646 ;; Hardware stack levels used:    1
  2647 ;; This function calls:
  2648 ;;		Nothing
  2649 ;; This function is called by:
  2650 ;;		_INTERRUPT_InterruptManager
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text23
  2655  0006AE                     __ptext23:
  2656                           	opt stack 0
  2657  0006AE                     _ADC_ISR:
  2658                           	opt stack 24
  2659                           
  2660                           ;adc.c: 131: PIR1bits.ADIF = 0;
  2661                           
  2662                           ; BSR set to: 0
  2663                           ;incstack = 0
  2664  0006AE  9C9E               	bcf	3998,6,c	;volatile
  2665  0006B0  0012               	return	
  2666  0006B2                     __end_of_ADC_ISR:
  2667                           	opt stack 0
  2668  0000                     pclatu	equ	0xFFB
  2669                           pclath	equ	0xFFA
  2670                           tblptru	equ	0xFF8
  2671                           tblptrh	equ	0xFF7
  2672                           tblptrl	equ	0xFF6
  2673                           tablat	equ	0xFF5
  2674                           prodh	equ	0xFF4
  2675                           prodl	equ	0xFF3
  2676                           intcon	equ	0xFF2
  2677                           intcon2	equ	0xFF1
  2678                           postinc0	equ	0xFEE
  2679                           fsr0h	equ	0xFEA
  2680                           fsr0l	equ	0xFE9
  2681                           wreg	equ	0xFE8
  2682                           fsr1h	equ	0xFE2
  2683                           fsr1l	equ	0xFE1
  2684                           indf2	equ	0xFDF
  2685                           postinc2	equ	0xFDE
  2686                           postdec2	equ	0xFDD
  2687                           fsr2h	equ	0xFDA
  2688                           fsr2l	equ	0xFD9
  2689                           status	equ	0xFD8
  2690                           pclatu	equ	0xFFB
  2691                           pclath	equ	0xFFA
  2692                           tblptru	equ	0xFF8
  2693                           tblptrh	equ	0xFF7
  2694                           tblptrl	equ	0xFF6
  2695                           tablat	equ	0xFF5
  2696                           prodh	equ	0xFF4
  2697                           prodl	equ	0xFF3
  2698                           intcon	equ	0xFF2
  2699                           intcon2	equ	0xFF1
  2700                           postinc0	equ	0xFEE
  2701                           fsr0h	equ	0xFEA
  2702                           fsr0l	equ	0xFE9
  2703                           wreg	equ	0xFE8
  2704                           fsr1h	equ	0xFE2
  2705                           fsr1l	equ	0xFE1
  2706                           indf2	equ	0xFDF
  2707                           postinc2	equ	0xFDE
  2708                           postdec2	equ	0xFDD
  2709                           fsr2h	equ	0xFDA
  2710                           fsr2l	equ	0xFD9
  2711                           status	equ	0xFD8
  2712                           
  2713                           	psect	rparam
  2714  0000                     pclatu	equ	0xFFB
  2715                           pclath	equ	0xFFA
  2716                           tblptru	equ	0xFF8
  2717                           tblptrh	equ	0xFF7
  2718                           tblptrl	equ	0xFF6
  2719                           tablat	equ	0xFF5
  2720                           prodh	equ	0xFF4
  2721                           prodl	equ	0xFF3
  2722                           intcon	equ	0xFF2
  2723                           intcon2	equ	0xFF1
  2724                           postinc0	equ	0xFEE
  2725                           fsr0h	equ	0xFEA
  2726                           fsr0l	equ	0xFE9
  2727                           wreg	equ	0xFE8
  2728                           fsr1h	equ	0xFE2
  2729                           fsr1l	equ	0xFE1
  2730                           indf2	equ	0xFDF
  2731                           postinc2	equ	0xFDE
  2732                           postdec2	equ	0xFDD
  2733                           fsr2h	equ	0xFDA
  2734                           fsr2l	equ	0xFD9
  2735                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         141
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     26      78
    BANK0           160     10     102
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Delay
    _PDUStartup->_EnableSlavePower
    _StartUp595->_Delay
    _writeRegisters->_Delay
    _EnableSlavePower->_SetPin595
    _ComputeStorageData->_DATAEE_ReadByte

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_TMR1_ISR

Critical Paths under _main in BANK0

    _Update->_writeRegisters
    _StartUp595->_Clear595
    _Clear595->_writeRegisters
    _EnableSlavePower->_SetPin595

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9868
                              _Delay
                         _PDUStartup
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PDUStartup                                           0     0      0    9030
                 _ComputeStorageData
                   _EnableSlavePower
                         _StartUp595
                             _Update
 ---------------------------------------------------------------------------------
 (2) _Update                                               0     0      0    1005
                     _writeRegisters
 ---------------------------------------------------------------------------------
 (2) _StartUp595                                           0     0      0    1942
                           _Clear595
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Clear595                                             4     4      0    1104
                                              6 BANK0      4     4      0
                     _writeRegisters
 ---------------------------------------------------------------------------------
 (3) _writeRegisters                                       6     6      0    1005
                                              0 BANK0      6     6      0
                              _Delay
 ---------------------------------------------------------------------------------
 (4) _Delay                                                9     5      4     838
                                             17 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) _EnableSlavePower                                     3     1      2    6008
                                             23 COMRAM     3     1      2
                          _SetPin595
 ---------------------------------------------------------------------------------
 (3) _SetPin595                                           10     4      6    5637
                                             17 COMRAM     6     0      6
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _ComputeStorageData                                   4     4      0      75
                                             18 COMRAM     4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      1     1      0      15
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          14    14      0       0
                                              3 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay
   _PDUStartup
     _ComputeStorageData
       _DATAEE_ReadByte
     _EnableSlavePower
       _SetPin595
     _StartUp595
       _Clear595
         _writeRegisters
           _Delay
       _Delay
     _Update
       _writeRegisters
         _Delay
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _TMR1_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      A      66       4       63.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1A      4E       1       82.1%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B4       9        0.0%
DATA                 0      0      B4      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu May 28 23:55:39 2015

           _eusart1TxBufferRemaining 004E                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                                  l283 0188  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                                u767 04B8                      _timer1ReloadVal 004C  
                    __end_of_ADC_ISR 06B2                                  prod 000FF3  
                                wreg 000FE8                         __CFG_LVP$OFF 000000  
                               l1200 02A2                                 l1804 044C  
                               l1830 020C                                 l1822 0194  
                               l1832 022A                                 l1824 01B2  
                               l1760 04CC                                 l1826 01D0  
                               l1828 01EE                                 l1836 0248  
                               l1756 04B2                                 l1780 0148  
                               l1782 0152                                 l1856 0532  
                               _LATA 000F89                                 _LATB 000F8A  
                               _LATC 000F8B                                 _LATD 000F8C  
                               _LATE 000F8D                                 i2l93 058C  
                               _TMR1 000FCE                                 _WPUB 000F61  
                               _data 0019                                 _main 0526  
           __end_of_EnableSlavePower 0270                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                      __CFG_BORV$190 000000                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 00A8                        __CFG_IESO$OFF 000000  
     __size_of_OSCILLATOR_Initialize 000E        __end_of_OSCILLATOR_Initialize 0698  
                              ?_main 0032                                _EEADR 000FA9  
                    _TMR1_StartTimer 06AA                                _T1CON 000FCD  
                              _LATB0 007C50                                _LATA3 007C4B  
                              _LATD4 007C64                                _LATD5 007C65  
                              _LATD6 007C66                                _LATD7 007C67  
                     __CFG_DEBUG$OFF 000000                                i2l160 004C  
                              i2l162 0058                                i2l164 0064  
                              i2l168 006E                          ?_PDUStartup 0032  
                              _TMR1H 000FCF                                _TMR1L 000FCE  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                                _TRISD 000F95  
                              _TRISE 000F96                                _Delay 04A0  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
               _EUSART1_Transmit_ISR 0560                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                   ??_writeRegisters 00BC                     __end_of_TMR1_ISR 0676  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                      _DATAEE_ReadByte 0676  
                     __CFG_EBTRB$OFF 000000                   __CFG_MCLRE$EXTMCLR 000000  
            __end_of_TMR1_Initialize 062E                                tablat 000FF5  
                              status 000FD8                     __end_of_Clear595 0452  
                     __CFG_HFOFST$ON 000000                       __CFG_PBADEN$ON 000000  
                    __initialization 05EA           __end_of_EUSART1_Initialize 0526  
                       __end_of_main 0560                           _CurrentADC 0001  
                          ??_ADC_ISR 0032          ?_INTERRUPT_InterruptManager 0032  
                             ??_main 004C                        __activetblptr 000002  
                             ?_Delay 0043                ?_EUSART1_Transmit_ISR 0032  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               _EEDATA 000FA8  
                             _EECON2 000FA7                               _ANSELA 000F38  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             _ANSELD 000F3B                               _ANSELE 000F3C  
                             _T1GCON 000FCC                               _RC1STA 000FAB  
                             i2l1224 0588                               Delay@i 0048  
                             i2l1640 05BC                               i2l1632 0598  
                     __CFG_WDTEN$OFF 000000                               _TABLAT 000FF5  
                             _RCREG1 000FAE                               _OSCCON 000FD3  
                             _SPBRG1 000FAF                               _TX1STA 000FAC  
                             _TXREG1 000FAD                  __size_of_PDUStartup 002A  
                     __CFG_XINST$OFF 000000                               _Update 06A4  
                 __size_of_SetPin595 006C              __end_of_TMR1_StartTimer 06AE  
                     __CFG_STVREN$ON 000000                               clear_0 05F0  
                             clear_1 05FC              __end_of_DATAEE_ReadByte 068A  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                           _StartUp595 0394  
                    _eusart1RxBuffer 0090        __size_of_INTERRUPT_Initialize 000C  
                    _eusart1TxBuffer 0025                     ?_TMR1_Initialize 0032  
                  _SYSTEM_Initialize 062E                           __accesstop 0060  
            __end_of__initialization 0602                   ?_SYSTEM_Initialize 0032  
                      __end_of_Delay 04EA                       __pcstackCOMRAM 0032  
                ??_SYSTEM_Initialize 0043                            ?_TMR1_ISR 0032  
        __size_of_ComputeStorageData 00B8                          _Currentcomp 000D  
             ??_EUSART1_Transmit_ISR 0032                            ?_Clear595 0032  
                            ??_Delay 0047          __end_of_EUSART1_Receive_ISR 05C0  
                  __end_of_SetPin595 0394            __end_of_SYSTEM_Initialize 0648  
                      _eusart1RxHead 002E                        _eusart1TxHead 0030  
                      _eusart1RxTail 002F                           __pbssBANK0 0060  
                      _eusart1TxTail 0031                      __CFG_PLLCFG$OFF 000000  
                         __pnvCOMRAM 004C                    ?_EnableSlavePower 0049  
                 ??_EnableSlavePower 004B                   __CFG_CCP2MX$PORTC1 000000  
                            ?_Update 0032                     ?_TMR1_StartTimer 0032  
                         ??_TMR1_ISR 0032                   __CFG_CCP3MX$PORTB5 000000  
                            _ADC_ISR 06AE              __size_of_ADC_Initialize 0018  
                   ?_DATAEE_ReadByte 0032                         ??_PDUStartup 004C  
                         ??_Clear595 00C2                              _OSCCON2 000FD2  
                            _TBLPTRH 000FF7                              _TBLPTRL 000FF6  
                            _TBLPTRU 000FF8                          ?_StartUp595 0032  
                  __CFG_PRICLKEN$OFF 000000                              _OSCTUNE 000F9B  
                            _SPBRGH1 000FB0                              _Current 00B0  
                    __CFG_PWRTEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000                   __end_of_PDUStartup 05EA  
                    __size_of_Update 0006                              __pcinit 05EA  
                            __ramtop 0600                              __ptext0 0526  
                            __ptext1 062E                              __ptext2 060C  
                            __ptext3 06AA                              __ptext4 0452  
                            __ptext5 068A                              __ptext6 0698  
                            __ptext7 04EA                              __ptext8 0648  
                            __ptext9 05C0                            _T1CONbits 000FCD  
              _OSCILLATOR_Initialize 068A                   _EUSART1_Initialize 04EA  
           ??_PIN_MANAGER_Initialize 0043                            Clear595@i 00C4  
         __size_of_SYSTEM_Initialize 001A                 end_of_initialization 0602  
                          Delay@wait 0043                  ?_EUSART1_Initialize 0032  
                      __Lmediumconst 0000                              postdec2 000FDD  
                __size_of_StartUp595 0060                              postinc0 000FEE  
                            postinc2 000FDE                         SetPin595@Reg 0043  
               ??_EUSART1_Initialize 0043                         SetPin595@pin 0045  
            __size_of_writeRegisters 00E4         __end_of_INTERRUPT_Initialize 06A4  
                     __end_of_Update 06AA                    __size_of_TMR1_ISR 0016  
                     _ADC_Initialize 0648               ?_OSCILLATOR_Initialize 0032  
                start_initialization 05EA      __size_of_PIN_MANAGER_Initialize 004E  
              EnableSlavePower@slave 004B                    __size_of_Clear595 005E  
                          _SetPin595 0328                  DATAEE_ReadByte@bAdd 0043  
           __size_of_TMR1_Initialize 0022                             ??_Update 004C  
             __end_of_ADC_Initialize 0660           __end_of_ComputeStorageData 0328  
                           ?_ADC_ISR 0032            __size_of_EnableSlavePower 00E0  
                     _eusart1RxCount 002D                          __pbssCOMRAM 0001  
      __size_of_EUSART1_Transmit_ISR 0030                        __pcstackBANK0 00BC  
                       ??_StartUp595 004C         __size_of_EUSART1_Receive_ISR 0030  
                         ?_SetPin595 0043               _PIN_MANAGER_Initialize 0452  
                          __pintcode 0008                   __end_of_StartUp595 03F4  
                    ?_ADC_Initialize 0032         ??_INTERRUPT_InterruptManager 0035  
                           _BAUD1CON 000FB8             __size_of_TMR1_StartTimer 0004  
                     __size_of_Delay 004A             __size_of_DATAEE_ReadByte 0014  
               _INTERRUPT_Initialize 0698                       _writeRegisters 00AC  
                          _registers 0060                             _IPR1bits 000F9F  
                           _PIE1bits 000F9D  __size_of_INTERRUPT_InterruptManager 00A0  
                           _PIR1bits 000F9E                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                             _TMR1_ISR 0660  
                  ??_TMR1_Initialize 0043                     __size_of_ADC_ISR 0004  
                         _ADCON0bits 000FC2                             _Clear595 03F4  
                        _INTCON2bits 000FF1                ?_INTERRUPT_Initialize 0032  
             __end_of_writeRegisters 0190                          ??_SetPin595 00BC  
               EnableSlavePower@onof 0049                           _EECON1bits 000FA6  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000                    __CFG_P2BMX$PORTD2 000000  
            ??_OSCILLATOR_Initialize 0043          __size_of_EUSART1_Initialize 003C  
                   _EnableSlavePower 0190                             __ptext10 06A4  
                           __ptext11 0394                             __ptext20 0660  
                           __ptext12 03F4                             __ptext21 0560  
                           __ptext13 00AC                           _T1GCONbits 000FCC  
                           __ptext22 0590                             __ptext14 04A0  
                           __ptext23 06AE                             __ptext15 0190  
                           __ptext16 0328                             __ptext17 0270  
                           __ptext18 0676                    ??_TMR1_StartTimer 0043  
                    ?_writeRegisters 0032                        __size_of_main 003A  
                  ??_DATAEE_ReadByte 0043                           _RC1STAbits 000FAB  
                  writeRegisters@val 00BE   __end_of_INTERRUPT_InterruptManager 00A8  
         _INTERRUPT_InterruptManager 0008                  _EUSART1_Receive_ISR 0590  
                         _INTCONbits 000FF2                  ComputeStorageData@i 0046  
                 _ComputeStorageData 0270               ??_INTERRUPT_Initialize 0043  
                           intlevel2 0000                 ?_EUSART1_Receive_ISR 0032  
                ?_ComputeStorageData 0032              ?_PIN_MANAGER_Initialize 0032  
                     SetPin595@value 0047         __end_of_EUSART1_Transmit_ISR 0590  
                   ??_ADC_Initialize 0043                 ??_ComputeStorageData 0044  
                         _PDUStartup 05C0                    __CFG_T3CMX$PORTC0 000000  
                    writeRegisters@i 00C0                ??_EUSART1_Receive_ISR 0032  
     __end_of_PIN_MANAGER_Initialize 04A0                    __CFG_FOSC$INTIO67 000000  
                    _TMR1_Initialize 060C  
