

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed May 27 20:55:48 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    25  0000                     
    26                           	psect	nvCOMRAM
    27  000051                     __pnvCOMRAM:
    28                           	opt stack 0
    29  000051                     _eusart1TxBufferRemaining:
    30                           	opt stack 0
    31  000051                     	ds	1
    32  0000                     _ANSELA	set	3896
    33  0000                     _ANSELB	set	3897
    34  0000                     _ANSELC	set	3898
    35  0000                     _ANSELD	set	3899
    36  0000                     _ANSELE	set	3900
    37  0000                     _ADCON0	set	4034
    38  0000                     _ADCON0bits	set	4034
    39  0000                     _ADCON1	set	4033
    40  0000                     _ADCON2	set	4032
    41  0000                     _ADRESH	set	4036
    42  0000                     _ADRESL	set	4035
    43  0000                     _BAUD1CON	set	4024
    44  0000                     _INTCON2bits	set	4081
    45  0000                     _INTCONbits	set	4082
    46  0000                     _IPR1bits	set	3999
    47  0000                     _LATA	set	3977
    48  0000                     _LATB	set	3978
    49  0000                     _LATC	set	3979
    50  0000                     _LATD	set	3980
    51  0000                     _LATE	set	3981
    52  0000                     _OSCCON	set	4051
    53  0000                     _OSCCON2	set	4050
    54  0000                     _OSCTUNE	set	3995
    55  0000                     _PIE1bits	set	3997
    56  0000                     _PIR1bits	set	3998
    57  0000                     _RC1STA	set	4011
    58  0000                     _RC1STAbits	set	4011
    59  0000                     _RCONbits	set	4048
    60  0000                     _RCREG1	set	4014
    61  0000                     _SPBRG1	set	4015
    62  0000                     _SPBRGH1	set	4016
    63  0000                     _TRISA	set	3986
    64  0000                     _TRISB	set	3987
    65  0000                     _TRISC	set	3988
    66  0000                     _TRISD	set	3989
    67  0000                     _TRISE	set	3990
    68  0000                     _TX1STA	set	4012
    69  0000                     _TXREG1	set	4013
    70  0000                     _WPUB	set	3937
    71  0000                     _LATA3	set	31819
    72  0000                     _LATB0	set	31824
    73  0000                     _LATB1	set	31825
    74  0000                     _LATD5	set	31845
    75  0000                     _LATD6	set	31846
    76  0000                     _LATD7	set	31847
    77                           
    78                           ; #config settings
    79  0000                     
    80                           	psect	cinit
    81  000228                     __pcinit:
    82                           	opt stack 0
    83  000228                     start_initialization:
    84                           	opt stack 0
    85  000228                     __initialization:
    86                           	opt stack 0
    87                           
    88                           ; Clear objects allocated to BANK0 (32 bytes)
    89  000228  EE00  F060         	lfsr	0,__pbssBANK0
    90  00022C  0E20               	movlw	32
    91  00022E                     clear_0:
    92  00022E  6AEE               	clrf	postinc0,c
    93  000230  06E8               	decf	wreg,f,c
    94  000232  E1FD               	bnz	clear_0
    95                           
    96                           ; Clear objects allocated to COMRAM (61 bytes)
    97  000234  EE00  F001         	lfsr	0,__pbssCOMRAM
    98  000238  0E3D               	movlw	61
    99  00023A                     clear_1:
   100  00023A  6AEE               	clrf	postinc0,c
   101  00023C  06E8               	decf	wreg,f,c
   102  00023E  E1FD               	bnz	clear_1
   103  000240                     end_of_initialization:
   104                           	opt stack 0
   105  000240                     __end_of__initialization:
   106                           	opt stack 0
   107  000240  0E00               	movlw	low (__Lmediumconst shr (0+16))
   108  000242  6EF8               	movwf	tblptru,c
   109  000244  0100               	movlb	0
   110  000246  EFA4  F000         	goto	_main	;jump to C main() function
   111                           tblptru	equ	0xFF8
   112                           postinc0	equ	0xFEE
   113                           wreg	equ	0xFE8
   114                           
   115                           	psect	bssCOMRAM
   116  000001                     __pbssCOMRAM:
   117                           	opt stack 0
   118  000001                     _registers:
   119                           	opt stack 0
   120  000001                     	ds	48
   121  000031                     _eusart1TxBuffer:
   122                           	opt stack 0
   123  000031                     	ds	8
   124  000039                     _eusart1RxCount:
   125                           	opt stack 0
   126  000039                     	ds	1
   127  00003A                     _eusart1RxHead:
   128                           	opt stack 0
   129  00003A                     	ds	1
   130  00003B                     _eusart1RxTail:
   131                           	opt stack 0
   132  00003B                     	ds	1
   133  00003C                     _eusart1TxHead:
   134                           	opt stack 0
   135  00003C                     	ds	1
   136  00003D                     _eusart1TxTail:
   137                           	opt stack 0
   138  00003D                     	ds	1
   139                           tblptru	equ	0xFF8
   140                           postinc0	equ	0xFEE
   141                           wreg	equ	0xFE8
   142                           
   143                           	psect	bssBANK0
   144  000060                     __pbssBANK0:
   145                           	opt stack 0
   146  000060                     _eusart1RxBuffer:
   147                           	opt stack 0
   148  000060                     	ds	32
   149                           tblptru	equ	0xFF8
   150                           postinc0	equ	0xFEE
   151                           wreg	equ	0xFE8
   152                           
   153                           	psect	cstackBANK0
   154  000080                     __pcstackBANK0:
   155                           	opt stack 0
   156  000080                     Delay@i:
   157                           	opt stack 0
   158                           
   159                           ; 4 bytes @ 0x0
   160  000080                     	ds	4
   161                           tblptru	equ	0xFF8
   162                           postinc0	equ	0xFEE
   163                           wreg	equ	0xFE8
   164                           
   165                           	psect	cstackCOMRAM
   166  00003E                     __pcstackCOMRAM:
   167                           	opt stack 0
   168  00003E                     ??_INTERRUPT_InterruptManager:
   169  00003E                     
   170                           ; 0 bytes @ 0x0
   171  00003E                     	ds	14
   172  00004C                     Delay@wait:
   173                           	opt stack 0
   174                           
   175                           ; 4 bytes @ 0xE
   176  00004C                     	ds	4
   177  000050                     ??_Delay:
   178                           
   179                           ; 0 bytes @ 0x12
   180  000050                     	ds	1
   181  000051                     tblptru	equ	0xFF8
   182                           postinc0	equ	0xFEE
   183                           wreg	equ	0xFE8
   184                           
   185                           ; 0 bytes @ 0x13
   186 ;;
   187 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   188 ;;
   189 ;; *************** function _main *****************
   190 ;; Defined at:
   191 ;;		line 7 in file "main.c"
   192 ;; Parameters:    Size  Location     Type
   193 ;;		None
   194 ;; Auto vars:     Size  Location     Type
   195 ;;		None
   196 ;; Return value:  Size  Location     Type
   197 ;;		None               void
   198 ;; Registers used:
   199 ;;		wreg, status,2, status,0, cstack
   200 ;; Tracked objects:
   201 ;;		On entry : 0/0
   202 ;;		On exit  : 0/0
   203 ;;		Unchanged: 0/0
   204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   205 ;;      Params:         0       0       0       0       0       0       0
   206 ;;      Locals:         0       0       0       0       0       0       0
   207 ;;      Temps:          0       0       0       0       0       0       0
   208 ;;      Totals:         0       0       0       0       0       0       0
   209 ;;Total ram usage:        0 bytes
   210 ;; Hardware stack levels required when called:    4
   211 ;; This function calls:
   212 ;;		_Delay
   213 ;;		_SYSTEM_Initialize
   214 ;; This function is called by:
   215 ;;		Startup code after reset
   216 ;; This function uses a non-reentrant model
   217 ;;
   218                           
   219                           	psect	text0
   220  000148                     __ptext0:
   221                           	opt stack 0
   222  000148                     _main:
   223                           	opt stack 27
   224                           
   225                           ;main.c: 10: SYSTEM_Initialize();
   226                           
   227                           ;incstack = 0
   228  000148  EC31  F001         	call	_SYSTEM_Initialize	;wreg free
   229                           
   230                           ;main.c: 28: (INTCONbits.GIE = 1);
   231  00014C  8EF2               	bsf	intcon,7,c	;volatile
   232                           
   233                           ;main.c: 31: (INTCONbits.PEIE = 1);
   234  00014E  8CF2               	bsf	intcon,6,c	;volatile
   235  000150  D000               	goto	l1211
   236  000152                     l1211:
   237                           
   238                           ;main.c: 40: {
   239                           ;main.c: 41: Delay(500);
   240  000152  0EF4               	movlw	244
   241  000154  6E4C               	movwf	Delay@wait,c
   242  000156  0E01               	movlw	1
   243  000158  6E4D               	movwf	Delay@wait+1,c
   244  00015A  0E00               	movlw	0
   245  00015C  6E4E               	movwf	Delay@wait+2,c
   246  00015E  0E00               	movlw	0
   247  000160  6E4F               	movwf	Delay@wait+3,c
   248  000162  EC51  F000         	call	_Delay	;wreg free
   249  000166  D000               	goto	l1213
   250  000168                     l1213:
   251  000168  8689               	bsf	3977,3,c	;volatile
   252  00016A  D000               	goto	l1215
   253  00016C                     l1215:
   254                           
   255                           ;main.c: 43: Delay(500);
   256  00016C  0EF4               	movlw	244
   257  00016E  6E4C               	movwf	Delay@wait,c
   258  000170  0E01               	movlw	1
   259  000172  6E4D               	movwf	Delay@wait+1,c
   260  000174  0E00               	movlw	0
   261  000176  6E4E               	movwf	Delay@wait+2,c
   262  000178  0E00               	movlw	0
   263  00017A  6E4F               	movwf	Delay@wait+3,c
   264  00017C  EC51  F000         	call	_Delay	;wreg free
   265  000180  D000               	goto	l1217
   266  000182                     l1217:
   267  000182  9689               	bcf	3977,3,c	;volatile
   268  000184  D7E6               	goto	l1211
   269  000186  EF4F  F000         	goto	start
   270  00018A                     __end_of_main:
   271                           	opt stack 0
   272                           tblptru	equ	0xFF8
   273                           intcon	equ	0xFF2
   274                           postinc0	equ	0xFEE
   275                           wreg	equ	0xFE8
   276                           
   277 ;; *************** function _SYSTEM_Initialize *****************
   278 ;; Defined at:
   279 ;;		line 112 in file "mcc_generated_files/mcc.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;		None
   282 ;; Auto vars:     Size  Location     Type
   283 ;;		None
   284 ;; Return value:  Size  Location     Type
   285 ;;		None               void
   286 ;; Registers used:
   287 ;;		wreg, status,2, cstack
   288 ;; Tracked objects:
   289 ;;		On entry : 0/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   293 ;;      Params:         0       0       0       0       0       0       0
   294 ;;      Locals:         0       0       0       0       0       0       0
   295 ;;      Temps:          0       0       0       0       0       0       0
   296 ;;      Totals:         0       0       0       0       0       0       0
   297 ;;Total ram usage:        0 bytes
   298 ;; Hardware stack levels used:    1
   299 ;; Hardware stack levels required when called:    3
   300 ;; This function calls:
   301 ;;		_ADC_Initialize
   302 ;;		_EUSART1_Initialize
   303 ;;		_INTERRUPT_Initialize
   304 ;;		_OSCILLATOR_Initialize
   305 ;;		_PIN_MANAGER_Initialize
   306 ;; This function is called by:
   307 ;;		_main
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           	psect	text1
   312  000262                     __ptext1:
   313                           	opt stack 0
   314  000262                     _SYSTEM_Initialize:
   315                           	opt stack 27
   316                           
   317                           ;mcc.c: 114: OSCILLATOR_Initialize();
   318                           
   319                           ;incstack = 0
   320  000262  EC3C  F001         	call	_OSCILLATOR_Initialize	;wreg free
   321                           
   322                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   323  000266  EC7D  F000         	call	_PIN_MANAGER_Initialize	;wreg free
   324                           
   325                           ;mcc.c: 116: INTERRUPT_Initialize();
   326  00026A  EC43  F001         	call	_INTERRUPT_Initialize	;wreg free
   327                           
   328                           ;mcc.c: 117: EUSART1_Initialize();
   329  00026E  ECC5  F000         	call	_EUSART1_Initialize	;wreg free
   330                           
   331                           ;mcc.c: 118: ADC_Initialize();
   332  000272  EC25  F001         	call	_ADC_Initialize	;wreg free
   333  000276  0012               	return		;funcret
   334  000278                     __end_of_SYSTEM_Initialize:
   335                           	opt stack 0
   336                           tblptru	equ	0xFF8
   337                           intcon	equ	0xFF2
   338                           postinc0	equ	0xFEE
   339                           wreg	equ	0xFE8
   340                           
   341 ;; *************** function _PIN_MANAGER_Initialize *****************
   342 ;; Defined at:
   343 ;;		line 6 in file "mcc_generated_files/pin_manager.c"
   344 ;; Parameters:    Size  Location     Type
   345 ;;		None
   346 ;; Auto vars:     Size  Location     Type
   347 ;;		None
   348 ;; Return value:  Size  Location     Type
   349 ;;		None               void
   350 ;; Registers used:
   351 ;;		wreg, status,2
   352 ;; Tracked objects:
   353 ;;		On entry : 0/0
   354 ;;		On exit  : 0/0
   355 ;;		Unchanged: 0/0
   356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   357 ;;      Params:         0       0       0       0       0       0       0
   358 ;;      Locals:         0       0       0       0       0       0       0
   359 ;;      Temps:          0       0       0       0       0       0       0
   360 ;;      Totals:         0       0       0       0       0       0       0
   361 ;;Total ram usage:        0 bytes
   362 ;; Hardware stack levels used:    1
   363 ;; Hardware stack levels required when called:    2
   364 ;; This function calls:
   365 ;;		Nothing
   366 ;; This function is called by:
   367 ;;		_SYSTEM_Initialize
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371                           	psect	text2
   372  0000FA                     __ptext2:
   373                           	opt stack 0
   374  0000FA                     _PIN_MANAGER_Initialize:
   375                           	opt stack 27
   376                           
   377                           ;pin_manager.c: 8: LATA = 0x00;
   378                           
   379                           ;incstack = 0
   380  0000FA  0E00               	movlw	0
   381  0000FC  6E89               	movwf	3977,c	;volatile
   382                           
   383                           ;pin_manager.c: 9: TRISA = 0xE7;
   384  0000FE  0EE7               	movlw	231
   385  000100  6E92               	movwf	3986,c	;volatile
   386                           
   387                           ;pin_manager.c: 10: ANSELA = 0x27;
   388  000102  0E27               	movlw	39
   389  000104  010F               	movlb	15	; () banked
   390  000106  6F38               	movwf	56,b	;volatile
   391                           
   392                           ;pin_manager.c: 12: LATB = 0x03;
   393  000108  0E03               	movlw	3
   394  00010A  6E8A               	movwf	3978,c	;volatile
   395                           
   396                           ;pin_manager.c: 13: TRISB = 0xFC;
   397  00010C  0EFC               	movlw	252
   398  00010E  6E93               	movwf	3987,c	;volatile
   399                           
   400                           ;pin_manager.c: 14: ANSELB = 0x3C;
   401  000110  0E3C               	movlw	60
   402  000112  010F               	movlb	15	; () banked
   403  000114  6F39               	movwf	57,b	;volatile
   404                           
   405                           ;pin_manager.c: 15: WPUB = 0x00;
   406  000116  0E00               	movlw	0
   407  000118  6E61               	movwf	3937,c	;volatile
   408                           
   409                           ;pin_manager.c: 17: LATC = 0x00;
   410  00011A  0E00               	movlw	0
   411  00011C  6E8B               	movwf	3979,c	;volatile
   412                           
   413                           ;pin_manager.c: 18: TRISC = 0xDF;
   414  00011E  0EDF               	movlw	223
   415  000120  6E94               	movwf	3988,c	;volatile
   416                           
   417                           ;pin_manager.c: 19: ANSELC = 0x1C;
   418  000122  0E1C               	movlw	28
   419  000124  010F               	movlb	15	; () banked
   420  000126  6F3A               	movwf	58,b	;volatile
   421                           
   422                           ;pin_manager.c: 21: LATD = 0x00;
   423  000128  0E00               	movlw	0
   424  00012A  6E8C               	movwf	3980,c	;volatile
   425                           
   426                           ;pin_manager.c: 22: TRISD = 0x1F;
   427  00012C  0E1F               	movlw	31
   428  00012E  6E95               	movwf	3989,c	;volatile
   429                           
   430                           ;pin_manager.c: 23: ANSELD = 0x1F;
   431  000130  0E1F               	movlw	31
   432  000132  010F               	movlb	15	; () banked
   433  000134  6F3B               	movwf	59,b	;volatile
   434                           
   435                           ;pin_manager.c: 25: LATE = 0x00;
   436  000136  0E00               	movlw	0
   437  000138  6E8D               	movwf	3981,c	;volatile
   438                           
   439                           ;pin_manager.c: 26: TRISE = 0x07;
   440  00013A  0E07               	movlw	7
   441  00013C  6E96               	movwf	3990,c	;volatile
   442                           
   443                           ;pin_manager.c: 27: ANSELE = 0x07;
   444  00013E  0E07               	movlw	7
   445  000140  010F               	movlb	15	; () banked
   446  000142  6F3C               	movwf	60,b	;volatile
   447                           
   448                           ; BSR set to: 15
   449                           ;pin_manager.c: 29: INTCON2bits.nRBPU = 0x01;
   450  000144  8EF1               	bsf	intcon2,7,c	;volatile
   451                           
   452                           ; BSR set to: 15
   453  000146  0012               	return		;funcret
   454  000148                     __end_of_PIN_MANAGER_Initialize:
   455                           	opt stack 0
   456                           tblptru	equ	0xFF8
   457                           intcon	equ	0xFF2
   458                           intcon2	equ	0xFF1
   459                           postinc0	equ	0xFEE
   460                           wreg	equ	0xFE8
   461                           
   462 ;; *************** function _OSCILLATOR_Initialize *****************
   463 ;; Defined at:
   464 ;;		line 121 in file "mcc_generated_files/mcc.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;		None
   469 ;; Return value:  Size  Location     Type
   470 ;;		None               void
   471 ;; Registers used:
   472 ;;		wreg, status,2
   473 ;; Tracked objects:
   474 ;;		On entry : 0/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   478 ;;      Params:         0       0       0       0       0       0       0
   479 ;;      Locals:         0       0       0       0       0       0       0
   480 ;;      Temps:          0       0       0       0       0       0       0
   481 ;;      Totals:         0       0       0       0       0       0       0
   482 ;;Total ram usage:        0 bytes
   483 ;; Hardware stack levels used:    1
   484 ;; Hardware stack levels required when called:    2
   485 ;; This function calls:
   486 ;;		Nothing
   487 ;; This function is called by:
   488 ;;		_SYSTEM_Initialize
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           	psect	text3
   493  000278                     __ptext3:
   494                           	opt stack 0
   495  000278                     _OSCILLATOR_Initialize:
   496                           	opt stack 27
   497                           
   498                           ;mcc.c: 124: OSCCON = 0x60;
   499                           
   500                           ; BSR set to: 15
   501                           ;incstack = 0
   502  000278  0E60               	movlw	96
   503  00027A  6ED3               	movwf	4051,c	;volatile
   504                           
   505                           ;mcc.c: 126: OSCCON2 = 0x04;
   506  00027C  0E04               	movlw	4
   507  00027E  6ED2               	movwf	4050,c	;volatile
   508                           
   509                           ;mcc.c: 128: OSCTUNE = 0x00;
   510  000280  0E00               	movlw	0
   511  000282  6E9B               	movwf	3995,c	;volatile
   512  000284  0012               	return		;funcret
   513  000286                     __end_of_OSCILLATOR_Initialize:
   514                           	opt stack 0
   515                           tblptru	equ	0xFF8
   516                           intcon	equ	0xFF2
   517                           intcon2	equ	0xFF1
   518                           postinc0	equ	0xFEE
   519                           wreg	equ	0xFE8
   520                           
   521 ;; *************** function _INTERRUPT_Initialize *****************
   522 ;; Defined at:
   523 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;		None
   526 ;; Auto vars:     Size  Location     Type
   527 ;;		None
   528 ;; Return value:  Size  Location     Type
   529 ;;		None               void
   530 ;; Registers used:
   531 ;;		None
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   537 ;;      Params:         0       0       0       0       0       0       0
   538 ;;      Locals:         0       0       0       0       0       0       0
   539 ;;      Temps:          0       0       0       0       0       0       0
   540 ;;      Totals:         0       0       0       0       0       0       0
   541 ;;Total ram usage:        0 bytes
   542 ;; Hardware stack levels used:    1
   543 ;; Hardware stack levels required when called:    2
   544 ;; This function calls:
   545 ;;		Nothing
   546 ;; This function is called by:
   547 ;;		_SYSTEM_Initialize
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           	psect	text4
   552  000286                     __ptext4:
   553                           	opt stack 0
   554  000286                     _INTERRUPT_Initialize:
   555                           	opt stack 27
   556                           
   557                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
   558                           
   559                           ;incstack = 0
   560  000286  9ED0               	bcf	4048,7,c	;volatile
   561                           
   562                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
   563  000288  9A9F               	bcf	3999,5,c	;volatile
   564                           
   565                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
   566  00028A  989F               	bcf	3999,4,c	;volatile
   567                           
   568                           ;interrupt_manager.c: 64: IPR1bits.ADIP = 0;
   569  00028C  9C9F               	bcf	3999,6,c	;volatile
   570  00028E  0012               	return		;funcret
   571  000290                     __end_of_INTERRUPT_Initialize:
   572                           	opt stack 0
   573                           tblptru	equ	0xFF8
   574                           intcon	equ	0xFF2
   575                           intcon2	equ	0xFF1
   576                           postinc0	equ	0xFEE
   577                           wreg	equ	0xFE8
   578                           
   579 ;; *************** function _EUSART1_Initialize *****************
   580 ;; Defined at:
   581 ;;		line 76 in file "mcc_generated_files/eusart1.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;		None
   586 ;; Return value:  Size  Location     Type
   587 ;;		None               void
   588 ;; Registers used:
   589 ;;		wreg, status,2
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   595 ;;      Params:         0       0       0       0       0       0       0
   596 ;;      Locals:         0       0       0       0       0       0       0
   597 ;;      Temps:          0       0       0       0       0       0       0
   598 ;;      Totals:         0       0       0       0       0       0       0
   599 ;;Total ram usage:        0 bytes
   600 ;; Hardware stack levels used:    1
   601 ;; Hardware stack levels required when called:    2
   602 ;; This function calls:
   603 ;;		Nothing
   604 ;; This function is called by:
   605 ;;		_SYSTEM_Initialize
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           	psect	text5
   610  00018A                     __ptext5:
   611                           	opt stack 0
   612  00018A                     _EUSART1_Initialize:
   613                           	opt stack 27
   614                           
   615                           ;eusart1.c: 79: PIE1bits.RC1IE = 0;
   616                           
   617                           ;incstack = 0
   618  00018A  9A9D               	bcf	3997,5,c	;volatile
   619                           
   620                           ;eusart1.c: 80: PIE1bits.TX1IE = 0;
   621  00018C  989D               	bcf	3997,4,c	;volatile
   622                           
   623                           ;eusart1.c: 85: BAUD1CON = 0x48;
   624  00018E  0E48               	movlw	72
   625  000190  6EB8               	movwf	4024,c	;volatile
   626                           
   627                           ;eusart1.c: 88: RC1STA = 0x90;
   628  000192  0E90               	movlw	144
   629  000194  6EAB               	movwf	4011,c	;volatile
   630                           
   631                           ;eusart1.c: 91: TX1STA = 0x26;
   632  000196  0E26               	movlw	38
   633  000198  6EAC               	movwf	4012,c	;volatile
   634                           
   635                           ;eusart1.c: 94: SPBRG1 = 0x22;
   636  00019A  0E22               	movlw	34
   637  00019C  6EAF               	movwf	4015,c	;volatile
   638                           
   639                           ;eusart1.c: 97: SPBRGH1 = 0x00;
   640  00019E  0E00               	movlw	0
   641  0001A0  6EB0               	movwf	4016,c	;volatile
   642                           
   643                           ;eusart1.c: 100: TXREG1 = 0x00;
   644  0001A2  0E00               	movlw	0
   645  0001A4  6EAD               	movwf	4013,c	;volatile
   646                           
   647                           ;eusart1.c: 103: RCREG1 = 0x00;
   648  0001A6  0E00               	movlw	0
   649  0001A8  6EAE               	movwf	4014,c	;volatile
   650                           
   651                           ;eusart1.c: 107: eusart1TxHead = 0;
   652  0001AA  0E00               	movlw	0
   653  0001AC  6E3C               	movwf	_eusart1TxHead,c
   654                           
   655                           ;eusart1.c: 108: eusart1TxTail = 0;
   656  0001AE  0E00               	movlw	0
   657  0001B0  6E3D               	movwf	_eusart1TxTail,c
   658                           
   659                           ;eusart1.c: 109: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
   660  0001B2  0E08               	movlw	8
   661  0001B4  6E51               	movwf	_eusart1TxBufferRemaining,c	;volatile
   662                           
   663                           ;eusart1.c: 111: eusart1RxHead = 0;
   664  0001B6  0E00               	movlw	0
   665  0001B8  6E3A               	movwf	_eusart1RxHead,c
   666                           
   667                           ;eusart1.c: 112: eusart1RxTail = 0;
   668  0001BA  0E00               	movlw	0
   669  0001BC  6E3B               	movwf	_eusart1RxTail,c
   670                           
   671                           ;eusart1.c: 113: eusart1RxCount = 0;
   672  0001BE  0E00               	movlw	0
   673  0001C0  6E39               	movwf	_eusart1RxCount,c	;volatile
   674                           
   675                           ;eusart1.c: 116: PIE1bits.RC1IE = 1;
   676  0001C2  8A9D               	bsf	3997,5,c	;volatile
   677  0001C4  0012               	return		;funcret
   678  0001C6                     __end_of_EUSART1_Initialize:
   679                           	opt stack 0
   680                           tblptru	equ	0xFF8
   681                           intcon	equ	0xFF2
   682                           intcon2	equ	0xFF1
   683                           postinc0	equ	0xFEE
   684                           wreg	equ	0xFE8
   685                           
   686 ;; *************** function _ADC_Initialize *****************
   687 ;; Defined at:
   688 ;;		line 59 in file "mcc_generated_files/adc.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;		None
   691 ;; Auto vars:     Size  Location     Type
   692 ;;		None
   693 ;; Return value:  Size  Location     Type
   694 ;;		None               void
   695 ;; Registers used:
   696 ;;		wreg, status,2
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   702 ;;      Params:         0       0       0       0       0       0       0
   703 ;;      Locals:         0       0       0       0       0       0       0
   704 ;;      Temps:          0       0       0       0       0       0       0
   705 ;;      Totals:         0       0       0       0       0       0       0
   706 ;;Total ram usage:        0 bytes
   707 ;; Hardware stack levels used:    1
   708 ;; Hardware stack levels required when called:    2
   709 ;; This function calls:
   710 ;;		Nothing
   711 ;; This function is called by:
   712 ;;		_SYSTEM_Initialize
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           	psect	text6
   717  00024A                     __ptext6:
   718                           	opt stack 0
   719  00024A                     _ADC_Initialize:
   720                           	opt stack 27
   721                           
   722                           ;adc.c: 64: ADCON0 = 0x01;
   723                           
   724                           ;incstack = 0
   725  00024A  0E01               	movlw	1
   726  00024C  6EC2               	movwf	4034,c	;volatile
   727                           
   728                           ;adc.c: 67: ADCON1 = 0x80;
   729  00024E  0E80               	movlw	128
   730  000250  6EC1               	movwf	4033,c	;volatile
   731                           
   732                           ;adc.c: 70: ADCON2 = 0x12;
   733  000252  0E12               	movlw	18
   734  000254  6EC0               	movwf	4032,c	;volatile
   735                           
   736                           ;adc.c: 73: ADRESL = 0x00;
   737  000256  0E00               	movlw	0
   738  000258  6EC3               	movwf	4035,c	;volatile
   739                           
   740                           ;adc.c: 76: ADRESH = 0x00;
   741  00025A  0E00               	movlw	0
   742  00025C  6EC4               	movwf	4036,c	;volatile
   743                           
   744                           ;adc.c: 79: PIE1bits.ADIE = 1;
   745  00025E  8C9D               	bsf	3997,6,c	;volatile
   746  000260  0012               	return		;funcret
   747  000262                     __end_of_ADC_Initialize:
   748                           	opt stack 0
   749                           tblptru	equ	0xFF8
   750                           intcon	equ	0xFF2
   751                           intcon2	equ	0xFF1
   752                           postinc0	equ	0xFEE
   753                           wreg	equ	0xFE8
   754                           
   755 ;; *************** function _Delay *****************
   756 ;; Defined at:
   757 ;;		line 5 in file "Functions.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;  wait            4   14[COMRAM] long 
   760 ;; Auto vars:     Size  Location     Type
   761 ;;  i               4    0[BANK0 ] long 
   762 ;; Return value:  Size  Location     Type
   763 ;;		None               void
   764 ;; Registers used:
   765 ;;		wreg, status,2, status,0
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   771 ;;      Params:         4       0       0       0       0       0       0
   772 ;;      Locals:         0       4       0       0       0       0       0
   773 ;;      Temps:          1       0       0       0       0       0       0
   774 ;;      Totals:         5       4       0       0       0       0       0
   775 ;;Total ram usage:        9 bytes
   776 ;; Hardware stack levels used:    1
   777 ;; Hardware stack levels required when called:    2
   778 ;; This function calls:
   779 ;;		Nothing
   780 ;; This function is called by:
   781 ;;		_main
   782 ;;		_StartUp595
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           	psect	text7
   787  0000A2                     __ptext7:
   788                           	opt stack 0
   789  0000A2                     _Delay:
   790                           	opt stack 28
   791                           
   792                           ;Functions.c: 7: long int i = 0;
   793                           
   794                           ;incstack = 0
   795  0000A2  0E00               	movlw	0
   796  0000A4  0100               	movlb	0	; () banked
   797  0000A6  6F80               	movwf	Delay@i& (0+255),b
   798  0000A8  0E00               	movlw	0
   799  0000AA  6F81               	movwf	(Delay@i+1)& (0+255),b
   800  0000AC  0E00               	movlw	0
   801  0000AE  6F82               	movwf	(Delay@i+2)& (0+255),b
   802  0000B0  0E00               	movlw	0
   803  0000B2  6F83               	movwf	(Delay@i+3)& (0+255),b
   804                           
   805                           ;Functions.c: 8: for(;wait>i;i++)
   806  0000B4  D00F               	goto	l1191
   807  0000B6                     l1187:
   808                           
   809                           ; BSR set to: 0
   810                           ;Functions.c: 9: {
   811                           ;Functions.c: 10: _delay((unsigned long)((1)*(8000000/4000.0)));
   812  0000B6  0E03               	movlw	3
   813  0000B8  6E50               	movwf	??_Delay& (0+255),c
   814  0000BA  0E98               	movlw	152
   815  0000BC                     u367:
   816  0000BC  2EE8               	decfsz	wreg,f,c
   817  0000BE  D7FE               	goto	u367
   818  0000C0  2E50               	decfsz	??_Delay& (0+255),f,c
   819  0000C2  D7FC               	goto	u367
   820  0000C4  0E01               	movlw	1
   821  0000C6  0100               	movlb	0	; () banked
   822  0000C8  2780               	addwf	Delay@i& (0+255),f,b
   823  0000CA  0E00               	movlw	0
   824  0000CC  2381               	addwfc	(Delay@i+1)& (0+255),f,b
   825  0000CE  2382               	addwfc	(Delay@i+2)& (0+255),f,b
   826  0000D0  2383               	addwfc	(Delay@i+3)& (0+255),f,b
   827  0000D2  D000               	goto	l1191
   828  0000D4                     l1191:
   829                           
   830                           ; BSR set to: 0
   831  0000D4  504C               	movf	Delay@wait,w,c
   832  0000D6  0100               	movlb	0	; () banked
   833  0000D8  5D80               	subwf	Delay@i& (0+255),w,b
   834  0000DA  504D               	movf	Delay@wait+1,w,c
   835  0000DC  0100               	movlb	0	; () banked
   836  0000DE  5981               	subwfb	(Delay@i+1)& (0+255),w,b
   837  0000E0  504E               	movf	Delay@wait+2,w,c
   838  0000E2  0100               	movlb	0	; () banked
   839  0000E4  5982               	subwfb	(Delay@i+2)& (0+255),w,b
   840  0000E6  0100               	movlb	0	; () banked
   841  0000E8  5183               	movf	(Delay@i+3)& (0+255),w,b
   842  0000EA  0A80               	xorlw	128
   843  0000EC  6E50               	movwf	??_Delay& (0+255),c
   844  0000EE  504F               	movf	Delay@wait+3,w,c
   845  0000F0  0A80               	xorlw	128
   846  0000F2  5850               	subwfb	??_Delay& (0+255),w,c
   847  0000F4  A0D8               	btfss	status,0,c
   848  0000F6  D7DF               	goto	l1187
   849                           
   850                           ; BSR set to: 0
   851                           
   852                           ; BSR set to: 0
   853  0000F8  0012               	return		;funcret
   854  0000FA                     __end_of_Delay:
   855                           	opt stack 0
   856                           tblptru	equ	0xFF8
   857                           intcon	equ	0xFF2
   858                           intcon2	equ	0xFF1
   859                           postinc0	equ	0xFEE
   860                           wreg	equ	0xFE8
   861                           status	equ	0xFD8
   862                           
   863 ;; *************** function _INTERRUPT_InterruptManager *****************
   864 ;; Defined at:
   865 ;;		line 67 in file "mcc_generated_files/interrupt_manager.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;		None
   868 ;; Auto vars:     Size  Location     Type
   869 ;;		None
   870 ;; Return value:  Size  Location     Type
   871 ;;		None               void
   872 ;; Registers used:
   873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   879 ;;      Params:         0       0       0       0       0       0       0
   880 ;;      Locals:         0       0       0       0       0       0       0
   881 ;;      Temps:         14       0       0       0       0       0       0
   882 ;;      Totals:        14       0       0       0       0       0       0
   883 ;;Total ram usage:       14 bytes
   884 ;; Hardware stack levels used:    1
   885 ;; Hardware stack levels required when called:    1
   886 ;; This function calls:
   887 ;;		_ADC_ISR
   888 ;;		_EUSART1_Receive_ISR
   889 ;;		_EUSART1_Transmit_ISR
   890 ;; This function is called by:
   891 ;;		Interrupt level 2
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	intcode
   896  000008                     __pintcode:
   897                           	opt stack 0
   898  000008                     _INTERRUPT_InterruptManager:
   899                           	opt stack 27
   900                           
   901                           ; BSR set to: 0
   902                           ;incstack = 0
   903  000008  CFFA F03E          	movff	pclath,??_INTERRUPT_InterruptManager
   904  00000C  CFFB F03F          	movff	pclatu,??_INTERRUPT_InterruptManager+1
   905  000010  CFE9 F040          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
   906  000014  CFEA F041          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
   907  000018  CFE1 F042          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
   908  00001C  CFE2 F043          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
   909  000020  CFD9 F044          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
   910  000024  CFDA F045          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
   911  000028  CFF3 F046          	movff	prodl,??_INTERRUPT_InterruptManager+8
   912  00002C  CFF4 F047          	movff	prodh,??_INTERRUPT_InterruptManager+9
   913  000030  CFF6 F048          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
   914  000034  CFF7 F049          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
   915  000038  CFF8 F04A          	movff	tblptru,??_INTERRUPT_InterruptManager+12
   916  00003C  CFF5 F04B          	movff	tablat,??_INTERRUPT_InterruptManager+13
   917                           
   918                           ;interrupt_manager.c: 70: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
   919  000040  BA9D               	btfsc	3997,5,c	;volatile
   920  000042  AA9E               	btfss	3998,5,c	;volatile
   921  000044  D003               	goto	i2l158
   922                           
   923                           ;interrupt_manager.c: 71: {
   924                           ;interrupt_manager.c: 72: EUSART1_Receive_ISR();
   925  000046  ECFC  F000         	call	_EUSART1_Receive_ISR	;wreg free
   926                           
   927                           ;interrupt_manager.c: 73: }
   928  00004A  D00C               	goto	i2l164
   929  00004C                     i2l158:
   930                           
   931                           ;interrupt_manager.c: 74: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
   932  00004C  B89D               	btfsc	3997,4,c	;volatile
   933  00004E  A89E               	btfss	3998,4,c	;volatile
   934  000050  D003               	goto	i2l160
   935                           
   936                           ;interrupt_manager.c: 75: {
   937                           ;interrupt_manager.c: 76: EUSART1_Transmit_ISR();
   938  000052  ECE3  F000         	call	_EUSART1_Transmit_ISR	;wreg free
   939                           
   940                           ;interrupt_manager.c: 77: }
   941  000056  D006               	goto	i2l164
   942  000058                     i2l160:
   943                           
   944                           ;interrupt_manager.c: 78: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
   945  000058  BC9D               	btfsc	3997,6,c	;volatile
   946  00005A  AC9E               	btfss	3998,6,c	;volatile
   947  00005C  D003               	goto	i2l164
   948                           
   949                           ;interrupt_manager.c: 79: {
   950                           ;interrupt_manager.c: 80: ADC_ISR();
   951  00005E  EC48  F001         	call	_ADC_ISR	;wreg free
   952                           
   953                           ;interrupt_manager.c: 82: else
   954                           ;interrupt_manager.c: 83: {
   955                           
   956                           ;interrupt_manager.c: 81: }
   957  000062  D000               	goto	i2l164
   958  000064                     i2l164:
   959  000064  C04B  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
   960  000068  C04A  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
   961  00006C  C049  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
   962  000070  C048  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
   963  000074  C047  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
   964  000078  C046  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
   965  00007C  C045  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
   966  000080  C044  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
   967  000084  C043  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
   968  000088  C042  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
   969  00008C  C041  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
   970  000090  C040  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
   971  000094  C03F  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
   972  000098  C03E  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
   973  00009C  0011               	retfie		f
   974  00009E                     __end_of_INTERRUPT_InterruptManager:
   975                           	opt stack 0
   976                           pclatu	equ	0xFFB
   977                           pclath	equ	0xFFA
   978                           tblptru	equ	0xFF8
   979                           tblptrh	equ	0xFF7
   980                           tblptrl	equ	0xFF6
   981                           tablat	equ	0xFF5
   982                           prodh	equ	0xFF4
   983                           prodl	equ	0xFF3
   984                           intcon	equ	0xFF2
   985                           intcon2	equ	0xFF1
   986                           postinc0	equ	0xFEE
   987                           fsr0h	equ	0xFEA
   988                           fsr0l	equ	0xFE9
   989                           wreg	equ	0xFE8
   990                           fsr1h	equ	0xFE2
   991                           fsr1l	equ	0xFE1
   992                           fsr2h	equ	0xFDA
   993                           fsr2l	equ	0xFD9
   994                           status	equ	0xFD8
   995                           
   996 ;; *************** function _EUSART1_Transmit_ISR *****************
   997 ;; Defined at:
   998 ;;		line 163 in file "mcc_generated_files/eusart1.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;		None
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;		None
  1003 ;; Return value:  Size  Location     Type
  1004 ;;		None               void
  1005 ;; Registers used:
  1006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1012 ;;      Params:         0       0       0       0       0       0       0
  1013 ;;      Locals:         0       0       0       0       0       0       0
  1014 ;;      Temps:          0       0       0       0       0       0       0
  1015 ;;      Totals:         0       0       0       0       0       0       0
  1016 ;;Total ram usage:        0 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_INTERRUPT_InterruptManager
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text9
  1026  0001C6                     __ptext9:
  1027                           	opt stack 0
  1028  0001C6                     _EUSART1_Transmit_ISR:
  1029                           	opt stack 27
  1030                           
  1031                           ;eusart1.c: 167: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  1032                           
  1033                           ;incstack = 0
  1034  0001C6  0E08               	movlw	8
  1035  0001C8  6051               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  1036  0001CA  D013               	goto	i2l93
  1037                           
  1038                           ;eusart1.c: 168: {
  1039                           ;eusart1.c: 169: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  1040  0001CC  503D               	movf	_eusart1TxTail,w,c
  1041  0001CE  0D01               	mullw	1
  1042  0001D0  0E31               	movlw	low _eusart1TxBuffer
  1043  0001D2  24F3               	addwf	prodl,w,c
  1044  0001D4  6ED9               	movwf	fsr2l,c
  1045  0001D6  0E00               	movlw	high _eusart1TxBuffer
  1046  0001D8  20F4               	addwfc	prodh,w,c
  1047  0001DA  6EDA               	movwf	fsr2h,c
  1048  0001DC  50DF               	movf	indf2,w,c
  1049  0001DE  6EAD               	movwf	4013,c	;volatile
  1050  0001E0  2A3D               	incf	_eusart1TxTail,f,c
  1051                           
  1052                           ;eusart1.c: 170: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  1053  0001E2  0E07               	movlw	7
  1054  0001E4  643D               	cpfsgt	_eusart1TxTail,c
  1055  0001E6  D003               	goto	i2l917
  1056                           
  1057                           ;eusart1.c: 171: {
  1058                           ;eusart1.c: 172: eusart1TxTail = 0;
  1059  0001E8  0E00               	movlw	0
  1060  0001EA  6E3D               	movwf	_eusart1TxTail,c
  1061  0001EC  D000               	goto	i2l917
  1062  0001EE                     i2l917:
  1063                           
  1064                           ;eusart1.c: 173: }
  1065                           ;eusart1.c: 174: eusart1TxBufferRemaining++;
  1066  0001EE  2A51               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  1067                           
  1068                           ;eusart1.c: 175: }
  1069  0001F0  0012               	return	
  1070  0001F2                     i2l93:
  1071                           
  1072                           ;eusart1.c: 176: else
  1073                           ;eusart1.c: 177: {
  1074                           ;eusart1.c: 178: PIE1bits.TX1IE = 0;
  1075  0001F2  989D               	bcf	3997,4,c	;volatile
  1076  0001F4  0012               	return	
  1077  0001F6  0012               	return		;funcret
  1078  0001F8                     __end_of_EUSART1_Transmit_ISR:
  1079                           	opt stack 0
  1080                           pclatu	equ	0xFFB
  1081                           pclath	equ	0xFFA
  1082                           tblptru	equ	0xFF8
  1083                           tblptrh	equ	0xFF7
  1084                           tblptrl	equ	0xFF6
  1085                           tablat	equ	0xFF5
  1086                           prodh	equ	0xFF4
  1087                           prodl	equ	0xFF3
  1088                           intcon	equ	0xFF2
  1089                           intcon2	equ	0xFF1
  1090                           postinc0	equ	0xFEE
  1091                           fsr0h	equ	0xFEA
  1092                           fsr0l	equ	0xFE9
  1093                           wreg	equ	0xFE8
  1094                           fsr1h	equ	0xFE2
  1095                           fsr1l	equ	0xFE1
  1096                           indf2	equ	0xFDF
  1097                           fsr2h	equ	0xFDA
  1098                           fsr2l	equ	0xFD9
  1099                           status	equ	0xFD8
  1100                           
  1101 ;; *************** function _EUSART1_Receive_ISR *****************
  1102 ;; Defined at:
  1103 ;;		line 182 in file "mcc_generated_files/eusart1.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;		None
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;		None
  1108 ;; Return value:  Size  Location     Type
  1109 ;;		None               void
  1110 ;; Registers used:
  1111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1117 ;;      Params:         0       0       0       0       0       0       0
  1118 ;;      Locals:         0       0       0       0       0       0       0
  1119 ;;      Temps:          0       0       0       0       0       0       0
  1120 ;;      Totals:         0       0       0       0       0       0       0
  1121 ;;Total ram usage:        0 bytes
  1122 ;; Hardware stack levels used:    1
  1123 ;; This function calls:
  1124 ;;		Nothing
  1125 ;; This function is called by:
  1126 ;;		_INTERRUPT_InterruptManager
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text10
  1131  0001F8                     __ptext10:
  1132                           	opt stack 0
  1133  0001F8                     _EUSART1_Receive_ISR:
  1134                           	opt stack 27
  1135                           
  1136                           ;eusart1.c: 184: if(1 == RC1STAbits.OERR)
  1137                           
  1138                           ;incstack = 0
  1139  0001F8  A2AB               	btfss	4011,1,c	;volatile
  1140  0001FA  D003               	goto	i2l1101
  1141                           
  1142                           ;eusart1.c: 185: {
  1143                           ;eusart1.c: 188: RC1STAbits.CREN = 0;
  1144  0001FC  98AB               	bcf	4011,4,c	;volatile
  1145                           
  1146                           ;eusart1.c: 189: RC1STAbits.CREN = 1;
  1147  0001FE  88AB               	bsf	4011,4,c	;volatile
  1148  000200  D000               	goto	i2l1101
  1149  000202                     i2l1101:
  1150                           
  1151                           ;eusart1.c: 190: }
  1152                           ;eusart1.c: 193: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  1153  000202  503A               	movf	_eusart1RxHead,w,c
  1154  000204  0D01               	mullw	1
  1155  000206  0E60               	movlw	low _eusart1RxBuffer
  1156  000208  24F3               	addwf	prodl,w,c
  1157  00020A  6ED9               	movwf	fsr2l,c
  1158  00020C  0E00               	movlw	high _eusart1RxBuffer
  1159  00020E  20F4               	addwfc	prodh,w,c
  1160  000210  6EDA               	movwf	fsr2h,c
  1161  000212  CFAE FFDF          	movff	4014,indf2	;volatile
  1162  000216  2A3A               	incf	_eusart1RxHead,f,c
  1163                           
  1164                           ;eusart1.c: 194: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  1165  000218  0E1F               	movlw	31
  1166  00021A  643A               	cpfsgt	_eusart1RxHead,c
  1167  00021C  D003               	goto	i2l1109
  1168                           
  1169                           ;eusart1.c: 195: {
  1170                           ;eusart1.c: 196: eusart1RxHead = 0;
  1171  00021E  0E00               	movlw	0
  1172  000220  6E3A               	movwf	_eusart1RxHead,c
  1173  000222  D000               	goto	i2l1109
  1174  000224                     i2l1109:
  1175                           
  1176                           ;eusart1.c: 197: }
  1177                           ;eusart1.c: 198: eusart1RxCount++;
  1178  000224  2A39               	incf	_eusart1RxCount,f,c	;volatile
  1179  000226  0012               	return		;funcret
  1180  000228                     __end_of_EUSART1_Receive_ISR:
  1181                           	opt stack 0
  1182                           pclatu	equ	0xFFB
  1183                           pclath	equ	0xFFA
  1184                           tblptru	equ	0xFF8
  1185                           tblptrh	equ	0xFF7
  1186                           tblptrl	equ	0xFF6
  1187                           tablat	equ	0xFF5
  1188                           prodh	equ	0xFF4
  1189                           prodl	equ	0xFF3
  1190                           intcon	equ	0xFF2
  1191                           intcon2	equ	0xFF1
  1192                           postinc0	equ	0xFEE
  1193                           fsr0h	equ	0xFEA
  1194                           fsr0l	equ	0xFE9
  1195                           wreg	equ	0xFE8
  1196                           fsr1h	equ	0xFE2
  1197                           fsr1l	equ	0xFE1
  1198                           indf2	equ	0xFDF
  1199                           fsr2h	equ	0xFDA
  1200                           fsr2l	equ	0xFD9
  1201                           status	equ	0xFD8
  1202                           
  1203 ;; *************** function _ADC_ISR *****************
  1204 ;; Defined at:
  1205 ;;		line 128 in file "mcc_generated_files/adc.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;		None
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;		None
  1210 ;; Return value:  Size  Location     Type
  1211 ;;		None               void
  1212 ;; Registers used:
  1213 ;;		None
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1219 ;;      Params:         0       0       0       0       0       0       0
  1220 ;;      Locals:         0       0       0       0       0       0       0
  1221 ;;      Temps:          0       0       0       0       0       0       0
  1222 ;;      Totals:         0       0       0       0       0       0       0
  1223 ;;Total ram usage:        0 bytes
  1224 ;; Hardware stack levels used:    1
  1225 ;; This function calls:
  1226 ;;		Nothing
  1227 ;; This function is called by:
  1228 ;;		_INTERRUPT_InterruptManager
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	text11
  1233  000290                     __ptext11:
  1234                           	opt stack 0
  1235  000290                     _ADC_ISR:
  1236                           	opt stack 27
  1237                           
  1238                           ;adc.c: 131: PIR1bits.ADIF = 0;
  1239                           
  1240                           ;incstack = 0
  1241  000290  9C9E               	bcf	3998,6,c	;volatile
  1242  000292  0012               	return		;funcret
  1243  000294                     __end_of_ADC_ISR:
  1244                           	opt stack 0
  1245  0000                     pclatu	equ	0xFFB
  1246                           pclath	equ	0xFFA
  1247                           tblptru	equ	0xFF8
  1248                           tblptrh	equ	0xFF7
  1249                           tblptrl	equ	0xFF6
  1250                           tablat	equ	0xFF5
  1251                           prodh	equ	0xFF4
  1252                           prodl	equ	0xFF3
  1253                           intcon	equ	0xFF2
  1254                           intcon2	equ	0xFF1
  1255                           postinc0	equ	0xFEE
  1256                           fsr0h	equ	0xFEA
  1257                           fsr0l	equ	0xFE9
  1258                           wreg	equ	0xFE8
  1259                           fsr1h	equ	0xFE2
  1260                           fsr1l	equ	0xFE1
  1261                           indf2	equ	0xFDF
  1262                           fsr2h	equ	0xFDA
  1263                           fsr2l	equ	0xFD9
  1264                           status	equ	0xFD8
  1265                           pclatu	equ	0xFFB
  1266                           pclath	equ	0xFFA
  1267                           tblptru	equ	0xFF8
  1268                           tblptrh	equ	0xFF7
  1269                           tblptrl	equ	0xFF6
  1270                           tablat	equ	0xFF5
  1271                           prodh	equ	0xFF4
  1272                           prodl	equ	0xFF3
  1273                           intcon	equ	0xFF2
  1274                           intcon2	equ	0xFF1
  1275                           postinc0	equ	0xFEE
  1276                           fsr0h	equ	0xFEA
  1277                           fsr0l	equ	0xFE9
  1278                           wreg	equ	0xFE8
  1279                           fsr1h	equ	0xFE2
  1280                           fsr1l	equ	0xFE1
  1281                           indf2	equ	0xFDF
  1282                           fsr2h	equ	0xFDA
  1283                           fsr2l	equ	0xFD9
  1284                           status	equ	0xFD8
  1285                           
  1286                           	psect	rparam
  1287  0000                     pclatu	equ	0xFFB
  1288                           pclath	equ	0xFFA
  1289                           tblptru	equ	0xFF8
  1290                           tblptrh	equ	0xFF7
  1291                           tblptrl	equ	0xFF6
  1292                           tablat	equ	0xFF5
  1293                           prodh	equ	0xFF4
  1294                           prodl	equ	0xFF3
  1295                           intcon	equ	0xFF2
  1296                           intcon2	equ	0xFF1
  1297                           postinc0	equ	0xFEE
  1298                           fsr0h	equ	0xFEA
  1299                           fsr0l	equ	0xFE9
  1300                           wreg	equ	0xFE8
  1301                           fsr1h	equ	0xFE2
  1302                           fsr1l	equ	0xFE1
  1303                           indf2	equ	0xFDF
  1304                           fsr2h	equ	0xFDA
  1305                           fsr2l	equ	0xFD9
  1306                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         93
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     19      81
    BANK0           160      4      36
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Delay

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Delay

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     392
                              _Delay
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delay                                                9     5      4     392
                                             14 COMRAM     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      4      24       4       22.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     13      51       1       85.3%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      75       9        0.0%
DATA                 0      0      75      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed May 27 20:55:48 2015

           _eusart1TxBufferRemaining 0051                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                         __CFG_CPB$OFF 000000  
                       __CFG_CPD$OFF 000000                                  u367 00BC  
                    __end_of_ADC_ISR 0294                                  prod 000FF3  
                                wreg 000FE8                         __CFG_LVP$OFF 000000  
                               l1211 0152                                 l1213 0168  
                               l1215 016C                                 l1217 0182  
                               l1191 00D4                                 l1187 00B6  
                               _LATA 000F89                                 _LATB 000F8A  
                               _LATC 000F8B                                 _LATD 000F8C  
                               _LATE 000F8D                                 i2l93 01F2  
                               _WPUB 000F61                                 _main 0148  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                        __CFG_BORV$190 000000  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 009E  
                      __CFG_IESO$OFF 000000                         ___param_bank 000010  
     __size_of_OSCILLATOR_Initialize 000E        __end_of_OSCILLATOR_Initialize 0286  
                              ?_main 003E                                _LATB0 007C50  
                              _LATB1 007C51                                _LATA3 007C4B  
                              _LATD5 007C65                                _LATD6 007C66  
                              _LATD7 007C67                       __CFG_DEBUG$OFF 000000  
                              i2l160 0058                                i2l164 0064  
                              i2l158 004C                                i2l917 01EE  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                                _TRISD 000F95  
                              _TRISE 000F96                                _Delay 00A2  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
               _EUSART1_Transmit_ISR 01C6                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                 __CFG_MCLRE$EXTMCLR 000000                                tablat 000FF5  
                              status 000FD8                       __CFG_HFOFST$ON 000000  
                     __CFG_PBADEN$ON 000000                      __initialization 0228  
         __end_of_EUSART1_Initialize 01C6                         __end_of_main 018A  
                          ??_ADC_ISR 003E          ?_INTERRUPT_InterruptManager 003E  
                             ??_main 0051                        __activetblptr 000002  
                             ?_Delay 004C                ?_EUSART1_Transmit_ISR 003E  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               _ANSELA 000F38  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             _ANSELD 000F3B                               _ANSELE 000F3C  
                             _RC1STA 000FAB                               i2l1101 0202  
                             i2l1109 0224                               Delay@i 0080  
                     __CFG_WDTEN$OFF 000000                               _RCREG1 000FAE  
                             _OSCCON 000FD3                               _SPBRG1 000FAF  
                             _TX1STA 000FAC                               _TXREG1 000FAD  
                     __CFG_XINST$OFF 000000                       __CFG_STVREN$ON 000000  
                             clear_0 022E                               clear_1 023A  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                      _eusart1RxBuffer 0060  
      __size_of_INTERRUPT_Initialize 000A                      _eusart1TxBuffer 0031  
                  _SYSTEM_Initialize 0262                           __accesstop 0060  
            __end_of__initialization 0240                   ?_SYSTEM_Initialize 003E  
                      ___rparam_used 000001                        __end_of_Delay 00FA  
                     __pcstackCOMRAM 003E                  ??_SYSTEM_Initialize 004C  
             ??_EUSART1_Transmit_ISR 003E                              ??_Delay 0050  
        __end_of_EUSART1_Receive_ISR 0228            __end_of_SYSTEM_Initialize 0278  
                      _eusart1RxHead 003A                        _eusart1TxHead 003C  
                      _eusart1RxTail 003B                           __pbssBANK0 0060  
                      _eusart1TxTail 003D                      __CFG_PLLCFG$OFF 000000  
                         __pnvCOMRAM 0051                   __CFG_CCP2MX$PORTC1 000000  
                 __CFG_CCP3MX$PORTB5 000000                              _ADC_ISR 0290  
            __size_of_ADC_Initialize 0018                              _OSCCON2 000FD2  
                  __CFG_PRICLKEN$OFF 000000                              _OSCTUNE 000F9B  
                            _SPBRGH1 000FB0                      __CFG_PWRTEN$OFF 000000  
                            __Hparam 0000                              __Lparam 0000  
                            __pcinit 0228                              __ramtop 0600  
                            __ptext0 0148                              __ptext1 0262  
                            __ptext2 00FA                              __ptext3 0278  
                            __ptext4 0286                              __ptext5 018A  
                            __ptext6 024A                              __ptext7 00A2  
                            __ptext9 01C6                _OSCILLATOR_Initialize 0278  
                 _EUSART1_Initialize 018A             ??_PIN_MANAGER_Initialize 004C  
         __size_of_SYSTEM_Initialize 0016                 end_of_initialization 0240  
                          Delay@wait 004C                  ?_EUSART1_Initialize 003E  
                      __Lmediumconst 0000                              postinc0 000FEE  
               ??_EUSART1_Initialize 004C         __end_of_INTERRUPT_Initialize 0290  
                     _ADC_Initialize 024A               ?_OSCILLATOR_Initialize 003E  
                start_initialization 0228      __size_of_PIN_MANAGER_Initialize 004E  
             __end_of_ADC_Initialize 0262                             ?_ADC_ISR 003E  
                     _eusart1RxCount 0039                          __pbssCOMRAM 0001  
      __size_of_EUSART1_Transmit_ISR 0032                        __pcstackBANK0 0080  
       __size_of_EUSART1_Receive_ISR 0030               _PIN_MANAGER_Initialize 00FA  
                          __pintcode 0008                      ?_ADC_Initialize 003E  
       ??_INTERRUPT_InterruptManager 003E                             _BAUD1CON 000FB8  
                     __size_of_Delay 0058                 _INTERRUPT_Initialize 0286  
                          _registers 0001                             _IPR1bits 000F9F  
                           _PIE1bits 000F9D  __size_of_INTERRUPT_InterruptManager 0096  
                           _PIR1bits 000F9E                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                     __size_of_ADC_ISR 0004  
                         _ADCON0bits 000FC2                          _INTCON2bits 000FF1  
              ?_INTERRUPT_Initialize 003E                             __Hrparam 0000  
                           __Lrparam 0000                   __CFG_BOREN$SBORDIS 000000  
                  __CFG_P2BMX$PORTD2 000000              ??_OSCILLATOR_Initialize 004C  
        __size_of_EUSART1_Initialize 003C                             __ptext10 01F8  
                           __ptext11 0290                        __size_of_main 0042  
                         _RC1STAbits 000FAB   __end_of_INTERRUPT_InterruptManager 009E  
         _INTERRUPT_InterruptManager 0008                  _EUSART1_Receive_ISR 01F8  
                         _INTCONbits 000FF2               ??_INTERRUPT_Initialize 004C  
                           intlevel2 0000                 ?_EUSART1_Receive_ISR 003E  
            ?_PIN_MANAGER_Initialize 003E         __end_of_EUSART1_Transmit_ISR 01F8  
                   ??_ADC_Initialize 004C                    __CFG_T3CMX$PORTC0 000000  
              ??_EUSART1_Receive_ISR 003E       __end_of_PIN_MANAGER_Initialize 0148  
                  __CFG_FOSC$INTIO67 000000  
